{
  "data": {
    "posts": [
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE3MDA=",
        "node": {
          "id": "cG9zdDoxNzAw",
          "title": "Install rancher on k3s using kubectl yaml",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  labels:\r\n    run: rancher\r\n  name: rancher-deploy\r\n  namespace: rch\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      run: rancher\r\n  template:\r\n    metadata:\r\n      labels:\r\n        run: rancher\r\n    spec:\r\n      serviceAccountName: rch-admin\r\n      containers:\r\n      - image: rancher/rancher\r\n        name: rancher\r\n---\r\napiVersion: v1\r\nkind: ServiceAccount\r\nmetadata:\r\n  name: rch-admin\r\n  namespace: rch\r\n---\r\napiVersion: rbac.authorization.k8s.io/v1beta1\r\nkind: ClusterRoleBinding\r\nmetadata:\r\n  name: rch-admin\r\nroleRef:\r\n  apiGroup: rbac.authorization.k8s.io\r\n  kind: ClusterRole\r\n  name: cluster-admin\r\nsubjects:\r\n- kind: ServiceAccount\r\n  name: rch-admin\r\n  namespace: rch\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: rancher-service\r\n  namespace: rch\r\n  labels:\r\n    run: rancher\r\nspec:\r\n  ports:\r\n  - port: 80\r\n    protocol: TCP\r\n  selector:\r\n    run: rancher\r\n---\r\napiVersion: extensions/v1beta1\r\nkind: Ingress\r\nmetadata:\r\n  name: rch-ingress\r\n  namespace: rch\r\n  annotations:\r\n    kubernetes.io/ingress.class: \"traefik\"\r\n    traefik.frontend.rule.type: PathPrefixStrip\r\n    traefik.ingress.kubernetes.io/frontend-entry-points: http, https\r\nspec:\r\n  tls:\r\n  - hosts:\r\n    - rch.app.eramax.net\r\n  rules:\r\n  - host: rch.app.eramax.net\r\n    http:\r\n      paths:\r\n      - backend:\r\n          serviceName: rancher-service\r\n          servicePort: 80\r\n        path: /\r\n</pre>\n<p><strong>Then access your ingress url using https.</strong></p>\n<p>&nbsp;</p>\n",
          "slug": "install-rancher-on-k3s-using-kubectl-yaml",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/07/install-rancher-on-k3s-using-kubectl-yaml/",
          "date": "2020-04-07T18:22:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2OTg=",
        "node": {
          "id": "cG9zdDoxNjk4",
          "title": "Easy and Simple Discord Webhook Tutorial",
          "content": "<p><iframe title=\"Easy and Simple Discord Webhook Tutorial\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/hS_981bBG-8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "easy-and-simple-discord-webhook-tutorial",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/05/easy-and-simple-discord-webhook-tutorial/",
          "date": "2020-04-05T19:23:31",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Technology"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2OTY=",
        "node": {
          "id": "cG9zdDoxNjk2",
          "title": "Send form data with files using curl",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">curl \\\r\n  -F \"userid=1\" \\\r\n  -F \"filecomment=This is an image file\" \\\r\n  -F \"image=@/home/user1/Desktop/test.jpg\" \\\r\n  localhost/uploader.php</pre>\n<p>&nbsp;</p>\n",
          "slug": "send-form-data-with-files-using-curl",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/05/send-form-data-with-files-using-curl/",
          "date": "2020-04-05T18:52:25",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2OTQ=",
        "node": {
          "id": "cG9zdDoxNjk0",
          "title": "Edge-Focused Compact Kubernetes with MicroPaaS (μPaaS) — k3s/k3OS and Rio",
          "content": "<p>This is a great post.</p>\n<p><a href=\"https://itnext.io/edge-focused-compact-kubernetes-with-micropaas-%CE%BCpaas-k3s-k3os-and-rio-6f7d758e19f1\">https://itnext.io/edge-focused-compact-kubernetes-with-micropaas-%CE%BCpaas-k3s-k3os-and-rio-6f7d758e19f1</a></p>\n",
          "slug": "edge-focused-compact-kubernetes-with-micropaas-%ce%bcpaas-k3s-k3os-and-rio",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/05/edge-focused-compact-kubernetes-with-micropaas-%ce%bcpaas-k3s-k3os-and-rio/",
          "date": "2020-04-05T13:30:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "Technology"
              },
              {
                "name": "tools"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2OTA=",
        "node": {
          "id": "cG9zdDoxNjkw",
          "title": "Host a web app with letsencrypt with traefik and cert manager on k3s",
          "content": "<h4>1- Setup you subdomain or domain in Cloudflare or your host to point to your server ip</h4>\n<h3>&#8212;</h3>\n<h4>2- Install cert-manager</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v0.14.1/cert-manager.yaml\r\n</pre>\n<h4>3-Apply the letsencrypt-issuer-production.yaml</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">apiVersion: cert-manager.io/v1alpha2\r\nkind: ClusterIssuer\r\nmetadata:\r\n  name: letsencrypt-prod\r\nspec:\r\n  acme:\r\n    # The ACME server URL\r\n    server: https://acme-v02.api.letsencrypt.org/directory\r\n    # Email address used for ACME registration\r\n    email: emmmmmmail@gmail.com\r\n    # Name of a secret used to store the ACME account private key\r\n    privateKeySecretRef:\r\n      name: letsencrypt-prod\r\n    # Enable the HTTP-01 challenge provider\r\n    solvers:\r\n    - http01:\r\n        ingress:\r\n          class: traefik</pre>\n<h4>4- Apply the application deployment and Ingress</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: app1-deployment\r\n  labels:\r\n    app: app1\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: app1\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: app1\r\n    spec:\r\n      containers:\r\n      - name: app1\r\n        image: nginx\r\n        ports:\r\n        - containerPort: 80\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: app1-service\r\nspec:\r\n  selector:\r\n    app: app1\r\n  ports:\r\n    - protocol: TCP\r\n      port: 80\r\n---\r\napiVersion: networking.k8s.io/v1beta1\r\nkind: Ingress\r\nmetadata:\r\n  name: app1-ingress\r\n  annotations:\r\n    kubernetes.io/ingress.class: \"traefik\"\r\n    traefik.frontend.rule.type: PathPrefixStrip\r\n    cert-manager.io/cluster-issuer: letsencrypt-prod\r\n\r\nspec:\r\n  rules:\r\n  - host: k8.eramax.net\r\n    http:\r\n      paths:\r\n      - path: /app1\r\n        backend:\r\n          serviceName: app1-service\r\n          servicePort: 80\r\n  tls:\r\n  - hosts:\r\n    - k8.eramax.net\r\n    secretName: k8-eramax-net-tls</pre>\n<h4>5- Check your certificate issued successfully or there is an error</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">kubectl get certificate\r\n\r\n#In case of errors\r\nkubectl  describe orders\r\nkubectl  describe challenges</pre>\n<p>This video is very helpful for these steps</p>\n<p><iframe title=\"Installing and using cert-manager with k3s\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/BlzRx6ROiX0?start=900&#038;feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">https://carpie.net/articles/installing-and-using-cert-manager-with-k3s</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n",
          "slug": "host-a-web-app-with-letsencrypt-with-traefik-and-cert-manager-on-k3s",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/01/host-a-web-app-with-letsencrypt-with-traefik-and-cert-manager-on-k3s/",
          "date": "2020-04-01T21:38:32",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2ODc=",
        "node": {
          "id": "cG9zdDoxNjg3",
          "title": "K9s  CLI",
          "content": "<p><strong>Kubernetes CLI To Manage Your Clusters In Style! </strong></p>\n<p><img class=\"alignnone size-full wp-image-1688\" src=\"https://emolike.net/wp-content/uploads/2020/04/screen_po.png\" width=\"1138\" height=\"542\" srcset=\"https://emolike.net/wp-content/uploads/2020/04/screen_po.png 1138w, https://emolike.net/wp-content/uploads/2020/04/screen_po-300x143.png 300w, https://emolike.net/wp-content/uploads/2020/04/screen_po-1024x488.png 1024w, https://emolike.net/wp-content/uploads/2020/04/screen_po-768x366.png 768w\" sizes=\"(max-width: 1138px) 100vw, 1138px\" /></p>\n<div class=\"github-embed github-embed-repository github-logo-mark\">\n<p>        <a href=\"https://github.com/derailed/k9s\" target=\"_blank\">\t\t\t<strong>\t\t\t\t🐶 Kubernetes CLI To Manage Your Clusters In Style!\t\t\t</strong>\t\t</a>\t\t<br />        <a href=\"https://github.com/derailed/k9s\" target=\"_blank\">https://github.com/derailed/k9s</a><br />        <a href=\"https://github.com/derailed/k9s/network\" target=\"_blank\">315</a> forks.<br />        <a href=\"https://github.com/derailed/k9s/stargazers\" target=\"_blank\">6,042</a> stars.<br />        <a href=\"https://github.com/derailed/k9s/issues\" target=\"_blank\">62</a> open issues.<br />        Recent commits:        </p>\n<ul class=\"github_commits\">\n<li class=\"github_commit\">                    <a href=\"https://github.com/derailed/k9s/commit/bf427dda787fd718746f72b80aec01426c57baf0\" target=\"_blank\">update docs</a>, derailed                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/derailed/k9s/commit/4c6e5458855f5f9fed3cd580d087568ce363c67b\" target=\"_blank\">update rel notes</a>, derailed                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/derailed/k9s/commit/65ee532784ad34dafa90fa467fc3c813344b6b1f\" target=\"_blank\">cleaning up</a>, derailed                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/derailed/k9s/commit/1f2c159aa64f1b14985162c4d7d45bae279264dc\" target=\"_blank\">cleaning up</a>, derailed                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/derailed/k9s/commit/399b331b4234411c27da42dedba8268af5214a6b\" target=\"_blank\">cleaning up</a>, derailed                </li>\n</ul>\n</div>\n",
          "slug": "k9s-cli",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/01/k9s-cli/",
          "date": "2020-04-01T18:17:15",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2ODU=",
        "node": {
          "id": "cG9zdDoxNjg1",
          "title": "How to use Traefik reverse proxy",
          "content": "<p><a href=\"https://www.praqma.com/stories/how-to-use-traefik/\">https://www.praqma.com/stories/how-to-use-traefik/</a></p>\n",
          "slug": "how-to-use-traefik-reverse-proxy",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/01/how-to-use-traefik-reverse-proxy/",
          "date": "2020-04-01T17:38:55",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "network"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2ODM=",
        "node": {
          "id": "cG9zdDoxNjgz",
          "title": "FizzBuzz in C# 8",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing System.Linq;\r\n          \r\npublic class Program\r\n{\r\n  public static void Main()\r\n  {\r\n    Console.WriteLine(\"Hello World\");\r\n    System.Linq.Enumerable.Range(1,20).ToList().ForEach(x =&gt; Console.WriteLine(FizzBuzz(x)));\r\n  }\r\n  public static string FizzBuzz(int i)\r\n  {\r\n    return (i%3,i%5) switch \r\n    {\r\n        (0,0) =&gt; \"FizzBuzz\",\r\n        (0,_) =&gt; \"Fizz\",\r\n        (_,0) =&gt; \"Buzz\",\r\n        _ =&gt; i.ToString()\r\n    };\r\n  }\r\n}</pre>\n<p><a href=\"https://dotnetfiddle.net/m5aYNp\">https://dotnetfiddle.net/m5aYNp</a></p>\n",
          "slug": "fizzbuzz-in-c-8",
          "featuredImage": null,
          "link": "https://emolike.net/2020/04/01/fizzbuzz-in-c-8/",
          "date": "2020-04-01T16:24:03",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2Nzc=",
        "node": {
          "id": "cG9zdDoxNjc3",
          "title": "Comparing Ingress controllers for Kubernetes",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">https://medium.com/flant-com/comparing-ingress-controllers-for-kubernetes-9b397483b46b</pre>\n<p><img class=\"alignnone size-full wp-image-1678\" src=\"https://emolike.net/wp-content/uploads/2020/03/1wXxmZ3IsVbmX1UROJFp1Mw.png\" width=\"1280\" height=\"786\" srcset=\"https://emolike.net/wp-content/uploads/2020/03/1wXxmZ3IsVbmX1UROJFp1Mw.png 1280w, https://emolike.net/wp-content/uploads/2020/03/1wXxmZ3IsVbmX1UROJFp1Mw-300x184.png 300w, https://emolike.net/wp-content/uploads/2020/03/1wXxmZ3IsVbmX1UROJFp1Mw-1024x629.png 1024w, https://emolike.net/wp-content/uploads/2020/03/1wXxmZ3IsVbmX1UROJFp1Mw-768x472.png 768w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n",
          "slug": "comparing-ingress-controllers-for-kubernetes",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/31/comparing-ingress-controllers-for-kubernetes/",
          "date": "2020-03-31T22:45:59",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NzQ=",
        "node": {
          "id": "cG9zdDoxNjc0",
          "title": "Kubernetes production best practices",
          "content": "<p><a href=\"https://learnk8s.io/production-best-practices\">https://learnk8s.io/production-best-practices</a></p>\n",
          "slug": "kubernetes-production-best-practices",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/31/kubernetes-production-best-practices/",
          "date": "2020-03-31T22:43:29",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NzI=",
        "node": {
          "id": "cG9zdDoxNjcy",
          "title": "Packages Search for Linux and Unix",
          "content": "<p><a href=\"https://pkgs.org/\">https://pkgs.org/</a></p>\n",
          "slug": "packages-search-for-linux-and-unix",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/31/packages-search-for-linux-and-unix/",
          "date": "2020-03-31T15:17:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NzA=",
        "node": {
          "id": "cG9zdDoxNjcw",
          "title": "K8S install on Photon OS",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">https://clouddeparture.com/2019/04/19/k8s-install-on-photon-os/</pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">https://vmware.github.io/photon/assets/files/html/3.0/photon_user/kubernetes_intro.html</pre>\n<p>&nbsp;</p>\n",
          "slug": "k8s-install-on-photon-os",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/30/k8s-install-on-photon-os/",
          "date": "2020-03-30T22:52:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2Njg=",
        "node": {
          "id": "cG9zdDoxNjY4",
          "title": "Zsh Auto Suggestions",
          "content": "<p>Clone this repository into <code>$ZSH_CUSTOM/plugins</code> (by default <code>~/.oh-my-zsh/custom/plugins</code>)</p>\n<div class=\"highlight highlight-source-shell\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\r\n</pre>\n<p>Add the plugin to the list of plugins for Oh My Zsh to load (inside <code>~/.zshrc</code>):</p>\n<div class=\"highlight highlight-source-shell\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">plugins=( git  kubectl  zsh-autosuggestions   )\r\n</pre>\n<p>Source: <a href=\"https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md\">https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md</a></p>\n</div>\n</div>\n",
          "slug": "zsh-auto-suggestions",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/30/zsh-auto-suggestions/",
          "date": "2020-03-30T22:17:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NjM=",
        "node": {
          "id": "cG9zdDoxNjYz",
          "title": "Traefik Reverse Proxy with LetsEncrypt for Docker Media Server",
          "content": "<p>&nbsp;</p>\n<p>Traefik is an <a href=\"https://github.com/containous/traefik\">open-source</a> <em>Edge Router</em> that makes publishing your services a fun and easy experience. It receives requests on behalf of your system and finds out which components are responsible for handling them.</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"w9NpGB0nT2\"><p><a href=\"https://www.smarthomebeginner.com/traefik-reverse-proxy-tutorial-for-docker/\">Traefik Tutorial: Traefik Reverse Proxy with LetsEncrypt for Docker Media Server</a></p></blockquote>\n<p><iframe title=\"&#8220;Traefik Tutorial: Traefik Reverse Proxy with LetsEncrypt for Docker Media Server&#8221; &#8212; SmartHomeBeginner\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://www.smarthomebeginner.com/traefik-reverse-proxy-tutorial-for-docker/embed/#?secret=w9NpGB0nT2\" data-secret=\"w9NpGB0nT2\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n",
          "slug": "traefik-reverse-proxy-with-letsencrypt-for-docker-media-server",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2020/03/traefik-architecture.png"
          },
          "link": "https://emolike.net/2020/03/30/traefik-reverse-proxy-with-letsencrypt-for-docker-media-server/",
          "date": "2020-03-30T15:33:39",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NjE=",
        "node": {
          "id": "cG9zdDoxNjYx",
          "title": "Kubernetes Force pod to be deleted shortcut",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">alias kclean='for p in $(kubectl get pods | grep Terminating | awk '{print $1}'); do kubectl delete pod $p --grace-period=0 --force;done'\r\n</pre>\n<p>&nbsp;</p>\n",
          "slug": "kubernetes-force-pod-to-be-deleted-shortcut",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/29/kubernetes-force-pod-to-be-deleted-shortcut/",
          "date": "2020-03-29T17:43:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NTg=",
        "node": {
          "id": "cG9zdDoxNjU4",
          "title": "Install k3s and get the kubeconfig",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt update\r\n\r\nadduser eramax\r\n\r\nusermod -aG sudo eramax\r\n\r\ncurl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=\"644\" sh -\r\n\r\nkubectl get nodes\r\n\r\ncat /var/lib/rancher/k3s/server/node-token \r\n#Copy node token\r\n\r\nsudo kubectl create serviceaccount k8sadmin -n kube-system\r\n\r\nsudo kubectl create clusterrolebinding k8sadmin --clusterrole=cluster-admin --serviceaccount=kube-system:k8sadmin\r\n\r\nsudo kubectl -n kube-system describe secret $(sudo kubectl -n kube-system get secret | (grep k8sadmin || echo \"$_\") | awk '{print $1}') | grep token: | awk '{print $2}'\r\n#Copy user token\r\n\r\nip a\r\n#copy the ip\r\n\r\nkubectl config view --raw &gt; config\r\n\r\nnano config\r\n\r\n#update the IP and user from default to k8sadmin in line number 10 under the context\r\n#Add this part to the users section\r\n- name: k8sadmin\r\n  user:\r\n    token: &lt;user token which copied from above&gt;\r\n\r\n#Copy the config file into your $HOME/.kube/config in your computer and then you can use kubectl\r\n\r\n\r\n</pre>\n<p>&nbsp;</p>\n",
          "slug": "install-k3s-and-getting-the-kubeconfig",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/29/install-k3s-and-getting-the-kubeconfig/",
          "date": "2020-03-29T10:27:54",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NTY=",
        "node": {
          "id": "cG9zdDoxNjU2",
          "title": "SSH Passwordless one line",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cat ~/.ssh/id_rsa.pub | ssh remote_username@server_ip_address \"mkdir -p ~/.ssh &amp;&amp; chmod 700 ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys &amp;&amp; chmod 600 ~/.ssh/authorized_keys\"\r\n</pre>\n<p>Source : <a href=\"https://linuxize.com/post/how-to-setup-passwordless-ssh-login/\">https://linuxize.com/post/how-to-setup-passwordless-ssh-login/</a></p>\n",
          "slug": "ssh-passwordless-one-line",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/29/ssh-passwordless-one-line/",
          "date": "2020-03-29T09:38:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NTM=",
        "node": {
          "id": "cG9zdDoxNjUz",
          "title": "NGINX + Varnish | Web Performance Tips",
          "content": "<p><iframe title=\"NGINX + Varnish | Web Performance Tips! #CodeClouds\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/krZ7ri8XvXY?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "nginx-varnish-web-performance-tips",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/24/nginx-varnish-web-performance-tips/",
          "date": "2020-03-24T11:16:41",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NTA=",
        "node": {
          "id": "cG9zdDoxNjUw",
          "title": "Upgrade Your .NET Console App Experience",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1651\" src=\"https://emolike.net/wp-content/uploads/2020/03/upgrade_dotnet_console_experience.jpg\" width=\"1280\" height=\"719\" srcset=\"https://emolike.net/wp-content/uploads/2020/03/upgrade_dotnet_console_experience.jpg 1280w, https://emolike.net/wp-content/uploads/2020/03/upgrade_dotnet_console_experience-300x169.jpg 300w, https://emolike.net/wp-content/uploads/2020/03/upgrade_dotnet_console_experience-1024x575.jpg 1024w, https://emolike.net/wp-content/uploads/2020/03/upgrade_dotnet_console_experience-768x431.jpg 768w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"imgd\">The lowly console application has gotten a sad reputation in the .NET ecosystem. Generally, the project format is relegated to the arena of the demonstration. We’re all guilty of starting and abandoning that ConsoleApp341 project. It is time the console app gets the respect it deserves.</p>\n<p class=\"imgs\">Source: <a href=\"https://khalidabuhakmeh.com/upgraded-dotnet-console-experience\" target=\"_blank\" rel=\"noopener noreferrer\">khalidabuhakmeh.com/upgraded-dotnet-console-experience</a></p>\n</div>\n",
          "slug": "upgrade-your-net-console-app-experience",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2020/03/upgrade_dotnet_console_experience.jpg"
          },
          "link": "https://emolike.net/2020/03/23/upgrade-your-net-console-app-experience/",
          "date": "2020-03-23T22:46:00",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MjU=",
        "node": {
          "id": "cG9zdDoxNjI1",
          "title": "ASP.NET Core API Analyzer",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">In this article, you will learn how to use ASP.NET Core API Analyzer</p>\n<p class=\"imgs\">Source: <a href=\"https://www.c-sharpcorner.com/article/asp-net-core-api-analyzer/\" target=\"_blank\" rel=\"noopener noreferrer\">www.c-sharpcorner.com/article/asp-net-core-api-analyzer/</a></p>\n</div>\n",
          "slug": "asp-net-core-api-analyzer",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/23/asp-net-core-api-analyzer/",
          "date": "2020-03-23T15:50:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MjI=",
        "node": {
          "id": "cG9zdDoxNjIy",
          "title": "NCurses Disk Usage",
          "content": "<p>ncdu (NCurses Disk Usage) is a curses-based version of the well-known ‘du’, and provides a fast way to see what directories are using your disk space. One can install with the following <a title=\"See Linux/Unix apt command examples for more info\" href=\"https://www.cyberciti.biz/faq/ubuntu-lts-debian-linux-apt-command-examples/\">apt command</a>/<a title=\"See Linux/Unix apt-get command examples for more info\" href=\"https://www.cyberciti.biz/tips/linux-debian-package-management-cheat-sheet.html\">apt-get command</a>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt install ncdu\r\n</pre>\n<p>For RHEL/CentOS, first <a href=\"https://www.cyberciti.biz/faq/installing-rhel-epel-repo-on-centos-redhat-7-x/\">enable EPEL repo</a> (see <a href=\"https://www.cyberciti.biz/faq/how-to-enable-and-install-epel-repo-on-centos-8-x/\">CentOS 8 turn on EPEL repo</a> and <a href=\"https://www.cyberciti.biz/faq/install-epel-repo-on-an-rhel-8-x/\">RHEL 8 enable epel repo</a>) and type the following <a title=\"See Linux/Unix yum command examples for more info\" href=\"https://www.cyberciti.biz/faq/rhel-centos-fedora-linux-yum-command-howto/\">yum command</a>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo yum install ncdu\r\n</pre>\n<p>Now just type:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">ncdu\r\nncdu [dir]\r\nncdu /etc/</pre>\n<p><img class=\"alignnone size-full wp-image-1623\" src=\"https://emolike.net/wp-content/uploads/2020/03/Linux-command-to-check-disk-space.png\" width=\"599\" height=\"407\" alt=\"Linux command to check disk space\" srcset=\"https://emolike.net/wp-content/uploads/2020/03/Linux-command-to-check-disk-space.png 599w, https://emolike.net/wp-content/uploads/2020/03/Linux-command-to-check-disk-space-300x204.png 300w\" sizes=\"(max-width: 599px) 100vw, 599px\" /></p>\n<p>Source: https://www.cyberciti.biz/faq/check-free-space/</p>\n",
          "slug": "ncurses-disk-usage",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2020/03/Linux-command-to-check-disk-space.png"
          },
          "link": "https://emolike.net/2020/03/23/ncurses-disk-usage/",
          "date": "2020-03-23T15:25:01",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MjA=",
        "node": {
          "id": "cG9zdDoxNjIw",
          "title": "How To Upgrade Ubuntu To 20.04 LTS Focal Fossa",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">$ sudo apt update \r\n$ sudo apt upgrade\r\n$ sudo apt dist-upgrade\r\n$ sudo apt autoremove\r\n$ sudo apt install update-manager-core\r\n$ sudo do-release-upgrade\r\n$ sudo do-release-upgrade -d\r\n</pre>\n<p>Source: <a href=\"https://linuxconfig.org/how-to-upgrade-ubuntu-to-20-04-lts-focal-fossa\">https://linuxconfig.org/how-to-upgrade-ubuntu-to-20-04-lts-focal-fossa</a></p>\n",
          "slug": "how-to-upgrade-ubuntu-to-20-04-lts-focal-fossa",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/23/how-to-upgrade-ubuntu-to-20-04-lts-focal-fossa/",
          "date": "2020-03-23T12:24:38",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MTg=",
        "node": {
          "id": "cG9zdDoxNjE4",
          "title": "Running CI tests in Kubernetes through Github Actions",
          "content": "<p><strong>Example </strong></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">name: Main action\r\n\r\non: [push]\r\n\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    timeout-minutes: 5\r\n    steps:\r\n    - uses: actions/checkout@v2\r\n    - name: install k8s\r\n      run: |\r\n        curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 sh -\r\n        cat /etc/rancher/k3s/k3s.yaml\r\n        mkdir -p ~/.kube\r\n        cp /etc/rancher/k3s/k3s.yaml ~/.kube/config\r\n    - name: example tests\r\n      run: |\r\n        kubectl cluster-info\r\n        kubectl create deployment --image nginx my-nginx\r\n        kubectl get po</pre>\n<p>Source : <a href=\"https://odino.org/running-ci-tests-in-kubernetes-through-github-actions/\">https://odino.org/running-ci-tests-in-kubernetes-through-github-actions/</a></p>\n",
          "slug": "running-ci-tests-in-kubernetes-through-github-actions",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/23/running-ci-tests-in-kubernetes-through-github-actions/",
          "date": "2020-03-23T10:36:56",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Git"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "tools"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MTY=",
        "node": {
          "id": "cG9zdDoxNjE2",
          "title": "Deploy kubernetes cluster with multipass",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"> multipass launch --name kms --cpus 1 --mem 1024M --disk 3G  16.04\r\n multipass launch --name n1 --cpus 1 --mem 1024M --disk 3G 16.04\r\n multipass launch --name n2 --cpus 1 --mem 1024M --disk 3G 16.04\r\n multipass exec kms -- /bin/bash -c \"curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=\"644\" sh -\"\r\n\r\n multipass shell kms \r\n sudo cat /var/lib/rancher/k3s/server/node-token\r\n\r\n # copy the token and ip\r\n\r\nmultipass exec n1 -- /bin/bash -c \"curl -sfL https://get.k3s.io | K3S_URL=https://10.177.88.131:6443 K3S_TOKEN=K1028998dfd8d7783addfb125df567de72d5f102146d0635fc1ab68d909092fa8be::server:533cc6851a98e033b1fdb8af4b7ba06c sh -\"\r\n</pre>\n<p>https://www.techrepublic.com/videos/how-to-deploy-a-kubernetes-cluster-with-multipass/#ftag=RSS56d97e7</p>\n",
          "slug": "deploy-kubernetes-cluster-with-multipass",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/22/deploy-kubernetes-cluster-with-multipass/",
          "date": "2020-03-22T20:48:38",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MTM=",
        "node": {
          "id": "cG9zdDoxNjEz",
          "title": "CREATE AN ALWAYS FREE COMPUTE VM ON THE ORACLE CLOUD",
          "content": "<p><iframe title=\"How to create an Oracle Cloud Compute VM instance\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/h0H1PFbOrtM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"S3WPza6drE\"><p><a href=\"https://learncodeshare.net/2019/12/18/create-an-always-free-compute-vm-on-the-oracle-cloud/\">Create an Always Free Compute VM on the Oracle Cloud</a></p></blockquote>\n<p><iframe title=\"&#8220;Create an Always Free Compute VM on the Oracle Cloud&#8221; &#8212; Learn Code Share\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://learncodeshare.net/2019/12/18/create-an-always-free-compute-vm-on-the-oracle-cloud/embed/#?secret=S3WPza6drE\" data-secret=\"S3WPza6drE\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n",
          "slug": "create-an-always-free-compute-vm-on-the-oracle-cloud",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/22/create-an-always-free-compute-vm-on-the-oracle-cloud/",
          "date": "2020-03-22T15:51:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MDk=",
        "node": {
          "id": "cG9zdDoxNjA5",
          "title": "Install Kubernetes dashboard on MicroK8s on vps or barametal servers without proxy",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc6/aio/deploy/recommended.yaml\r\nkubectl create serviceaccount dashboard -n default\r\nkubectl create clusterrolebinding dashboard-admin -n default  --clusterrole=cluster-admin  --serviceaccount=default:dashboard\r\nkubectl get secret $(kubectl get serviceaccount dashboard -o jsonpath=\"{.secrets[0].name}\") -o jsonpath=\"{.data.token}\" | base64 --decode\r\nkubectl -n kubernetes-dashboard  edit service kubernetes-dashboard\r\n\r\nchange the .spec.type to NodePort and add nodePort : 30100\r\n\r\nAccess the dashboard through : https://Server-IP:30100/#/login\r\nUse firefox instead of chrome beacuse we need to ignore self signed certificate</pre>\n<p>&nbsp;</p>\n",
          "slug": "install-kubernetes-dashboard-on-microk8s-on-vps-or-barametal-servers-without-proxy",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/16/install-kubernetes-dashboard-on-microk8s-on-vps-or-barametal-servers-without-proxy/",
          "date": "2020-03-16T02:07:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MDU=",
        "node": {
          "id": "cG9zdDoxNjA1",
          "title": "How to redirect an incoming connection to a different IP address on a specific port using IPtables",
          "content": "<p>Problem<br />\nRedirect traffic incoming on a specific port to a different IP address / another server</p>\n<p>tl;dr</p>\n<h4>Step 1:</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">iptables -t nat -A PREROUTING -p tcp --dport 3124 -j DNAT --to-destination 1.1.1.1:3000\r\niptables -t nat -A POSTROUTING -j MASQUERADE</pre>\n<p>Solution</p>\n<p>Below will show you how to redirect port 3124 on one machine to port 3000 on a different machine / IP address.<br />\nThis can be useful for firewall related reasons.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">iptables -t nat -A PREROUTING -p tcp --dport 3124 -j DNAT --to-destination 1.1.1.1:3000\r\n</pre>\n<p>This will route traffic incoming on port 3124 to 1.1.1.1 on port 3000.<br />\nYou can put in any port or IP address you need there.</p>\n<h4>Step 2:</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">iptables -t nat -A POSTROUTING -j MASQUERADE\r\n</pre>\n<p>We set MASQUERADE to mask the IP address of the connecting system and use the gateway IP address instead. This is necessary for it to communicate back to the gateway, then to your client.</p>\n<p>That is all that is required to get this to work.</p>\n<h4>Optional:</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">service iptables save\r\n</pre>\n<p>This will save the changes, so they are persistent after a reboot.</p>\n<div id=\"knowledgebase_vote\" class=\"spacing\">\n<div>\n<div>Source : <a href=\"https://my.esecuredata.com/index.php?/knowledgebase/article/49/how-to-redirect-an-incoming-connection-to-a-different-ip-address-on-a-specific-port-using-iptables/\">https://my.esecuredata.com/index.php?/knowledgebase/article/49/how-to-redirect-an-incoming-connection-to-a-different-ip-address-on-a-specific-port-using-iptables/</a></div>\n</div>\n</div>\n",
          "slug": "how-to-redirect-an-incoming-connection-to-a-different-ip-address-on-a-specific-port-using-iptables",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/14/how-to-redirect-an-incoming-connection-to-a-different-ip-address-on-a-specific-port-using-iptables/",
          "date": "2020-03-14T09:52:22",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "network"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MDM=",
        "node": {
          "id": "cG9zdDoxNjAz",
          "title": "Start Kubernetes proxy server automatically",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo nano /etc/systemd/system/kube_proxy.service\r\n\r\n</pre>\n<p>Add the service content:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Unit]\r\nDescription=kubectl proxy 8080\r\nAfter=snap-microk8s-1214.mount network.target\r\n\r\n[Service]\r\nUser=root\r\nExecStart=/bin/bash -c \"/snap/bin/microk8s.kubectl proxy --address='0.0.0.0' --port=8080 --accept-hosts='.*'\"\r\nStartLimitInterval=0\r\nRestartSec=10\r\nRestart=always\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n</pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo systemctl daemon-reload\r\n\r\nsudo systemctl start kube_proxy.service \r\n\r\nsudo systemctl enable kube_proxy.service</pre>\n<p>&nbsp;</p>\n",
          "slug": "start-kubernetes-proxy-server-automatically",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/08/start-kubernetes-proxy-server-automatically/",
          "date": "2020-03-08T15:54:32",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Docker"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2MDA=",
        "node": {
          "id": "cG9zdDoxNjAw",
          "title": "Kubectl to a microK8s inside VirtualBox",
          "content": "<ol>\n<li>export kubectl config</li>\n</ol>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">microk8s.kubectl config view &gt; .kubeconfig</pre>\n<p>2. set port forwarding</p>\n<p><a href=\"https://emolike.net/wp-content/uploads/2020/03/Screenshot-from-2020-03-07-20-35-39.png\"><img class=\"alignnone size-full wp-image-1601\" src=\"https://emolike.net/wp-content/uploads/2020/03/Screenshot-from-2020-03-07-20-35-39.png\" alt=\"\" width=\"700\" height=\"497\" srcset=\"https://emolike.net/wp-content/uploads/2020/03/Screenshot-from-2020-03-07-20-35-39.png 700w, https://emolike.net/wp-content/uploads/2020/03/Screenshot-from-2020-03-07-20-35-39-300x213.png 300w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></a></p>\n<p>3. copy the .kubeconfig to the host .kube/config file</p>\n<p>4. remove certificate</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">certificate-authority-data: DATA+OMITTED</pre>\n<p>5. add not verify</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">apiVersion: v1\r\nclusters:\r\n- cluster:\r\n    server: https://127.0.0.1:16443\r\n    insecure-skip-tls-verify: true\r\n  name: microk8s-cluster\r\ncontexts:\r\n- context:\r\n    cluster: microk8s-cluster\r\n    user: admin\r\n  name: microk8s\r\ncurrent-context: microk8s\r\nkind: Config\r\npreferences: {}\r\nusers:\r\n- name: admin\r\n  user:\r\n    password: VEpLSzdzaVQvMWNTaU1SSFVOeFc3OE9xZGdNeE5uUVFPR0kzMWp2cThMbz0K\r\n    username: admin\r\n</pre>\n<p>6. Run it</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">kubectl get all --all-namespaces</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n",
          "slug": "kubectl-to-a-microk8s-inside-virtualbox",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/07/kubectl-to-a-microk8s-inside-virtualbox/",
          "date": "2020-03-07T22:39:10",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Kubernetes"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1OTU=",
        "node": {
          "id": "cG9zdDoxNTk1",
          "title": "best tmux comfig",
          "content": "<div id=\"at_zurlpreview\">\n<h2>gpakosz/.tmux</h2>\n<h3 style=\"display: none;\">gpakosz/.tmux</h3>\n<p class=\"imgd\">🇫🇷 Oh My Tmux! Pretty &amp; versatile tmux configuration made with ❤️ (imho the best tmux configuration that just works) &#8211; gpakosz/.tmux</p>\n<p class=\"imgs\">Source: <a href=\"https://github.com/gpakosz/.tmux\" target=\"_blank\" rel=\"noopener noreferrer\">github.com/gpakosz/.tmux</a></p>\n</div>\n<p>Shortcuts:</p>\n<p><a href=\"https://tmuxcheatsheet.com/\">https://tmuxcheatsheet.com/</a></p>\n<p>&nbsp;</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">tmux ls \r\n\r\ntmux a -t 0</pre>\n<p>&nbsp;</p>\n",
          "slug": "best-tmux-comfig",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2020/03/2a247942453b404875950162854d2820.jpg"
          },
          "link": "https://emolike.net/2020/03/07/best-tmux-comfig/",
          "date": "2020-03-07T22:00:13",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1OTM=",
        "node": {
          "id": "cG9zdDoxNTkz",
          "title": "Learn Byobu best tmux alternative",
          "content": "<p><iframe title=\"Learn Byobu while listening to Mozart\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/NawuGmcvKus?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "learn-byobu-best-tmux-alternative",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/07/learn-byobu-best-tmux-alternative/",
          "date": "2020-03-07T20:36:28",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1OTA=",
        "node": {
          "id": "cG9zdDoxNTkw",
          "title": "How to Configure Static IP Address on Ubuntu 18.04",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo nano /etc/netplan/01-netcfg.yaml\r\n\r\n                                                                \r\nnetwork:\r\n  version: 2\r\n  renderer: networkd\r\n  ethernets:\r\n    enp0s3:\r\n      dhcp4: no\r\n      addresses:\r\n         - 192.168.1.111/24\r\n      gateway4: 192.168.1.1\r\n      nameservers:\r\n         addresses:  [1.1.1.1 , 8.8.8.8 , 8.8.4.4]\r\n\r\n\r\nsudo netplan apply\r\n</pre>\n<p>&nbsp;</p>\n",
          "slug": "how-to-configure-static-ip-address-on-ubuntu-18-04",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/07/how-to-configure-static-ip-address-on-ubuntu-18-04/",
          "date": "2020-03-07T13:16:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1ODg=",
        "node": {
          "id": "cG9zdDoxNTg4",
          "title": "Ubuntu Core 18 running in VirtualBox",
          "content": "<ol>\n<li>Download the Ubuntu Core 18 Stable image from here: <a href=\"http://cdimage.ubuntu.com/ubuntu-core/18/stable/current/ubuntu-core-18-amd64.img.xz\" rel=\"nofollow noopener\">http://cdimage.ubuntu.com/ubuntu-core/18/stable/current/ubuntu-core-18-amd64.img.xz <span class=\"badge badge-notification clicks\" title=\"242 clicks\">242</span></a></li>\n<li>I then <code>unxz</code> the image: <code>unxz ubuntu-core-18-amd.img.xz</code></li>\n<li>I then use VBoxManage to convert the raw disk image to VDI: <code>VBoxManage convertdd ubuntu-core-18-amd64.img core18.vdi</code></li>\n<li>I then created a new Virtual Machine, said it was Linux and Ubuntu 64-bit, and pointed the storage to the vdi image I created in the previous step.</li>\n<li>Before you start the VM, go to settings:<br />\na. Go to the system tab, and disable I/O APIC (clear the check)<br />\nb. Adjust memory as necessary, but I left it at the default of 1GB<br />\nc. Click on the Processor tab, and make sure there is no check in Enable PAE/NX<br />\nd. Click on the Acceleration tab and verify Paravirtualization interface is default and Enable Nested Paging is checked.<br />\ne. Click on the Storage Tab on the top and verify that the disk image is using the SATA controller.</li>\n<li>Apply the changes to settings and start the VM. It should start Ubuntu Core 18. When you get the prompt that says <code>Press enter to continue.</code> You are ready to go.</li>\n</ol>\n<p>Source : https://forum.snapcraft.io/t/ubuntu-core-18-running-in-virtualbox/9891</p>\n",
          "slug": "ubuntu-core-18-running-in-virtualbox",
          "featuredImage": null,
          "link": "https://emolike.net/2020/03/07/ubuntu-core-18-running-in-virtualbox/",
          "date": "2020-03-07T11:59:33",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1ODM=",
        "node": {
          "id": "cG9zdDoxNTgz",
          "title": "[ Kube 3 ] Kubernetes single node cluster using microk8s",
          "content": "<p><iframe title=\"[ Kube 3 ] Kubernetes single node cluster using microk8s\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/FEELm-o__gU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "kube-3-kubernetes-single-node-cluster-using-microk8s",
          "featuredImage": null,
          "link": "https://emolike.net/2020/02/29/kube-3-kubernetes-single-node-cluster-using-microk8s/",
          "date": "2020-02-29T23:55:23",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Kubernetes"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1ODA=",
        "node": {
          "id": "cG9zdDoxNTgw",
          "title": "Cockpit, web-based interface for your servers",
          "content": "<p>Cockpit makes GNU/Linux discoverable. See your server in a web browser and perform system tasks with a mouse. It’s easy to start containers, administer storage, configure networks, and inspect logs.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt -y install cockpit\r\n\r\nsudo systemctl start cockpit.socket\r\nsudo systemctl enable cockpit.socket\r\n\r\nhttps://ip-address:9090\r\n\r\n</pre>\n<p>&nbsp;</p>\n<p class=\"screenshot zoom\"><img class=\"alignnone size-full wp-image-1581\" src=\"https://emolike.net/wp-content/uploads/2020/02/screenshot-storage.png\" alt=\"Storage screenshot\" width=\"1225\" height=\"702\" srcset=\"https://emolike.net/wp-content/uploads/2020/02/screenshot-storage.png 1225w, https://emolike.net/wp-content/uploads/2020/02/screenshot-storage-300x172.png 300w, https://emolike.net/wp-content/uploads/2020/02/screenshot-storage-1024x587.png 1024w, https://emolike.net/wp-content/uploads/2020/02/screenshot-storage-768x440.png 768w\" sizes=\"(max-width: 1225px) 100vw, 1225px\" /></p>\n<div id=\"at_zurlpreview\">\n<p class=\"imgs\">Source: <a href=\"https://cockpit-project.org/\" target=\"_blank\" rel=\"noopener noreferrer\">cockpit-project.org/</a></p>\n</div>\n",
          "slug": "cockpit-web-based-interface-for-your-servers",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2020/02/screenshot-storage.png"
          },
          "link": "https://emolike.net/2020/02/29/cockpit-web-based-interface-for-your-servers/",
          "date": "2020-02-29T15:38:14",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "Technology"
              },
              {
                "name": "tools"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NzY=",
        "node": {
          "id": "cG9zdDoxNTc2",
          "title": "KVM / QEMU based Windows 10 VM &#8211; Step by Step",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1577\" src=\"https://emolike.net/wp-content/uploads/2020/02/01_qemu_win_install.jpg\" width=\"555\" height=\"182\" srcset=\"https://emolike.net/wp-content/uploads/2020/02/01_qemu_win_install.jpg 555w, https://emolike.net/wp-content/uploads/2020/02/01_qemu_win_install-300x98.jpg 300w\" sizes=\"(max-width: 555px) 100vw, 555px\" /></p>\n<p class=\"imgd\">Edit (2019-05-07): I turned the cache off completly (Set the cache mode to None) because I once had an issue with an power outage which resulted in a non functioning windows VM.</p>\n<p class=\"imgs\">Source: <a href=\"https://dennisnotes.com/note/20180614-ubuntu-18.04-qemu-setup/\" target=\"_blank\" rel=\"noopener noreferrer\">dennisnotes.com/note/20180614-ubuntu-18.04-qemu-setup/</a></p>\n</div>\n",
          "slug": "kvm-qemu-based-windows-10-vm-step-by-step",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2020/02/01_qemu_win_install.jpg"
          },
          "link": "https://emolike.net/2020/02/20/kvm-qemu-based-windows-10-vm-step-by-step/",
          "date": "2020-02-20T23:35:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NzM=",
        "node": {
          "id": "cG9zdDoxNTcz",
          "title": "Modern techniques for modern C#",
          "content": "<p><iframe title=\"Change your habits: Modern techniques for modern C# - Bill Wagner\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/aUbXGs7YTGo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "modern-techniques-for-modern-c",
          "featuredImage": null,
          "link": "https://emolike.net/2020/02/19/modern-techniques-for-modern-c/",
          "date": "2020-02-19T22:52:56",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1Njg=",
        "node": {
          "id": "cG9zdDoxNTY4",
          "title": "FIX : Remote Desktop Authentication Error Has Occurred The function requested is not supported",
          "content": "<p><iframe title=\"Remote Desktop Authentication Error Has Occurred The function requested is not supported\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/6pfiQtV_ooU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "fix-remote-desktop-authentication-error-has-occurred-the-function-requested-is-not-supported",
          "featuredImage": null,
          "link": "https://emolike.net/2019/09/06/fix-remote-desktop-authentication-error-has-occurred-the-function-requested-is-not-supported/",
          "date": "2019-09-06T13:09:58",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NjU=",
        "node": {
          "id": "cG9zdDoxNTY1",
          "title": "Fix VMware &#8220;No 3D Support is available from the host&#8221; on Linux",
          "content": "<p><iframe title=\"Fix VMware &quot;No 3D Support is available from the host&quot; on Linux\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/Ch-LJLVv1NE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "fix-vmware-no-3d-support-is-available-from-the-host-on-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2019/08/09/fix-vmware-no-3d-support-is-available-from-the-host-on-linux/",
          "date": "2019-08-09T06:10:32",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NjI=",
        "node": {
          "id": "cG9zdDoxNTYy",
          "title": "How to Install VMware Workstation on Arch Linux / Manjaro",
          "content": "<h2 id=\"mce_5\">Step 1: Install yay AUR helper</h2>\n<p>Start by installing a smart AUR helper called yay.</p>\n<p><a href=\"https://computingforgeeks.com/yay-best-aur-helper-for-arch-linux-manjaro/\" target=\"_blank\" rel=\"noreferrer noopener\">yay – Best AUR Helper for Arch Linux / Manjaro</a>.</p>\n<h2>Step 2: Install Dependencies</h2>\n<p>Install all required dependencies for running VMware Workstation on Arch Linux / Manjaro.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo pacman -S fuse2 gtkmm linux-headers pcsclite libcanberra \r\n</pre>\n<p>The other package needed by the<em> –console</em> installer is <em>ncurses5-compat-libs</em>. This is available on AUR.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">yay -S --noconfirm --needed ncurses5-compat-libs\r\n</pre>\n<h2>Step 3: Install VMware Workstation Pro or Player</h2>\n<p>You have two options:</p>\n<h2 id=\"mce_61\">Option 1: Install from Package build for x86_64</h2>\n<p>The <em>vmware-workstation</em> package is available on AUR and can be installed by running the command.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">yay -S --noconfirm --needed  vmware-workstation\r\n</pre>\n<p>Then, as desired, enable some of the following services:</p>\n<ul>\n<li><code>vmware-networks.service</code> for guest network access</li>\n<li><code>vmware-usbarbitrator.service</code> for connecting USB devices to guest</li>\n<li><code>vmware-hostd.service</code> for sharing virtual machines</li>\n</ul>\n<p>Example:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo systemctl enable vmware-networks.service  vmware-usbarbitrator.service vmware-hostd.service\r\nsudo systemctl start vmware-networks.service  vmware-usbarbitrator.service vmware-hostd.service</pre>\n<p>Confirm services status with:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo systemctl status vmware-networks.service  vmware-usbarbitrator.service vmware-hostd.service\r\n</pre>\n<p>Lastly, load the VMware modules:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo modprobe -a vmw_vmci vmmon\r\n</pre>\n<p>To Launch VMware Workstation, run:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># Launch VMware Workstation Pro:\r\n$  vmware\r\n\r\n# Launch  VMware Workstation Player\r\n$ vmplayer</pre>\n<figure class=\"wp-block-image\"><img class=\"alignnone size-full wp-image-1563\" src=\"https://emolike.net/wp-content/uploads/2019/08/install-vmware-workstation-arch-linux-manjaro-11-1024x543.png\" width=\"1024\" height=\"543\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/08/install-vmware-workstation-arch-linux-manjaro-11-1024x543.png 1024w, https://emolike.net/wp-content/uploads/2019/08/install-vmware-workstation-arch-linux-manjaro-11-1024x543-300x159.png 300w, https://emolike.net/wp-content/uploads/2019/08/install-vmware-workstation-arch-linux-manjaro-11-1024x543-768x407.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></figure>\n<h2>Option 2: Install Using VMware bundle</h2>\n<p>Download the latest VMware Workstation Pro or Player</p>\n<p>Choose the VMware edition to go with and download it. Here are Download links.</p>\n<ul>\n<li>Download <a href=\"https://www.vmware.com/go/tryworkstation\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"VMware Workstation Pro (opens in a new tab)\">VMware Workstation Pro</a></li>\n<li>Download<a href=\"https://www.vmware.com/go/downloadplayer\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" VMware WorkstationPlayer (opens in a new tab)\"> VMware WorkstationPlayer</a></li>\n</ul>\n<p>After download is complete, start the installation using the bundle file downloaded.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ chmod +x VMware-Player-15.0.4-12990004.x86_64.bundle \r\n$ sudo ./VMware-Player-15.0.4-12990004.x86_64.bundle \r\nExtracting VMware Installer...done.</pre>\n<p>The installer UI will be launched. Accept License Agreement terms and click <strong>next</strong>.</p>\n<p>Source : <a href=\"https://computingforgeeks.com/install-vmware-workstation-on-arch-linux-manjaro/\">https://computingforgeeks.com/install-vmware-workstation-on-arch-linux-manjaro/</a></p>\n",
          "slug": "how-to-install-vmware-workstation-on-arch-linux-manjaro",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/08/install-vmware-workstation-arch-linux-manjaro-11-1024x543.png"
          },
          "link": "https://emolike.net/2019/08/07/how-to-install-vmware-workstation-on-arch-linux-manjaro/",
          "date": "2019-08-07T12:10:44",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "tools"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NTQ=",
        "node": {
          "id": "cG9zdDoxNTU0",
          "title": "High-Performance Load Balancing with NGINX (Part 1 of 3)",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">Today’s internet user experience demands performance and uptime. To achieve this, multiple copies of the same system are run, and the load…</p>\n<p class=\"imgs\">Source: <a href=\"https://medium.com/@web.development/high-performance-load-balancing-with-nginx-part-1-of-3-26e0e805bbcf\" target=\"_blank\" rel=\"noopener noreferrer\">medium.com/@web.development/high-performance-load-balancing-with-nginx-part-1-of-3-26e0e805bbcf</a></p>\n</div>\n",
          "slug": "high-performance-load-balancing-with-nginx-part-1-of-3",
          "featuredImage": null,
          "link": "https://emolike.net/2019/07/20/high-performance-load-balancing-with-nginx-part-1-of-3/",
          "date": "2019-07-20T21:07:31",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NTA=",
        "node": {
          "id": "cG9zdDoxNTUw",
          "title": "ASP.NET Core: Supporting multiple Authorization, route branching",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1551\" src=\"https://emolike.net/wp-content/uploads/2019/07/16df87AHwMTYKfs33K52f2g.png\" width=\"1250\" height=\"875\" srcset=\"https://emolike.net/wp-content/uploads/2019/07/16df87AHwMTYKfs33K52f2g.png 1250w, https://emolike.net/wp-content/uploads/2019/07/16df87AHwMTYKfs33K52f2g-300x210.png 300w, https://emolike.net/wp-content/uploads/2019/07/16df87AHwMTYKfs33K52f2g-768x538.png 768w, https://emolike.net/wp-content/uploads/2019/07/16df87AHwMTYKfs33K52f2g-1024x717.png 1024w\" sizes=\"(max-width: 1250px) 100vw, 1250px\" /></p>\n<p class=\"imgd\">It’s been six months since my last article, my freelance career is asking a lot of effort.</p>\n<p class=\"imgs\">Source: <a href=\"https://medium.com/@M3rken/asp-net-core-supporting-multiple-authorization-route-branching-cad3ab632410\" target=\"_blank\" rel=\"noopener noreferrer\">medium.com/@M3rken/asp-net-core-supporting-multiple-authorization-route-branching-cad3ab632410</a></p>\n</div>\n",
          "slug": "asp-net-core-supporting-multiple-authorization-route-branching",
          "featuredImage": null,
          "link": "https://emolike.net/2019/07/14/asp-net-core-supporting-multiple-authorization-route-branching/",
          "date": "2019-07-14T10:58:14",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NDg=",
        "node": {
          "id": "cG9zdDoxNTQ4",
          "title": "ASP.NET Core RESTful Web API versioning made easy",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">Scott Hanselman on Programming, The Web, Open Source, .NET, The Cloud and More</p>\n<p class=\"imgs\">Source: <a href=\"https://www.hanselman.com/blog/ASPNETCoreRESTfulWebAPIVersioningMadeEasy.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">www.hanselman.com/blog/ASPNETCoreRESTfulWebAPIVersioningMadeEasy.aspx</a></p>\n</div>\n",
          "slug": "asp-net-core-restful-web-api-versioning-made-easy",
          "featuredImage": null,
          "link": "https://emolike.net/2019/07/13/asp-net-core-restful-web-api-versioning-made-easy/",
          "date": "2019-07-13T14:21:02",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NDY=",
        "node": {
          "id": "cG9zdDoxNTQ2",
          "title": "Linq To CSV",
          "content": "<h2>LinqToCSV Class</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">namespace FooFoo\r\n{\r\n    public static class LinqToCSV\r\n    {\r\n        public static string ToCsv&lt;T&gt;(this IEnumerable&lt;T&gt; items)\r\n            where T : class\r\n        {\r\n            var csvBuilder = new StringBuilder();\r\n            var properties = typeof(T).GetProperties();\r\n            foreach (T item in items)\r\n            {\r\n                string line = string.Join(\",\",properties.Select(p =&gt; p.GetValue(item, null).ToCsvValue()).ToArray());\r\n                csvBuilder.AppendLine(line);\r\n            }\r\n            return csvBuilder.ToString();\r\n        }\r\n \r\n        private static string ToCsvValue&lt;T&gt;(this T item)\r\n        {\r\n            if(item == null) return \"\\\"\\\"\";\r\n \r\n            if (item is string)\r\n            {\r\n                return string.Format(\"\\\"{0}\\\"\", item.ToString().Replace(\"\\\"\", \"\\\\\\\"\"));\r\n            }\r\n            double dummy;\r\n            if (double.TryParse(item.ToString(), out dummy))\r\n            {\r\n                return string.Format(\"{0}\", item);\r\n            }\r\n            return string.Format(\"\\\"{0}\\\"\", item);\r\n        }\r\n    }\r\n}</pre>\n<h2>Example of usage:</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public string Get()\r\n{\r\n    var db = new Db();\r\n    var data = db.Database.SqlQuery&lt;SQLResult&gt;(Query()).ToList();\r\n    var csv =  data.ToCsv();\r\n\r\n    var path = HttpContext.Current.Server.MapPath(@\"~/Content/data.csv\");\r\n\r\n    // Create a file to write to.\r\n    using (StreamWriter sw = File.CreateText(path))\r\n    {\r\n        sw.Write(csv);\r\n        sw.Flush();\r\n    }\r\n    return \"File Updated\";\r\n}</pre>\n<p>&nbsp;</p>\n<p>Source : <a href=\"https://www.hanselman.com/blog/BackToBasicsKeepItSimpleAndDevelopYourSenseOfSmellFromLinqToCSV.aspx\">https://www.hanselman.com/blog/BackToBasicsKeepItSimpleAndDevelopYourSenseOfSmellFromLinqToCSV.aspx</a></p>\n",
          "slug": "linq-to-csv",
          "featuredImage": null,
          "link": "https://emolike.net/2019/07/10/linq-to-csv/",
          "date": "2019-07-10T12:55:49",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1NDE=",
        "node": {
          "id": "cG9zdDoxNTQx",
          "title": "Fix of &#8220;The breakpoint will not currently be hit. No symbols have been loaded for this document.”",
          "content": "<p>Start debugging, as soon as you&#8217;ve arrived at a breakpoint or used <code>Debug &amp;gt; Break All</code>, use <code>Debug &amp;gt; Windows &amp;gt; Modules</code>. You&#8217;ll see a list of all the assemblies that are loaded into the process. Locate the one you want to get debug info for. Right-click it and select Symbol Load Information. You&#8217;ll get a dialog that lists all the directories where it looked for the .pdb file for the assembly. Verify that list against the actual .pdb location. Make sure it doesn&#8217;t find an old one.</p>\n<p><a href=\"https://emolike.net/wp-content/uploads/2019/07/DeepinScreenshot_select-area_20190707122945.png\"><img class=\"alignnone size-full wp-image-1542\" src=\"https://emolike.net/wp-content/uploads/2019/07/DeepinScreenshot_select-area_20190707122945.png\" alt=\"\" width=\"1531\" height=\"362\" srcset=\"https://emolike.net/wp-content/uploads/2019/07/DeepinScreenshot_select-area_20190707122945.png 1531w, https://emolike.net/wp-content/uploads/2019/07/DeepinScreenshot_select-area_20190707122945-300x71.png 300w, https://emolike.net/wp-content/uploads/2019/07/DeepinScreenshot_select-area_20190707122945-768x182.png 768w, https://emolike.net/wp-content/uploads/2019/07/DeepinScreenshot_select-area_20190707122945-1024x242.png 1024w\" sizes=\"(max-width: 1531px) 100vw, 1531px\" /></a></p>\n<p>Another Way is to disable code optimization</p>\n<p>In the IDE, project properties → build → &#8220;optimize code&#8221;</p>\n<p>&nbsp;</p>\n<p>Source : <a href=\"https://stackoverflow.com/questions/2155930/how-do-i-remedy-the-the-breakpoint-will-not-currently-be-hit-no-symbols-have-b\">https://stackoverflow.com/questions/2155930/how-do-i-remedy-the-the-breakpoint-will-not-currently-be-hit-no-symbols-have-b</a></p>\n",
          "slug": "fix-of-the-breakpoint-will-not-currently-be-hit-no-symbols-have-been-loaded-for-this-document",
          "featuredImage": null,
          "link": "https://emolike.net/2019/07/07/fix-of-the-breakpoint-will-not-currently-be-hit-no-symbols-have-been-loaded-for-this-document/",
          "date": "2019-07-07T12:31:03",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MzA=",
        "node": {
          "id": "cG9zdDoxNTMw",
          "title": "Lazydocker docker cli dashboard",
          "content": "<p><iframe src=\"https://www.youtube.com/embed/NICqQPxwJWw\" width=\"1524\" height=\"611\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<div class=\"github-embed github-embed-repository github-logo-mark\">\n<p>        <a href=\"https://github.com/jesseduffield/lazydocker\" target=\"_blank\">\t\t\t<strong>\t\t\t\tThe lazier way to manage everything docker\t\t\t</strong>\t\t</a>\t\t<br />        <a href=\"https://github.com/jesseduffield/lazydocker\" target=\"_blank\">https://github.com/jesseduffield/lazydocker</a><br />        <a href=\"https://github.com/jesseduffield/lazydocker/network\" target=\"_blank\">539</a> forks.<br />        <a href=\"https://github.com/jesseduffield/lazydocker/stargazers\" target=\"_blank\">14,691</a> stars.<br />        <a href=\"https://github.com/jesseduffield/lazydocker/issues\" target=\"_blank\">58</a> open issues.<br />        Recent commits:        </p>\n<ul class=\"github_commits\">\n<li class=\"github_commit\">                    <a href=\"https://github.com/jesseduffield/lazydocker/commit/10617da5608990bf4911142745d31566bac6964a\" target=\"_blank\">Merge pull request #209 from jesseduffield/dawidd6-patch-1install_update_linux: allow specifying directory</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/jesseduffield/lazydocker/commit/86302e8ccc889e6794529f9779b10b622f1f8e72\" target=\"_blank\">README: mention DIR env variable</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/jesseduffield/lazydocker/commit/60640d4fe446e41839e8d0551d86b4484cffb419\" target=\"_blank\">install_update_linux: allow specifying directoryCloses #208</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/jesseduffield/lazydocker/commit/22ab84043937cdbb9dcb08518dc9adf7f2c7a68b\" target=\"_blank\">Merge pull request #204 from jesseduffield/remove-rollbarremove rollbar</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/jesseduffield/lazydocker/commit/6279b416bc75be6723ae1aff9d7212aa342f786b\" target=\"_blank\">remove rollbar</a>, Jesse Duffield                </li>\n</ul>\n</div>\n",
          "slug": "lazydocker-docker-cli-dashboard",
          "featuredImage": null,
          "link": "https://emolike.net/2019/06/30/lazydocker-docker-cli-dashboard/",
          "date": "2019-06-30T15:44:15",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MjM=",
        "node": {
          "id": "cG9zdDoxNTIz",
          "title": "How To Get An In Depth Insight Of Your Code With NDepend static analysis tool",
          "content": "<p>As a software developer, you may have come across a situation where you need to measure the quality the source code you have at hand. How well is the code written ? is it easily maintainable ? and similar important questions. Obviously, you don’t want to go through each line of code in the whole project to determine these. Because it will take time and you might be inaccurate. Instead, you want to analyse the source code in a fast and accurate way, and most importantly, have detailed, precise and measurable metrics about the code. Which you will easily use to judge the source code you have at hand. This is possible with static analysis tools like <strong><a href=\"https://www.ndepend.com/\">NDepend</a>.</strong></p>\n<p>I’ve started using NDepend about a month ago, and for code analysis, it is really efficient. NDepend is simply a static analysis tool for .Net developers. Ndepend is available as a Visualstudio extension and can also be integrated to Visualstudio team services. Using this tool permits you to have a deep insight of your source code. Today, we will talk about several aspects of this tool. Which include the metrics it provides to its user and how users can get a maximum insight about their code from it.</p>\n<p style=\"text-align: center;\"><img class=\"alignnone size-full wp-image-1524\" src=\"https://emolike.net/wp-content/uploads/2019/06/issues.png\" width=\"460\" height=\"284\" alt=\"NDepend static analysis tool on visualstudio\" title=\"NDepend static analysis tool on visualstudio\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/issues.png 460w, https://emolike.net/wp-content/uploads/2019/06/issues-300x185.png 300w\" sizes=\"(max-width: 460px) 100vw, 460px\" />NDepend static analysis tool on visualstudio</p>\n<h2>Code Insight with NDepend Static Analysis Tool</h2>\n<p>Ndepend is easy to get started with, it is available as a visualstudio extension as I mentioned before. Installation instructions can be found <a href=\"https://www.ndepend.com/docs/getting-started-with-ndepend\">here</a>. The video present on their website is about installing an older version of the extension. So , you should follow the documentation instead.</p>\n<p>Once you have installed it, the NDepend menu will be available on Visualstudio and from there you can create a project. After running code analysis on your project, you will have a detailed report of the analysis made on your source code. Ndepend produces a detailed report of your code also in a web page where you can visualize it. Here is a screenshot of the dashboard. I made it from a project I actually work on.</p>\n<figure id=\"attachment_692\" class=\"wp-caption aligncenter\" style=\"width: 845px;\" aria-describedby=\"caption-attachment-692\"><img class=\"alignnone size-full wp-image-1525\" src=\"https://emolike.net/wp-content/uploads/2019/06/Ndepend-static-analysis-tool-dashboard-1.png\" width=\"640\" height=\"290\" alt=\"Ndepend static analysis tool dashboard\" title=\"Ndepend static analysis tool dashboard\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/Ndepend-static-analysis-tool-dashboard-1.png 640w, https://emolike.net/wp-content/uploads/2019/06/Ndepend-static-analysis-tool-dashboard-1-300x136.png 300w\" sizes=\"(max-width: 640px) 100vw, 640px\" /><figcaption id=\"caption-attachment-692\" class=\"wp-caption-text\">Ndepend static analysis tool dashboard</figcaption></figure>\n<p>The report produced on the web page is similar to this, but they are not identical. Ndepend provides you a dependency diagram, where you can find details about the dependencies your project have and their relationships. You also have the ability to visualize the application code metrics with the dashboard, which provides a quick view of these metrics. After creation of analysis report, you have a detailed tree map of your source code. You can have detailed view of how the tree map provides more insight to your source code <a href=\"https://www.ndepend.com/docs/treemap-visualization-of-code-metrics\">here</a>.</p>\n<p>&nbsp;</p>\n<figure class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1526\" src=\"https://emolike.net/wp-content/uploads/2019/06/TreemapColor.png\" width=\"768\" height=\"605\" alt=\"ndepend static analysis tool Example of a Tree Map \" srcset=\"https://emolike.net/wp-content/uploads/2019/06/TreemapColor.png 768w, https://emolike.net/wp-content/uploads/2019/06/TreemapColor-300x236.png 300w\" sizes=\"(max-width: 768px) 100vw, 768px\" /><figcaption class=\"wp-caption-text\">ndepend static analysis tool Example of a Tree Map</figcaption></figure>\n<p>You also have several other graphical representations of different metrics such as code coverage and depth.Below you can see a dependency graph. It is a very simple representation since the project has a few dependencies only.</p>\n<figure id=\"attachment_690\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-690\"><img class=\"alignnone size-full wp-image-1527\" src=\"https://emolike.net/wp-content/uploads/2019/06/ndepend-static-analysis-tool-component-diagram.png\" width=\"291\" height=\"391\" alt=\"ndepend static analysis tool dependency diagram\" title=\"ndepend static analysis tool dependency diagram\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/ndepend-static-analysis-tool-component-diagram.png 291w, https://emolike.net/wp-content/uploads/2019/06/ndepend-static-analysis-tool-component-diagram-223x300.png 223w\" sizes=\"(max-width: 291px) 100vw, 291px\" /><figcaption id=\"caption-attachment-690\" class=\"wp-caption-text\">ndepend static analysis tool dependency diagram</figcaption></figure>\n<h3>Code Quality And Rules</h3>\n<p>Having a measurable representation of the quality of your code is great, and NDepend has features for this purpose. It uses  quality gates to determine code quality. as mentioned on the Ndepend <a href=\"https://www.ndepend.com/docs/quality-gates\">website</a>, A Quality Gate is a check on a code quality fact. Ndepend provides several code quality gates available for you. Quality gates can be passed or failed, or a warning result is output. In case you have specific quality checks you want your code to pass through, Ndepend allows you to create your own quality gates or customize existing ones.</p>\n<p>On the other side, you have rules. Rules are different from quality gates, though they have several similarities. As stated in the NDepend <a href=\"https://www.ndepend.com/docs/quality-gates\">documentation</a>; A Quality Gate outputs a status (Pass, Warn, Fail). Whereas, A Rule outputs issues. Defining rules is done with CQLinq. This is my favorite feature. CQLinq is similar to Linq and it is used to query your code and define rules.</p>\n<p>Using CQLinq to query your code is simple. But in case you want to define your queries as a rule, you will need to prefix your query with <strong>warnif count. </strong>Here are few examples of queries.</p>\n<p>This is a simple query to select every class in my project :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">from t in JustMyCode.Types where\r\n  t.IsClass select t</pre>\n<p>Another simple example is a query to get every method with more than 5 lines of code</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">from t in JustMyCode.Methods where\r\n  t.NbLinesOfCode &gt; 5 select t</pre>\n<p>To define a rules from the query above here is what we do</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">warnif count &gt; 0 from t in JustMyCode.Methods where\r\n  t.NbLinesOfCode &gt; 5 select t</pre>\n<h2>Conclusion</h2>\n<p>You will have several advantages if you use static code analytics tools. Ndepend provides large variety of options and is very easy to use and get started with.</p>\n<p>Source : <a href=\"https://doumer.me/how-to-get-an-in-depth-insight-of-your-code-with-ndepend-static-analysis-tool/\">https://doumer.me/how-to-get-an-in-depth-insight-of-your-code-with-ndepend-static-analysis-tool/</a></p>\n<p>&nbsp;</p>\n",
          "slug": "how-to-get-an-in-depth-insight-of-your-code-with-ndepend-static-analysis-tool",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/06/issues.png"
          },
          "link": "https://emolike.net/2019/06/25/how-to-get-an-in-depth-insight-of-your-code-with-ndepend-static-analysis-tool/",
          "date": "2019-06-25T11:56:12",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MjE=",
        "node": {
          "id": "cG9zdDoxNTIx",
          "title": "Azure Architect Expert Study Notes",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">The following is a quick and dirty list I made for the Architect exams so that I could read them quickly before the exam itself. This is mostly for the AZ-302 but good to know regardless of what ex…</p>\n<p class=\"imgs\">Source: <a href=\"https://gregorsuttie.com/2019/06/15/azure-architect-expert-study-notes/\" target=\"_blank\" rel=\"noopener noreferrer\">gregorsuttie.com/2019/06/15/azure-architect-expert-study-notes/</a></p>\n</div>\n",
          "slug": "azure-architect-expert-study-notes",
          "featuredImage": null,
          "link": "https://emolike.net/2019/06/25/azure-architect-expert-study-notes/",
          "date": "2019-06-25T01:02:04",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MTg=",
        "node": {
          "id": "cG9zdDoxNTE4",
          "title": "map vs filter vs reduce",
          "content": "<p><img class=\"alignnone size-full wp-image-1519\" src=\"https://emolike.net/wp-content/uploads/2019/06/ufv6k.png\" width=\"1023\" height=\"771\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/ufv6k.png 1023w, https://emolike.net/wp-content/uploads/2019/06/ufv6k-300x226.png 300w, https://emolike.net/wp-content/uploads/2019/06/ufv6k-768x579.png 768w\" sizes=\"(max-width: 1023px) 100vw, 1023px\" /></p>\n<div class=\"ae hb ab cv w x\">\n<h1 id=\"81b6\" class=\"jh ji at bv bu ga jj jk jl jm jn jo jp jq jr js jt\" data-selectable-paragraph=\"\"><strong class=\"bk\">Array.map </strong>–<strong class=\"bk\"> map all values to an expression.</strong></h1>\n</div>\n<div class=\"ae hb ab ac\">\n<figure class=\"ju jv jw jx jy dv jz ka kb paragraph-image\">\n<div class=\"ke n dj kf\">\n<div class=\"kg n\">\n<div class=\"cw kc fd p q fc ab ay v kd\"></div>\n<p><img class=\"alignnone size-full wp-image-1557\" src=\"https://emolike.net/wp-content/uploads/2019/07/14EGwsCicbWJeml2aAm714A.gif\" width=\"1257\" height=\"652\" /></div>\n</div>\n</figure>\n</div>\n<p id=\"8cbe\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\">1] </strong><em class=\"jf\">Expression </em><strong class=\"ip jg\">value + 1 </strong>is applied to <strong class=\"ip jg\"><em class=\"jf\">every item</em></strong> in the <strong class=\"ip jg\"><em class=\"jf\">original array</em></strong>.</p>\n<p id=\"3bb5\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\">2] .map()</strong> returns a <strong class=\"ip jg\"><em class=\"jf\">modified</em> <em class=\"jf\">copy</em></strong><em class=\"jf\"> </em>of the array leaving original untouched.</p>\n<p id=\"e0d7\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\">3] Result:</strong> [2,3,4,5,6,7,8] (<strong class=\"ip jg\">a copy of the original array is created.</strong>)</p>\n<p data-selectable-paragraph=\"\">\n<div class=\"ae hb ab cv w x\">\n<h1 id=\"0087\" class=\"jh ji at bv bu ga jj jk jl jm jn jo jp jq jr js jt\" data-selectable-paragraph=\"\"><strong class=\"bk\">Array.filter </strong>–<strong class=\"bk\"> keep all that match a condition.</strong></h1>\n</div>\n<div class=\"ae hb ab ac\">\n<figure class=\"ju jv jw jx jy dv jz ka kb paragraph-image\">\n<div class=\"ke n dj kf\">\n<div class=\"kg n\">\n<div class=\"cw kc fd p q fc ab ay v kd\"></div>\n<p><img class=\"alignnone size-full wp-image-1558\" src=\"https://emolike.net/wp-content/uploads/2019/07/1TOPYVvfMBmjajPh-fqZ9GQ.gif\" width=\"1257\" height=\"652\" /></div>\n</div>\n</figure>\n</div>\n<div class=\"ae hb ab cv w x\">\n<p id=\"ebb3\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\">NOTE:</strong> there is a small mistake in the animation. It should return [6,7], not [6,7,8]. I’ll fix it shortly. . .</p>\n<p id=\"aae0\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\">1] </strong><em class=\"jf\">function </em><strong class=\"ip jg\">value &gt; 5 </strong>is applied to <strong class=\"ip jg\"><em class=\"jf\">every item</em></strong> in the <strong class=\"ip jg\"><em class=\"jf\">original array</em></strong>.</p>\n<p id=\"abc7\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\">2] .filter()</strong> returns a <strong class=\"ip jg\"><em class=\"jf\">modified</em><em class=\"jf\">copy</em></strong>of the array – the original is still available!</p>\n<p id=\"566c\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\">3] Result:</strong> [6,7,8] (<strong class=\"ip jg\">only values that passed the condition.</strong>)</p>\n</div>\n<div class=\"ae hb ab cv w x\">\n<h1 id=\"13dc\" class=\"jh ji at bv bu ga jj jk jl jm jn jo jp jq jr js jt\" data-selectable-paragraph=\"\"><strong class=\"bk\">Array.reduce </strong>– reduce all items to a single value.</h1>\n<p id=\"d767\" class=\"in io at bv ip b iq km is kn iu ko iw kp iy kq ja\" data-selectable-paragraph=\"\">A common use for a <strong class=\"ip jg\"><em class=\"jf\">reducer </em></strong>is combining prices of all items in shopping cart.</p>\n<p id=\"93a6\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\">What makes reduce unique is that it uses an <strong class=\"ip jg\"><em class=\"jf\">accumulator</em></strong>.</p>\n<p id=\"7291\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\"><strong class=\"ip jg\"><em class=\"jf\">Accumulator </em></strong>is required to be set to a starting value. Here it is <strong class=\"ip jg\">0</strong>.</p>\n</div>\n<div class=\"ae hb ab ac\">\n<figure class=\"ju jv jw jx jy dv jz ka kb paragraph-image\">\n<div class=\"ke n dj kf\">\n<div class=\"kg n\">\n<div class=\"cw kc fd p q fc ab ay v kd\"></div>\n<p><img class=\"alignnone size-full wp-image-1559\" src=\"https://emolike.net/wp-content/uploads/2019/07/1dhTC_FFgiH3mKROrnDj12w.gif\" width=\"1257\" height=\"652\" /></div>\n</div>\n</figure>\n</div>\n<div class=\"ae hb ab cv w x\">\n<p id=\"14e3\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\">1 ] <strong class=\"ip jg\"><em class=\"jf\">Reducer </em></strong>function <strong class=\"ip jg\">F</strong> takes value and <strong class=\"ip jg\"><em class=\"jf\">accumulator</em></strong>.</p>\n<p id=\"e0de\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\">2 ] In this example <strong class=\"ip jg\">.reduce(<em class=\"jf\">v</em>, <em class=\"jf\">a</em>) </strong>returns the sum of all values.</p>\n<p id=\"c72a\" class=\"in io at bv ip b iq ir is it iu iv iw ix iy iz ja\" data-selectable-paragraph=\"\">3 ] Result: 28 (<strong class=\"ip jg\">the sum of all numbers in the original array</strong>)</p>\n</div>\n<p data-selectable-paragraph=\"\">Sources:</p>\n<p><a href=\"https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47\">https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47</a></p>\n<p><a href=\"https://stackoverflow.com/questions/49934992/main-difference-between-map-and-reduce\">https://stackoverflow.com/questions/49934992/main-difference-between-map-and-reduce</a></p>\n",
          "slug": "map-vs-filter-vs-reduce",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/07/14EGwsCicbWJeml2aAm714A.gif"
          },
          "link": "https://emolike.net/2019/06/25/map-vs-filter-vs-reduce/",
          "date": "2019-06-25T00:51:26",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MTU=",
        "node": {
          "id": "cG9zdDoxNTE1",
          "title": "Open Source Continuous Delivery and Release Automation Server | GoCD",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">GoCD is an open source build and release tool from ThoughtWorks. GoCD supports modern infrastructure and helps enterprise businesses get software delivered faster, safer, and more reliably.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.gocd.org/\" target=\"_blank\" rel=\"noopener noreferrer\">www.gocd.org/</a></p>\n</div>\n<p><a href=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190619160815.png\"><img class=\"alignnone size-full wp-image-1516\" src=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190619160815.png\" alt=\"\" width=\"1570\" height=\"568\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190619160815.png 1570w, https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190619160815-300x109.png 300w, https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190619160815-768x278.png 768w, https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190619160815-1024x370.png 1024w\" sizes=\"(max-width: 1570px) 100vw, 1570px\" /></a></p>\n",
          "slug": "open-source-continuous-delivery-and-release-automation-server-gocd",
          "featuredImage": null,
          "link": "https://emolike.net/2019/06/19/open-source-continuous-delivery-and-release-automation-server-gocd/",
          "date": "2019-06-19T16:10:41",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "system admin"
              },
              {
                "name": "Technology"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MDI=",
        "node": {
          "id": "cG9zdDoxNTAy",
          "title": "Go for Containerized Microservices in Azure",
          "content": "<p><iframe title=\"Go for Containerized Microservices in Azure\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/umJE9my_Aeg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "go-for-containerized-microservices-in-azure",
          "featuredImage": null,
          "link": "https://emolike.net/2019/06/15/go-for-containerized-microservices-in-azure/",
          "date": "2019-06-15T15:41:10",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Go"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0Nzk=",
        "node": {
          "id": "cG9zdDoxNDc5",
          "title": "Building a Bank with Kubernetes",
          "content": "<p><iframe title=\"Building a Bank with Kubernetes by Oliver Beattie, Monzo\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/YkOY7DgXKyw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "building-a-bank-with-kubernetes",
          "featuredImage": null,
          "link": "https://emolike.net/2019/06/14/building-a-bank-with-kubernetes/",
          "date": "2019-06-14T21:42:06",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0NzM=",
        "node": {
          "id": "cG9zdDoxNDcz",
          "title": "From bare-metal to Kubernetes",
          "content": "<h4><span style=\"color: #800000;\">I am impressed about this great journey and because i faced the same scenarios and followed the same steps I&#8217;m sharing this post from <a style=\"color: #800000;\" href=\"https://boxunix.com/post/bare_metal_to_kube/\" target=\"_blank\" rel=\"noopener noreferrer\">https://boxunix.com/post/bare_metal_to_kube/</a></span></h4>\n<p>&nbsp;</p>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"admonitionblock note\">\n<table>\n<tbody>\n<tr>\n<td class=\"icon\">\n<div class=\"title\"></div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p><a href=\"https://www.betabrand.com/\">Betabrand</a> is a retail clothing company and crowdfunding platform, based in San Francisco.</p>\n</div>\n<div class=\"paragraph\">\n<p>The company designs, manufactures, and releases new products in limited quantities each week.</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>How migrating <a href=\"https://www.betabrand.com/\">Betabrand</a>&#8216;s bare-metal infrastructure to a Kubernetes cluster hosted on Google Container Engine solved many engineering issues—​from hardware failures, to lack of scalability of our production services, complex configuration management and highly heterogeneous development-staging-production environments—​and allowed us to achieve a reliable, available and scalable infrastructure.</p>\n</div>\n<div class=\"paragraph\">\n<p>This post will walk you through the many infrastructure changes and challenges Betabrand met from 2011 to 2018.</p>\n</div>\n<hr />\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_early_infrastructure\">Early infrastructure</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_vps\">VPS</h3>\n<div class=\"paragraph\">\n<p>Betabrand’s infrastructure has changed many times over the course of the 7 years I’ve worked here.</p>\n</div>\n<div class=\"paragraph\">\n<p>In 2011, the year our CTO hired me, the website was hosted on a shared server with a Plesk interface and no root access (of course). Every newsletter send—​to at most a few hundred people—​would bring the website to its knees and make it crawl, even completely unresponsive at times.</p>\n</div>\n<div class=\"paragraph\">\n<p>My first order of business became finding a replacement and move the website to its own dedicated server.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_rackspace\">Rackspace</h3>\n<div class=\"paragraph\">\n<p>After a few days of online research, we settled on a VPS—​8GB RAM, 320GO Disk, 4 Virtual CPU, 150Mbps of bandwidth—​at Rackspace . A few more days and we were live on our new infrastructure composed of… 1 server; running your typical Linux, Apache, PHP, MySQL stack, with a hint of Memcached.</p>\n</div>\n<div class=\"paragraph\">\n<p>Unsurprisingly, this infrastructure quickly became obsolete.</p>\n</div>\n<div class=\"paragraph\">\n<p>Not only didn’t it scale at all but, more importantly, every part of it was a Single Point Of Failure. Apache down? Website down. Rackspace instance down? Website down. MySQL down… you get the idea.</p>\n</div>\n<div class=\"paragraph\">\n<p>Another aspect of it was its cost.</p>\n</div>\n<div class=\"paragraph\">\n<p>Our average monthly bill quickly climbed over $1,000. Which was quite a price tag for a single machine and the—​low—​amount of traffic we generated at the time.</p>\n</div>\n<div class=\"paragraph\">\n<p>After a couple years running this stack, mid-2013, I decided it was time to make our website more scalable, redundant, but also more cost effective.</p>\n</div>\n<div class=\"paragraph\">\n<p>I estimated, we needed a minimum of 3 servers to make our website somewhat redundant which would amount to a whopping $14400/year at Rackspace. Being a really small startup, we couldn’t justify that &#8220;high&#8221; of an infrastructure bill; I kept looking.</p>\n</div>\n<div class=\"paragraph\">\n<p>The cheapest option ended up to be running our stack on bare-metal servers.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_ovh\">OVH</h3>\n<div class=\"paragraph\">\n<p>I had worked in the past with OVH and had always been fairly satisfied (despite mixed reviews online). I estimated that running 3 servers at OVH would amount to $3240/year, almost 5 times less expensive than Rackspace.</p>\n</div>\n<div class=\"paragraph\">\n<p>Not only was OVH cheaper, but their servers were also 4 times more powerful than Rackspace’s: 32GB RAM, 8 CPUs, SSDs and unlimited bandwidth.</p>\n</div>\n<div class=\"paragraph\">\n<p>To top it off they had just opened a new datacenter in North America.</p>\n</div>\n<div class=\"paragraph\">\n<p>A few weeks later Betabrand.com was hosted at OVH in Beauharnois, Canada.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_hardware_infrastructure\">Hardware infrastructure</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Between 2013 and 2017, our hardware infrastructure went through a few architectural changes.</p>\n</div>\n<div class=\"paragraph\">\n<p>Towards the end of 2017, our stack was significantly larger than it used to be, both in terms of software and hardware.</p>\n</div>\n<div class=\"paragraph\">\n<p>Betabrand.com ran on 17 bare-metal servers:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>2 HAProxy machines in charge of SSL Offloading configured as hot-standby</li>\n<li>2 varnish-cache machines configured in a hot-standby load-balancing to our webservers</li>\n<li>5 machines running Apache and PHP-FPM</li>\n<li>2 redis servers, each running 2 separate instances of redis. 1 instance for some application caching, 1 instance for our PHP sessions</li>\n<li>3 MariaDB servers configured as master-master, though used in a master-slave manner</li>\n<li>3 Glusterd servers serving all our static assets</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Each machine would otherwise run one or multiple processes like keepalived, Ganglia, Munin, logstash, exim, backup-manager, supervisord, sshd, fail2ban, prerender, rabbitmq and… docker.</p>\n</div>\n<div class=\"paragraph\">\n<p>However, while this infrastructure was very cheap, redundant and had no single point of failure, it still wasn’t scalable and was also much harder to maintain.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_the_scalability_and_maintainability_issue\">The scalability and maintainability issue</h3>\n<div class=\"paragraph\">\n<p>Administering our server &#8220;fleet&#8221; now involved writing a set of Ansible scripts and maintaining them, which, despite Ansible being an amazing software, was no easy feat.</p>\n</div>\n<div class=\"paragraph\">\n<p>Even though it will make its best effort to get you there, Ansible doesn’t guarantee the state of your system.</p>\n</div>\n<div class=\"paragraph\">\n<p>For example, running your Ansible scripts on a server fleet made of heterogeneous OSes (say debian 8 and debian 9) will bring all your machines to a state close to what you defined, but you will most likely end up with discrepancies; the first one being that you’re running on Debian 8 and Debian 9, but also software versions and configurations being different on some servers and others.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tbody>\n<tr>\n<td class=\"icon\">\n<div class=\"title\"></div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>I searched quite often for an Ansible replacement, but never found better.</p>\n</div>\n<div class=\"paragraph\">\n<p>I looked into Puppet but found its learning curve too steep, and, from reading other people’s recipes, was taken aback by what <em>seemed</em> to be too many different ways of doing the same thing. Some people might think of this as flexibility, I see it as complexity.</p>\n</div>\n<div class=\"paragraph\">\n<p>SaltStack caught my eyes but also found it very hard to learn; despite their extensive, in depth documentation, their nomenclature choices (mine, pillar, salt, etc) never stuck with me; and it seemed to suffer the same issue as Puppet regarding complexity.</p>\n</div>\n<div class=\"paragraph\">\n<p>Nix package manager and NixOS sounded amazing, to the exception that I didn’t feel comfortable learning a whole new OS (I’ve been using Debian for years) and was worried that despite their huge package selection, I would eventually need packages not already available, which would then become something new to maintain.</p>\n</div>\n<div class=\"paragraph\">\n<p>Those are the only 3 I looked at but I’m sure there’s many other tools out there I’ve probably never heard of.</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Writing Ansible scripts and maintaining them, however, wasn’t our only issue; adding capacity was another one.</p>\n</div>\n<div class=\"paragraph\">\n<p>With bare-metal, it is impossible to add and remove capacity on the fly. You need to plan your needs well in advance: buy a machine—​usually leased for a minimum of 1 month—​wait for it to be ready—​which can take from 2 minutes to 3 days&#8211;, install its base os, install Ansible’s dependencies (mainly python and a few other packages) then, finally, run your Ansible scripts against it.</p>\n</div>\n<div class=\"paragraph\">\n<p>For us this entire process was wholly unpractical and what usually happened is that we’d add capacity for an anticipated peak load, but never would remove it afterwards which in turn added to our costs.</p>\n</div>\n<div class=\"paragraph\">\n<p>It is worth noting, however, that even though having unused capacity in your infrastructure is akin to setting cash on fire, it is still a magnitude less expensive on bare-metal than in the cloud. On the other hand, the engineering headaches that come with using bare-metal servers simply shift the cost from purely material to administrative ones.</p>\n</div>\n<div class=\"paragraph\">\n<p>In our bare-metal setup capacity planning, server administration and Ansible scripting were just the tip of the iceberb.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_scaling_development_processes\">Scaling development processes</h3>\n<div class=\"paragraph\">\n<p>In early 2017, while our infrastructure had grown, so had our team.</p>\n</div>\n<div class=\"paragraph\">\n<p>We hired 7 more engineers making us a small 9 people team, with skillsets distributed all over the spectrum from backend to frontend with varying levels of seniority.</p>\n</div>\n<div class=\"paragraph\">\n<p>Even in a small 9 people team, being productive and limiting the amount of bugs deployed to production warrants a simple, easy to setup and easy to use development-staging-production trifecta.</p>\n</div>\n<div class=\"paragraph\">\n<p>Setting up your development environment as a new hire shouldn’t take hours, neither should upgrading or re-creating it.</p>\n</div>\n<div class=\"paragraph\">\n<p>Moreover, a company-wide accessible staging environment should exist and match 99% of your production, if not 100%.</p>\n</div>\n<div class=\"paragraph\">\n<p>Unfortunately, in our hardware infrastructure reaching this harmonious trifecta was impossible.</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_the_development_environment\">The development environment</h4>\n<div class=\"paragraph\">\n<p>First of all, everybody in our engineering team uses MacBook Pros, which is an issue since our stack is linux based.</p>\n</div>\n<div class=\"paragraph\">\n<p>However, asking everybody to switch to linux and potentially change their precious workflow wasn’t really ideal. This meant that the best solution was to provide a development environment agnostic of developers&#8217; personal preferences in machines.</p>\n</div>\n<div class=\"paragraph\">\n<p>I could only see two obvious options:</p>\n</div>\n<div class=\"paragraph\">\n<p>Either provide a Vagrant stack that would run multiple virtual machines (17 potentially, though, more realistically, 1 machine running our entire stack), or, re-use the already written ansible scripts and run them against our local macbooks.</p>\n</div>\n<div class=\"paragraph\">\n<p>After investigating Vagrant, I felt that using virtual machines would hinder performances too much and wasn’t worth it. I decided, for better or worse, to go the Ansible route (in hindsight, this probably wasn’t the best decision).</p>\n</div>\n<div class=\"paragraph\">\n<p>We would use the same set of Ansible scripts on production, staging and dev. The caveat being of course that our development stack, although close to production, was not a 100% match.</p>\n</div>\n<div class=\"paragraph\">\n<p>This worked well enough for a while; However, the mismatch caused issues later when, for example, our development and production MySQL versions weren’t aligned. Some queries that ran on dev, wouldn’t on production.</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_the_staging_environment\">The staging environment</h4>\n<div class=\"paragraph\">\n<p>Secondly, having a development and production environments running on widely different softwares (mac os versus debian) meant that we absolutely needed a staging environment.</p>\n</div>\n<div class=\"paragraph\">\n<p>Not only because of potential bugs caused by version mismatches, but also because we needed a way to share new features to external members before launch.</p>\n</div>\n<div class=\"paragraph\">\n<p>Once again I had multiple choices:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>buy 17 servers and run ansible against them. This would double our costs though and we were trying to save money.</li>\n<li>setup our entire stack on a unique linux server, accessible from the outside. Cheaper solution, but once again not providing an exact replica of our production system.</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>I decided to implement the cost-saving solution.</p>\n</div>\n<div class=\"paragraph\">\n<p>An early version of the staging environment involved 3 independant linux servers, each running the entire stack. Developers would then yell across the room (or hipchat) &#8220;taking over dev1&#8221;, &#8220;is anybody using dev3?&#8221;, &#8220;dev2 is down :/&#8221;.</p>\n</div>\n<div class=\"paragraph\">\n<p>Overall, our development-staging-production setup was far from optimal: it did the job; but definitely needed improvements.</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_the_advent_ofdocker\">The advent of Docker</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>In 2013 Dotcloud released Docker.</p>\n</div>\n<div class=\"paragraph\">\n<p>The Betabrand use case for Docker was immediately obvious. I saw it as the solution to simplify our development and staging environments; by getting rid of the ansible scripts (well, almost; more on that later).</p>\n</div>\n<div class=\"paragraph\">\n<p>Those scripts would now only be used for production.</p>\n</div>\n<div class=\"paragraph\">\n<p>At the time, one main pain point for the team was competing for our three physical staging servers: dev1, dev2 and dev3; and for me maintaining those 3 servers was a major annoyance.</p>\n</div>\n<div class=\"paragraph\">\n<p>After observing docker for a few months, I decided to give it a go in April 2014.</p>\n</div>\n<div class=\"paragraph\">\n<p>After installing docker on one of the staging servers, I created a single docker image containing our entire stack (haproxy, varnish, redis, apache, etc.) then over the next few months wrote a tool (<code>sailor</code>) allowing us to create, destroy and manage an infinite number of staging environment accessible via individual unique URLs.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tbody>\n<tr>\n<td class=\"icon\">\n<div class=\"title\"></div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>Worth noting that docker-compose didn’t exist at that time; and that putting your entire stack inside one docker image is of course a big no-no but that’s an unimportant detail here.</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>From this point on, the team wasn’t competing anymore for access to the staging servers. Anybody could create a new, fully configured, staging container from the docker image using sailor. I didn’t need to maintain the servers anymore either; better yet, I shut down and cancelled 2 of them.</p>\n</div>\n<div class=\"paragraph\">\n<p>Our development environment, however, still was running on macos (well, &#8220;Mac OS X&#8221; at the time) and using the Ansible scripts.</p>\n</div>\n<div class=\"paragraph\">\n<p>Then, sometime around 2016 docker-machine was released.</p>\n</div>\n<div class=\"paragraph\">\n<p>Docker machine is a tool taking care of deploying a docker daemon on any stack of your choice: virtualbox, aws, gce, bare-metal, azure, you name it, docker-machine does it; in one command line.</p>\n</div>\n<div class=\"paragraph\">\n<p>I saw it as the opportunity to easily and quickly migrate our ansible-based development environment to a docker based one. I modified <code>sailor</code> to use docker-machine as its backend.</p>\n</div>\n<div class=\"paragraph\">\n<p>Setting up a development environment was now a matter of creating a new docker-machine then passing a flag for sailor to use it.</p>\n</div>\n<div class=\"paragraph\">\n<p>At this point, our development-staging process had been simplified tremendously; at least from a dev-ops perspective: anytime I needed to upgrade any software of our stack to a newer version or change the configuration, instead of modifying my ansible scripts, asking all the team to run them, then running them myself on all 3 staging servers; I could now simply push a new docker image.</p>\n</div>\n<div class=\"paragraph\">\n<p>Ironically enough, I ended up needing virtual machines (which I had deliberately avoided) to run docker on our macbooks. Using vagrant instead of Ansible would have been a better choice from the get go. Hindsight is always 20/20.</p>\n</div>\n<div class=\"paragraph\">\n<p>Using docker for our development and staging systems paved the way to the better solution that Betabrand.com now runs on.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_kubernetes\">Kubernetes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Because Betabrand is primarily an e-commerce platform, Black Friday loomed over our website more and more each year.</p>\n</div>\n<div class=\"paragraph\">\n<p>To our surprise, the website had handled increasingly higher loads since 2013 without failing in any major catastrophe, but, it did require a month long preparation beforehand: adding capacity, load testing and optimizing our checkout code paths as much as we possibly could.</p>\n</div>\n<div class=\"paragraph\">\n<p>After preparing for Black Friday 2016, however, it became evident the infrastructure wouldn’t scale for Black Friday 2017; I worried the website would become inacessible under the load.</p>\n</div>\n<div class=\"paragraph\">\n<p>Luckily, sometime in 2015, the release of Kubernetes 1.0 caught my attention.</p>\n</div>\n<div class=\"paragraph\">\n<p>Just like I saw in docker an obvious use-case, I knew k8s was what we needed to solve many of our issues. First of all, it would finally allow us to run an <em>almost</em> identical dev-staging-production environment. But also, would solve our scalability issues.</p>\n</div>\n<div class=\"paragraph\">\n<p>I also evaluated 2 other solutions, Nomad and Docker Swarm, but Kubernetes seemed to be the most promising.</p>\n</div>\n<div class=\"paragraph\">\n<p>For Black Friday 2017, I set out to migrate our entire infra to k8s.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tbody>\n<tr>\n<td class=\"icon\">\n<div class=\"title\"></div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>Although I considered it, I quickly ruled out using our current OVH bare-metal servers for our k8s nodes since it would play against my goal of getting rid of Ansible and not dealing with all the issue that comes with hardware servers. Moreover, soon after I started investigating Kubernetes, Google released their managed Kubernetes (GKE) offer, which I rapidly came to choose.</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_learning_kubernetes\">Learning Kubernetes</h3>\n<div class=\"paragraph\">\n<p>Migrating to k8s first involved gaining a strong understanding its architecture and its concepts, by reading the online documentation.</p>\n</div>\n<div class=\"paragraph\">\n<p>Most importantly understanding containers, Pods, Deployments and Services and how they all fit together. Then in order, ConfigMaps, Secrets, Daemonsets, StatefulSets, Volumes, PersistentVolumes and PersistentVolumeClaims.</p>\n</div>\n<div class=\"paragraph\">\n<p>Other concepts are important, though less necessary to get a cluster going.</p>\n</div>\n<div class=\"paragraph\">\n<p>Once I assimilated those concepts, the second, and hardest, step involved translating our bare-metal architecture into a set of YAML manifests.</p>\n</div>\n<div class=\"paragraph\">\n<p>From the beginning I set out to have one, and only one, set of manifests to be used for the creation of all three development, staging and production environment. I quickly ran into needing to parameterized my YAML manifests, which isn’t out-of-the-box supported by Kubernetes. This is where Helm <sup class=\"footnote\">[<a id=\"_footnoteref_1\" class=\"footnote\" title=\"View footnote.\" href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnotedef_1\">1</a>]</sup> comes in handy.</p>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tbody>\n<tr>\n<td class=\"icon\">\n<div class=\"title\"></div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p><em>from the Helm website</em>: Helm helps you manage Kubernetes applications—​Helm Charts helps you define, install, and upgrade even the most complex Kubernetes application.</p>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>Helm markets itself as a package manager for Kubernetes, I originally used it solely for its templating feature though. I have, now, also come to appreciate its package manager aspect and used it to install Grafana <sup class=\"footnote\">[<a id=\"_footnoteref_2\" class=\"footnote\" title=\"View footnote.\" href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnotedef_2\">2</a>]</sup> and Prometheus <sup class=\"footnote\">[<a id=\"_footnoteref_3\" class=\"footnote\" title=\"View footnote.\" href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnotedef_3\">3</a>]</sup>.</p>\n</div>\n<div class=\"paragraph\">\n<p>After a bit of sweat and a few tears, our infrastructure was now neatly organized into 1 Helm package, 17 Deployments, 9 ConfigMaps, 5 PersistentVolumeClaims, 5 Secrets, 18 Services, 1 StatefulSet, 2 StorageClasses, 22 container images.</p>\n</div>\n<div class=\"paragraph\">\n<p>All that was left was to migrate to this new infrastructure and shutdown all our hardware servers.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_officially_migrating\">Officially migrating</h3>\n<div class=\"paragraph\">\n<p>October 5th 2017 was the night.</p>\n</div>\n<div class=\"paragraph\">\n<p>Pulling the trigger was extremely easy and went without a hitch.</p>\n</div>\n<div class=\"paragraph\">\n<p>I created a new GKE cluster, ran <code>helm install betabrand --name production</code>, imported our MySQL database to Google Cloud SQL, then, after what actually took about 2 hours, we were live in the Clouds.</p>\n</div>\n<div class=\"paragraph\">\n<p>The migration was <em>that</em> simple.</p>\n</div>\n<div class=\"paragraph\">\n<p>What helped a lot of course, was the ability to create multiple clusters in Google GKE: before migrating our production, I was able to rehearse through many test migration, jotting down every steps needed for a successful launch.</p>\n</div>\n<div class=\"paragraph\">\n<p>Black Friday 2017 was very successful for Betabrand and the few technical issues we ran into weren’t associated to the migration.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_the_developmentstaging_environments\">The development/staging environments</h3>\n<div class=\"paragraph\">\n<p>Our development machines run a Kubernetes cluster via Minikube <sup class=\"footnote\">[<a id=\"_footnoteref_4\" class=\"footnote\" title=\"View footnote.\" href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnotedef_4\">4</a>]</sup>.</p>\n</div>\n<div class=\"paragraph\">\n<p>The same YAML manifests are being used to create a local development environment or a &#8220;production-like&#8221; environment.</p>\n</div>\n<div class=\"paragraph\">\n<p>Everything that runs on Production, also runs in Development. The only difference between the two environments is that our development environment talks to a local MySQL database, whereas production talks to Google Cloud SQL.</p>\n</div>\n<div class=\"paragraph\">\n<p>Creating a staging environment is exactly the same as creating a new production cluster: all that is needed is to clone the production database instance (which is only a few clicks or one command line) then point the staging cluster to this database via a <code>--set database</code>parameter in <code>helm</code>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_a_year_after\">A year after</h3>\n<div class=\"paragraph\">\n<p>It’s now been a year and 2 months since we moved our infrastructure to Kubernetes and I couldn’t be happier.</p>\n</div>\n<div class=\"paragraph\">\n<p>Kubernetes has been rock solid in production and we have yet to experience an outage.</p>\n</div>\n<div class=\"paragraph\">\n<p>In anticipation of a lot of traffic for Black Friday 2018, we were able to create an exact replica of our production services in a few minutes and do a lot of load testing. Those load tests revealed specific code paths performing extremely poorly that only a lot of traffic could reveal and allowed us to fix them before Black Friday.</p>\n</div>\n<div class=\"paragraph\">\n<p>As expected, Black Friday 2018 brought more traffic than ever to Betabrand.com, but k8s met its promises, and, features like the HorizontalPodAutoscaler coupled to GKE’s node autoscaling allowed our website to absorb peak loads without any issues.</p>\n</div>\n<div class=\"paragraph\">\n<p>K8s, combined with GKE, gave us the tools we needed to make our infrastructure reliable, available, scalable and maintainable.</p>\n</div>\n</div>\n</div>\n</div>\n<div id=\"footnotes\">\n<hr />\n<div id=\"_footnotedef_1\" class=\"footnote\"><a href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnoteref_1\">1</a>. <a class=\"bare\" href=\"https://helm.sh/\">https://helm.sh/</a></div>\n<div id=\"_footnotedef_2\" class=\"footnote\"><a href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnoteref_2\">2</a>. <a class=\"bare\" href=\"https://grafana.com/\">https://grafana.com/</a></div>\n<div id=\"_footnotedef_3\" class=\"footnote\"><a href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnoteref_3\">3</a>. <a class=\"bare\" href=\"https://prometheus.io/\">https://prometheus.io/</a></div>\n<div id=\"_footnotedef_4\" class=\"footnote\"><a href=\"https://boxunix.com/post/bare_metal_to_kube/#_footnoteref_4\">4</a>. <a class=\"bare\" href=\"https://github.com/kubernetes/minikube\">https://github.com/kubernetes/minikube</a></div>\n</div>\n",
          "slug": "from-bare-metal-to-kubernetes",
          "featuredImage": null,
          "link": "https://emolike.net/2019/06/04/from-bare-metal-to-kubernetes/",
          "date": "2019-06-04T23:47:14",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0Njk=",
        "node": {
          "id": "cG9zdDoxNDY5",
          "title": "Algorithm Visualizer",
          "content": "<p>Algorithm Visualizer is an interactive online platform that visualizes algorithms from code.</p>\n<p>Learning algorithms from text and static images is quite boring. There have been many great websites that view animations of various algorithms though, for us being coders, nothing can be more comprehensible than visualizing the actual working code.</p>\n<p><a href=\"https://algorithm-visualizer.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://algorithm-visualizer.org/</a></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n",
          "slug": "algorithm-visualizer",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/06/screenshot.png"
          },
          "link": "https://emolike.net/2019/06/04/algorithm-visualizer/",
          "date": "2019-06-04T18:23:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Algorithms"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0NjQ=",
        "node": {
          "id": "cG9zdDoxNDY0",
          "title": "TinyPICO",
          "content": "<h3 class=\"project-teaser\">A tiny, mighty ESP32 development board</h3>\n<p>Source : <a href=\"https://www.crowdsupply.com/unexpected-maker/tinypico\">https://www.crowdsupply.com/unexpected-maker/tinypico</a></p>\n<p>TinyPICO is the world’s smallest, fully-featured ESP32 development board, designed to give you access to the power of the ESP32’s dual core 240 MHz processor and internet connectivity, all in a package smaller than your thumb!</p>\n<p><iframe title=\"vimeo-player\" src=\"https://player.vimeo.com/video/333392757\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<h2 id=\"why-we-made-tinypico\">Why We Made TinyPICO</h2>\n<p>There are quite a few ESP32 boards on the market, but they all require you to compromise on one or more features. Some don’t have on-board battery management, while some do but they don’t have low deep sleep current. Others have great low-power modes, but are large and not breadboard-friendly, and none of them have extra RAM unless you go for a more expensive and larger WROVER-powered board.</p>\n<p>We just weren’t happy with the status quo &#8211; we wanted to have our cake and eat it too!</p>\n<p>So we designed the smallest un-compromising ESP32 development board in the world, and then went a step further and gave it 4 MB of extra RAM, an on-board RGB LED, and more juice with a 700 mA 3.3 V regulator. Then we made some <a href=\"https://www.crowdsupply.com/unexpected-maker/tinypico#tinypico-shields\">shields</a> for it.</p>\n<div class=\"imageset-single\"><img class=\"alignnone size-full wp-image-1465\" src=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-size-battery-no-text_jpg_project-body.jpg\" width=\"749\" height=\"420\" alt=\"\" title=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-size-battery-no-text_jpg_project-body.jpg 749w, https://emolike.net/wp-content/uploads/2019/06/tinypico-size-battery-no-text_jpg_project-body-300x168.jpg 300w\" sizes=\"(max-width: 749px) 100vw, 749px\" /></div>\n<p>Until you hold it in your hand, you really can’t appreciate just how small the TinyPICO is.</p>\n<h2 id=\"features-specifications\">Features &amp; Specifications</h2>\n<ul>\n<li><strong>Processing:</strong>\n<ul>\n<li>32-bit dual-core processor operating at 240 MHz</li>\n<li>4 MB SPI flash</li>\n<li>4 MB extra PSRAM</li>\n</ul>\n</li>\n<li><strong>Wireless:</strong>\n<ul>\n<li>2.4 GHz Wi-Fi &#8211; 802.11b/g/n</li>\n<li>Bluetooth BLE 4.2</li>\n<li>3D antenna</li>\n</ul>\n</li>\n<li><strong>Power:</strong>\n<ul>\n<li>700 mA 3.3 V LDO regulator</li>\n<li>Optimised power path for low-power battery usage</li>\n<li>LiPo battery management</li>\n<li>Battery pads on the bottom support both JST PH &amp; MicroBlade connectors (included unassembled with every TinyPICO)</li>\n<li>Power (red) &amp; charge (orange) LEDs</li>\n</ul>\n</li>\n<li><strong>Form-factor:</strong>\n<ul>\n<li>Breadboard-friendly</li>\n<li>Oh, it’s tiny! Just 18 mm x 32 mm</li>\n</ul>\n</li>\n<li><strong>Connectivity:</strong>\n<ul>\n<li>14x GPIO broken out to standard pitch headers</li>\n<li>USB + serial/UART for programming</li>\n<li>APA102 RGB LED</li>\n</ul>\n</li>\n<li><strong>Control:</strong>\n<ul>\n<li>MicroPython pre-installed</li>\n<li>Supports Arduino IDE</li>\n<li>Supports Espressif IDF</li>\n<li>Lots of example code and libraries</li>\n</ul>\n</li>\n</ul>\n<div class=\"imageset-single\"><img class=\"alignnone size-full wp-image-1466\" src=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-breadboard-2_jpg_project-body.jpg\" width=\"749\" height=\"333\" alt=\"\" title=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-breadboard-2_jpg_project-body.jpg 749w, https://emolike.net/wp-content/uploads/2019/06/tinypico-breadboard-2_jpg_project-body-300x133.jpg 300w\" sizes=\"(max-width: 749px) 100vw, 749px\" /></div>\n<h2 id=\"pinout-diagram\">Pinout Diagram</h2>\n<div class=\"imageset-single\"><img class=\"alignnone size-full wp-image-1467\" src=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-pinout-black_jpg_project-body.jpg\" width=\"749\" height=\"468\" alt=\"\" title=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-pinout-black_jpg_project-body.jpg 749w, https://emolike.net/wp-content/uploads/2019/06/tinypico-pinout-black_jpg_project-body-300x187.jpg 300w\" sizes=\"(max-width: 749px) 100vw, 749px\" /></div>\n<h2 id=\"development-platforms-software-documentation\">Development Platforms &amp; Software Documentation</h2>\n<p>TinyPICO ships with mainline MicroPython pre-installed and supports Arduino IDE and Espressif IDF, so you have the flexibility to code the way you want.</p>\n<p>We have been working hard behind the scenes on MicroPython and Arduino C++ helper libraries for TinyPICO as well as collecting and even writing MicroPython libraries for all the hardware we use on our shields.</p>\n<p>We have basic coding examples on our <a href=\"https://www.tinypico.com/code-examples\">TinyPICO website</a> and all of our libraries are being added to the <a href=\"https://github.com/TinyPICO\">TinyPICO GitHub repository</a>.</p>\n<h2 id=\"optimised-power-paths-deep-sleep-current\">Optimised Power Paths &amp; Deep Sleep Current</h2>\n<p>TinyPICO has been designed with two isolated power paths: a 5 V path and a 3.3 V path. Any components that are not needed for operation via battery or via the 3.3 V power pin are isolated within the 5 V power path, and are totally shut down when no USB cable is plugged in.</p>\n<p>In-fact, even the power &amp; charge LEDs are shutdown when no 5 V power source is present.</p>\n<p>Deep sleep has been optimised for all development platforms, and though we have seen it go as low as 10 uA, our official current rating in deep sleep is 18 uA.</p>\n<p><strong>Note:</strong> TinyPICO includes an on-board APA102 RGB LED that has a quiescent current of 1 mA.</p>\n<p>Thankfully we have a solution for deep sleep. GPIO13 controls the power to the APA102 using a PNP transistor via a high-side switch, so taking GPIO13 high shuts down power to the APA102. It’s essential to do this before going into deep sleep to ensure the lowest current draw possible.</p>\n<p>In MicroPython, it’s also required to shutdown GPIO2 and GPIO12 (DATA and CLK for the APA102) as MicroPython uses IDLE HIGH as the default clock state, so you can get current leakage via the CLK or DATA, even with no power to the APA102 directly. We have created some helper functions for you in our TinyPICO MicroPython helper library to make this easy.</p>\n<h2 id=\"open-source\">Open Source</h2>\n<p>We love open source hardware! Seon started his electronics journey digging through schematics and board layout files from the likes of Adafruit, Sparkfun, and many others, and it’s only fitting that we now gave back to the community by making TinyPICO fully open source.</p>\n<p>All hardware is released under the <a href=\"https://ohwr.org/cernohl\">CERN open hardware license</a>, so please make yourself familiar with it before you decide to fork or use the files.</p>\n<p>All software is released under the <a href=\"https://en.wikipedia.org/wiki/MIT_License\">MIT open software license</a>, so again, please make yourself familiar with it before you decide to fork or use the files.</p>\n<p>All of the design files for the TinyPICO and all of the shields shown here are available from the <a href=\"https://github.com/TinyPICO\">TinyPICO GitHub repository</a></p>\n<div class=\"row\">\n<div class=\"col-lg-12\">\n<h3 class=\"project-teaser\"></h3>\n</div>\n</div>\n",
          "slug": "tinypico",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/06/tinypico-size-battery-no-text_jpg_project-body.jpg"
          },
          "link": "https://emolike.net/2019/06/02/tinypico/",
          "date": "2019-06-02T21:10:19",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "IOT"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0NDQ=",
        "node": {
          "id": "cG9zdDoxNDQ0",
          "title": "How to configure remote access and connect to a remote MS SQL Server instance",
          "content": "<h2>Configuring remote access on a SQL Server instance</h2>\n<p>To enable remote connection on SQL Server right – click on the server and select the Properties option. In the Server Properties dialog under the Connections tab check the <b>Allow remote connections to this server</b> option:</p>\n<p><img class=\"size-full wp-image-1445 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/AllowRemoteConnection_s.png\" alt=\"Server Properties dialog - Connections tab - checking the Allow remote connections to this server option\" width=\"450\" height=\"403\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/AllowRemoteConnection_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/AllowRemoteConnection_s-300x269.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></p>\n<p>Go to Start-&gt;Programs-&gt;Microsoft SQL Server 2005/2008/2012 -&gt;Configuration Tools and select the SQL Server Configuration Manager:</p>\n<p><img class=\"size-full wp-image-1448 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/SQLServerConfigManager_s.png\" alt=\"Illustration of selecting the SQL Server Configuration Manager\" width=\"450\" height=\"144\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/SQLServerConfigManager_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/SQLServerConfigManager_s-300x96.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></p>\n<p>Under the SQL Server Network Configuration select Protocols for &lt;your server name&gt;:</p>\n<p><img class=\"size-full wp-image-1449 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/Protocols.png\" alt=\"Selecting Protocols for &lt;your server name&gt; under the SQL Server Network Configuration\" width=\"455\" height=\"142\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/Protocols.png 455w, https://emolike.net/wp-content/uploads/2019/06/Protocols-300x94.png 300w\" sizes=\"(max-width: 455px) 100vw, 455px\" /></p>\n<p>Make sure that TCP/IP protocol is enabled and right click on TCP/IP and select the Properties option. In the TCP/IP Properties dialog select the IP Addresses tab and scroll down to IPAII. If the TCP Dynamic Ports dialog box contains 0, which indicates that the Database Engine is listening on dynamic ports, delete the 0 and set the TCP Dynamic Ports to blank and TCP Port to 1433. Port 1433 is the default instance that SQL Server uses:</p>\n<p><img class=\"size-full wp-image-1450 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/PortsDialog_s.png\" alt=\"Configuring the IPAII properties via TCP/IP Properties dialog\" width=\"311\" height=\"350\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/PortsDialog_s.png 311w, https://emolike.net/wp-content/uploads/2019/06/PortsDialog_s-267x300.png 267w\" sizes=\"(max-width: 311px) 100vw, 311px\" /></p>\n<p>When you click the OK button you will be prompted with a message to restart the service:</p>\n<p><img class=\"size-full wp-image-1451 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/Warning.png\" alt=\"Warning message to restart the service\" width=\"495\" height=\"171\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/Warning.png 495w, https://emolike.net/wp-content/uploads/2019/06/Warning-300x104.png 300w\" sizes=\"(max-width: 495px) 100vw, 495px\" /></p>\n<p>In the left pane of SQL Server Configuration Manager click SQL Server Services, right-click SQL Server&lt;instance_name&gt;, and click Restart:</p>\n<p><img class=\"size-full wp-image-1452 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/Restart_s.png\" alt=\"Right-clicking SQL Server (instance name), and clicking Restart\" width=\"450\" height=\"144\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/Restart_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/Restart_s-300x96.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></p>\n<table>\n<tbody>\n<tr>\n<td>\n<table>\n<tbody>\n<tr>\n<td rowspan=\"2\" valign=\"top\" width=\"55\">\n<div class=\" separator\"><img class=\"alignnone size-full wp-image-1453\" src=\"https://emolike.net/wp-content/uploads/2019/06/image002.jpg\" alt=\"Quick tip icon\" width=\"42\" height=\"42\" /></div>\n</td>\n</tr>\n</tbody>\n</table>\n</td>\n<td><b>Quick tip:</b></p>\n<p>If you’re using firewall you need to add an exception for the 1433 port to allow TCP/IP traffic on Port 1433</td>\n</tr>\n</tbody>\n</table>\n<h2>Configure a Windows Firewall for Database Engine Access</h2>\n<p>To add a firewall exception for the 1433 port go to Programs -&gt; Administrative Tools select the <b>Windows Firewall with Advanced Security </b>option and follow the steps:</p>\n<p><img class=\"size-full wp-image-1454 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/WindowsFirewall_s.png\" alt=\"Selecting the Windows Firewall with Advanced Security option\" width=\"311\" height=\"291\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/WindowsFirewall_s.png 311w, https://emolike.net/wp-content/uploads/2019/06/WindowsFirewall_s-300x281.png 300w\" sizes=\"(max-width: 311px) 100vw, 311px\" /></p>\n<ol>\n<li>In the Windows Firewall with Advanced Security dialog click on the Inbound Rules option and select the New Rule command:<img class=\"size-full wp-image-1455 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/WindowsFirewallNewRule_s.png\" alt=\"Selecting the New Rule command\" width=\"600\" height=\"446\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/WindowsFirewallNewRule_s.png 600w, https://emolike.net/wp-content/uploads/2019/06/WindowsFirewallNewRule_s-300x223.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></li>\n<li>In the New Inbound Rule wizard select the Port option and click Next:<img class=\"size-full wp-image-1456 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/RuleType_s.png\" alt=\"Selecting the Port option in the New Inbound Rule wizard\" width=\"450\" height=\"361\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/RuleType_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/RuleType_s-300x241.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></li>\n<li>In the Protocols and Ports window specify the protocols and ports to which a rule applies. Select the TCP option, in the Specific local ports text box enter the 1433 port, and click Next:<img class=\"size-full wp-image-1457 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/ProtocolsAndPorts_s.png\" alt=\"Configuring protocols and ports in the New Inbound rule wizard\" width=\"450\" height=\"362\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/ProtocolsAndPorts_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/ProtocolsAndPorts_s-300x241.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></li>\n<li>In the Action window select the Allow the connection to specify the action to be taken when a connection matches the conditions specified in the rule:<img class=\"size-full wp-image-1458 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/AllowTheConnection_s.png\" alt=\"Selecting the Allow the connection in the Action window\" width=\"450\" height=\"363\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/AllowTheConnection_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/AllowTheConnection_s-300x242.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></li>\n<li>Specify the profiles for which the rule applies in the Profile window, and click Next:<img class=\"size-full wp-image-1459 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/Domain_s.png\" alt=\"New Inbound Rule wizard - Profile dialog\" width=\"450\" height=\"363\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/Domain_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/Domain_s-300x242.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></li>\n<li>In the last window specify the name of the created rule and click the Finish button:<img class=\"size-full wp-image-1460 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/RuleName_s.png\" alt=\"Specifying the name of the created rule\" width=\"450\" height=\"363\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/RuleName_s.png 450w, https://emolike.net/wp-content/uploads/2019/06/RuleName_s-300x242.png 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></li>\n</ol>\n<p>You can now see the created rule in the list of inbound rules:</p>\n<p><img class=\"size-full wp-image-1461 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2019/06/InboundRulesList_s.png\" alt=\"Viewing the created rule in the list of inbound rules\" width=\"600\" height=\"473\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/InboundRulesList_s.png 600w, https://emolike.net/wp-content/uploads/2019/06/InboundRulesList_s-300x237.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></p>\n<p>Source</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"uRAidotMJB\"><p><a href=\"https://knowledgebase.apexsql.com/configure-remote-access-connect-remote-sql-server-instance-apexsql-tools/\">How to configure remote access and connect to a remote SQL Server instance with ApexSQL tools</a></p></blockquote>\n<p><iframe title=\"&#8220;How to configure remote access and connect to a remote SQL Server instance with ApexSQL tools&#8221; &#8212; Knowledgebase\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://knowledgebase.apexsql.com/configure-remote-access-connect-remote-sql-server-instance-apexsql-tools/embed/#?secret=uRAidotMJB\" data-secret=\"uRAidotMJB\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>&nbsp;</p>\n",
          "slug": "how-to-configure-remote-access-and-connect-to-a-remote-ms-sql-server-instance",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/06/download.png"
          },
          "link": "https://emolike.net/2019/06/02/how-to-configure-remote-access-and-connect-to-a-remote-ms-sql-server-instance/",
          "date": "2019-06-02T16:45:51",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Database"
              },
              {
                "name": "deployment"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0NDE=",
        "node": {
          "id": "cG9zdDoxNDQx",
          "title": "Freshping Reliable website uptime monitoring",
          "content": "<p class=\"sub-text\">FREE : Monitor 50 URLs • 1-minute interval • 10 Global locations • 5 Public status pages</p>\n<p><img class=\"original-image fadeIn \" title=\"\" src=\"https://website-assets-fw.freshworks.com/attachments/cjtttfdw801xt8yg0juhaktje-freshping-banner.svg\" srcset=\"https://website-assets-fw.freshworks.com/attachments/cjtttfdw801xt8yg0juhaktje-freshping-banner.svg\" alt=\"\" /></p>\n<p><a href=\"https://www.freshworks.com/website-monitoring/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.freshworks.com/website-monitoring/</a></p>\n",
          "slug": "freshping-reliable-website-uptime-monitoring",
          "featuredImage": null,
          "link": "https://emolike.net/2019/06/01/freshping-reliable-website-uptime-monitoring/",
          "date": "2019-06-01T17:59:29",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MzI=",
        "node": {
          "id": "cG9zdDoxNDMy",
          "title": "Deploy dotnet Core MVC on Ubuntu with Supervisor",
          "content": "<h2>Introduction</h2>\n<p>I Just purchased a Linux VPS and started to install dotnet core on it and use it for deploying dotnet core apps</p>\n<h2>Removing Apache</h2>\n<p>Most of Linux vps comes with apache so first step is to remove it.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo service apache2 stop\r\nsudo apt-get purge apache2 \r\nsudo apt-get autoremove\r\n</pre>\n<p>Finally, check if there is any configuration files or manual pages belonging to Apache2, which are still not removed.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">whereis apache2\r\nsudo rm -rf /etc/apache2</pre>\n<h2>Installing Dotnet</h2>\n<p>Head over to <a href=\"http://dot.net/?WT.mc_id=-blog-scottha\">http://dot.net</a> to get .NET Core and follow the instructions. There&#8217;s at least 8 Linuxes supported in 6 flavors so you should have no trouble. I followed the Ubuntu instructions.</p>\n<h2>Make ASP.Net Core MVC Application</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">dotnet new mvc -o mvc1</pre>\n<p>Now we have created our MVC application we need to make some modification on it to work without any issues.</p>\n<h3>Disable HTTPS</h3>\n<p>due to we doesn&#8217;t have https certificate we are going to disable HTTPS and let the server only listen to port 80, we also will not use nginx</p>\n<h4>Update Program.cs</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">using System.Net;\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\n\r\nnamespace mvc1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateWebHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =&gt;\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup&lt;Startup&gt;()\r\n                .ConfigureKestrel((context, options) =&gt;\r\n                {\r\n                    options.Listen(IPAddress.Any, 80, listenOptions =&gt;\r\n                    {\r\n                    });\r\n                });\r\n\r\n\r\n\r\n    }\r\n}\r\n</pre>\n<h4>Update Startup.cs</h4>\n<p>Comment both theses lines  <code>//app.UseHsts(); </code>and  <code>//app.UseHttpsRedirection();</code></p>\n<h4>Remove launchsetting.json</h4>\n<p>we also going to remove file launchsetting.json from Properties directory.</p>\n<h4>Build the Application</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">dotnet build</pre>\n<p>Test the application</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">dotnet run</pre>\n<h2>Publish the Application</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">dotnet publish -c release -r ubuntu.16.04-x64</pre>\n<h2>Supervisor</h2>\n<p><a href=\"http://supervisord.org/index.html\">Supervisor</a> is a client/server system that allows its users to monitor and control a number of processes on UNIX-like operating systems. It is used to control processes related to a project or a customer and is meant to start like any other program at boot time. Supervisor is simple, centralized, efficient, extensible, compatible and <a href=\"http://supervisord.org/introduction.html#features\">proven</a>.</p>\n<p>The components of Supervisor are:</p>\n<ul>\n<li><strong>supervisord</strong>: This is the server piece of supervisor is named supervisord. It is responsible for starting child programs at its own invocation, responding to commands from clients, restarting crashed or exited subprocesseses, logging its subprocess stdout and stderr output, and generating and handling “events” corresponding to points in subprocess lifetimes.</li>\n<li><strong>supervisorctl</strong>: The command-line client piece of the supervisor is named supervisorctl. It provides a shell-like interface to the features provided by supervisord.</li>\n<li><strong>Web Server</strong>: A (sparse) web user interface with functionality comparable to supervisorctl</li>\n<li><strong>XML-RPC Interface</strong>: The same HTTP server which serves the web UI serves up an XML-RPC interface that can be used to interrogate and control supervisor and the programs it runs.</li>\n</ul>\n<p>In this guide, we will install the latest version of <strong>supervisor</strong>, show how to spawn and manage programs through <strong>supervisorctl</strong>, and lastly configure a web interface to manage our dotnet programs.</p>\n<p>Supervisor is known to work with Python 2.4 or later but will not work under any version of Python 3.<br />\nTo check what version of Python is installed on your system, type the command below:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">python --version\r\n</pre>\n<h3>Install Supervisor</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt-get install supervisor</pre>\n<h3>Enable Web Interface for Supervisor</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">nano /etc/supervisor/supervisord.conf</pre>\n<p>Add these line at the end of the file</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[inet_http_server]\r\nport=*:9001\r\nusername=user\r\npassword=123\r\n</pre>\n<h3>Create Our Supervisor Service for our dotnet application</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">nano /etc/supervisor/conf.d/dotnetmvc1.conf</pre>\n<p>Add the following lines and update it with your dotnet path</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[program:dotnetMVC1]\r\ncommand=/usr/bin/dotnet /root/dotnet/mvc1/bin/release/netcoreapp2.2/ubuntu.16.04-x64/publish/mvc1.dll\r\ndirectory=/root/dotnet/mvc1/bin/release/netcoreapp2.2/ubuntu.16.04-x64/publish/\r\nautostart=true\r\nautorestart=true\r\nstderr_logfile=/var/log/dotnettest.err.log\r\nstdout_logfile=/var/log/dotnettest.out.log\r\nenvironment=ASPNETCORE_ENVIRONMENT=Production\r\nuser=root\r\nstopsignal=INT\r\n</pre>\n<h3>Enable Supervisor</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo systemctl enable  supervisor \r\nsudo service supervisor restart</pre>\n<h3>Browse Supervisor Link on yourserverIP:9001</h3>\n<p><a href=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601164458.png\"><img class=\"alignnone size-full wp-image-1433\" src=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601164458.png\" alt=\"\" width=\"1056\" height=\"293\" /></a></p>\n<h2>Congratulations the app is deployed</h2>\n<p><a href=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601173004.png\"><img class=\"alignnone size-full wp-image-1435\" src=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601173004.png\" alt=\"\" width=\"1919\" height=\"1007\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601173004.png 1919w, https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601173004-300x157.png 300w, https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601173004-768x403.png 768w, https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601173004-1024x537.png 1024w\" sizes=\"(max-width: 1919px) 100vw, 1919px\" /></a></p>\n<p>&nbsp;</p>\n",
          "slug": "deploy-dotnet-core-mvc-on-ubuntu-with-supervisor",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/06/DeepinScreenshot_select-area_20190601173356.png"
          },
          "link": "https://emolike.net/2019/06/01/deploy-dotnet-core-mvc-on-ubuntu-with-supervisor/",
          "date": "2019-06-01T17:31:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MjY=",
        "node": {
          "id": "cG9zdDoxNDI2",
          "title": "The Mediator Pattern In .NET Core",
          "content": "<p>A couple of years back, I had to help out on a project that was built entirely using the “Mediator Pattern”. Or more specifically, built entirely using the <a href=\"https://github.com/jbogard/MediatR\" target=\"_blank\" rel=\"noopener noreferrer\">MediatR</a> library. There were all these presentations about the “theory” behind the Mediator Pattern and how it was a real new way of thinking. I couldn’t help but think… We’ve been doing this for years. Except we just call it good programming… Infact I had my own pattern which we’ll look into in Part 2 that I called the “IEnumerable Pattern” which achieved the same thing.</p>\n<p>But it’s taken all these years to finally write it all down. So here it is. Here’s the Mediator Pattern in C# (Or more specifically, .NET Core).</p>\n<h3>The Mediator Pattern “Definition”</h3>\n<p>The Mediator Pattern actually dates all the way back to 1994 in the famous book “<i><b>Design Patterns: Elements of Reusable Object-Oriented Software”. </b></i>But I feel like it’s only really sprung up again lately due to a slew of libraries trying to implement the pattern.</p>\n<p>In a nutshell, the definition (as stolen from Wikipedia) is :</p>\n<p><em>The essence of the Mediator Pattern is to “define an object that encapsulates how a set of objects interact”. It promotes loose coupling by keeping objects from referring to each other explicitly, and it allows their interaction to be varied independently. <sup id=\"cite_ref-3\" class=\"reference\"></sup>Client classes can use the mediator to send messages to other clients, and can receive messages from other clients via an event on the mediator class.</em></p>\n<p>So let’s break it down a little into two bullet points that we will refer back to later.</p>\n<ul>\n<li>It’s an object that encapsulates how objects interact. So it can obviously handle passing on “messages” between objects.</li>\n<li>It promotes loose coupling by not having objects refer to each other, but instead to the mediator. So they pass the messages to the mediator, who will pass it on to the right person.</li>\n</ul>\n<p>That’s honestly it.</p>\n<p>And when you think about just those two bullet points in isolation. It sounds awfully like a message hub of sorts right? That’s because… It actually kinda is. It’s like a message hub in code. When you send a message through a typical message hub, you don’t know who is receiving that message, you just know that the hub knows and it will sort it out for you.</p>\n<h3>In Visual Form</h3>\n<p>If we break this out into visual form using my (very limited) lucidchart skills. It looks a bit like this :</p>\n<p><img class=\"alignnone size-full wp-image-1428\" src=\"https://emolike.net/wp-content/uploads/2019/05/MediatorPattern.png\" width=\"836\" height=\"528\" alt=\"\" title=\"MediatorPattern\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/MediatorPattern.png 836w, https://emolike.net/wp-content/uploads/2019/05/MediatorPattern-300x189.png 300w, https://emolike.net/wp-content/uploads/2019/05/MediatorPattern-768x485.png 768w\" sizes=\"(max-width: 836px) 100vw, 836px\" /></p>\n<p>This is probably a simplified version of it because a Mediator Pattern does allow two way communication, it’s not just a one way broadcast, but I think this is the model we are going to try and use going forward in our examples.</p>\n<p>Again, looking at it this way, it’s hard not to see the comparisons to messaging systems. But on the other hand, it’s hard not to also feel like this could very quickly turn into one of those “super” classes where sure, MyService doesn’t reference every handler… But the Mediator does. But there are ways to handle that which we will go into later.</p>\n<h3>Why?</h3>\n<p>And finally, the “Why?”. Why is this even a thing?</p>\n<p>Well if we take the diagram above, if we had MyService calling other handlers directly (For example notifying them about an action), then as we add handlers, MyService has to start referencing them all even if it doesn’t care about the result. For example, our service might start looking like this :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">class MyService\r\n{\r\n    private readonly Handler1 _handler1;\r\n    private readonly Handler2 _handler2;\r\n    private readonly Handler3 _handler3;\r\n            \r\n \r\n    public MyService(Handler1 handler1, Handler2 handler2, Handler3 handler3)\r\n    {\r\n        _handler1 = handler1;\r\n        _handler2 = handler2;\r\n        _handler3 = handler3;\r\n    }\r\n \r\n    public void DoSomething()\r\n    {\r\n        //Do something here. \r\n        //And do some more work\r\n \r\n        //And then notify our handlers. \r\n        _handler1.Notify(new HandlerArgs());\r\n        _handler2.Notify(new HandlerArgs());\r\n        _handler3.Notify(new HandlerArgs());\r\n    }\r\n}</pre>\n<p>So what happens when we add more handlers? Or remove handlers? Our service keeps changing when in reality it doesn’t really care who gets notified.</p>\n<p>Using a Mediator Pattern, it may instead end up looking like :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">class MyService\r\n{\r\n    private HandlerMediator _handlerMediator;\r\n \r\n    public MyService(HandlerMediator handlerMediator)\r\n    {\r\n        _handlerMediator = handlerMediator;\r\n    }\r\n \r\n    public void DoSomething()\r\n    {\r\n        //Do something here. \r\n        //And do some more work\r\n \r\n        //And then notify our handlers. \r\n        _handlerMediator.Notify(new HandlerArgs());\r\n    }\r\n}\r\n \r\n \r\nclass HandlerMediator\r\n{\r\n    private readonly Handler1 _handler1;\r\n    private readonly Handler2 _handler2;\r\n    private readonly Handler3 _handler3;\r\n \r\n \r\n    public HandlerMediator(Handler1 handler1, Handler2 handler2, Handler3 handler3)\r\n    {\r\n        _handler1 = handler1;\r\n        _handler2 = handler2;\r\n        _handler3 = handler3;\r\n    }\r\n \r\n    public void Notify(HandlerArgs handlerArgs)\r\n    {\r\n        _handler1.Notify(handlerArgs);\r\n        _handler2.Notify(handlerArgs);\r\n        _handler3.Notify(handlerArgs);\r\n    }\r\n}</pre>\n<p>So there’s the bonus that as handlers change, get added or removed, the service itself doesn’t change. But there is also a bit of a downer that we are maybe shifting the load to the Mediator, it’s job is now to manage the handlers and how they get notified. But this makes sense right! To have a class whose sole job is to notify clients should be able to change depending on how those clients need to be notified. And our service which really doesn’t care about the implementation details of those handlers can get on with it’s work.</p>\n<p>In saying that, later on we will see how we use DI to really help us ease the load from both classes and yet still stick to heart of the Mediator Pattern.</p>\n<h3>MediatR Library</h3>\n<p>The <a href=\"https://github.com/jbogard/MediatR\" target=\"_blank\" rel=\"noopener noreferrer\">MediatR</a> library describes itself as “Simple, unambitious mediator implementation in .NET”. In particular, I like the word “Unambitious” being used. It’s somewhat refreshing in a world of Hacker News posts that claim to be releasing a library that will change the way we write code forever. You may also recognize the author of MediatR as <a href=\"https://twitter.com/jbogard\" target=\"_blank\" rel=\"noopener noreferrer\">Jimmy Bogard</a> who also maintains AutoMapper!</p>\n<p>MediatR is essentially a library that allows in process messaging – which in turn allows you to follow the Mediator Pattern! Easy! Let’s get started</p>\n<h3>Installing MediatR</h3>\n<p>The first thing we need to do is install the MediatR nuget package. So from your package manager console run :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Install-Package MediatR\r\n</pre>\n<p>We also need to install a package that allows us to use the inbuilt IOC container in .NET Core to our advantage (We’ll see more of that shortly). So also install the following package :</p>\n<div id=\"crayon-5cf1860532289170064325\" class=\"crayon-syntax crayon-theme-vs2012 crayon-font-consolas crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<div class=\"crayon-plain-wrap\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Install-Package MediatR.Extensions.Microsoft.DependencyInjection\r\n</pre>\n<p>Finally we open up our startup.cs file. In our ConfigureServices method, we need to add in a call to register all of MediatR’s dependencies.</p>\n<div id=\"crayon-5cf186053228b348762644\" class=\"crayon-syntax crayon-theme-vs2012 crayon-font-consolas crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<div class=\"crayon-plain-wrap\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public void ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddMediatR(Assembly.GetExecutingAssembly());\r\n    //Other injected services. \r\n}</pre>\n<h3>Creating Our Handlers</h3>\n<p>The first thing to note is that MediatR can be either do “send and receive” type messages, or it can do a “broadcast” type message. Taking our example from our previous article in the series, we are doing a more broadcast style of message (And a pretty simple one at that). Let’s just stick with that for now.</p>\n<p>In our original example, we weren’t passing through any information to our handlers, but in reality we are likely passing through some data. Basically a message if we think about traditional messaging systems. Let’s go ahead and just create a blank object that inherits from <span id=\"crayon-5cf186053228e319094190\" class=\"crayon-syntax crayon-syntax-inline  crayon-theme-vs2012 crayon-theme-vs2012-inline crayon-font-consolas\"><span class=\"crayon-pre crayon-code\"><span class=\"crayon-v\">INotification</span></span></span>  (An inbuilt type of MediatR).</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class NotificationMessage : INotification\r\n{\r\n    public string NotifyText { get; set; }\r\n}</pre>\n<p>Next we need handlers for the messages. That’s easy too, we just inherit from <span id=\"crayon-5cf1860532292239442691\" class=\"crayon-syntax crayon-syntax-inline  crayon-theme-vs2012 crayon-theme-vs2012-inline crayon-font-consolas\"><span class=\"crayon-pre crayon-code\"><span class=\"crayon-v\">INotificationHandler</span></span></span>  and go from there!</p>\n<div id=\"crayon-5cf1860532294800027151\" class=\"crayon-syntax crayon-theme-vs2012 crayon-font-consolas crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<div class=\"crayon-plain-wrap\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class Notifier1 : INotificationHandler&lt;NotificationMessage&gt;\r\n{\r\n    public Task Handle(NotificationMessage notification, CancellationToken cancellationToken)\r\n    {\r\n        Debug.WriteLine($\"Debugging from Notifier 1. Message  : {notification.NotifyText} \");\r\n        return Task.CompletedTask;\r\n    }\r\n}\r\n \r\npublic class Notifier2 : INotificationHandler&lt;NotificationMessage&gt;\r\n{\r\n    public Task Handle(NotificationMessage notification, CancellationToken cancellationToken)\r\n    {\r\n        Debug.WriteLine($\"Debugging from Notifier 2. Message  : {notification.NotifyText} \");\r\n        return Task.CompletedTask;\r\n    }\r\n}</pre>\n<p>Super simple! We also don’t need to register these handlers anywhere, the initial line we added to our ConfigureServices method means that MediatR finds all handlers within the assembly and registers them correctly.</p>\n<h3>Creating Our Mediator Service</h3>\n<p>Now here’s the thing. We *can* just inject in the inbuilt IMediator interface everywhere and publish messages directly. Personally I’m not a huge fan because it’s basically telling everywhere “by the way, we use MediatR”. I prefer to abstract things away a little bit.</p>\n<p>If we take our Mediator Service from the previous article, let’s just modify it a bit. Instead let’s build it like so :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public interface INotifierMediatorService\r\n{\r\n    void Notify(string notifyText);\r\n}\r\n \r\npublic class NotifierMediatorService : INotifierMediatorService\r\n{\r\n    private readonly IMediator _mediator;\r\n \r\n    public NotifierMediatorService(IMediator mediator)\r\n    {\r\n        _mediator = mediator;\r\n    }\r\n \r\n    public void Notify(string notifyText)\r\n    {\r\n        _mediator.Publish(new NotificationMessage { NotifyText = notifyText });\r\n    }\r\n}</pre>\n<p>So we have a NotifierService that still uses the IMediator class under the hood, but it means if we ever swap out libraries or change how we do notifications, only this class changes.</p>\n<p>Because we have created a new service, we do need to remember to add the following line to our ConfigureServices method in our startup.cs file :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">services.AddTransient&lt;INotifierMediatorService, NotifierMediatorService&gt;();\r\n</pre>\n<h3>Using Our Notifier Mediator Service</h3>\n<p>Let’s use a super simple controller to run things. Again this is basically taken from Part 2 in this series and just modified a tiny bit to work with passing through notify text.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class HomeController : ControllerBase\r\n{\r\n    private readonly INotifierMediatorService _notifierMediatorService;\r\n \r\n    public HomeController(INotifierMediatorService notifierMediatorService)\r\n    {\r\n        _notifierMediatorService = notifierMediatorService;\r\n    }\r\n \r\n    [HttpGet(\"\")]\r\n    public ActionResult&lt;string&gt; NotifyAll()\r\n    {\r\n        _notifierMediatorService.Notify(\"This is a test notification\");\r\n        return \"Completed\";\r\n    }\r\n}</pre>\n<p>Running all of this and opening up our debug panel we can see :</p>\n<div id=\"crayon-5cf186053229d973426052\" class=\"crayon-syntax crayon-theme-vs2012 crayon-font-consolas crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<div class=\"crayon-plain-wrap\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Debugging from Notifier 1. Message  : This is a test notification \r\nDebugging from Notifier 2. Message  : This is a test notification</pre>\n<p>Woo! Literally a 5 minute job to set up a completely in memory messaging system!</p>\n<h3>Final Thoughts On The Mediator Pattern</h3>\n<p>As we made our way through these 3 posts, it’s probably morphed a bit from the “Mediator Pattern” to “In Process Messaging”. But going back to our key bullet points from Part 1 :</p>\n<ul>\n<li>It’s an object that encapsulates how objects interact. So it can obviously handle passing on “messages” between objects.</li>\n<li>It promotes loose coupling by not having objects refer to each other, but instead to the mediator. So they pass the messages to the mediator, who will pass it on to the right person.</li>\n</ul>\n<p>We can see that In Process Messaging is actually just an “implementation” of the mediator pattern. As long as we are promoting loose coupling through a “mediator” class that can pass data back and forth so that the caller doesn’t need to know how things are being handled (By whom and by how many handlers), then we can say we are implementing the Mediator Pattern.</p>\n<p>Source : <a href=\"https://dotnetcoretutorials.com/2019/04/30/the-mediator-pattern-part-3-mediatr-library/\">https://dotnetcoretutorials.com/2019/04/30/the-mediator-pattern-part-3-mediatr-library/ </a></p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"eJ5AJiMoX5\"><p><a href=\"https://dotnetcoretutorials.com/2019/04/30/the-mediator-pattern-in-net-core-part-1-whats-a-mediator/\">The Mediator Pattern In .NET Core &#8211; Part 1 &#8211; What&#8217;s A Mediator?</a></p></blockquote>\n<p><iframe title=\"&#8220;The Mediator Pattern In .NET Core &#8211; Part 1 &#8211; What&#8217;s A Mediator?&#8221; &#8212; .NET Core Tutorials\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://dotnetcoretutorials.com/2019/04/30/the-mediator-pattern-in-net-core-part-1-whats-a-mediator/embed/#?secret=eJ5AJiMoX5\" data-secret=\"eJ5AJiMoX5\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n</div>\n<div class=\"crayon-main\"></div>\n</div>\n</div>\n<div class=\"crayon-main\"></div>\n</div>\n</div>\n<div class=\"crayon-main\"></div>\n</div>\n</div>\n<div class=\"crayon-main\"></div>\n</div>\n",
          "slug": "the-mediator-pattern-in-net-core",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/MediatorPattern.png"
          },
          "link": "https://emolike.net/2019/05/31/the-mediator-pattern-in-net-core/",
          "date": "2019-05-31T23:22:29",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MjM=",
        "node": {
          "id": "cG9zdDoxNDIz",
          "title": "Be a Hero on Day 1 with ASP.Net Boilerplate",
          "content": "<p><iframe title=\"E19: Be a Hero on Day 1 with ASP.Net Boilerplate\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/xmHTYF5RvMs?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "be-a-hero-on-day-1-with-asp-net-boilerplate",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/31/be-a-hero-on-day-1-with-asp-net-boilerplate/",
          "date": "2019-05-31T22:59:05",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MjE=",
        "node": {
          "id": "cG9zdDoxNDIx",
          "title": "C# RSS generator in less than than 50 lines of code",
          "content": "<p>What kind of technical blog doesn&#8217;t have RSS feed? Well, this one didn&#8217;t have one. This short post will present single method for generating RSS feed we are using, and answer why we are not using existing solution.</p>\n<p>After googling for existing solutions for generating RSS feed, one of the first solution was to use <a href=\"https://github.com/shawnwildermuth/RssSyndication\">Wildermuth&#8217;s RssSyndication</a> library. After trying to install nuget package <code>WilderMinds.RssSyndication</code> I quickly realized it won&#8217;t work, because latest version of the library is targeting .NETStandard 2.0 and our blog is hosted on .NET Core 1.1. We could upgrade to .NET Core 2.0, but then we would either have to either 1) switch server because we have more than one app on this server running on .NET Core 1.1 or 2) publish our app as <a href=\"https://docs.microsoft.com/en-us/dotnet/core/deploying/\">self-contained-binaries</a>. We didn&#8217;t like our options. Another solution would have been to use older version of <code>WilderMinds.RssSyndication</code>.</p>\n<p>Quickly digging trough commits brought me to <a href=\"https://github.com/shawnwildermuth/RssSyndication/commit/b08e311b564bd019196e9e3f4ba542fb10192f72\">the commit</a> which was updating <code>WilderMinds.RssSyndication</code> from .NETStandard 1.3 to .NETStandard 2.0. As you can see there aren&#8217;t any significant changes there except the target versions. So, why aren&#8217;t we using older version of the library? Because if we stay with older version of the library, we might miss bug-fixes, so we could either open an issue on the GitHub repo and politely ask Shawn to bring back the support of older .NETStandard or create our own generator. Creating our own generator was probably the faster solution. Here is the code that generates <a href=\"https://hackingmonkeys.com/rss\">our RSS feed</a>.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">private string BuildRssFeedContent()\r\n{\r\n    string url = \"https://hackingmonkeys.com/\";\r\n    string description = \"Monkey's code, monkey's hacks, monkey's thoughts. .NET (Core) and stuff...\";\r\n    \r\n    var posts = GetRenderedPages(); // cached\r\n\r\n    var feed = new XDocument(new XElement(\"rss\"));\r\n    feed.Root.Add(new XAttribute(\"version\", \"2.0\"));\r\n    \r\n    string copyYear = \"2018\";\r\n    if (DateTime.Today.Year &gt; 2018) \r\n    {\r\n        copyYear = \"2018-\" + DateTime.Today.Year;\r\n    }\r\n    XNamespace atomNs = \"http://www.w3.org/2005/Atom\";\r\n    var ch = new XElement(\"channel\");\r\n    ch.Add(new XElement(\"title\", \"HackingMonkeys Blog\"));\r\n    ch.Add(new XElement(\"link\", url));\r\n    ch.Add(new XElement(atomNs + \"link\", \r\n        new XAttribute(\"href\", url + \"rss\"), \r\n        new XAttribute(\"rel\", \"self\"), \r\n        new XAttribute(\"type\", \"application/rss+xml\")));\r\n    ch.Add(new XElement(\"description\", new XCData(description)));\r\n    ch.Add(new XElement(\"copyright\", $\"Copyright {copyYear} hackingmonkeys.com\"));\r\n    ch.Add(new XElement(\"language\", \"en\"));\r\n    ch.Add(new XElement(\"lastBuildDate\", posts.First().CreatedDate.ToString(\"r\")));\r\n    ch.Add(new XElement(\"pubDate\", posts.First().CreatedDate.ToString(\"r\")));\r\n    ch.Add(new XElement(\"generator\", \"manually hacked by hackingmonkeys\"));\r\n    ch.Add(new XElement(\"managingEditor\", $\"{_email} (${_name})\"));\r\n    ch.Add(new XElement(\"webMaster\", $\"{_email} (${_name})\"));\r\n    ch.Add(new XElement(\"ttl\", (60*4).ToString()));\r\n    feed.Root.Add(ch);\r\n    foreach (var post in posts)\r\n    {\r\n        var postElement = new XElement(\"item\");\r\n        postElement.Add(new XElement(\"title\", new XCData(post.Title)));\r\n        postElement.Add(new XElement(\"link\", $\"{url}blog/{post.FormatedCreatedDate}/{post.Id}\"));\r\n        postElement.Add(new XElement(\"description\", new XCData(post.ShortHtml)));\r\n        // postElement.Add(new XElement(\"author\", \"\"));\r\n        foreach (var c in post.Tags) postElement.Add(new XElement(\"category\", new XCData(c)));\r\n        postElement.Add(new XElement(\"pubDate\", post.CreatedDate.ToString(\"r\")));\r\n        ch.Add(postElement);\r\n    }\r\n    return \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?&gt;\" + Environment.NewLine + feed.ToString();\r\n}</pre>\n<p>This method was inspired by <a href=\"https://retifrav.github.io/blog/2018/01/07/csharp-dotnet-core-rss-publish-zen/\">this post</a>, <a href=\"https://stackoverflow.com/a/38332687\">this SO answer</a>, and <a href=\"https://github.com/shawnwildermuth/RssSyndication/blob/master/src/WilderMinds.RssSyndication/Feed.cs\">WilderMinds.RssSyndication Feed class</a>. Comparing our code with <a href=\"https://github.com/shawnwildermuth/RssSyndication/blob/master/src/WilderMinds.RssSyndication/Feed.cs\">Feed class</a> from <code>WilderMinds.RssSyndication</code> you can notice a few differences:</p>\n<ul>\n<li><code>channel</code> node has a few more elements (<code>lastBuildDate</code>, <code>managingEditor</code>, <code>language</code>, etc&#8230;)</li>\n<li><code>channel</code> has <code>link</code> with <code>rel=\"self\"</code> and <code>Atom</code> namespace, as it was asked by online <a href=\"https://validator.w3.org/feed/\">validator</a></li>\n<li>some nodes that could contain <code>HTML</code> are using <code>CData</code> in oder to avoid possible XML escaping problems</li>\n</ul>\n<p>Source : <a href=\"https://hackingmonkeys.com/blog/2018-03-29/rss-generator-in-less-than-50-lines-of-code\">https://hackingmonkeys.com/blog/2018-03-29/rss-generator-in-less-than-50-lines-of-code</a></p>\n",
          "slug": "c-rss-generator-in-less-than-than-50-lines-of-code",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/31/c-rss-generator-in-less-than-than-50-lines-of-code/",
          "date": "2019-05-31T01:17:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MTc=",
        "node": {
          "id": "cG9zdDoxNDE3",
          "title": "Dockerized Hugo with GitLab CI/CD",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">How we use Hugo, Docker, and GitLab CI to build this tech blog</p>\n<p class=\"imgs\">Source: <a href=\"https://blog.callr.tech/static-blog-hugo-docker-gitlab/\" target=\"_blank\" rel=\"noopener noreferrer\">blog.callr.tech/static-blog-hugo-docker-gitlab/</a></p>\n</div>\n",
          "slug": "dockerized-hugo-with-gitlab-ci-cd",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/techblog-lighthouse.png"
          },
          "link": "https://emolike.net/2019/05/31/dockerized-hugo-with-gitlab-ci-cd/",
          "date": "2019-05-31T00:54:05",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MTM=",
        "node": {
          "id": "cG9zdDoxNDEz",
          "title": "Switching From WordPress To Hugo",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">WordPress has a pretty robust architecture that can feel a bit too complex to run a simple blog. Letâs have a look at how [Hugo](https://gohugo.io) can help us create a blog that is simple and fast.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.smashingmagazine.com/2019/05/switch-wordpress-hugo/\" target=\"_blank\" rel=\"noopener noreferrer\">www.smashingmagazine.com/2019/05/switch-wordpress-hugo/</a></p>\n</div>\n",
          "slug": "switching-from-wordpress-to-hugo",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/switching-from-wordpress-to-hugo.png"
          },
          "link": "https://emolike.net/2019/05/30/switching-from-wordpress-to-hugo/",
          "date": "2019-05-30T23:43:44",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MDg=",
        "node": {
          "id": "cG9zdDoxNDA4",
          "title": "Asynchronous models and patterns",
          "content": "<div id=\"at_zurlpreview\">\n<p>&nbsp;</p>\n<p class=\"imgd\">An introduction to async / await, popular mistakes and solutions for asynchronous programming, as well as usages and benefits from using asynchronous programming. We will also discuss interesting patterns based on concurrency.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.codeproject.com/Articles/562021/Asynchronous-models-and-patterns\" target=\"_blank\" rel=\"noopener noreferrer\">www.codeproject.com/Articles/562021/Asynchronous-models-and-patterns</a></p>\n</div>\n",
          "slug": "asynchronous-models-and-patterns",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/title.png"
          },
          "link": "https://emolike.net/2019/05/30/asynchronous-models-and-patterns/",
          "date": "2019-05-30T23:26:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MDY=",
        "node": {
          "id": "cG9zdDoxNDA2",
          "title": "How to fix failed to retrieve directory listing error in FileZilla FTP",
          "content": "<p>When using FileZilla to connect to your FTP if you encounter an error like this:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Status: Resolving address of ftp.website.com\r\nStatus: Connecting to 11.22.33.44:21...\r\nStatus: Connection established, waiting for welcome message...\r\nStatus: Initializing TLS...\r\nStatus: Verifying certificate...\r\nStatus: TLS connection established.\r\nStatus: Server does not support non-ASCII characters.\r\nStatus: Connected\r\nStatus: Retrieving directory listing...\r\nCommand: PWD\r\nResponse: 257 \"/\" is your current location\r\nCommand: TYPE I\r\nResponse: 200 TYPE is now 8-bit binary\r\nCommand: PASV\r\nResponse: 227 Entering Passive Mode (11,22,33,44,167,111)\r\nCommand: MLSD\r\nError: Connection timed out\r\nError: Failed to retrieve directory listing</pre>\n<p>You can easily fix this error by going into the site manager and adjusting your connection details to use plain FTP. Follow these steps to fix the problem:</p>\n<ol>\n<li>In FileZilla, click on “File” menu and choose “Site Manager”</li>\n<li>Add the site or server you want to connect to if it’s not already in site manager.\n<ol>\n<li>Add hostname</li>\n<li>change encryption to “only use plain FTP”</li>\n<li>Change logon type &#8220;Normal&#8221;</li>\n<li>Enter username/password.</li>\n<li>Ok/Connect to continue</li>\n</ol>\n</li>\n</ol>\n<p>If the problem still persists, please disable your firewall then try once more! If it still fails,  here is what you need to do:</p>\n<ul>\n<li>Open Filezilla, go to Edit -&gt; Settings</li>\n<li>Click on Connection -&gt; FTP: Choose Active</li>\n<li>Click on Connection -&gt; FTP -&gt; Active Mode: Select &#8220;Ask your operating system for the external IP address&#8221;</li>\n<li>Click on Connection -&gt; FTP -&gt; Passive Mode: Choose Fall Back to Active Mode</li>\n<li>Press OK.</li>\n</ul>\n<p>Try connecting to your FTP again!</p>\n<p>Source : <a href=\"https://my.wirenine.com/knowledgebase/140/How-to-fix-failed-to-retrieve-directory-listing-error-in-FileZilla-FTP.html\">https://my.wirenine.com/knowledgebase/140/How-to-fix-failed-to-retrieve-directory-listing-error-in-FileZilla-FTP.html</a></p>\n",
          "slug": "how-to-fix-failed-to-retrieve-directory-listing-error-in-filezilla-ftp",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/30/how-to-fix-failed-to-retrieve-directory-listing-error-in-filezilla-ftp/",
          "date": "2019-05-30T21:31:38",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MDQ=",
        "node": {
          "id": "cG9zdDoxNDA0",
          "title": "Why should I inject IHttpContextAccessor as a Singleton",
          "content": "<p>According to comments associated with an issue raised on GitHub</p>\n<p><a href=\"https://github.com/aspnet/Hosting/issues/793#issuecomment-224828588\" rel=\"noreferrer\">https://github.com/aspnet/Hosting/issues/793#issuecomment-224828588</a></p>\n<blockquote><p>In that sample, you are registering it as a singleton. Shouldn&#8217;t it be a scoped instance?</p>\n<p>It&#8217;s fine being a singleton because the backing store is async local.</p></blockquote>\n<p>Which got a later reply</p>\n<p><a href=\"https://github.com/aspnet/Hosting/issues/793#issuecomment-224924030\" rel=\"noreferrer\">https://github.com/aspnet/Hosting/issues/793#issuecomment-224924030</a></p>\n<blockquote><p>Actually if you register it as a Transient on .NET Core then it doesn&#8217;t work properly since the implementation for .NET Core is using a AsyncLocal which relies upon the instance variable to track the TLS storage slot. So it has to be registered as a singleton on .NET Core.</p></blockquote>\n",
          "slug": "why-should-i-inject-ihttpcontextaccessor-as-a-singleton",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/24/why-should-i-inject-ihttpcontextaccessor-as-a-singleton/",
          "date": "2019-05-24T20:12:01",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MDI=",
        "node": {
          "id": "cG9zdDoxNDAy",
          "title": "Cache Implementations in C# .NET",
          "content": "<p>One of the most commonly used patterns in software development is <strong>Caching</strong>. It’s a simple, but a very effective concept. The idea is to reuse operation results. When performing a heavy operation, we will save the result in our <strong>cache container</strong>. The next time that we need that result, we will pull it from the cache container, instead of performing the heavy operation again.</p>\n<p>For example, to get a person’s Avatar you might need a trip to the database. Instead of performing that trip every time, we will save that Avatar in the cache, pulling it from memory every time you need it.</p>\n<p>Caching works great for data that changes infrequently. Or even better, never changes. Data that constantly changes, like the current machine’s time shouldn’t be cached or you will get wrong results.</p>\n<h2>In-process Cache, Persistant in-process Cache, and Distributed Cache</h2>\n<p>There are 3 types of caches:</p>\n<ul>\n<li><strong>In-Memory Cache</strong> is used for when you want to implement cache in a single process. When the process dies, the cache dies with it. If you’re running the same process on several servers, you will have a separate cache for each server.</li>\n<li><strong>Persistent in-process Cache</strong> is when you back up your cache outside of process memory. It might be in a file, or in a database. This is more difficult, but if your process is restarted, the cache is not lost. Best used when getting the cached item is expansive, and your process tends to restart a lot.</li>\n<li><strong>Distributed Cache</strong> is when you want to have shared cache for several machines. Usually, it will be several servers. With a distributed cache, it is stored in an external service. This means if one server saved a cache item, other servers can use it as well. Services like <a href=\"https://redis.io/\">Redis</a> are great for this.</li>\n</ul>\n<p>We’re going to talk just about <strong>in-process cache</strong>.</p>\n<h2>Naive Implementation</h2>\n<p>Let’s create a very simple cache implementation in C#:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class NaiveCache&lt;TItem&gt;\r\n{\r\n    Dictionary&lt;object, TItem&gt; _cache = new Dictionary&lt;object, TItem&gt;();\r\n \r\n    public TItem GetOrCreate(object key, Func&lt;TItem&gt; createItem)\r\n    {\r\n        if (!_cache.ContainsKey(key))\r\n        {\r\n            _cache[key] = createItem();\r\n        }\r\n        return _cache[key];\r\n    }\r\n}\r\n</pre>\n<p>Usage:</p>\n<div id=\"crayon-5ce7d6f4e6f14459952846\" class=\"crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate crayon-wrapped\" data-settings=\" no-popup minimize scroll-mouseover wrap\">\n<div class=\"crayon-plain-wrap\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">var _avatarCache = new NaiveCache&lt;byte[]&gt;();\r\n// ...\r\nvar myAvatar = _avatarCache.GetOrCreate(userId, () =&gt; _database.GetAvatar(userId));</pre>\n<p>This simple code solves a crucial problem. To get a user’s avatar, only the first request will actually perform a trip to the database. The avatar data (<code>byte[]</code>) is then saved in process memory. All following requests for the avatar will be pulled from memory, saving time and resources.</p>\n<p>But, as most things in programming, nothing is so simple. The above solution is not good for a number of reasons. For one thing, this implementation is <strong>not thread-safe</strong>. Exceptions can occur when used from multiple threads. Besides that, cached items will stay in memory forever, which is actually very bad.</p>\n<p><strong>Here’s why we should be removing items from Cache:</strong></p>\n<ol>\n<li>Cache can take up a lot of memory, eventually leading to an out-of-memory exceptions and crashes.</li>\n<li>High memory consumption can lead to <strong>GC Pressure</strong> (aka Memory Pressure). In this state, the garbage collector works more than it should, hurting performance.</li>\n<li>Cache might need to be refreshed if the data changes. Our caching infrastructure should support that ability.</li>\n</ol>\n<p>To handle these problems, cache frameworks have <strong>Eviction policies</strong> (aka <strong>Removal policies</strong>). These are rules to have items removed from cache according to some logic. Common eviction policies are:</p>\n<ul>\n<li><strong>Absolute Expiration</strong> policy will remove an item from cache after a fixed amount of time, no matter what.</li>\n<li><strong>Sliding Expiration</strong> policy will remove an item from cache if it wasn’t <strong>accessed</strong> in a fixed amound of time. So if I set the expiration to 1 minute, the item will keep staying in cache as long as I use it every 30 seconds. Once I don’t use it for longer than a minute, the item is evicted.</li>\n<li><strong>Size Limit</strong> policy will limit the cache memory size.</li>\n</ul>\n<p>Now that we know what we need, let’s continue on to better solutions.</p>\n<h3>Better Solutions</h3>\n<p>To my great dismay as a blogger, Microsoft already created a wonderful cache implementation. This deprived me the pleasure of creating a similar implementation myself, but at least I have less work writing this blog post.</p>\n<p>I’ll show you Microsoft’s solution, how to effectively use it, and then how to improve it in some scenarios.</p>\n<h3>System.Runtime.Caching/MemoryCache vs Microsoft.Extensions.Caching.Memory</h3>\n<p>Microsoft has 2 solutions 2 different NuGet packages for caching. Both are great. As per Microsoft’s <a href=\"https://docs.microsoft.com/en-us/aspnet/core/performance/caching/memory?view=aspnetcore-2.2#systemruntimecachingmemorycache\">recommendation</a>, prefer using <code>Microsoft.Extensions.Caching.Memory</code> because it integrates better with Asp. NET Core. It can be <a href=\"https://docs.microsoft.com/en-us/aspnet/core/performance/caching/memory?view=aspnetcore-2.2#using-imemorycache\">easily injected</a> into Asp .NET Core’s dependency injection mechanism.</p>\n<p>Here’s a basic example with <code>Microsoft.Extensions.Caching.Memory</code>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class SimpleMemoryCache&lt;TItem&gt;\r\n{\r\n    private MemoryCache _cache = new MemoryCache(new MemoryCacheOptions());\r\n \r\n    public TItem GetOrCreate(object key, Func&lt;TItem&gt; createItem)\r\n    {\r\n        TItem cacheEntry;\r\n        if (!_cache.TryGetValue(key, out cacheEntry))// Look for cache key.\r\n        {\r\n            // Key not in cache, so get data.\r\n            cacheEntry = createItem();\r\n            \r\n            // Save data in cache.\r\n            _cache.Set(key, cacheEntry);\r\n        }\r\n        return cacheEntry;\r\n    }\r\n}\r\n\r\nUsage:\r\n\r\nvar _avatarCache = new SimpleMemoryCache&lt;byte[]&gt;();\r\n// ...\r\nvar myAvatar = _avatarCache.GetOrCreate(userId, () =&gt; _database.GetAvatar(userId));\r\n</pre>\n<p>This is very similar to my own <code>NaiveCache</code>, so what changed? Well, for one thing, this is a <strong>thread-safe</strong>implementation. You can safely call this from multiple threads at once.</p>\n<p>The second thing thing is the <code>MemoryCache</code> allows for all the <strong>eviction policies</strong> we talked about before. Here’s an example:</p>\n<h3>IMemoryCache with eviction policies:</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class MemoryCacheWithPolicy&lt;TItem&gt;\r\n{\r\n    private MemoryCache _cache = new MemoryCache(new MemoryCacheOptions()\r\n    {\r\n        SizeLimit = 1024\r\n    });\r\n \r\n    public TItem GetOrCreate(object key, Func&lt;TItem&gt; createItem)\r\n    {\r\n        TItem cacheEntry;\r\n        if (!_cache.TryGetValue(key, out cacheEntry))// Look for cache key.\r\n        {\r\n            // Key not in cache, so get data.\r\n            cacheEntry = createItem();\r\n \r\n            var cacheEntryOptions = new MemoryCacheEntryOptions()\r\n             .SetSize(1)//Size amount\r\n             //Priority on removing when reaching size limit (memory pressure)\r\n                .SetPriority(CacheItemPriority.High)\r\n                // Keep in cache for this time, reset time if accessed.\r\n                .SetSlidingExpiration(TimeSpan.FromSeconds(2))\r\n                // Remove from cache after this time, regardless of sliding expiration\r\n                .SetAbsoluteExpiration(TimeSpan.FromSeconds(10));\r\n \r\n            // Save data in cache.\r\n            _cache.Set(key, cacheEntry, cacheEntryOptions);\r\n        }\r\n        return cacheEntry;\r\n    }\r\n}</pre>\n<p>Let’s analyze the new additions:</p>\n<ol>\n<li><code>SizeLimit</code> was added in <code>MemoryCacheOptions</code>. This adds a size-based policy to our cache container. Size doesn’t have a unit. Instead, we need to set the size amount on each cache entry. In this case, we set the amount to 1 each time with <code>SetSize(1)</code>. This means that the cache is limited to 1024 items.</li>\n<li>When we reach the size limit, which cache item should be removed? You can actually set priority with <code>.SetPriority(CacheItemPriority.High)</code>. The levels are <strong>Low, Normal, High,</strong> and <strong>NeverRemove</strong>.</li>\n<li><code>SetSlidingExpiration(TimeSpan.FromSeconds(2))</code> was added, which sets <strong>sliding expiration</strong> to 2 seconds. That means if an item was not accessed in over 2 seconds it will be removed.</li>\n<li><code>SetAbsoluteExpiration(TimeSpan.FromSeconds(10))</code> was added, which sets <strong>absolute expiration</strong> to 10 seconds. This means than the item will be evicted within 10 seconds if it wasn’t already.</li>\n</ol>\n<p>In addition to the options in the example, you can also set a <code>RegisterPostEvictionCallback</code> delegate, which will be called when an item is evicted.</p>\n<p>That’s a pretty comprehensive feature set. It makes you wonder if there’s even anything else to add. There are actually a couple of things.</p>\n<h2>Problems and Missing features</h2>\n<p>There are a couple of important missing pieces in this implementation.</p>\n<ol>\n<li>While you can set the size-limit, the caching doesn’t actually monitor gc pressure. If we did monitor it, we could tighten policies when the pressure is high, and loosen up policies when the pressure is low.</li>\n<li>When requesting the same item with multiple threads at the same time, the requests don’t wait for the first one to finish. The item will be created multiple times. For example, let’s say we are caching the Avatar, and getting an avatar from the database takes 10 seconds. If we request an avatar 2 seconds after the first request, it will check if the avatar is cached (it isn’t yet), and start another trip to the database.</li>\n</ol>\n<p><strong>As for the first problem</strong> of gc pressure: It’s possible to monitor GC pressure with several techniques and heuristics. This blog post is not about that, but you can read my article <a href=\"https://michaelscodingspot.com/find-fix-and-avoid-memory-leaks-in-c-net-8-best-practices/\">Find, Fix, and Avoid Memory Leaks in C# .NET: 8 Best Practices</a> to learn of some helpful methods.</p>\n<p><strong>The second problem</strong> is easier to solve. In fact, here’s an implementation of <code>MemoryCache</code> that solves it entirely:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class WaitToFinishMemoryCache&lt;TItem&gt;\r\n{\r\n    private MemoryCache _cache = new MemoryCache(new MemoryCacheOptions());\r\n    private ConcurrentDictionary&lt;object, SemaphoreSlim&gt; _locks = new ConcurrentDictionary&lt;object, SemaphoreSlim&gt;();\r\n \r\n    public async Task&lt;TItem&gt; GetOrCreate(object key, Func&lt;Task&lt;TItem&gt;&gt; createItem)\r\n    {\r\n        TItem cacheEntry;\r\n \r\n        if (!_cache.TryGetValue(key, out cacheEntry))// Look for cache key.\r\n        {\r\n            SemaphoreSlim mylock = _locks.GetOrAdd(key, k =&gt; new SemaphoreSlim(1, 1));\r\n \r\n            await mylock.WaitAsync();\r\n            try\r\n            {\r\n                if (!_cache.TryGetValue(key, out cacheEntry))\r\n                {\r\n                    // Key not in cache, so get data.\r\n                    cacheEntry = await createItem();\r\n                    _cache.Set(key, cacheEntry);\r\n                }\r\n            }\r\n            finally\r\n            {\r\n                mylock.Release();\r\n            }\r\n        }\r\n        return cacheEntry;\r\n    }\r\n}\r\n\r\n\r\nUsage:\r\n\r\n\r\nvar _avatarCache = new WaitToFinishMemoryCache&lt;byte[]&gt;();\r\n// ...\r\nvar myAvatar = \r\n await _avatarCache.GetOrCreate(userId, async () =&gt; await _database.GetAvatar(userId));</pre>\n<p>With this, when trying to get an item, if the same item is in the middle of being created by another thread, you will wait for the other to finish first. Then, you will get the already cached item created by the other thread.</p>\n<h3>Explanation of the code</h3>\n<p>This implementation locks the creation of an item. The lock is specific to the key. For example, if we’re waiting to get Alex’s Avatar, we can still get cached values of John or Sarah on another thread.</p>\n<p>The dictionary <code>_locks</code> stores all the locks. Regular locks don’t work with <code>async/await</code>, so we need to use <a href=\"https://blog.cdemi.io/async-waiting-inside-c-sharp-locks/\"><code>SemaphoreSlim</code></a>.</p>\n<p>There are 2 checks to see if the value is already cached if (!_cache.TryGetValue(key, out cacheEntry)). The one inside the lock is the one that ensures there’s a single creation. The one outside of the lock is for optimization.</p>\n<h3>When to use WaitToFinishMemoryCache</h3>\n<p>This implementation obviously has some overhead. Let’s consider when it’s even necessary.</p>\n<p>Use WaitToFinishMemoryCache when:</p>\n<ul>\n<li>When the creation time of an item has some sort of cost, and you want to minimize creations as much as possible.</li>\n<li>When the creation time of an item is very long.</li>\n<li>When the creation of an item has to be ensured to be done once per key.</li>\n</ul>\n<p><strong>Don’t</strong> use WaitToFinishMemoryCache when:</p>\n<ul>\n<li>There’s no danger of multiple threads accessing the same cache item.</li>\n<li>You don’t mind creating the item more than once. For example, if one extra trip to the database won’t change much.</li>\n</ul>\n<h2>Summary</h2>\n<p>Caching is a very powerful pattern. It’s also dangerous and has its own complexities. Cache too much and you can cause GC pressure. Cache too little and you can cause performance issues. Then, there’s distributed caching, which is a whole new world to explore. That’s software development for you, always something new to learn.</p>\n<p>I hope you enjoyed this post. If you’re interested in memory management, my next article is going to be about the dangers of GC pressure and techniques to prevent it, so <a href=\"https://michaelscodingspot.com/subscribe\">keep following</a>. Happy coding.</p>\n<p>Source : <a href=\"https://michaelscodingspot.com/cache-implementations-in-csharp-net/\">https://michaelscodingspot.com/cache-implementations-in-csharp-net/</a></p>\n</div>\n<div class=\"crayon-main\"></div>\n</div>\n",
          "slug": "cache-implementations-in-c-net",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/24/cache-implementations-in-c-net/",
          "date": "2019-05-24T16:59:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0MDA=",
        "node": {
          "id": "cG9zdDoxNDAw",
          "title": "Series: Writing High-Performance C# and .NET Code",
          "content": "<p>I am interested in reading this series on this <a href=\"https://www.stevejgordon.co.uk/writing-high-performance-csharp-and-dotnet-code\">link</a></p>\n<p>This series explores modern C# and .NET/.NET Core techniques and features which support writing more performance, low allocation code.</p>\n<h2>Posts in this series:</h2>\n<ul>\n<li><a href=\"https://www.stevejgordon.co.uk/motivations-for-writing-high-performance-csharp-code\">Part 1: Motivations for Writing High-Performance C# Code</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/introduction-to-benchmarking-csharp-code-with-benchmark-dot-net\">Part 2: Introduction to Benchmarking C# Code with Benchmark .NET</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/an-introduction-to-optimising-code-using-span-t\">Part 3: An Introduction to Optimising Code Using Span&lt;T&gt;</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/creating-strings-with-no-allocation-overhead-using-string-create-csharp\">Part 4: Creating Strings with No Allocation Overhead Using String.Create</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/profiling-dotnetcore-memory-traffic-using-jetbrains-dotmemory\">Part 5: Profiling .NET Core Memory Traffic using JetBrains dotMemory</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/interpreting-the-dotnet-core-memory-timeline-in-jetbrains-dotmemory\">Part 6: Interpreting the .NET Core Memory Timeline in JetBrains dotMemory</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/analysing-the-large-object-heap-in-jetbrains-dotmemory\">Part 7: Analysing the Large Object Heap in JetBrains dotMemory</a></li>\n</ul>\n",
          "slug": "series-writing-high-performance-c-and-net-code",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/24/series-writing-high-performance-c-and-net-code/",
          "date": "2019-05-24T16:33:32",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzOTI=",
        "node": {
          "id": "cG9zdDoxMzky",
          "title": "Html Agility Pack",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><a href=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190524162406.png\"><img class=\"alignnone size-full wp-image-1393\" src=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190524162406.png\" alt=\"\" width=\"1368\" height=\"772\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190524162406.png 1368w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190524162406-300x169.png 300w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190524162406-768x433.png 768w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190524162406-1024x578.png 1024w\" sizes=\"(max-width: 1368px) 100vw, 1368px\" /></a></p>\n</div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// From File\r\nvar doc = new HtmlDocument();\r\ndoc.Load(filePath);\r\n\r\n// From String\r\nvar doc = new HtmlDocument();\r\ndoc.LoadHtml(html);\r\n\r\n// From Web\r\nvar url = \"http://html-agility-pack.net/\";\r\nvar web = new HtmlWeb();\r\nvar doc = web.Load(url);</pre>\n<p>Source: <a href=\"https://html-agility-pack.net/\" target=\"_blank\" rel=\"noopener noreferrer\">html-agility-pack.net/</a></p>\n<p>&nbsp;</p>\n",
          "slug": "html-agility-pack",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/logo256X256.png"
          },
          "link": "https://emolike.net/2019/05/24/html-agility-pack/",
          "date": "2019-05-24T16:26:13",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "testing"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzOTA=",
        "node": {
          "id": "cG9zdDoxMzkw",
          "title": "Building Secure ASP.NET MVC Web Applications",
          "content": "<h2>Introduction</h2>\n<p>Building secure distributed Web applications is challenging. There&#8217;s nothing more exciting than creating a fancy web application. What isn&#8217;t as exciting, however, is the security risk involved. When it comes to web application development in today&#8217;s increasingly digitized, mobilized, Internet-of-Things world, security measures can no longer be the afterthoughts they once were. With distributed applications, you have a lot of moving components and making those components work together in a secure fashion requires a working knowledge that spans products and technologies.</p>\n<p>In this article I will be focusing on the main security measures to be taken into consideration while building your ASP.NET MVC web application:</p>\n<ul>\n<li>Authentication</li>\n<li>Authorization</li>\n<li>Anti XSS (Cross Site Scripting)</li>\n<li>CSRF (Cross Site Request Forgery)</li>\n<li>Cookie Stealing</li>\n<li>Over Posting</li>\n<li>Preventing Open Redirection Attacks</li>\n<li>Blocking Brute Force Attacks</li>\n<li>File Upload Protection</li>\n<li>Prevent SQL Injection in ADO.NET and Entity Framework 6.0</li>\n<li>Using a Dedicated Error Logging API</li>\n<li>General Security Recommendations</li>\n</ul>\n<h2>Authentication</h2>\n<p>Authentication is the process of obtaining identification credentials such as username and password from a user and validating those credentials against some authority. If the credentials are valid, the entity that submitted the credentials is considered an authenticated identity. Once a user has authenticated, a system can decide if the user is authorized to continue. Without knowing who a user is, authorization cannot take place.</p>\n<p>There are 5 authentication modes in ASP.NET: Windows/Forms/Passport/Federated/None</p>\n<ul>\n<li>Forms Authentication: Using this provider causes unauthenticated requests to be redirected to a specified HTML form using client side redirection. The user can then supply logon credentials, and post the form back to the server. If the application authenticates the request (using application-specific logic), ASP.NET issues a cookie that contains the credentials or a key for reacquiring the client identity. Subsequent requests are issued with the cookie in the request headers, which means that subsequent authentications are unnecessary.</li>\n<li>Passport Authentication: This is a centralized authentication service provided by Microsoft that offers a single logon facility and membership services for participating sites. ASP.NET, in conjunction with the Microsoft® Passport software development kit (SDK), provides similar functionality as Forms Authentication to Passport users.</li>\n<li>Windows Authentication: This provider utilizes the authentication capabilities of IIS. After IIS completes its authentication, ASP.NET uses the authenticated identity&#8217;s token to authorize access.</li>\n<li>Federated: Delegate authentication to an external identity provider. This can simplify development, minimize the requirement for user administration, and improve the user experience of the application.</li>\n<li>None: Used when you are not authenticating users at all, or when you are developing custom authentication code (when you are not using the ASP.NET authentication provider).</li>\n</ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// web.config file\r\n&lt;authentication mode = \"[Windows/Forms/Passport/Federated/None]\"&gt;\r\n&lt;/authentication&gt;</pre>\n<p>Things to do in the authentication process:</p>\n<ul>\n<li>Make sure the user password is complex and hashed before storing it in the users table</li>\n<li>When you want to authenticate a user who is trying to login, make sure you hash the password he provided in the input field and compare the value with the hashed value stored in the Database. It is not recommended to use Ecrypt/Decrypt mechanism, the best practice is to hash the password (I recommend MD5 hashing algorithm)</li>\n<li>Modify the Session ID after logout and on login generate new Session ID by using &#8220;System.Web.SessionState.SessionIDManager&#8221;</li>\n<li>Implement two factors authentication</li>\n<li>Make sure that none of the admin and regular users have &#8220;db_owner&#8221; access to your Database</li>\n</ul>\n<h2>Authorization</h2>\n<p>It is only a matter of time in developing most websites that you&#8217;ll need to implement a way of restricting access to parts of the site. Authorization determines whether an identity should be granted access to a specific resource. In ASP.NET, there are two ways to authorize access to a given resource:</p>\n<ul>\n<li>URL authorization: URL authorization is performed to map users and roles to URLs in ASP.NET applications. This process can be used to selectively allow or deny access to arbitrary parts of an application (typically directories) for specific users or roles.</li>\n<li>File authorization: This is configured upon deployment of the website to protect the resources and prevent an attacker from browsing the directories</li>\n</ul>\n<p>If you are using the ASP.NET membership provider for authentication then it&#8217;s quite easy to use Authorization in MVC. Here is an example:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Authorize(Users = \"admin,jsmith\")] \r\npublic ActionResult AddArticle() \r\n{ \r\n return View(); \r\n}</pre>\n<p>The Authorize attribute can be applied to the roles as well.</p>\n<h2>Anti XSS (Cross Site Scripting)</h2>\n<p>This is unfortunate because XSS is the number-one security vulnerability on the Web, and it’s largely because of web developers unfamiliar with the risks.</p>\n<p>XSS can be carried out in one of two ways: by a user entering nasty script commands into a website that accepts unsanitized user input or by user input being directly displayed on a page. The first example is called passive injection—whereby a user enters nastiness into a textbox, for example, and that script gets saved into a database and redisplayed later. The second is called active injection and involves a user entering nastiness into an input, which is immediately displayed onscreen.</p>\n<p><strong>Passive Injection</strong></p>\n<p>This type of attack occurs when the website accepts unsanitized input by the attacker and later displays it to the victim. Suppose we have an online messaging board or blog that allows users to post comments. If the input is accepted as is, the attacker can inject a script tag in the comment which might be something like this:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">This is a nice post&lt;/div&gt;&lt;script&gt;src=http://hackingsite.com/badscript.js&lt;/script&gt;\r\n</pre>\n<p><strong>Active Injection</strong></p>\n<p>For active injection, the user input is directly used on the webpage and is not saved on the server. Suppose we have a website that takes user&#8217;s name as input from the query string and shows a welcome message. As an attacker, I can pass this as the query string parameter: jsmith\\x3cscript\\x3e%20alert(\\x27weak security\\x27)%20\\x3c/script\\x3e. This will display an alert message &#8220;weak security&#8221; on the webpage.</p>\n<p>You should use the following prevention steps to avoid introducing XSS into your application:</p>\n<ul>\n<li>The ASP.NET Request Validation should be Enabled all the time</li>\n<li>Ensure URL query string is encoded</li>\n<li>Ensure content sanitization is enabled to prevent adding scripts and untrusted attributes in the HTML content (you can use the AntiXSS library from nuget)</li>\n</ul>\n<h2>CSRF (Cross Site Request Forgery)</h2>\n<p>A cross-site request forgery (CSRF, pronounced C-surf, also known by the acronym XSRF) attack can be quite a bit more potent than simple XSS, discussed earlier. This section discusses CSRF, what it means to you, and how to prevent it.</p>\n<p>Cross-Site Request Forgery (CSRF) is an attack where a malicious site sends a request to a vulnerable site where the user is currently logged in.</p>\n<p>There are two ways to prevent CSRF attacks:</p>\n<ul>\n<li>Check that incoming requests have a Referer header referencing your domain (use Request.UrlReferrer or Request.ServerVariables). This will stop requests submitted from a third-party domain. However, some people disable their browser’s Referer header for privacy reasons, and attackers can sometimes spoof that header. This is a weak solution</li>\n<li>Put a user-specific token as a hidden field in submit forms, and check that the right value was submitted. The user requests an HTML page that contains a submit form, you include two tokens in the response. One token is sent as a cookie, the other is placed in a hidden form field. The tokens are generated randomly so that an adversary cannot guess the values. When the user submits the form, it must send both tokens back to the server (The browser automatically does this when the user submits the form.). If a request does not include both tokens, the server disallows the request</li>\n</ul>\n<p>In MVC you can use the AntiForgeryToken to achieve this mission:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">@using (Html.BeginForm(\"Register\", \"Account\", FormMethod.Post, new { @class = \"form-horizontal\" }))\r\n{\r\n  @Html.AntiForgeryToken()\r\n}\r\n\r\nThis will output something like the following:\r\n&lt;form action=\"/Account/Register\" class=\"form-horizontal\" method=\"post\"&gt;\r\n &lt;input name=\"__RequestVerificationToken\" type=\"hidden\" value=\"sK0JeZQqjaazgtWM5SYPXHhng0CoEWrpE_MWyiajpmDPKL2rjSoUpQAhEYoo1\" /&gt;\r\n &lt;!-- rest of form goes here --&gt;\r\n&lt;/form&gt;</pre>\n<h2>Cookie Stealing</h2>\n<p>Cookies are one of the things that make the Web usable, as most sites use cookies to identify users after login. Without them, life becomes login box after login box. If attackers can steal your cookie, they can often impersonate you. As a user, you can disable cookies on your browser to minimize the theft of your particular cookie (for a given site), but chances are you’ll get a snarky warning that “Cookies must be enabled to access this site.”</p>\n<p>To prevent cookie stealing you must apply the apply the following:</p>\n<ul>\n<li>Use SSL certificate, only allow HTTPS requests</li>\n<li>Apply Secure and HttpOnly flags in the web.config. This will ensure that they are only sent over an SSL connection</li>\n</ul>\n<h2>Over Posting</h2>\n<p>ASP.NET MVC Model Binding is a powerful feature that greatly simplifies the process handling user input by automatically mapping the input to your model properties based on naming conventions. However, this presents another attack vector, which can allow your attacker an opportunity to populate model properties you didn’t even put on your input forms.</p>\n<p>How do we prevent this? Well, a few ways. You can mark the property as [ReadOnly]. More commonly, you can use a BindAttribute on the method parameters and just include (whitelist) the properties you want to allow for binding:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public async Task&lt;IActionResult&gt; Create([Bind(\"First,Last\")] Person person)\r\n</pre>\n<p>Where Person is the model class:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">public class Person\r\n{\r\n  public int ID { get; set; }\r\n  public string First { get; set; }\r\n  public string Last { get; set; }\r\n  public bool IsAdmin { get; set; }\r\n}</pre>\n<p>Or don&#8217;t let models that look like this get anywhere near the user. This is the case for ViewModels. Make a model that looks like the View. Then do the work. You can make the work easier with something like AutoMapper.</p>\n<h2>Preventing Open Redirection Attacks</h2>\n<p><strong>What is an Open Redirection Attack?</strong></p>\n<p>Any web application that redirects to a URL that is specified via the request such as the QueryString or form data can potentially be tampered with to redirect users to an external, malicious URL. This tampering is called an open redirection attack.Whenever your application logic redirects to a specified URL, you must verify that the redirection URL hasn&#8217;t been tampered with.</p>\n<p>If we try to visit an authorized page and we are not logged in, we are redirected to the login page. This redirection looks like this:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">/Account/Login?ReturnUrl=%2FHome%2FIndex.\r\n</pre>\n<p>Once we login we are redirected to the /Home/Index page, as mentioned by the ReturnUrl.</p>\n<p>Imagine, if you received an email which has a hyperlink like this:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">http://www.mydomain.com?ReturnUrl=www.fakedomain.com\r\n</pre>\n<p>So the user visits the page related to mydomain.com and enters the login name and password. Once the user enters the credentials, he is redirected to fakedomain.com which the attacker has made sure that the page looks similar to the login page of my mydomain.com. The victim might think that he is redirected to the login page again because he mistyped the credentials. So the user types in the username and password again (this time on malicious website) and clicks on Login. The attacker can save the username and password and redirect the victim to the legitimate website. The legitimate website had already authenticated the user on previous attempt, so the user sees the required page that he was trying to access.</p>\n<p>In this way, the attacker has stolen the user credentials without the victim ever knowing about it.</p>\n<p><strong>How To Prevent?</strong></p>\n<p>We can take advantage of the changes in ASP.NET MVC 4 &amp; 5, a new method was added to validate before redirecting the URL, the method is called &#8220;RedirectToLocal&#8221;. Whenever we redirect the user to any URL in the MVC application, we must check that Url is local or not. If not, we must raise an exception that open redirection attack was attempted.</p>\n<p>In MVC5, the AccountController Login method has:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">return RedirectToLocal(returnUrl);\r\n</pre>\n<div id=\"content\" class=\"group\">\n<div class=\"zone zone-content\">\n<article class=\"blog-post content-item\">This RedirectToLocal tests whether the URL is local or not using Url.IsLocalUrl() method. Similarly, if we are redirecting the user to any page based on the input coming from the user, we should test if the URL is local or not.</p>\n<h2>Blocking Brute Force Attacks</h2>\n<p>A brute-force attack is an attempt to discover a password by systematically trying every possible combination of letters, numbers, and symbols until you discover the one correct combination that works.<br />\nTo prevent this type of attacks, the following steps should be implemented:</p>\n<ul>\n<li>Lock user account after specific number of login attempts</li>\n<li>Enable Google reCAPTCHA on Login page</li>\n</ul>\n<h2>File Upload Protection</h2>\n<p>To prevent the attackers from uploading malicious files, you need to implement the following steps:</p>\n<ul>\n<li>The file to be uploaded should be validated against a white-list extensions</li>\n<li>Restrict the maximum file size</li>\n<li>Disallow uploading executable files</li>\n</ul>\n<h2>Prevent SQL Injection in ADO.NET and EF 6.0 (Entity Framework 6.0)</h2>\n<p>SQL injection attack enables a malicious user to execute commands in the website&#8217;s database by using the privileges granted to the website&#8217;s login.</p>\n<p>To prevent the SQL injection attacks, the following prevention steps should be implemented:</p>\n<ul>\n<li>Input validation (constrain and sanitize input data). Check for bad input data by validating the type and format of the data</li>\n<li>Use SQL stored procedures for data access. The dynamic construction of SQL statements is being protected with the use of type-safe SQL parameters for data access</li>\n<li>Avoid using an over-privileged database login</li>\n<li>Avoid disclosing database error information, the actual error is logged in log file and the user is being redirected to a custom error page. Never display the actual error information</li>\n<li>Encrypt the SQL connection to protect sensitive data: The Entity Framework does not directly handle data encryption. If users access data over a public network, your application should establish an encrypted connection to the data source to increase security</li>\n</ul>\n<h2>Using a Dedicated Error Logging API</h2>\n<p>The best solution is to never turn off custom errors in any environment. Instead, I recommend that you make use of a dedicated error logging system like ELMAH, NLog ot log4net.</p>\n<h2>General Security Recommendations</h2>\n<p>The following security steps should be applied upon the deployment of the MVC web application:</p>\n<ul>\n<li>Enable the response header “Content-Security-Policy”</li>\n<li>Enable the response header &#8220;X-Content-Type-Options&#8221;</li>\n<li>Enable the response header &#8220;X-XSS-Protection”</li>\n<li>Block XFS attacks (Cross-Frame Scripting) by enabling the response header “X-Frame-Options”</li>\n<li>Prevent disclose the server information and the .NET framework information from the response header. The following headers should be removed from the response:\n<ul>\n<li>Server &#8211; Specifies web server version (IIS version)</li>\n<li>X-Powered-By &#8211; Indicates that the website is &#8220;powered by ASP.NET.&#8221;</li>\n<li>X-AspNet-Version &#8211; Specifies the version of ASP.NET used.</li>\n</ul>\n</li>\n</ul>\n<h2>References</h2>\n<table width=\"918\">\n<tbody>\n<tr>\n<td>Resource</td>\n<td>URL</td>\n</tr>\n<tr>\n<td>Microsoft Security Developer Center</td>\n<td><a href=\"http://msdn.microsoft.com/en-us/security/default.aspx\">http://msdn.microsoft.com/en-us/security/default.aspx</a></td>\n</tr>\n<tr>\n<td>Book: Beginnning ASP.NET Security (Barry Dorrans)</td>\n<td><a href=\"http://www.wrox.com/WileyCDA/WroxTitle/Beginning-ASP-NETSecurity.productCd-0470743654.html\">http://www.wrox.com/WileyCDA/WroxTitle/Beginning-ASP-NETSecurity.productCd-0470743654.html</a></td>\n</tr>\n<tr>\n<td>Free e-book: OWASP Top 10 for .NET Developers</td>\n<td><a href=\"http://www.troyhunt.com/2010/05/owasp-top-10-for-net-developers-part-1.html\">http://www.troyhunt.com/2010/05/owasp-top-10-for-net-developers-part-1.html</a></td>\n</tr>\n<tr>\n<td>AntiXSS</td>\n<td><a href=\"http://antixss.codeplex.com/\">http://antixss.codeplex.com/</a></td>\n</tr>\n<tr>\n<td>Microsoft Information Security Team (makers of<br />\nAntiXSS and CAT.NET)</td>\n<td><a href=\"http://blogs.msdn.com/securitytools\">http://blogs.msdn.com/securitytools</a></td>\n</tr>\n<tr>\n<td>Open Web Application Security Project (OWASP)</td>\n<td><a href=\"http://www.owasp.org/\">http://www.owasp.org/</a></td>\n</tr>\n</tbody>\n</table>\n</article>\n</div>\n</div>\n<div class=\"zone zone-after-content\">Source : <a href=\"https://weblogs.asp.net/jhallal/building-secure-asp-net-mvc-web-applications\">https://weblogs.asp.net/jhallal/building-secure-asp-net-mvc-web-applications</a></div>\n",
          "slug": "building-secure-asp-net-mvc-web-applications",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/24/building-secure-asp-net-mvc-web-applications/",
          "date": "2019-05-24T16:07:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Security"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNzk=",
        "node": {
          "id": "cG9zdDoxMzc5",
          "title": "Budgie: How to use Alt+Shift to switch keyboard layouts?",
          "content": "<p>In  Budgie , you would have noticed that using the GUI Settings &#8211; Keyboard &#8211; Typing &#8211; Switch to Input Source does not respond to a <kbd>ALT</kbd>+<kbd>Shift</kbd> by itself. You need a third keystroke.</p>\n<p>However you can go behind the scenes and install the package <code>dconf-editor</code> and edit one or both of the following keys to get things working:</p>\n<p>Go to <code>org.gnome.desktop.wm.keybindings</code></p>\n<p>change switch-input-source to <code>['&amp;lt;Alt&amp;gt;Shift_L']</code></p>\n<p>Likewise the key switch-input-source-backward change to <code>['&amp;lt;Shift&amp;gt;Alt_L']</code></p>\n",
          "slug": "budgie-how-to-use-altshift-to-switch-keyboard-layouts",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/23/budgie-how-to-use-altshift-to-switch-keyboard-layouts/",
          "date": "2019-05-23T16:46:38",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNzU=",
        "node": {
          "id": "cG9zdDoxMzc1",
          "title": "Awesome .NET",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\">\n<p class=\"imgd\">Your go-to .NET Toolbox. A collection of Awesome .NET libraries, tools &amp; frameworks. 738 projects organized into 99 categories.</p>\n<p class=\"imgs\">Source: <a href=\"https://dotnet.libhunt.com/\" target=\"_blank\" rel=\"noopener noreferrer\">dotnet.libhunt.com/</a></p>\n</div>\n",
          "slug": "awesome-net",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/logo-1b45985ccb8586ec724a5549a436d65f717476c7e9e407040f0d5aea23c19cfe.png"
          },
          "link": "https://emolike.net/2019/05/23/awesome-net/",
          "date": "2019-05-23T12:15:19",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNzE=",
        "node": {
          "id": "cG9zdDoxMzcx",
          "title": "Developing Asynchronous Microservices",
          "content": "<p><iframe style=\"border: 1px solid #CCC; border-width: 1px; margin-bottom: 5px; max-width: 100%;\" src=\"//www.slideshare.net/slideshow/embed_code/key/jjk9gNeyjjLt4B\" width=\"700\" height=\"485\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" allowfullscreen=\"allowfullscreen\"> </iframe></p>\n<div style=\"margin-bottom: 5px;\"><strong> <a title=\"GotoChgo 2019: Not Just Events: Developing Asynchronous Microservices\" href=\"//www.slideshare.net/chris.e.richardson/not-just-events-developing-asynchronous-microservices\" target=\"_blank\" rel=\"noopener noreferrer\">GotoChgo 2019: Not Just Events: Developing Asynchronous Microservices</a> </strong> from <strong><a href=\"https://www.slideshare.net/chris.e.richardson\" target=\"_blank\" rel=\"noopener noreferrer\">Chris Richardson</a></strong></div>\n",
          "slug": "developing-asynchronous-microservices",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/23/developing-asynchronous-microservices/",
          "date": "2019-05-23T11:31:30",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNjk=",
        "node": {
          "id": "cG9zdDoxMzY5",
          "title": "Linux &#8211; How to setup drives to automount",
          "content": "<p><iframe title=\"Solus - How to setup drives to mount automatically\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/_1SUTn8Nw2M?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "linux-how-to-setup-drives-to-automount",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/22/linux-how-to-setup-drives-to-automount/",
          "date": "2019-05-22T16:49:04",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNjc=",
        "node": {
          "id": "cG9zdDoxMzY3",
          "title": "SSH to linux server with ssh key not password",
          "content": "<p>I always create new linux servers for deploying our applications and due to this I don&#8217;t want to remember all these password so I use a ssh key and push the publish key to the vps and use my private key to authenticate</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">ssh-copy-id -i $HOME/.ssh/id_rsa.pub root@xx.xx.xx.xx\r\n=&gt; then you will asked to enter the root password\r\n=&gt; then you can login direct using ssh root@xx.xx.xx.xx\r\n\r\n</pre>\n<p>It is also used when trying to open ssh session between nodes like VMs nodes.</p>\n<p>&nbsp;</p>\n",
          "slug": "ssh-to-linux-server-with-ssh-key-not-password",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/21/ssh-to-linux-server-with-ssh-key-not-password/",
          "date": "2019-05-21T18:21:46",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNjU=",
        "node": {
          "id": "cG9zdDoxMzY1",
          "title": "Fix Roslyn folder not copied to the \\bin in Visual Studio",
          "content": "<p>This is a very common issue and simple workaround is this command after build and restore nuggets:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n",
          "slug": "fix-roslyn-folder-not-copied-to-the-bin-in-visual-studio",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/21/fix-roslyn-folder-not-copied-to-the-bin-in-visual-studio/",
          "date": "2019-05-21T17:37:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNjI=",
        "node": {
          "id": "cG9zdDoxMzYy",
          "title": "Deploy dotnet core on ubuntu",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># Add Microsoft keys\r\nwget https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb\r\nsudo dpkg -i packages-microsoft-prod.deb\r\n\r\n\r\n# Removing Apache2 and install Nginx instead\r\nsudo apt-get remove --purge apache2 apache2-utils\r\nsudo rm -rf /etc/apache2\r\nsudo add-apt-repository ppa:nginx/stable\r\n\r\n\r\n# Start installing \r\nsudo apt-get install apt-transport-https\r\nsudo apt-get update\r\nsudo apt-get install python-software-properties\r\nsudo apt-get install nginx\r\nsudo apt-get install dotnet-sdk-2.2\r\n\r\n\r\n# Configure Nginx\r\nsudo service nginx start\r\nsudo systemctl enable nginx \r\nnano /etc/nginx/sites-available/default\r\nserver {\r\n    listen        80;\r\n    location / {\r\n        proxy_pass         http://localhost:5000;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header   Upgrade $http_upgrade;\r\n        proxy_set_header   Connection keep-alive;\r\n        proxy_set_header   Host $host;\r\n        proxy_cache_bypass $http_upgrade;\r\n        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header   X-Forwarded-Proto $scheme;\r\n    }\r\n}\r\n\r\n</pre>\n<p>Another good resource for CentOS : <a href=\"http://www.projectcodify.com/hosting-aspnet-core-on-linux-using-nginx\">http://www.projectcodify.com/hosting-aspnet-core-on-linux-using-nginx</a></p>\n",
          "slug": "deploy-dotnet-core-on-ubuntu",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/21/deploy-dotnet-core-on-ubuntu/",
          "date": "2019-05-21T17:22:46",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNTk=",
        "node": {
          "id": "cG9zdDoxMzU5",
          "title": "Install MS SQL Server on ubuntu",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo apt-get install -y software-properties-common\r\nwget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -\r\nsudo add-apt-repository \"$(wget -qO- https://packages.microsoft.com/config/ubuntu/16.04/mssql-server-2017.list)\"\r\nsudo apt-get update\r\nsudo apt-get install -y mssql-server\r\nsudo /opt/mssql/bin/mssql-conf setup\r\n</pre>\n<p>For More info : <a href=\"https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-ubuntu?view=sql-server-2017\">https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-ubuntu?view=sql-server-2017</a></p>\n",
          "slug": "install-ms-sql-server-on-ubuntu",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/21/install-ms-sql-server-on-ubuntu/",
          "date": "2019-05-21T16:16:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Database"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNTY=",
        "node": {
          "id": "cG9zdDoxMzU2",
          "title": "Configure UFW Firewall on Ubuntu",
          "content": "<h2>Installing UFW</h2>\n<p>In Ubuntu 16.04, UFW is installed by default. If not, you can easily install it by running the following command:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt-get install ufw\r\nsudo ufw allow ssh\r\nsudo ufw enable\r\nsudo ufw allow 80/tcp\r\nsudo ufw allow 1433/tcp\r\n\r\n</pre>\n<p>You can also check the status of UFW by running the following command:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo ufw status</pre>\n<p>You should see the following output:</p>\n<p><a href=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190521161043.png\"><img class=\"alignnone size-full wp-image-1357\" src=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190521161043.png\" alt=\"\" width=\"445\" height=\"273\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190521161043.png 445w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190521161043-300x184.png 300w\" sizes=\"(max-width: 445px) 100vw, 445px\" /></a></p>\n<p>For More info : <a href=\"https://hostpresto.com/community/tutorials/install-and-configure-ufw-firewall-on-ubuntu-16-04/\">https://hostpresto.com/community/tutorials/install-and-configure-ufw-firewall-on-ubuntu-16-04/</a></p>\n",
          "slug": "configure-ufw-firewall-on-ubuntu",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/21/configure-ufw-firewall-on-ubuntu/",
          "date": "2019-05-21T16:12:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNTQ=",
        "node": {
          "id": "cG9zdDoxMzU0",
          "title": "How to change history size in Linux",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">nano /etc/bash.bashrc</pre>\n<p>Add these lines in the end of this file</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">export HISTSIZE=10000\r\nexport HISEFILESIZE=10000</pre>\n<p>&nbsp;</p>\n",
          "slug": "how-to-change-history-size-in-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/21/how-to-change-history-size-in-linux/",
          "date": "2019-05-21T16:06:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNTE=",
        "node": {
          "id": "cG9zdDoxMzUx",
          "title": "Be human at work infographic",
          "content": "<p><a href=\"https://emolike.net/wp-content/uploads/2019/05/0-3.jpeg\"><img class=\"alignnone size-full wp-image-1352\" src=\"https://emolike.net/wp-content/uploads/2019/05/0-3.jpeg\" alt=\"\" width=\"2825\" height=\"2389\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/0-3.jpeg 2825w, https://emolike.net/wp-content/uploads/2019/05/0-3-300x254.jpeg 300w, https://emolike.net/wp-content/uploads/2019/05/0-3-768x649.jpeg 768w, https://emolike.net/wp-content/uploads/2019/05/0-3-1024x866.jpeg 1024w\" sizes=\"(max-width: 2825px) 100vw, 2825px\" /></a></p>\n<p>Created By <a href=\"https://www.linkedin.com/in/lola-ball-3410531/\">https://www.linkedin.com/in/lola-ball-3410531/</a></p>\n",
          "slug": "be-human-at-work-infographic",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/19/be-human-at-work-infographic/",
          "date": "2019-05-19T12:10:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Others"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNDg=",
        "node": {
          "id": "cG9zdDoxMzQ4",
          "title": "Reactive Extensions for .NET Developers",
          "content": "<p><iframe title=\"Reactive Extensions for .NET Developers\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/c9Yq-XE58hA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "reactive-extensions-for-net-developers",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/19/reactive-extensions-for-net-developers/",
          "date": "2019-05-19T03:08:31",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNDU=",
        "node": {
          "id": "cG9zdDoxMzQ1",
          "title": "Giving Clarity to LINQ Queries by Extending Expressions &#8211; Ed Charbeneau",
          "content": "<p><iframe title=\"Giving Clarity to LINQ Queries by Extending Expressions - Ed Charbeneau\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/Ir4rIBfKcx0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "giving-clarity-to-linq-queries-by-extending-expressions-ed-charbeneau",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/18/giving-clarity-to-linq-queries-by-extending-expressions-ed-charbeneau/",
          "date": "2019-05-18T22:25:56",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNDM=",
        "node": {
          "id": "cG9zdDoxMzQz",
          "title": "Functional Design Patterns &#8211; Scott Wlaschin",
          "content": "<p><iframe title=\"Functional Design Patterns - Scott Wlaschin\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/srQt1NAHYC0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "functional-design-patterns-scott-wlaschin",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/18/functional-design-patterns-scott-wlaschin/",
          "date": "2019-05-18T21:54:45",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "F#"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMzg=",
        "node": {
          "id": "cG9zdDoxMzM4",
          "title": "Uptime Robot",
          "content": "<h2>Downtime Happens. Get Notified!</h2>\n<h3>50 Monitors, Checked Every 5 Minutes, Totally Free!</h3>\n<div id=\"at_zurlpreview\">\n<p class=\"imgs\">\n</div>\n<p><img class=\"alignnone size-full wp-image-1339\" src=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190518180716.png\" alt=\"\" width=\"1238\" height=\"710\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190518180716.png 1238w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190518180716-300x172.png 300w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190518180716-768x440.png 768w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190518180716-1024x587.png 1024w\" sizes=\"(max-width: 1238px) 100vw, 1238px\" /></p>\n<p class=\"imgd\">Free Website Uptime Monitoring</p>\n<p class=\"imgs\">Source: <a href=\"https://uptimerobot.com/\" target=\"_blank\" rel=\"noopener noreferrer\">uptimerobot.com/</a></p>\n",
          "slug": "uptime-robot",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/facebook.jpg"
          },
          "link": "https://emolike.net/2019/05/18/uptime-robot/",
          "date": "2019-05-18T18:08:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMzU=",
        "node": {
          "id": "cG9zdDoxMzM1",
          "title": "Design Tech Talk Series Presents: OO Design for Testability",
          "content": "<p><iframe title=\"Design Tech Talk Series Presents: OO Design for Testability\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/acjvKJiOvXw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "design-tech-talk-series-presents-oo-design-for-testability",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/18/design-tech-talk-series-presents-oo-design-for-testability/",
          "date": "2019-05-18T17:26:49",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMzM=",
        "node": {
          "id": "cG9zdDoxMzMz",
          "title": "Dynamic Programming Introduction",
          "content": "<p><iframe title=\"Dynamic Programming Introduction\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/W2ote4jCuYw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "dynamic-programming-introduction",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/18/dynamic-programming-introduction/",
          "date": "2019-05-18T16:27:22",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Algorithms"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMzE=",
        "node": {
          "id": "cG9zdDoxMzMx",
          "title": "JavaScript libraries for implementing OSM interactive maps",
          "content": "<p>A number of client JavaScript libraries can be used to interactively show OpenStreetMap tiled web maps<sup id=\"fnref:1\"><a class=\"footnote\" href=\"https://ircama.github.io/osm-carto-tutorials/map-client/#fn:1\">1</a></sup>. Each configuration in this document points to the OSM tile server (<em>tile.openstreetmap.org</em>) with a note on how to reconfigure the related script to connect your own tile server (<em>http://your-server-ip/osm_tiles</em>).</p>\n<h4 id=\"leaflet\"><a href=\"https://ircama.github.io/osm-carto-tutorials/map-client/\">https://ircama.github.io/osm-carto-tutorials/map-client/</a></h4>\n",
          "slug": "javascript-libraries-for-implementing-osm-interactive-maps",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/18/javascript-libraries-for-implementing-osm-interactive-maps/",
          "date": "2019-05-18T15:50:31",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "Technology"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMjk=",
        "node": {
          "id": "cG9zdDoxMzI5",
          "title": "Applying S.O.L.I.D. Principles in .NET C#",
          "content": "<p><iframe title=\"Applying S.O.L.I.D. Principles in .NET C#\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/8ZJ8BVlDIQ4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "applying-s-o-l-i-d-principles-in-net-c",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/18/applying-s-o-l-i-d-principles-in-net-c/",
          "date": "2019-05-18T15:08:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMjY=",
        "node": {
          "id": "cG9zdDoxMzI2",
          "title": "Writing Testable &#038; Clean Code",
          "content": "<p id=\"6fcb\" class=\"graf graf--p graf-after--figure\">Many developers have a hate relationship with testing. However, I believe the main cause of that is code that is highly-coupled and difficult to test.</p>\n<p id=\"f783\" class=\"graf graf--p graf-after--p\">This post states some principles and guidelines that can help you write easily-testable code, which is not only easier to test but also more flexible and maintainable, due to its better modularity. Here at Feedzai, we try to follow these principles and guidelines in order to have better code quality, increased test coverage and confidence in the products we deliver.</p>\n<p id=\"0267\" class=\"graf graf--p graf-after--p\">This article mostly serves as an introduction to these concepts. If you want to understand these concepts better, you may want to do some additional research. The article explores the SOLID principles, the Law of Demeter, some other guidelines and ends with a small example that illustrates some of the aspects explored here.</p>\n<h3 id=\"3fc1\" class=\"graf graf--h3 graf-after--p\">SOLID design principles</h3>\n<p id=\"06cb\" class=\"graf graf--p graf-after--h3\">One of the most well-known collections of principles in the software engineering industry are the SOLID principles, documented by Robert C. Martin (also known as Uncle Bob).</p>\n<p id=\"b2c6\" class=\"graf graf--p graf-after--p\">This collection of principles can help your code to be more modular and to have increased testability. Let’s go deeper into each of these principles:</p>\n<h4 id=\"236f\" class=\"graf graf--h4 graf-after--p\">Single Responsibility Principle (SRP)</h4>\n<blockquote id=\"8f76\" class=\"graf graf--blockquote graf-after--h4\"><p>Each software module should only have one reason to change.</p></blockquote>\n<p id=\"290c\" class=\"graf graf--p graf-after--blockquote\">So, what does that mean? Let’s take an example:</p>\n<p id=\"ef48\" class=\"graf graf--p graf-after--p\">Imagine that you write a program that calls an external REST API endpoint, does some kind of processing with the received data and writes it to a CSV file. A naïve approach might be to have everything in the same class. However, this class has multiple reasons to change:</p>\n<ul class=\"postList\">\n<li id=\"bebe\" class=\"graf graf--li graf-after--p\">You might want to change the API call to a different provider or change it to read from a different source, such as a file.</li>\n<li id=\"c11b\" class=\"graf graf--li graf-after--li\">The processing that you are doing might need to be changed.</li>\n<li id=\"8eeb\" class=\"graf graf--li graf-after--li\">You may want to write the results to a different output, maybe a different file format.</li>\n<li id=\"a577\" class=\"graf graf--li graf-after--li\">In addition, you might want to be able to have multiple types of inputs and outputs that can be interchanged in runtime based on some kind of configuration or input.</li>\n</ul>\n<p id=\"bfa3\" class=\"graf graf--p graf-after--li\">For these reasons, you should break your application down into multiple classes and interfaces. Here’s an example:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">interface DataInput {\r\n  Data get();\r\n}\r\n\r\ninterface DataOutput {\r\n  void write(ProcessingResult result);\r\n}\r\n\r\ninterface DataProcessingStrategy {\r\n  ProcessingResult process(Data data);\r\n}\r\n\r\nclass DataProcessor {\r\n  DataProcessor(DataInput dataInput, DataOutput dataOutput, DataProcessingStrategy strategy) {\r\n    ...\r\n  }\r\n  process() {\r\n    Data data = this.dataInput.get();\r\n    ProcessingResult result = this.strategy.process(data);\r\n    this.dataOutput.output(result);\r\n  }\r\n}</pre>\n<section class=\"section section--body section--first\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"ba65\" class=\"graf graf--p graf-after--figure\">This principle can be applied at both class and method levels (and to some extent at the package level, but <a class=\"markup--anchor markup--p-anchor\" href=\"http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod\">Robert Martin has specific principles for that</a>).</p>\n<p id=\"83b0\" class=\"graf graf--p graf-after--p\">However, you should be careful not to overdo it. The Single Responsibility Principle does not state that a module should only do one thing. It states it should have one and only one reason to change. For more information about this, please read <a class=\"markup--anchor markup--p-anchor\" href=\"https://blog.cleancoder.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://blog.cleancoder.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html\">this blog post from Robert Martin</a>.</p>\n<h4 id=\"2eea\" class=\"graf graf--h4 graf-after--p\">Open/Closed Principle (OCP)</h4>\n<blockquote id=\"567f\" class=\"graf graf--blockquote graf-after--h4\"><p>Your classes should be open for extension but closed to modifications.</p></blockquote>\n<p id=\"3ea2\" class=\"graf graf--p graf-after--blockquote\">This means that your design should allow the addition of new features with minimal change to the existing code. This can be achieved by coding against abstractions instead of concrete implementations, as well as through the use of some design patterns such as <a class=\"markup--anchor markup--p-anchor\" href=\"https://sourcemaking.com/design_patterns/decorator\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://sourcemaking.com/design_patterns/decorator\">Decorator</a>, <a class=\"markup--anchor markup--p-anchor\" href=\"https://sourcemaking.com/design_patterns/visitor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://sourcemaking.com/design_patterns/visitor\">Visitor</a> and <a class=\"markup--anchor markup--p-anchor\" href=\"https://sourcemaking.com/design_patterns/strategy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://sourcemaking.com/design_patterns/strategy\">Strategy</a>. Following the Single Responsibility Principle also helps with that, as you will have things segregated.</p>\n<p id=\"c4d9\" class=\"graf graf--p graf-after--p\">The best way to think about this principle is to think about a plugin architecture. In such a scenario, plugins are developed to add behaviour to a system without changing any of its code.</p>\n<p id=\"82cd\" class=\"graf graf--p graf-after--p\">Another smaller but more concrete example is Java’s Collections.sort method. It can sort any type of class that implements the Comparable interface without modifying the sort method for each new class. If you instead had a sort method with a switch statement with a case for every type you wanted to compare, you would have to modify it every time you needed to compare a new type.</p>\n<p id=\"a82d\" class=\"graf graf--p graf-after--p\">For more information on this principle, you can read <a class=\"markup--anchor markup--p-anchor\" href=\"https://blog.cleancoder.com/uncle-bob/2014/05/12/TheOpenClosedPrinciple.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://blog.cleancoder.com/uncle-bob/2014/05/12/TheOpenClosedPrinciple.html\">Robert Martin’s blog post about it</a>.</p>\n<h4 id=\"9716\" class=\"graf graf--h4 graf-after--p\">Liskov Substitution Principle (LSP)</h4>\n<blockquote id=\"15f1\" class=\"graf graf--blockquote graf-after--h4\"><p>Objects of a superclass shall be replaceable with objects of its subclasses without breaking the application.</p></blockquote>\n<p id=\"9da5\" class=\"graf graf--p graf-after--blockquote\">A good example for this principle is the s<a class=\"markup--anchor markup--p-anchor\" href=\"https://en.wikipedia.org/wiki/Square-rectangle_problem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://en.wikipedia.org/wiki/Square-rectangle_problem\">quare-rectangle problem</a>: you might be tempted to have a <em class=\"markup--em markup--p-em\">Shape</em> interface, a <em class=\"markup--em markup--p-em\">Rectangle</em> that implements that, and a <em class=\"markup--em markup--p-em\">Square</em> which extends it but guarantees that both height and width are always the same. This might look good at first glance. However, this example breaks the Liskov Substitution Principle because even though the programmatic API is the same, its preconditions and postconditions are not. If you have a class or method which accepts a Rectangle, you might not be able to simply pass in a Square in its place because the code might be assuming that the height and width can be changed independently. For the user of the interface, the implementation should not matter.</p>\n<p id=\"a7e8\" class=\"graf graf--p graf-after--p\">Another common example of breaking this principle is having implementations with methods that throw <a class=\"markup--anchor markup--p-anchor\" href=\"https://docs.oracle.com/javase/8/docs/api/?java/lang/UnsupportedOperationException.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://docs.oracle.com/javase/8/docs/api/?java/lang/UnsupportedOperationException.html\">UnsupportedOperationException</a>, which indicate that a certain operation is not supported in some specific implementations.</p>\n<h4 id=\"6550\" class=\"graf graf--h4 graf-after--p\">Interface Segregation Principle (ISP)</h4>\n<blockquote id=\"0f6b\" class=\"graf graf--blockquote graf-after--h4\"><p>No client should be forced to depend on methods it does not use.</p></blockquote>\n<p id=\"6ce1\" class=\"graf graf--p graf-after--blockquote\">Large interfaces should be split into smaller and more specific ones so that clients will only have to know about the methods that are of interest to them<em class=\"markup--em markup--p-em\">.</em></p>\n<p id=\"e2c5\" class=\"graf graf--p graf-after--p\">Following this principle helps to keep your system decoupled and makes it easier not to break the Liskov Substitution Principle.</p>\n<p id=\"5962\" class=\"graf graf--p graf-after--p\">For example, if you are creating an interface for a multi-functional printer, instead of having a single <em class=\"markup--em markup--p-em\">MultiFunctionalPrinter </em>interface with a print() and a scan() method, you should instead have two interfaces: <em class=\"markup--em markup--p-em\">Printer</em> and <em class=\"markup--em markup--p-em\">Scanner</em>, each with the respective method. That way, if a client only needs the print() method, you can provide it with a simple printer without having to change any of the application code, as the client was not dependent on the scan aspects of the <em class=\"markup--em markup--p-em\">MultiFunctionalPrinter.</em></p>\n<h4 id=\"4135\" class=\"graf graf--h4 graf-after--p\">Dependency Inversion Principle (DIP)</h4>\n<blockquote id=\"7b7a\" class=\"graf graf--blockquote graf-after--h4\"><p>High-level modules should not depend on low-level modules; both should depend on abstractions.</p></blockquote>\n<blockquote id=\"bed8\" class=\"graf graf--blockquote graf-after--blockquote\"><p>Abstractions should not depend on details. Details should depend upon abstractions.</p></blockquote>\n<p id=\"4fdd\" class=\"graf graf--p graf-after--blockquote\">Following this principle allows you to easily replace certain implementations with compatible ones which follow the same interface. This is very useful for testing as it allows you to replace real implementations with <a class=\"markup--anchor markup--p-anchor\" href=\"https://testing.googleblog.com/2013/07/testing-on-toilet-know-your-test-doubles.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://testing.googleblog.com/2013/07/testing-on-toilet-know-your-test-doubles.html\">test doubles</a>. It also allows you to better react to changing requirements.</p>\n<p id=\"5634\" class=\"graf graf--p graf-after--p\">The following diagram shows how the example presented in the Single Responsibility Principle section also follows the Dependency Inversion Principle. You can see that both high-level and low-level modules depend on abstractions.</p>\n<figure id=\"d26c\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*gs90qqPjYleH7xc4d30RyQ.png\" data-width=\"1083\" data-height=\"936\" data-action=\"zoom\" data-action-value=\"1*gs90qqPjYleH7xc4d30RyQ.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"63\"></canvas><img class=\"alignnone size-full wp-image-1327\" src=\"https://emolike.net/wp-content/uploads/2019/05/1gs90qqPjYleH7xc4d30RyQ.png\" width=\"1083\" height=\"936\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/1gs90qqPjYleH7xc4d30RyQ.png 1083w, https://emolike.net/wp-content/uploads/2019/05/1gs90qqPjYleH7xc4d30RyQ-300x259.png 300w, https://emolike.net/wp-content/uploads/2019/05/1gs90qqPjYleH7xc4d30RyQ-768x664.png 768w, https://emolike.net/wp-content/uploads/2019/05/1gs90qqPjYleH7xc4d30RyQ-1024x885.png 1024w\" sizes=\"(max-width: 1083px) 100vw, 1083px\" /></div>\n</div><figcaption class=\"imageCaption\">Example of the usage of the Dependency Inversion Principle</figcaption></figure>\n<p id=\"8c9d\" class=\"graf graf--p graf-after--figure graf--trailing\">For more information on the topic of abstractions, you may read <a class=\"markup--anchor markup--p-anchor\" href=\"https://medium.com/feedzaitech/the-power-of-abstraction-11e825d2ed85\" target=\"_blank\" rel=\"noopener noreferrer\" data-href=\"https://medium.com/feedzaitech/the-power-of-abstraction-11e825d2ed85\">this post by Gabriel Candal on the Feedzai TechBlog</a>. 💪</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<h3 id=\"b50a\" class=\"graf graf--h3 graf--leading\">Law of Demeter (LoD)</h3>\n<p id=\"eaa1\" class=\"graf graf--p graf-after--h3\">Another “law” which is useful for keeping the code decoupled and testable is the Law of Demeter. This principle states the following:</p>\n<blockquote id=\"2542\" class=\"graf graf--blockquote graf-after--p\"><p>Each unit should have only limited knowledge about other units: only units “closely” related to the current unit.<br />\nEach unit should only talk to its friends; don’t talk to strangers.<br />\nOnly talk to your immediate friends.</p></blockquote>\n<p id=\"385c\" class=\"graf graf--p graf-after--blockquote\">What this basically means is that you should not obtain dependencies through your dependencies. You should not do things like <em class=\"markup--em markup--p-em\">this.getA().getB().doSomething(). </em>If you need dependency B, it should be provided to your class through its constructor or as a method argument.</p>\n<p id=\"e67a\" class=\"graf graf--p graf-after--p\">Breaking this principle makes the code highly-coupled to implementation details and substantially less reusable. It also makes tests much harder to write because it requires you to mock or create instances of not only the explicit collaborators of the class under test but also all the implicit chain of collaborators required by it.</p>\n<p id=\"0431\" class=\"graf graf--p graf-after--p graf--trailing\">You can find more information about this principle on <a class=\"markup--anchor markup--p-anchor\" href=\"https://testing.googleblog.com/2008/07/breaking-law-of-demeter-is-like-looking.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://testing.googleblog.com/2008/07/breaking-law-of-demeter-is-like-looking.html\">this blog post by Miško Hevery</a>.</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<h3 id=\"fc4a\" class=\"graf graf--h3 graf--leading\">Some Guidelines</h3>\n<p id=\"d91d\" class=\"graf graf--p graf-after--h3\">Besides these principles, there are a few more guidelines that ease the testability of a codebase:</p>\n<p id=\"54e2\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Make sure your code has seams:</strong> From the definition on <em class=\"markup--em markup--p-em\">Working Effectively with Legacy Code </em>by<em class=\"markup--em markup--p-em\"> Michael Feathers,</em> “<em class=\"markup--em markup--p-em\">A seam is a place where you can alter behaviour in your program without editing that place</em>”. Having seams is required in order to unit test code as you can replace behaviour with test doubles. Following the principles stated above will help with that as well as practising Test-Driven-Development, as unit tests can help with the design of your APIs.</p>\n<p id=\"4617\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Don’t mix object creation with application logic: </strong>You should not carelessly create object instances. You should instead have two types of classes: application classes and factories. Application classes are those that do real work and have all the business logic while factories are used to create objects and respective dependencies. You should avoid using “new” outside of factories, with the exception of the creation of data-objects (data structures or objects with only getters/setters), which you can create freely. If you create other classes in your application code, you won’t be able to replace those with test doubles when unit testing (unless you use monkey-patching or bytecode-manipulation frameworks, but that leads to tests that are both difficult to create and maintain). If you have to create objects dynamically in your application code, you should use the <a class=\"markup--anchor markup--p-anchor\" href=\"https://sourcemaking.com/design_patterns/abstract_factory\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://sourcemaking.com/design_patterns/abstract_factory\">Abstract Factory</a> design pattern. That way, you can pass in a concrete factory as a dependency that implements that factory interface, and your application code can create objects without depending on a concrete implementation.</p>\n<p id=\"a698\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Use Dependency Injection:</strong> Related to the guideline above, you should provide the dependencies to your classes. A class should not be responsible for fetching its dependencies, either by creating them, using global state (e.g. Singletons) or getting dependencies through other dependencies (breaking the Law of Demeter). Preferably, dependencies should be provided to the class through its constructor. Take note that Dependency Injection is not a synonym of using a framework. It is something that can be perfectly done manually.</p>\n<p id=\"2630\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Don’t use global state: </strong>Global state makes code more difficult to understand, as the user of those classes might not be aware of which variables need to be instantiated. It also makes tests more difficult to write due to the same reason and due to tests being able to influence each other, which is a potential source of flakiness. Also, be careful that <a class=\"markup--anchor markup--p-anchor\" href=\"http://misko.hevery.com/code-reviewers-guide/flaw-brittle-global-state-singletons/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\" data-href=\"http://misko.hevery.com/code-reviewers-guide/flaw-brittle-global-state-singletons/\">Singletons are an example of global state</a>, and as such, should also be avoided in most cases. Please note that here “Singleton” is referring to the <a class=\"markup--anchor markup--p-anchor\" href=\"https://sourcemaking.com/design_patterns/singleton\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://sourcemaking.com/design_patterns/singleton\">Singleton design pattern</a>, in which a class restricts its instantiation to only one instance. Classes that have a single instance without enforcing it, sometimes referred to as “singletons” without the capital “S”, are recommended instead. Dependency injection should be used to pass the instances to the objects that depend on them.</p>\n<p id=\"a2a1\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Avoid static methods:</strong> Static methods are procedural code and should be avoided in an object-oriented paradigm, as they don’t provide the seams required for unit testing. Exceptions to this guideline are simple and pure methods, such as <em class=\"markup--em markup--p-em\">Math.min()</em>. However, you might want to avoid the direct use of some other static methods, such as <em class=\"markup--em markup--p-em\">System.currentTimeMillis(), </em>as you won’t be able to replace it with a test double. If you instead have a <em class=\"markup--em markup--p-em\">TimestampSupplier</em> interface or just <em class=\"markup--em markup--p-em\">Supplier&lt;Long&gt;</em>, you can dependency-inject an implementation that uses <em class=\"markup--em markup--p-em\">System.currentTimeMillis()</em> in your production code and use a fake implementation in your test code, which might help you create better assertions in your tests.</p>\n<p id=\"9b19\" class=\"graf graf--p graf-after--p graf--trailing\"><strong class=\"markup--strong markup--p-strong\">Favour composition over inheritance: </strong>You should prefer the usage of composition over inheritance. Composition allows your code to better follow the Single Responsibility Principle, makes the code more easy to test and avoids class number explosion. Composition provides more flexibility as the behaviour of the system is modelled by different interfaces that collaborate instead of creating a class hierarchy that distributes behaviour among business-domain classes via inheritance. It also makes the system more flexible as components can be assembled in different ways in runtime, without changing the code. There are some design patterns that help with this, such as the <a class=\"markup--anchor markup--p-anchor\" href=\"https://sourcemaking.com/design_patterns/strategy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://sourcemaking.com/design_patterns/strategy\">Strategy</a> and <a class=\"markup--anchor markup--p-anchor\" href=\"https://sourcemaking.com/design_patterns/decorator\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://sourcemaking.com/design_patterns/decorator\">Decorator</a> patterns.</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<h3 id=\"9377\" class=\"graf graf--h3 graf--leading\">A small example</h3>\n<p id=\"2208\" class=\"graf graf--p graf-after--h3\">Below is an example of code that is difficult to test, as it’s highly coupled to multiple aspects of the system. This small code sample breaks most of the SOLID principles, the Law of Demeter and the above guidelines. In order to test it, you would have to use a bytecode-manipulating mocking framework (such as <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/powermock/powermock\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://github.com/powermock/powermock\">PowerMock</a>), which leads to tests that are difficult to write and maintain.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// Difficult to test - coupled to the application, database and file system\r\npublic class MyClass {\r\n  \r\n  public void writeUserName(int id) {\r\n    String userName = App.getDatabaseManager().getUserDatabase().getUserName(id);\r\n    try (FileWriter writer = new FileWriter(\"user.txt\")) {\r\n      writer.write(userName);\r\n    }\r\n  }\r\n}</pre>\n<p id=\"3769\" class=\"graf graf--p graf-after--figure\">Now, here is another code sample, which although not perfect, is much easier to test. In this example, you can just provide a fake UserDatabase and a StringWriter instead of a FileWriter.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// Easy to test - you can easily replace UserDatabase and Writer with test doubles\r\npublic class MyClass {\r\n  private final UserDatabase userDatabase;\r\n  \r\n  public MyClass(final UserDatabase userDatabase) {\r\n    this.userDatabase = userDatabase\r\n  }\r\n  \r\n  public void writeUserName(int id, Writer writer) {\r\n    final String userName = this.userDatabase.getUserName(id);\r\n    writer.write(userName);\r\n  }\r\n}</pre>\n<p id=\"592f\" class=\"graf graf--p graf--leading\">If you would like to learn more about these concepts, I really like and recommend <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.youtube.com/watch?v=acjvKJiOvXw\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-href=\"https://www.youtube.com/watch?v=acjvKJiOvXw\">this video of a presentation by Miško Hevery</a>.</p>\n<p id=\"ff75\" class=\"graf graf--p graf-after--p\"><em class=\"markup--em markup--p-em\">Clean Code</em> and <em class=\"markup--em markup--p-em\">Clean Architecture</em> are also two good books by Robert Martin that will teach you about the principles touched here and much more.</p>\n<p id=\"4608\" class=\"graf graf--p graf-after--p graf--trailing\">I hope that this post gave you some grounds about writing testable code and that by following these principles and guidelines you will be able to have a more clean, maintainable and testable codebase!</p>\n</div>\n<p>Source : <a href=\"https://medium.com/feedzaitech/writing-testable-code-b3201d4538eb\">https://medium.com/feedzaitech/writing-testable-code-b3201d4538eb</a></p>\n</div>\n</section>\n",
          "slug": "writing-testable-clean-code",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/1gs90qqPjYleH7xc4d30RyQ.png"
          },
          "link": "https://emolike.net/2019/05/18/writing-testable-clean-code/",
          "date": "2019-05-18T14:28:45",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMjM=",
        "node": {
          "id": "cG9zdDoxMzIz",
          "title": "A List of Static Site Generators for JAMstack Sites",
          "content": "<div id=\"at_zurlpreview\">\n<h2>StaticGen</h2>\n<h3 style=\"display: none;\">StaticGen</h3>\n<p class=\"imgd\">StaticGen is a leaderboard of the top open source static site generators. Promoting a static approach to building websites.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.staticgen.com/\" target=\"_blank\" rel=\"noopener noreferrer\">www.staticgen.com/</a></p>\n</div>\n<p><img class=\"alignnone size-full wp-image-1324\" src=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190517175222.png\" alt=\"\" width=\"1291\" height=\"956\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190517175222.png 1291w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190517175222-300x222.png 300w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190517175222-768x569.png 768w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190517175222-1024x758.png 1024w\" sizes=\"(max-width: 1291px) 100vw, 1291px\" /></p>\n",
          "slug": "a-list-of-static-site-generators-for-jamstack-sites",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/17/a-list-of-static-site-generators-for-jamstack-sites/",
          "date": "2019-05-17T17:53:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Serverless"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMjE=",
        "node": {
          "id": "cG9zdDoxMzIx",
          "title": "Docker &#038; WordPress",
          "content": "<p><iframe title=\"Docker &amp; WordPress - WordPress Containerization With Docker\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/BfrVWwJv8ls?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "docker-wordpress",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/17/docker-wordpress/",
          "date": "2019-05-17T01:04:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMTY=",
        "node": {
          "id": "cG9zdDoxMzE2",
          "title": "How to Build Trust and Improve Communication Within Agile Teams",
          "content": "<p>What parallels can we draw between football and software development? You can hire stellar players that cost a fortune, but they will most likely lose as a team if they do not have a shared vision and strategy.</p>\n<p dir=\"ltr\">Before hiring new team members for your existing team or <a href=\"https://8allocate.com/article/how-to-make-your-remote-software-team-work-like-a-well-oiled-machine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">building a new team from the ground up</a>, you must define your goals clearly.</p>\n<p dir=\"ltr\">Creating a new digital system or application requires certain technologies, which in turn requires certain competencies of specialists. That is, the abilities of hired engineers should correspond to the tasks. There is no point in keeping the team of developers whose potential exceeds the tasks by far: someone may simply be left without work, and this is very irrational and fundamentally contrary to the principles of any modern business.</p>\n<p dir=\"ltr\">So start with the thorough analysis and make a work plan that outlines all the functions, competencies and areas of responsibility. Take your time, sleep with your ideas and act. Believe me, all these preparation efforts will pay off in the future.</p>\n<h2 dir=\"ltr\">What’s Behind Ineffective Software Development Teams?</h2>\n<p dir=\"ltr\">The team refers to a group of people united by motives and intentions to achieve a common goal. It sounds great, but in practice, there are many roadblocks. Ineffective software teams lack the following features:</p>\n<h3 dir=\"ltr\">The Ability to Understand Each Other and Speak the Same Language</h3>\n<p dir=\"ltr\">We are all different and we perceive things differently. Everyone has their own worldview. Let’s say you ask your colleague to deploy a feature like, for instance, bulk data upload from Excel to the table, and you eventually get the outcome that’s a far cry from what you’d expected originally. No matter how simple the task looks like at first glance, there’s always a chance it’ll be misunderstood or misinterpreted. Therefore, it’s critical to use a task tracking tool within the team to formalize tasks assignment and make sure it’s understood clearly and unambiguously.</p>\n<h3 dir=\"ltr\">The Ability to Talk</h3>\n<p dir=\"ltr\">Let’s assume your team is working on a very difficult task, and it needs to find the best solution or kludge to solve the issue. You sit together to brainstorm and figure out the solution. While some team members are active in sharing their vision and suggestions, the others have nothing to say. They don’t really want to be bothered and all they’re waiting for is a new task to be explained and assigned. Yet, if you, as a team lead, can encourage them to talk and share their ideas, you may arrive at a better conclusion at the end of the day (the more ideas, the better).</p>\n<h3 dir=\"ltr\">Motivation and Interests</h3>\n<p dir=\"ltr\">Are you sure your team lead and the team are driven by the same stimuli? As a team lead, your motivation is to make sure the team follows your work plan, and all featured are built and deployed on time and on budget. But your team members may have a different motivation: what if they want to use a new programming language or framework to see how it’ll affect project development speed?</p>\n<h3 dir=\"ltr\">Hear and Listen</h3>\n<p dir=\"ltr\">Often, engineers do not quite understand why they have been pulled out and made to attend the meeting. As such, they hear you, but they don’t listen to what you say. This is the first sign that you’ll encounter issues as your project is underway because someone didn’t listen to you before.</p>\n<h3 dir=\"ltr\">Involvement in The Process</h3>\n<p dir=\"ltr\">On many project development teams, especially those that are shuffled from project to project without having any strict attachment to the client and its business goals, programmers may simply complete tasks without having a clear understanding of how their work will affect the client’s business. When your team members blindly write code without delving into the project goals and details (for the sake of closing a ticket in Jira), you’re in big trouble. It means you have unmotivated and indifferent people on your team and such approaches rarely yield any good results.</p>\n<p dir=\"ltr\">If a group of people seemingly work on the same project, but everyone has own vision of the end goal, it can’t be called the team! It’s just a group of people, nothing more.</p>\n<h2 dir=\"ltr\">How to Unite People and Build a Strong Self-Organizing Team</h2>\n<p dir=\"ltr\">The main task of any technical manager, from tech lead to CTO, is to minimize the impact of all negative and distracting factors and to achieve maximum team productivity.</p>\n<p dir=\"ltr\">I believe that the key process in a good team is communication. Below I will list the main principles and tips for establishing a seamless and clear communication within your software team.</p>\n<ul>\n<li>\n<p dir=\"ltr\"><strong>Sit down and talk to each employee and ask about their skills and experience.</strong> Try to find the strengths and weaknesses of each of your team members. Make sure that people complement each other by drawing on their strengths. This is the only way to achieve maximum efficiency in the end.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Keep your team informed of the project goals and mission.</strong> If you need to implement a particular functionality, everyone should understand the reason behind this. Don’t just throw tasks at them; instead, ask for their opinion and feedback to make them feel included and see how exactly this task will affect or contribute to the project success.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Explain everything in simple words so that everyone understands and has no doubts. </strong>As Einstein said, &#8220;If you can&#8217;t explain it simply, you don&#8217;t understand it well enough.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Involve people in discussions.</strong> This has been mentioned above. The objective is to make people feel appreciated by asking them to share opinions or feedback. The more often you hold brainstorming and discussion sessions within your team, the more dedicated to the teamwork success they’ll become.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Forget the word &#8220;mistake.&#8221; </strong>Demonstrate to your team that an error or failure is a search for a new solution. All team members should understand that this is a normal workflow and part of the daily routine. Who doesn’t make mistakes? Only those who don’t do anything! While almost everyone can ride a bike, I doubt there’s anyone who never fell when riding.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Criticize the stuff but not the fluff</strong>. If you don’t think a team member’s suggestion or idea is right for your project, never say it’s a bad idea. Learn to explain argumentatively why it won’t work now, but don’t clip their wings!</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Speak the same language.</strong> Discuss the tasks and ask for a summary. One useful practice is to ask your software engineers to talk about the solution and how they understand it. You may unveil many interesting things this way. It&#8217;s better to take the time to discuss than to be surprised at the result down the road when you suddenly realize the solution is completely out of line with what you&#8217;re trying to accomplish.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Say thank you</strong>. If people do something well, be sure to thank them. This little thing is very important, everyone is happy when they feel appreciated. But don&#8217;t abuse it, as your gratitude will be quickly devalued.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Be transparent about each and every team achievement and failure.</strong> As mentioned above, each team member should feel valued and when you talk to them openly and give a pat on the back for a good job or encourage to improve efficiency and productivity, they feel valued and become more cooperative. It&#8217;s good practice for Team Leads, CTOs or CEOs to gather people from time to time (e.g., once a quarter) and report on their achievements and areas of improvement.</p>\n</li>\n</ul>\n<p dir=\"ltr\">As you can see, most of the tips are related to communication and trust in one way or another. If you don&#8217;t build them properly within the team from the very beginning, there will be issues down the road. It is this communication that largely determines the efficiency of your software engineering endeavors.</p>\n<h2 dir=\"ltr\">Tips and Tricks of Successful Software Team Management</h2>\n<p>I once read an interesting theory about the optimal size of the team. Once upon a time, George Miller was involved in memory research, and as a result of his experiments, he made a conclusion that our short-term memory usually contains between five and nine incoherent elements. That is, we don’t need to group them according to some principles and characteristics to remember them more easily. Jeff Sutherland, the father of <a href=\"https://8allocate.com/article/scrum-or-huddle/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scrum</a> who repeated the success of Toyota, believed that the team shouldn’t include more than seven people, which resulted in the &#8220;seven people per project&#8221; rule. In his opinion, only teams of this size can achieve hyper-productivity, and they can be eight times more effective!</p>\n<p dir=\"ltr\">I was surprised, but this theory proved to work for me. I once had to manage a team of thirteen people. It was highly ineffective, so I divided it into two teams and the productivity increased noticeably! As the project scaled, we built a third team of six people, and the results improved threefold.</p>\n<p dir=\"ltr\">Below I will give you some tips on team management. There’s nothing new in them, but they helped me a lot when I was involved in <a href=\"https://8allocate.com/article/dedicated-software-team-as-a-value-based-and-personalized-outsourcing-engagement/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">distributed software development team</a> management.</p>\n<ul>\n<li>\n<p dir=\"ltr\"><strong>Combine the teams so that they have a place to grow.</strong> If you have a distributed team with one part being very strong and productive and the other one less experienced and slow-achieving, shuffle people so that you have a healthy mix of senior, middle and junior specialists who can complement each other’s skills and expertise. After shuffling, productivity will increase.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Distribute tasks properly.</strong> A programmer is an expensive employee for the company. You should always challenge them to drive forward. If you see they solve assigned tasks with ease, make sure to assign more complicated tasks or tasks they may not be familiar with. This will encourage them to research more and fine-tune and polish their problem-solving skills. In short, this will help them grow professionally and personally. An experienced senior developer should not sit over easy tasks, even if they perform them faster than your mid-level developer.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Hire junior developers with little experience but with a huge zeal to work and learn</strong>. Let them work on non-critical tasks. This will help relieve the extra burden of your senior guys, keep them focused on complex and mission-critical tasks, and improve mentorship skills.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Motivate your employees according to their expectations</strong>. You need an individual approach: for some, it&#8217;s money, for others, it&#8217;s career growth, for the third it can be an extended vacation. Learn everyone’s motivation and make sure to give each what they want.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Do not micromanage or try to control each step.</strong> People should be aware of their responsibility and accountability. The person who understands this is much more effective and independent. Remember – you don’t hire expensive developers to tell them what to do and how to do it. You hire them to leverage their skills and experience, so they should tell you what to do and why.</p>\n</li>\n<li>\n<p dir=\"ltr\"><strong>Do not skimp on education</strong>. Send your team members to conferences, workshops, and other professional events. It is expensive, but it’ll help your team members enhance skills and gain new knowledge which will pay off well at the end of the day. Moreover, on- and off-job training is one of the most sought-after benefits among software developer candidates, so you simply won’t be able to attract good developers if you don’t offer any self-development opportunities.</p>\n</li>\n</ul>\n<p dir=\"ltr\">At some point, the wagon you&#8217;re pushing has to go by itself. In a good team, when problems arise or new features are designed, people should sit down and discuss possible solutions and suggest their own options. Ideally, they should do it without a team lead at all. So, your goal is to build a self-organizing team where you’ll encourage, facilitate and mediate rather than control and manage.</p>\n<h2 dir=\"ltr\">Conclusion</h2>\n<p dir=\"ltr\">A high-performing software development team is a team that learns from mistakes, grows, and is able to fix or predict those mistakes quickly. Everyone listens to each other and hears what they say. A team is a living organism that evolves continuously.</p>\n<p dir=\"ltr\">People who understand the purpose are more motivated and can offer solutions to issues that others will not see.</p>\n<p dir=\"ltr\">It is necessary to be engaged in building development processes within a team and to pay maximum attention to communication. I believe that a good team lead shouldn’t spend more than 10-20% of the time coding: they should focus mostly on building trust and proper communication to ensure the best outcome ever.</p>\n<p dir=\"ltr\">People are your most important assets, so treat them the way you want to be treated. Create conditions for them to develop and grow, and your team will always be ready to go the extra mile to delight you or your client!</p>\n<p dir=\"ltr\">Source : <a href=\"https://dzone.com/articles/how-to-build-trust-and-improve-communication-withi?utm_medium=feed&amp;utm_source=feedpress.me&amp;utm_campaign=Feed:%20dzone%2Fagile\">https://dzone.com/articles/how-to-build-trust-and-improve-communication-withi?utm_medium=feed&amp;utm_source=feedpress.me&amp;utm_campaign=Feed:%20dzone%2Fagile</a></p>\n",
          "slug": "how-to-build-trust-and-improve-communication-within-agile-teams",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/16/how-to-build-trust-and-improve-communication-within-agile-teams/",
          "date": "2019-05-16T17:28:14",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Agile"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMTA=",
        "node": {
          "id": "cG9zdDoxMzEw",
          "title": "C# Performance Tips",
          "content": "<h3>Check List has items <strong>List.Count() vs List.Any()</strong></h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Stopwatch watch = new Stopwatch();  \r\nList &lt; string &gt; strs = new List &lt; string &gt; () {  \r\n    \"Akshay\",  \r\n    \"Patel\",  \r\n    \"Panth\",  \r\n    \"Patel\"  \r\n};  \r\nwatch.Start();  \r\nif (strs.Count() &gt; 0) {}  \r\nConsole.WriteLine(\"List.Count()-{0}\", watch.Elapsed);\r\n\r\n--------\r\n\r\nwatch.Restart();  \r\nif (strs.Any()) {}  \r\nConsole.WriteLine(\"List.Any() - {0}\", watch.Elapsed);</pre>\n<p><img class=\"alignnone size-full wp-image-1311\" src=\"https://emolike.net/wp-content/uploads/2019/05/41.png\" width=\"904\" height=\"341\" alt=\"List.Count() Vs List.Any()\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/41.png 904w, https://emolike.net/wp-content/uploads/2019/05/41-300x113.png 300w, https://emolike.net/wp-content/uploads/2019/05/41-768x290.png 768w\" sizes=\"(max-width: 904px) 100vw, 904px\" /></p>\n<p>&nbsp;</p>\n<h3>Loop on items in a list <strong>Array.Length vs var i = Array.Length</strong></h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Stopwatch watch = new Stopwatch();  \r\nwatch.Start();  \r\nstring[] names = {  \r\n    \"Akshay\",  \r\n    \"Patel\",  \r\n    \"Panth\"  \r\n};  \r\nfor (int i = 0; i &lt; names.Length; i++) {}  \r\nConsole.WriteLine(\"Name.Length Direct-{0}\", watch.Elapsed); \r\n\r\n---------\r\n\r\nwatch.Restart();  \r\nstring[] names1 = {  \r\n    \"Akshay\",  \r\n    \"Patel\",  \r\n    \"Panth\"  \r\n};  \r\nint k = names1.Length;  \r\nfor (int j = 0; j &lt; k; j++) {}  \r\nConsole.WriteLine(\"Name.Length Parameter-{0}\", watch.Elapsed);</pre>\n<p><img class=\"alignnone size-full wp-image-1312\" src=\"https://emolike.net/wp-content/uploads/2019/05/61.png\" width=\"1024\" height=\"381\" alt=\"Array Length\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/61.png 1024w, https://emolike.net/wp-content/uploads/2019/05/61-300x112.png 300w, https://emolike.net/wp-content/uploads/2019/05/61-768x286.png 768w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<h3>String split Char vs Char[]</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">string str = \"Akshay|Patel\";  \r\nStopwatch s1 = new Stopwatch();  \r\ns1.Start();  \r\nstring[] temp1 = str.Split('|');  \r\nConsole.WriteLine(s1.ElapsedTicks.ToString()); \r\n\r\n------------------\r\n\r\nStopwatch s2 = new Stopwatch();  \r\ns2.Start();  \r\nstring[] temp = str.Split(new char[] {  \r\n    '|'  \r\n});  \r\nConsole.WriteLine(s2.ElapsedTicks.ToString());  \r\n</pre>\n<p><img class=\"alignnone size-full wp-image-1313\" src=\"https://emolike.net/wp-content/uploads/2019/05/12.png\" width=\"643\" height=\"314\" alt=\"C# Programming Performance\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/12.png 643w, https://emolike.net/wp-content/uploads/2019/05/12-300x147.png 300w\" sizes=\"(max-width: 643px) 100vw, 643px\" /></p>\n<h3>Count of items in a list List.Count() vs List.Count</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">watch.Start();  \r\nint count = strs.Count();  \r\nConsole.WriteLine(\"Count()-{0}\", watch.Elapsed);  \r\n\r\n----\r\nwatch.Restart();  \r\nint count1 = strs.Count;  \r\nConsole.WriteLine(\"Count - {0}\", watch.Elapsed);</pre>\n<p><img class=\"alignnone size-full wp-image-1314\" src=\"https://emolike.net/wp-content/uploads/2019/05/51.png\" width=\"767\" height=\"344\" alt=\"List.Count() vs List.Count\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/51.png 767w, https://emolike.net/wp-content/uploads/2019/05/51-300x135.png 300w\" sizes=\"(max-width: 767px) 100vw, 767px\" /></p>\n<p>Source : <a href=\"https://www.c-sharpcorner.com/blogs/c-sharp-programming-performance-tips-part-one-string-split\">https://www.c-sharpcorner.com/blogs/c-sharp-programming-performance-tips-part-one-string-split</a></p>\n",
          "slug": "c-performance-tips",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/41.png"
          },
          "link": "https://emolike.net/2019/05/16/c-performance-tips/",
          "date": "2019-05-16T16:37:37",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMDc=",
        "node": {
          "id": "cG9zdDoxMzA3",
          "title": "Entity Signal &#8211; Real Time Entity Framework (EF) and ASP.NET core",
          "content": "<div id=\"at_zurlpreview\">\n<h2>What is Entity Signal?</h2>\n<hr />\n<p>Entity Signal allows you to connect to Entity Framework through SignalR and get updates on subscribed data in real time. This lowers the number of refreshes done by the user and ultimately allows you to do more with fewer servers. It is also requires minimal changes, so you can make realtime apps about as easily as you can make standard apps.</p>\n<p><img class=\"alignnone size-full wp-image-1308\" src=\"https://emolike.net/wp-content/uploads/2019/05/Explainer.gif\" width=\"960\" height=\"338\" /></p>\n<p class=\"imgd\">Make all of your data real time. Recieve updates no matter where the object was created or edited! Uses existing ASP.NET core permissions system.</p>\n<p class=\"imgs\">Source: <a href=\"https://entitysignal.com/\" target=\"_blank\" rel=\"noopener noreferrer\">entitysignal.com/</a></p>\n</div>\n",
          "slug": "entity-signal-real-time-entity-framework-ef-and-asp-net-core",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/Explainer.gif"
          },
          "link": "https://emolike.net/2019/05/16/entity-signal-real-time-entity-framework-ef-and-asp-net-core/",
          "date": "2019-05-16T15:17:10",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "javascript"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMDE=",
        "node": {
          "id": "cG9zdDoxMzAx",
          "title": "Automate your code quality with Codacy",
          "content": "<p><iframe title=\"Automate your code quality with Codacy Static Analysis Tool\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/oxqTu2ouxaw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1303\" src=\"https://emolike.net/wp-content/uploads/2019/05/og.png\" width=\"1200\" height=\"630\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/og.png 1200w, https://emolike.net/wp-content/uploads/2019/05/og-300x158.png 300w, https://emolike.net/wp-content/uploads/2019/05/og-768x403.png 768w, https://emolike.net/wp-content/uploads/2019/05/og-1024x538.png 1024w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p class=\"imgd\">Codacy automates code reviews and monitors code quality over time. Static analysis, code coverage and metrics for Ruby, JavaScript, PHP, Scala, Java, Python, CoffeeScript and CSS.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.codacy.com/\" target=\"_blank\" rel=\"noopener noreferrer\">www.codacy.com/</a></p>\n</div>\n",
          "slug": "automate-your-code-quality-with-codacy",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/og.png"
          },
          "link": "https://emolike.net/2019/05/15/automate-your-code-quality-with-codacy/",
          "date": "2019-05-15T18:52:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              },
              {
                "name": "testing"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyOTQ=",
        "node": {
          "id": "cG9zdDoxMjk0",
          "title": "NCrunch is an automated concurrent testing tool for Visual Studio.",
          "content": "<p><iframe title=\"A Brief Look at NCrunch\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/ejuA0qbpcz0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1297\" src=\"https://emolike.net/wp-content/uploads/2019/05/N-logo.png\" width=\"346\" height=\"106\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/N-logo.png 346w, https://emolike.net/wp-content/uploads/2019/05/N-logo-300x92.png 300w\" sizes=\"(max-width: 346px) 100vw, 346px\" /></p>\n<p class=\"imgd\">NCrunch is the ultimate live testing tool for Microsoft Visual Studio and .NET. It runs your unit and integration tests so you don&#8217;t have to, providing inline code coverage and performance metrics while you type.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.ncrunch.net/\" target=\"_blank\" rel=\"noopener noreferrer\">www.ncrunch.net/</a></p>\n</div>\n",
          "slug": "ncrunch",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/N-logo.png"
          },
          "link": "https://emolike.net/2019/05/14/ncrunch/",
          "date": "2019-05-14T23:06:35",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              },
              {
                "name": "testing"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyOTE=",
        "node": {
          "id": "cG9zdDoxMjkx",
          "title": "Code Analysis with NDepend",
          "content": "<p><iframe title=\"Despagghetifying code with NDepend - Jim Pelletier\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/L-z4kdgccas?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p><iframe title=\"Getting started with NDepend (3mn)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/WJJEf92eTgs?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p><iframe title=\"Query Code from within Visual Studio with NDepend\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/sWIR9BrbhHo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p><iframe title=\"NDepend Code Metrics\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/VfWoyxFObEA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "code-analysis-with-ndepend",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/13/code-analysis-with-ndepend/",
          "date": "2019-05-13T16:08:22",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyODY=",
        "node": {
          "id": "cG9zdDoxMjg2",
          "title": "Hotjar",
          "content": "<p><iframe class=\"wistia_embed\" title=\"Wistia video player\" src=\"https://fast.wistia.net/embed/iframe/h7qbucw8oh\" name=\"wistia_embed\" width=\"700\" height=\"400\" frameborder=\"0\" scrolling=\"no\" allowfullscreen=\"allowfullscreen\"><span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span></iframe></p>\n<p><!--more--></p>\n<p>&nbsp;</p>\n",
          "slug": "hotjar",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/12/hotjar/",
          "date": "2019-05-12T12:56:19",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Technology"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyODM=",
        "node": {
          "id": "cG9zdDoxMjgz",
          "title": "Effector: powerful and fast 5kb state manager",
          "content": "<figure id=\"9c0c\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*QRAHCSt3aRwfUpx9zqsxag.png\" data-width=\"639\" data-height=\"280\" data-is-featured=\"true\" data-scroll=\"native\"><img class=\"alignnone size-full wp-image-1284\" src=\"https://emolike.net/wp-content/uploads/2019/05/1QRAHCSt3aRwfUpx9zqsxag.png\" width=\"639\" height=\"280\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/1QRAHCSt3aRwfUpx9zqsxag.png 639w, https://emolike.net/wp-content/uploads/2019/05/1QRAHCSt3aRwfUpx9zqsxag-300x131.png 300w\" sizes=\"(max-width: 639px) 100vw, 639px\" /></div>\n</div>\n</figure>\n<p class=\"graf graf--p graf-after--figure\">Effector is a state manager for any JavaScript app (React/Vue/Node.js). It allows you to manage data in complex applications without the risk of inflating the monolithic central store.</p>\n<h4 id=\"c66d\" class=\"graf graf--h4 graf-after--p\">Key features</h4>\n<ul class=\"postList\">\n<li id=\"f6c8\" class=\"graf graf--li graf-after--h4\">framework agnostic</li>\n<li id=\"5d2e\" class=\"graf graf--li graf-after--li\">multiple stores</li>\n<li id=\"c26c\" class=\"graf graf--li graf-after--li\">statically typed (TypeScript/Flow/Reason)</li>\n<li id=\"f733\" class=\"graf graf--li graf-after--li\">computed values (no need for memoization)</li>\n<li id=\"49b2\" class=\"graf graf--li graf-after--li\">side-effect management (async actions)</li>\n<li id=\"1bb3\" class=\"graf graf--li graf-after--li\">less boilerplate by design</li>\n<li id=\"3f74\" class=\"graf graf--li graf-after--li\">small size</li>\n<li id=\"5e7c\" class=\"graf graf--li graf-after--li\">fast speed</li>\n</ul>\n<h4 id=\"3b4c\" class=\"graf graf--h4 graf-after--li\">Simple example</h4>\n<p id=\"56d1\" class=\"graf graf--p graf-after--h4\">Counter app using React + hooks</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, createEvent, createApi } from \"effector\";\r\nimport { useStore } from \"effector-react\";\r\n\r\nconst $counter = createStore(0)\r\nconst increment = createEvent();\r\nconst decrement = createEvent();\r\n\r\n$counter.on(increment, state =&gt; state + 1)\r\n$counter.on(decrement, state =&gt; state - 1)\r\n\r\nfunction Counter () {\r\n  const counter = useStore($counter)\r\n  return (\r\n    &lt;&gt;\r\n      &lt;div&gt;{counter}&lt;/div&gt;\r\n      &lt;button onClick={increment}&gt;+&lt;/button&gt;\r\n      &lt;button onClick={decrement}&gt;-&lt;/button&gt;\r\n    &lt;/&gt;\r\n  )\r\n};</pre>\n<div id=\"at_zurlpreview\">\n<p class=\"imgs\">Source: <a href=\"https://codeburst.io/effector-state-manager-6ee2e72e8e0b\" target=\"_blank\" rel=\"noopener noreferrer\">codeburst.io/effector-state-manager-6ee2e72e8e0b</a></p>\n</div>\n",
          "slug": "effector-powerful-and-fast-5kb-state-manager",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/1QRAHCSt3aRwfUpx9zqsxag.png"
          },
          "link": "https://emolike.net/2019/05/12/effector-powerful-and-fast-5kb-state-manager/",
          "date": "2019-05-12T12:21:13",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "React"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNzc=",
        "node": {
          "id": "cG9zdDoxMjc3",
          "title": "How to Set Up Kubernetes on an Ubuntu VPS",
          "content": "<p>Do you want to learn how to set up Kubernetes on Ubuntu? Keep reading this article!</p>\n<p>Kubernetes is a powerful open-source platform for automatic scaling, deployment, and management of containerized systems. It’s a robust application that groups containers into logic units making it easy to discover and manage them across multiple clusters of hosts. Kubernetes has many pieces such as network transport drivers, various system components, and CLI utilities. The system also works with numerous container tools such as Docker and includes many moving parts and enormous workloads which makes its installation intricate.</p>\n<p>This tutorial will show you how to quickly install kubernetes on Ubuntu with minimal to no frustration.</p>\n<p>Additional reading: if you wish to research Kubernetes and container hosting further, we recommend the following articles:</p>\n<ul>\n<li><a href=\"https://hostadvice.com/hosting-guides/kubernetes-hosting/\">Kubernetes hosting guide</a></li>\n<li><a href=\"https://hostadvice.com/hosting-guides/container-hosting/\">Container Hosting guide </a></li>\n</ul>\n<p>Let’s get started.</p>\n<h2>Must Haves:</h2>\n<p>For our installation to succeed, you should have the following:</p>\n<ol>\n<li>At least two Ubuntu machines; one as the master and the other for worker. If you can get <i>etcd </i>and <i>Apiserver</i> on a single machine with one core and one GB RAM for clusters with at least 10s of nodes that will be enough for this installation.  On the other hand, if you intend to use more active and larger clusters consider getting more core.</li>\n</ol>\n<h3>Step 1: Install the dependencies</h3>\n<p>The first and the most important thing when setting up Kubernetes on Ubuntu is installing the required dependencies. The dependencies must be installed on all the machines that make your Kubernetes cluster.</p>\n<p>One of the dependencies you need to install is the <b>apt-transport-https</b>. This package allows you to utilize the HTTP and HTTPS protocols in the apt repository resources. The package can be installed using the following command:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt-get update &amp;&amp; apt-get install -y apt-transport-https\r\n</pre>\n<p>The second dependency is Docker.<a href=\"https://en.wikipedia.org/wiki/Docker_(software)\" target=\"_blank\" rel=\"noopener noreferrer\"> Docker</a> is a reliable application that simplifies the creation and configuration of application processes in containerized systems. The Kubernetes installation <a href=\"https://hostadvice.com/hosting-guides/container-hosting/#different-types-of-container-hosting_docker\">will rely on Docker</a>, and for this reason, it should be installed first. Use the following command to install Docker:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt install docker.io\r\n</pre>\n<blockquote><p>Special Note: Docker works best on the 64-bit Ubuntu or a kernel version greater than or equal to 3.10. For this reason, we’ll install the kubernetes on the default 64-bit Ubuntu 16.04 server. The version meets the requirements.</p>\n<p>Once Docker is fully installed, run the following commands to start and enable the application:</p></blockquote>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo systemctl start docker\r\nsudo systemctl enable docker</pre>\n<h3>Step 2: Installing kubernetes components</h3>\n<p>Once the Docker is up and running, you are ready for the next step. As aforementioned, Kubernetes has many pieces and installing all the necessary components should be straightforward.</p>\n<blockquote><p>Special Note: all the components should be configured on all the machine joining the clusters.</p></blockquote>\n<p>Download and incorporate the Key by running the following command at the terminal:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add\r\n</pre>\n<p>Run the command below to install kubernetes apt repo:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ apt-get update &amp;&amp; apt-get install -y apt-transport-https \\\r\n &amp;&amp; curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\r\n$ echo \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" &gt; /etc/apt/sources.list.d/kubernetes.list</pre>\n<p>Next, you need to update the package list using the following command:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">apt-get update\r\n</pre>\n<p>Now, we install three components <b><i>Kubeadm</i></b>, <b><i>kubelet</i></b>, and <b><i>kubernetes-cni</i></b>. The kubeadm is a great utility that helps you configure the multiple components that form a working cluster; the Kubelet makes it easy to run the containers on the hosts, whereas the Kubernetes-cni defines the networking components. CNI or Container Networking Interface is a robust spec that dictates how network drivers interact with kubernetes.</p>\n<p>Use the following command to install the three components:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ apt-get update \\\r\n &amp;&amp; apt-get install -y kubelet kubeadm kubernetes-cni</pre>\n<p>Run <b><i>kubeadm</i></b> to initialize your server. Kubeadm provides a secure cluster using mechanisms such as RBAC.</p>\n<h3>Step 3: Initialize the master</h3>\n<p>Once you have installed the three components, you can proceed to initialize your master. Go to the machine you intend to use as the master and run the following command:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo kubeadm init --ignore-preflight-errors=NumCPU</pre>\n<p>When the initialization is complete, you will get the command below which is required to join your nodes to the master:</p>\n<p><img class=\"alignnone size-full wp-image-1278\" src=\"https://emolike.net/wp-content/uploads/2019/05/image1-6.jpg\" width=\"586\" height=\"344\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/image1-6.jpg 586w, https://emolike.net/wp-content/uploads/2019/05/image1-6-300x176.jpg 300w\" sizes=\"(max-width: 586px) 100vw, 586px\" /></p>\n<p>The command above indicates your kubernetes master is ready for the nodes. But, just before you join any node to the master, run this command:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">mkdir -p $HOME/.kube\r\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\r\nsudo chown $(id -u):$(id -g) $HOME/.kube/config</pre>\n<h3>STEP 4: Deploy a pod network</h3>\n<p>Next, you must install and configure a pod network for everything to function properly. Here we will install a Flannel pod network. Flannel offers a reliable Software Defined Network (SDN) via ipvlan modules and kernel’s overlay. Deploying Flannel can be achieved through two commands applied on the Kubernetes master. The first command:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\r\n</pre>\n<p>The second command is:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml\r\n</pre>\n<p>Confirm the pod network is properly configured by running the following command: sudo kubectl get pods. If the Flannel pod network is properly installed, you will get the output below:</p>\n<p><img class=\"alignnone size-full wp-image-1279\" src=\"https://emolike.net/wp-content/uploads/2019/05/image2-3.jpg\" width=\"593\" height=\"154\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/image2-3.jpg 593w, https://emolike.net/wp-content/uploads/2019/05/image2-3-300x78.jpg 300w\" sizes=\"(max-width: 593px) 100vw, 593px\" /></p>\n<h3>Step 5: Join a node</h3>\n<p>By now all the components are ready, and your kubernetes master is ready for node joining. Navigate to the terminal (of the node) and run the following command:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo kubeadm join --token TOKEN MASTER_IP:6443\r\n</pre>\n<p>This helps confirm the nodes have joined the master successfully;</p>\n<p><img class=\"alignnone size-full wp-image-1280\" src=\"https://emolike.net/wp-content/uploads/2019/05/image3-2.jpg\" width=\"557\" height=\"120\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/image3-2.jpg 557w, https://emolike.net/wp-content/uploads/2019/05/image3-2-300x65.jpg 300w\" sizes=\"(max-width: 557px) 100vw, 557px\" /></p>\n<h3>Step 6: Deploy a service</h3>\n<p>At this point, everything is properly configured, and you can easily deploy a service on the kubernetes cluster. Run the command below from your Kubernetes master:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo kubectl run --image=nginx nginx-app --port=80 --env=\"DOMAIN=cluster\"\r\nsudo kubectl expose deployment nginx-app --port=80 --name=nginx-http</pre>\n<p>The command will help you deploy NGINX service exposed on port 80. Navigate to the node and issue the following command:</p>\n<div class=\"EnlighterJSWrapper enlighterEnlighterJSWrapper\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$sudo docker ps -a\r\n</pre>\n<p>The command will give you an output of the services deployed</p>\n<p><img class=\"alignnone size-full wp-image-1281\" src=\"https://emolike.net/wp-content/uploads/2019/05/image4.jpg\" width=\"587\" height=\"415\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/image4.jpg 587w, https://emolike.net/wp-content/uploads/2019/05/image4-300x212.jpg 300w\" sizes=\"(max-width: 587px) 100vw, 587px\" /></p>\n<p>Your Kubernetes is successfully installed on Ubuntu. The cluster comprises a single node and a master. However, it’s easy to scale the cluster by deploying more nodes using our instructions.</p>\n<p>source: <a href=\"https://hostadvice.com/how-to/how-to-set-up-kubernetes-in-ubuntu/\">https://hostadvice.com/how-to/how-to-set-up-kubernetes-in-ubuntu/</a></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n",
          "slug": "how-to-set-up-kubernetes-on-an-ubuntu-vps",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/image1-6.jpg"
          },
          "link": "https://emolike.net/2019/05/11/how-to-set-up-kubernetes-on-an-ubuntu-vps/",
          "date": "2019-05-11T23:39:45",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNzU=",
        "node": {
          "id": "cG9zdDoxMjc1",
          "title": "Fix wrong Git Access denied and fatal Authentication",
          "content": "<p>The solution which works for me:</p>\n<p>Go to Windows <strong>Credential Manager</strong> (press Windows Key and type &#8216;credential&#8217;) to edit the git entry under Windows Credentials. Replace old password with the new one.</p>\n",
          "slug": "fix-wrong-git-access-denied-and-fatal-authentication",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/11/fix-wrong-git-access-denied-and-fatal-authentication/",
          "date": "2019-05-11T21:38:44",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Git"
              },
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNzI=",
        "node": {
          "id": "cG9zdDoxMjcy",
          "title": "Continuous Integration with .NET Core and Gitlab",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1273\" src=\"https://emolike.net/wp-content/uploads/2019/05/0AYxM9VnkQnUq5Mpn.png\" width=\"740\" height=\"412\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/0AYxM9VnkQnUq5Mpn.png 740w, https://emolike.net/wp-content/uploads/2019/05/0AYxM9VnkQnUq5Mpn-300x167.png 300w\" sizes=\"(max-width: 740px) 100vw, 740px\" /></p>\n<p class=\"imgd\">Starting off with CI/CD seems complicated, at least it did for me. Turns out it’s really not that hard once you get the hang of it so let’s</p>\n<p class=\"imgs\">Source: <a href=\"https://medium.com/faun/continuous-integration-with-net-core-and-gitlab-5cd51161c072\" target=\"_blank\" rel=\"noopener noreferrer\">medium.com/faun/continuous-integration-with-net-core-and-gitlab-5cd51161c072</a></p>\n</div>\n",
          "slug": "continuous-integration-with-net-core-and-gitlab",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/0AYxM9VnkQnUq5Mpn.png"
          },
          "link": "https://emolike.net/2019/05/11/continuous-integration-with-net-core-and-gitlab/",
          "date": "2019-05-11T14:08:22",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNjk=",
        "node": {
          "id": "cG9zdDoxMjY5",
          "title": "Dependency Injection Benchmarks",
          "content": "<p><img class=\"alignnone size-full wp-image-1270\" src=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190510204810.png\" alt=\"\" width=\"1903\" height=\"547\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190510204810.png 1903w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190510204810-300x86.png 300w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190510204810-768x221.png 768w, https://emolike.net/wp-content/uploads/2019/05/DeepinScreenshot_select-area_20190510204810-1024x294.png 1024w\" sizes=\"(max-width: 1903px) 100vw, 1903px\" /></p>\n<p>Link : <a href=\"https://ipjohnson.github.io/DotNet.DependencyInjectionBenchmarks/index.html\">https://ipjohnson.github.io/DotNet.DependencyInjectionBenchmarks/index.html</a></p>\n",
          "slug": "dependency-injection-benchmarks",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/10/dependency-injection-benchmarks/",
          "date": "2019-05-10T20:49:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNjc=",
        "node": {
          "id": "cG9zdDoxMjY3",
          "title": "Thread Safe Concurrent Collection in C#",
          "content": "<h3>Concurrent Collection</h3>\n<p>The .NET Framework 4 brought the System.Collections.Concurrent namespace. This has several collection classes that are thread-safe and scalable. These collections are called concurrent collections because they can be accessed by multiple threads at a time.</p>\n<p>The following are the concurrent collection in C# −</p>\n<table class=\"table table-bordered\">\n<tbody>\n<tr>\n<th>Sr.No</th>\n<th>Type &amp; Description</th>\n</tr>\n<tr>\n<td class=\"ts\">1</td>\n<td><b>BlockingCollection&lt;T&gt;</b></p>\n<p>Bounding and blocking functionality for any type.</td>\n</tr>\n<tr>\n<td class=\"ts\">2</td>\n<td><b>ConcurrentDictionary&lt;TKey,TValue&gt;</b></p>\n<p>Thread-safe implementation of a dictionary of key-value pairs.</td>\n</tr>\n<tr>\n<td class=\"ts\">3</td>\n<td><b>ConcurrentQueue&lt;T&gt;</b></p>\n<p>Thread-safe implementation of a FIFO (first-in, first-out) queue.</td>\n</tr>\n<tr>\n<td class=\"ts\">4</td>\n<td><b>ConcurrentStack&lt;T&gt;</b></p>\n<p>Thread-safe implementation of a LIFO (last-in, first-out) stack.</td>\n</tr>\n<tr>\n<td class=\"ts\">5</td>\n<td><b>ConcurrentBag&lt;T&gt;</b></p>\n<p>Thread-safe implementation of an unordered collection of elements.</td>\n</tr>\n<tr>\n<td class=\"ts\">6</td>\n<td><b>IProducerConsumerCollection&lt;T&gt;</b></p>\n<p>The interface that a type must implement to be used in a BlockingCollection</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing System.Collections.Concurrent;\r\n\r\nclass Demo\r\n{\r\n    static void Main ()\r\n    {\r\n        ConcurrentStack&lt;int&gt; s = new ConcurrentStack&lt;int&gt;();\r\n\r\n        s.Push(50);\r\n        s.Push(100);\r\n        s.Push(150);\r\n        s.Push(200);\r\n        s.Push(250);\r\n        s.Push(300);\r\n   \r\n    }\r\n}</pre>\n<p>Source : <a href=\"https://www.tutorialspoint.com/Thread-Safe-Concurrent-Collection-in-Chash\">https://www.tutorialspoint.com/Thread-Safe-Concurrent-Collection-in-Chash</a></p>\n",
          "slug": "thread-safe-concurrent-collection-in-c",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/10/thread-safe-concurrent-collection-in-c/",
          "date": "2019-05-10T20:37:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNjU=",
        "node": {
          "id": "cG9zdDoxMjY1",
          "title": "What Makes A Great Programmer? 10 Characteristics",
          "content": "<p><iframe title=\"What Makes A Great Programmer? 10 Characteristics\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/OwW0_7p_j84?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "what-makes-a-great-programmer-10-characteristics",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/10/what-makes-a-great-programmer-10-characteristics/",
          "date": "2019-05-10T19:58:09",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Others"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNjM=",
        "node": {
          "id": "cG9zdDoxMjYz",
          "title": "Entity Framework, ToList vs AsEnumerable vs AsQueryable",
          "content": "<h3><strong>ToList()</strong></h3>\n<ul>\n<li>Execute the query immediately</li>\n</ul>\n<h3><strong>AsEnumerable()</strong></h3>\n<ul>\n<li>lazy (execute the query later)</li>\n<li>Parameter: <code>Func&amp;lt;TSource, bool&amp;gt;</code></li>\n<li>Load <strong>EVERY</strong> record into application memory, and then handle/filter them. (e.g. Where/Take/Skip, it will select * from table1, into the memory, then select the first X elements) (In this case, what it did: Linq-to-SQL + Linq-to-Object)</li>\n</ul>\n<h3><strong>AsQueryable()</strong></h3>\n<ul>\n<li>lazy (execute the query later)</li>\n<li>Parameter: <code>Expression&amp;lt;Func&amp;lt;TSource, bool&amp;gt;&amp;gt;</code></li>\n<li>Convert Expression into T-SQL (with the specific provider), query remotely and load result to your application memory.</li>\n<li>That’s why DbSet (in Entity Framework) also inherits IQueryable to get the efficient query.</li>\n<li>Do not load every record, e.g. if Take(5), it will generate select top 5 * SQL in the background. This means this type is more friendly to SQL Database, and that is why this type usually has higher performance and is recommended when dealing with a database.</li>\n<li>So <code>AsQueryable()</code> usually works much faster than <code>AsEnumerable()</code> as it generate T-SQL at first, which includes all your where conditions in your Linq.</li>\n</ul>\n<p>source : <a href=\"https://stackoverflow.com/questions/17968469/whats-the-differences-between-tolist-asenumerable-asqueryable\">https://stackoverflow.com/questions/17968469/whats-the-differences-between-tolist-asenumerable-asqueryable</a></p>\n",
          "slug": "entity-framework-tolist-vs-asenumerable-vs-asqueryable",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/09/entity-framework-tolist-vs-asenumerable-vs-asqueryable/",
          "date": "2019-05-09T23:54:29",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNTc=",
        "node": {
          "id": "cG9zdDoxMjU3",
          "title": "Visual Studio with ReSharper is slow",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1258\" src=\"https://emolike.net/wp-content/uploads/2019/05/21b860842daa208c64a39cabc155cf5774bd2b95.png\" width=\"320\" height=\"320\" srcset=\"https://emolike.net/wp-content/uploads/2019/05/21b860842daa208c64a39cabc155cf5774bd2b95.png 320w, https://emolike.net/wp-content/uploads/2019/05/21b860842daa208c64a39cabc155cf5774bd2b95-150x150.png 150w, https://emolike.net/wp-content/uploads/2019/05/21b860842daa208c64a39cabc155cf5774bd2b95-300x300.png 300w, https://emolike.net/wp-content/uploads/2019/05/21b860842daa208c64a39cabc155cf5774bd2b95-270x270.png 270w\" sizes=\"(max-width: 320px) 100vw, 320px\" /></p>\n<p class=\"imgd\">We do our best in terms of ReSharper performance, however there are some known and unknown cases where ReSharper can slow down Visual Studio. Below is a check list that will help you troubleshoot, &#8230;</p>\n<p class=\"imgs\">Source: <a href=\"https://resharper-support.jetbrains.com/hc/en-us/articles/206546919-Visual-Studio-with-ReSharper-is-slow\" target=\"_blank\" rel=\"noopener noreferrer\">resharper-support.jetbrains.com/hc/en-us/articles/206546919-Visual-Studio-with-ReSharper-is-slow</a></p>\n</div>\n",
          "slug": "visual-studio-with-resharper-is-slow",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/05/21b860842daa208c64a39cabc155cf5774bd2b95.png"
          },
          "link": "https://emolike.net/2019/05/08/visual-studio-with-resharper-is-slow/",
          "date": "2019-05-08T14:47:59",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNTU=",
        "node": {
          "id": "cG9zdDoxMjU1",
          "title": "How To Downgrade A Package In Arch Linux",
          "content": "<p>Add this app</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ sudo pacman -S downgrade\r\n</pre>\n<p>Select the package you are targeting</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ sudo downgrade [PACKAGE, ...] [-- [PACMAN OPTIONS]]\r\n</pre>\n<p>Example</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ sudo downgrade opera\r\n\r\nAvailable packages:\r\n\r\n 1) opera-37.0.2178.43-1-x86_64.pkg.tar.xz (local)\r\n 2) opera-37.0.2178.43-1-x86_64.pkg.tar.xz (remote)\r\n 3) opera-37.0.2178.32-1-x86_64.pkg.tar.xz (remote)\r\n 4) opera-36.0.2130.65-2-x86_64.pkg.tar.xz (remote)\r\n 5) opera-36.0.2130.65-1-x86_64.pkg.tar.xz (remote)\r\n 6) opera-36.0.2130.46-2-x86_64.pkg.tar.xz (remote)\r\n 7) opera-36.0.2130.46-1-x86_64.pkg.tar.xz (remote)\r\n 8) opera-36.0.2130.32-2-x86_64.pkg.tar.xz (remote)\r\n 9) opera-36.0.2130.32-1-x86_64.pkg.tar.xz (remote)\r\n 10) opera-35.0.2066.92-1-x86_64.pkg.tar.xz (remote)\r\n 11) opera-35.0.2066.82-1-x86_64.pkg.tar.xz (remote)\r\n 12) opera-35.0.2066.68-1-x86_64.pkg.tar.xz (remote)\r\n 13) opera-35.0.2066.37-2-x86_64.pkg.tar.xz (remote)\r\n 14) opera-34.0.2036.50-1-x86_64.pkg.tar.xz (remote)\r\n 15) opera-34.0.2036.47-1-x86_64.pkg.tar.xz (remote)\r\n 16) opera-34.0.2036.25-1-x86_64.pkg.tar.xz (remote)\r\n 17) opera-33.0.1990.115-2-x86_64.pkg.tar.xz (remote)\r\n 18) opera-33.0.1990.115-1-x86_64.pkg.tar.xz (remote)\r\n 19) opera-33.0.1990.58-1-x86_64.pkg.tar.xz (remote)\r\n 20) opera-32.0.1948.69-1-x86_64.pkg.tar.xz (remote)\r\n 21) opera-32.0.1948.25-1-x86_64.pkg.tar.xz (remote)\r\n 22) opera-31.0.1889.174-1-x86_64.pkg.tar.xz (remote)\r\n 23) opera-31.0.1889.99-1-x86_64.pkg.tar.xz (remote)\r\n 24) opera-30.0.1835.125-1-x86_64.pkg.tar.xz (remote)\r\n 25) opera-30.0.1835.88-1-x86_64.pkg.tar.xz (remote)\r\n 26) opera-30.0.1835.59-1-x86_64.pkg.tar.xz (remote)\r\n 27) opera-30.0.1835.52-1-x86_64.pkg.tar.xz (remote)\r\n 28) opera-29.0.1795.60-1-x86_64.pkg.tar.xz (remote)\r\n 29) opera-29.0.1795.47-1-x86_64.pkg.tar.xz (remote)\r\n 30) opera-28.0.1750.51-1-x86_64.pkg.tar.xz (remote)\r\n 31) opera-28.0.1750.48-1-x86_64.pkg.tar.xz (remote)\r\n 32) opera-28.0.1750.40-1-x86_64.pkg.tar.xz (remote)\r\n 33) opera-27.0.1689.76-1-x86_64.pkg.tar.xz (remote)\r\n 34) opera-27.0.1689.69-1-x86_64.pkg.tar.xz (remote)\r\n 35) opera-27.0.1689.66-1-x86_64.pkg.tar.xz (remote)\r\n 36) opera-27.0.1689.54-2-x86_64.pkg.tar.xz (remote)\r\n 37) opera-27.0.1689.54-1-x86_64.pkg.tar.xz (remote)\r\n 38) opera-26.0.1656.60-1-x86_64.pkg.tar.xz (remote)\r\n 39) opera-26.0.1656.32-1-x86_64.pkg.tar.xz (remote)\r\n 40) opera-12.16.1860-2-x86_64.pkg.tar.xz (remote)\r\n 41) opera-12.16.1860-1-x86_64.pkg.tar.xz (remote)\r\n\r\nselect a package by number:</pre>\n<p>&nbsp;</p>\n",
          "slug": "how-to-downgrade-a-package-in-arch-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/08/how-to-downgrade-a-package-in-arch-linux/",
          "date": "2019-05-08T14:26:54",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNTI=",
        "node": {
          "id": "cG9zdDoxMjUy",
          "title": "F# for C# programmers &#8211; Scott Wlaschin",
          "content": "<p><iframe title=\"F# for C# programmers - Scott Wlaschin\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/KPa8Yw_Navk?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "f-for-c-programmers-scott-wlaschin",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/08/f-for-c-programmers-scott-wlaschin/",
          "date": "2019-05-08T00:45:01",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "F#"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNDc=",
        "node": {
          "id": "cG9zdDoxMjQ3",
          "title": "Cucumber Specflow Example",
          "content": "<p><iframe title=\"Visual Studio 2017 - Cucumber Specflow Example\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/OW2iJ_xYyf4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p><iframe title=\"SpecFlow Testing Framework\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/xf2-12y3Swk?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p><iframe title=\"Class 6: Setting up the SpecFlow environment (Start to End)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/lwQy8tmCzOQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "visual-studio-2017-cucumber-specflow-example",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/06/visual-studio-2017-cucumber-specflow-example/",
          "date": "2019-05-06T13:19:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "testing"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0ODI=",
        "node": {
          "id": "cG9zdDoxNDgy",
          "title": "Build and Deploy an ASP .Net Core Web Application as Docker Container using Microsoft Azure",
          "content": "<h2>Introduction</h2>\n<p>This is the final part in the series of articles about building an ASP .Net Core Web Application and deploying it as a Docker container using Microsoft Azure. Here, we are going to setup a <a href=\"https://dev.azure.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Microsoft Azure DevOps</a> release pipeline to automate the deployment of our application as a container on <a href=\"https://azure.microsoft.com/en-in/services/app-service/web/\" target=\"_blank\" rel=\"noopener noreferrer\">Azure Web App Service</a>.</p>\n<p>If you have been following along, you must have:</p>\n<ul>\n<li>a GitHub repository with an ASP .Net Core (or something similar) web application</li>\n<li>a <a href=\"https://docs.docker.com/engine/reference/builder/\" target=\"_blank\" rel=\"noopener noreferrer\">Dockerfile</a> to build an Image for your application</li>\n<li>Azure DevOps Pipelines integration with <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> to automatically trigger a build</li>\n<li>a Continuous Integration pipeline in Azure DevOps to build Docker Image and push it to Docker Hub</li>\n</ul>\n<p>Three parts in series:</p>\n<ol>\n<li><a href=\"https://www.quickdevnotes.com/deploy-net-core-web-application-using-azure-and-docker/\" target=\"_blank\" rel=\"noopener noreferrer\">develop an ASP .Net Core web application and containerize it with Docker</a></li>\n<li><a href=\"https://www.quickdevnotes.com/setup-microsoft-azure-build-pipeline/\" target=\"_blank\" rel=\"noopener noreferrer\">setup Continuous Integration with Microsoft Azure DevOps Pipeline and GitHub</a></li>\n<li><a href=\"https://www.quickdevnotes.com/setup-release-pipeline-with-azure-devops/\" target=\"_blank\" rel=\"noopener noreferrer\">setup Continuous Deployment pipeline to deploy the application as Docker container on Azure Web App Service</a></li>\n</ol>\n<p>&nbsp;</p>\n<h2>Deploy manually on Azure Web App Service</h2>\n<p>Before we get into any automation, let’s first deploy our application manually and see if it’s working. In order to do that, go to <a href=\"https://portal.azure.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Microsoft Azure portal</a> and provide the login details.</p>\n<p>From the navigation panel, select App Services and then select Add. On the window that follows:</p>\n<ul>\n<li>provide a name for your application</li>\n<li>select subscription</li>\n<li>you may create a new resource group or use an existing resource group</li>\n<li>select the required OS</li>\n<li>for <strong>Publish</strong>, select <strong>Docker Image</strong></li>\n</ul>\n<figure id=\"attachment_763\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-763\"><img class=\"alignnone size-full wp-image-1483\" src=\"https://emolike.net/wp-content/uploads/2019/06/add-app-service.png\" width=\"854\" height=\"801\" alt=\"Add Azure App Service\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/add-app-service.png 854w, https://emolike.net/wp-content/uploads/2019/06/add-app-service-300x281.png 300w, https://emolike.net/wp-content/uploads/2019/06/add-app-service-768x720.png 768w\" sizes=\"(max-width: 854px) 100vw, 854px\" /><figcaption id=\"caption-attachment-763\" class=\"wp-caption-text\">Adding Azure App Service</figcaption></figure>\n<p>Next step is to select <strong>Configure Container</strong>, and provide details about the Docker image you want to use for your application. By default, <strong>Single Container </strong>is active. Select <strong>Docker Hub </strong>as the image registry, or which ever is applicable. Select, if your registry is private or public and then provide the name of your Docker image.</p>\n<figure id=\"attachment_768\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-768\"><img class=\"alignnone size-full wp-image-1484\" src=\"https://emolike.net/wp-content/uploads/2019/06/config-container.png\" width=\"1117\" height=\"393\" alt=\"Container configuration \" srcset=\"https://emolike.net/wp-content/uploads/2019/06/config-container.png 1117w, https://emolike.net/wp-content/uploads/2019/06/config-container-300x106.png 300w, https://emolike.net/wp-content/uploads/2019/06/config-container-768x270.png 768w, https://emolike.net/wp-content/uploads/2019/06/config-container-1024x360.png 1024w\" sizes=\"(max-width: 1117px) 100vw, 1117px\" /><figcaption id=\"caption-attachment-768\" class=\"wp-caption-text\">Container configuration</figcaption></figure>\n<p>Once you click <strong>Apply</strong>, you are redirected to previous page. Click <strong>Create</strong> and the deployment will start after a few validations that will not take too long.</p>\n<p>Once the deployment is complete, you get a notification. After that, if you refresh the App Services page, the newly created app will be in the list.</p>\n<figure id=\"attachment_766\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-766\"><img class=\"alignnone size-full wp-image-1485\" src=\"https://emolike.net/wp-content/uploads/2019/06/deployment-success.png\" width=\"1216\" height=\"304\" alt=\"Deployment notification \" srcset=\"https://emolike.net/wp-content/uploads/2019/06/deployment-success.png 1216w, https://emolike.net/wp-content/uploads/2019/06/deployment-success-300x75.png 300w, https://emolike.net/wp-content/uploads/2019/06/deployment-success-768x192.png 768w, https://emolike.net/wp-content/uploads/2019/06/deployment-success-1024x256.png 1024w\" sizes=\"(max-width: 1216px) 100vw, 1216px\" /><figcaption id=\"caption-attachment-766\" class=\"wp-caption-text\">Deployment notification</figcaption></figure>\n<p><em>Congratulations!! </em>You just deployed your application as a Docker container on Microsoft Azure App Services.</p>\n<p>&nbsp;</p>\n<h2>Testing the application</h2>\n<p>It’s time to check, if your application is actually working or not. From the App Services page, select your app. Now, from the top right of the overview pane grab the URL for your application.</p>\n<figure id=\"attachment_764\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-764\"><img class=\"alignnone size-full wp-image-1486\" src=\"https://emolike.net/wp-content/uploads/2019/06/app-url.png\" width=\"1216\" height=\"304\" alt=\"Get Azure App URL\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/app-url.png 1216w, https://emolike.net/wp-content/uploads/2019/06/app-url-300x75.png 300w, https://emolike.net/wp-content/uploads/2019/06/app-url-768x192.png 768w, https://emolike.net/wp-content/uploads/2019/06/app-url-1024x256.png 1024w\" sizes=\"(max-width: 1216px) 100vw, 1216px\" /><figcaption id=\"caption-attachment-764\" class=\"wp-caption-text\">Get Azure App URL</figcaption></figure>\n<p>Open the URL in your favourite browser and you must have your application working. Here is mine:</p>\n<figure id=\"attachment_758\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-758\"><img class=\"alignnone size-full wp-image-1487\" src=\"https://emolike.net/wp-content/uploads/2019/06/working-app-e1555958144693.png\" width=\"1447\" height=\"748\" alt=\"Manually deployed application\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/working-app-e1555958144693.png 1447w, https://emolike.net/wp-content/uploads/2019/06/working-app-e1555958144693-300x155.png 300w, https://emolike.net/wp-content/uploads/2019/06/working-app-e1555958144693-768x397.png 768w, https://emolike.net/wp-content/uploads/2019/06/working-app-e1555958144693-1024x529.png 1024w\" sizes=\"(max-width: 1447px) 100vw, 1447px\" /><figcaption id=\"caption-attachment-758\" class=\"wp-caption-text\">Manually deployed application</figcaption></figure>\n<p>If the application is not working, the first thing you want to check is the logs. For that, go to <strong>Settings</strong> <strong>&gt;</strong> <strong>Container Settings</strong> and you see the Logs. Here is how it looks:</p>\n<figure id=\"attachment_759\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-759\"><img class=\"alignnone size-full wp-image-1488\" src=\"https://emolike.net/wp-content/uploads/2019/06/app-logs.png\" width=\"1212\" height=\"761\" alt=\"Deployment Logs for Container\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/app-logs.png 1212w, https://emolike.net/wp-content/uploads/2019/06/app-logs-300x188.png 300w, https://emolike.net/wp-content/uploads/2019/06/app-logs-768x482.png 768w, https://emolike.net/wp-content/uploads/2019/06/app-logs-1024x643.png 1024w\" sizes=\"(max-width: 1212px) 100vw, 1212px\" /><figcaption id=\"caption-attachment-759\" class=\"wp-caption-text\">Deployment Logs for Container</figcaption></figure>\n<p>&nbsp;</p>\n<h2>Adding Service Connection</h2>\n<p>For the release pipeline to be able to deploy your application automatically on Azure App services, it requires to have access to the Azure resources.</p>\n<p>In order to grant the access, go to <strong>Project Properties </strong><strong>&gt; Service Connections</strong> and then select New service connection.</p>\n<p>From the list, select Azure Resource Manager and fill the details on the modal window that follows. Select scope level as Subscription and then select your subscription. Later select the resource group in which you have created the App Service for your application.</p>\n<figure id=\"attachment_760\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-760\"><img class=\"alignnone size-full wp-image-1489\" src=\"https://emolike.net/wp-content/uploads/2019/06/service-connection.png\" width=\"1094\" height=\"682\" alt=\"Add Service Connection for Azure Resources\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/service-connection.png 1094w, https://emolike.net/wp-content/uploads/2019/06/service-connection-300x187.png 300w, https://emolike.net/wp-content/uploads/2019/06/service-connection-768x479.png 768w, https://emolike.net/wp-content/uploads/2019/06/service-connection-1024x638.png 1024w\" sizes=\"(max-width: 1094px) 100vw, 1094px\" /><figcaption id=\"caption-attachment-760\" class=\"wp-caption-text\">Add Service Connection for Azure Resources</figcaption></figure>\n<p>&nbsp;</p>\n<h2>Azure DevOps Release Pipeline</h2>\n<p>Alright then! It’s time to automate our next release by creating a release pipeline in Azure. Go to <a href=\"https://dev.azure.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Azure DevOps</a>, select your organisation and project.</p>\n<p>Under Pipelines select <strong>Releases</strong> and then click on <strong>New pipeline</strong>. Let’s start by giving your pipeline a nice name, using the text field at the top.</p>\n<p>&nbsp;</p>\n<h3>Adding a Build Artifact</h3>\n<p>Now, let’s add an artifact to the pipeline. Click on <strong>Add an artifact</strong> and select Docker Hub as the source type. From the dropdown select service connection for Docker Hub which we had setup in the <a href=\"https://www.quickdevnotes.com/setup-microsoft-azure-build-pipeline/\" target=\"_blank\" rel=\"noopener noreferrer\">previous article</a>.</p>\n<figure id=\"attachment_765\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-765\"><img class=\"alignnone size-full wp-image-1490\" src=\"https://emolike.net/wp-content/uploads/2019/06/add-artifact.png\" width=\"1442\" height=\"797\" alt=\"Adding an artifact for Release Pipeline\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/add-artifact.png 1442w, https://emolike.net/wp-content/uploads/2019/06/add-artifact-300x166.png 300w, https://emolike.net/wp-content/uploads/2019/06/add-artifact-768x424.png 768w, https://emolike.net/wp-content/uploads/2019/06/add-artifact-1024x566.png 1024w\" sizes=\"(max-width: 1442px) 100vw, 1442px\" /><figcaption id=\"caption-attachment-765\" class=\"wp-caption-text\">Adding an artifact for Release Pipeline</figcaption></figure>\n<p>Select the namespace and repository you want have setup for your application. For <strong>default version</strong>, you may either select “Latest” or “Specify at the time of release creation”. It depends on your requirement.</p>\n<p>If you select “Latest”, you have to ensure that you always tag your Docker images as “latest” in the build pipeline. I prefer to use the other option.</p>\n<p>&nbsp;</p>\n<h3>Adding tasks to Pipeline</h3>\n<p>We now have to add a stage to the release pipeline. Click on “Add a stage” and select “<strong>Azure Web App on Container Deploy</strong>” and give it a name. And switch to <strong>Tasks </strong>tab.</p>\n<p>The first entry in the task list is the agent setup, for which we are going to select <strong>Hosted Ubuntu 1604 </strong>as the agent pool. You can leave the rest as is.</p>\n<p>Now, select the second task and under Azure subscription, select the service connection we have setup in earlier steps. After that, it gives you the list of applications to select from. The most important is Image name. Therefore, please ensure that it is exactly same as what you have setup in the build pipeline.</p>\n<figure id=\"attachment_761\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-761\"><img class=\"alignnone size-full wp-image-1491\" src=\"https://emolike.net/wp-content/uploads/2019/06/task-definition.png\" width=\"1185\" height=\"801\" alt=\"Release Pipeline Task Definition\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/task-definition.png 1185w, https://emolike.net/wp-content/uploads/2019/06/task-definition-300x203.png 300w, https://emolike.net/wp-content/uploads/2019/06/task-definition-768x519.png 768w, https://emolike.net/wp-content/uploads/2019/06/task-definition-1024x692.png 1024w\" sizes=\"(max-width: 1185px) 100vw, 1185px\" /><figcaption id=\"caption-attachment-761\" class=\"wp-caption-text\">Release Pipeline Task Definition</figcaption></figure>\n<p>We are almost done here. However, there is one missing. We have not yet enabled the automatic trigger for the release pipeline to start. Let’s do that now.</p>\n<p>Go back to Pipeline tab. If you now click the lightning bolt symbol at top right of artifact, it allows you to enable Continuous deployment trigger. So, go ahead and do that.</p>\n<figure id=\"attachment_767\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-767\"><img class=\"alignnone size-full wp-image-1492\" src=\"https://emolike.net/wp-content/uploads/2019/06/release-trigger.png\" width=\"1135\" height=\"522\" alt=\"Continuous deployment trigger\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/release-trigger.png 1135w, https://emolike.net/wp-content/uploads/2019/06/release-trigger-300x138.png 300w, https://emolike.net/wp-content/uploads/2019/06/release-trigger-768x353.png 768w, https://emolike.net/wp-content/uploads/2019/06/release-trigger-1024x471.png 1024w\" sizes=\"(max-width: 1135px) 100vw, 1135px\" /><figcaption id=\"caption-attachment-767\" class=\"wp-caption-text\">Continuous deployment trigger</figcaption></figure>\n<p>You can also add certain filters to the trigger if you want. But for now, I will keep it easy and simple. Finally, save the release pipeline.</p>\n<p>&nbsp;</p>\n<h2>Testing the CI/CD Pipeline (end-to-end test)</h2>\n<p>Finally, it’s time to test everything we have done so far. In order to do so:</p>\n<ul>\n<li>change something in your application</li>\n<li>push the changes to master branch</li>\n<li>the build pipeline starts and pushes a new image to Docker Hub</li>\n<li>push to Docker Hub triggers the release pipeline</li>\n<li>the latest changes of your application are now visible</li>\n</ul>\n<p>Take your time and change something that you can use to verify if everything is working. In fact, you can also refer the logs of your Azure App Service, to validate which tag of the Docker image is running at the moment.</p>\n<figure id=\"attachment_762\" class=\"wp-caption aligncenter\" aria-describedby=\"caption-attachment-762\"><img class=\"alignnone size-full wp-image-1493\" src=\"https://emolike.net/wp-content/uploads/2019/06/deployment.png\" width=\"1251\" height=\"768\" alt=\"Logs of new deployment with Release Pipeline\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/deployment.png 1251w, https://emolike.net/wp-content/uploads/2019/06/deployment-300x184.png 300w, https://emolike.net/wp-content/uploads/2019/06/deployment-768x471.png 768w, https://emolike.net/wp-content/uploads/2019/06/deployment-1024x629.png 1024w\" sizes=\"(max-width: 1251px) 100vw, 1251px\" /><figcaption id=\"caption-attachment-762\" class=\"wp-caption-text\">Logs of new deployment with Release Pipeline</figcaption></figure>\n<p>For instance, in the above image, notice the logs highlighted with green squares. This shows that the Azure DevOps Pipelines that I have setup is working.</p>\n<p><em>Many many congratulations!! We have successfully achieved a milestone.</em></p>\n<p>&nbsp;</p>\n<h2>Conclusion</h2>\n<p>To begin with, we developed an ASP .Net Core based web application and put our code in a GitHub repository. After that, we setup a build pipeline to automatically build a Docker image for our application and later push it to Docker Hub. Next, in this article we have created a release pipeline to automatically deploy our application as a Docker container on Azure Web App service.</p>\n<p>I hope it’s working for you as well, however, if you are facing an issue at any part of this series, I will be really glad to help you out.</p>\n<p>&nbsp;</p>\n<p>Source : <a href=\"https://www.quickdevnotes.com/setup-release-pipeline-with-azure-devops/\">https://www.quickdevnotes.com/setup-release-pipeline-with-azure-devops/</a></p>\n<p>&nbsp;</p>\n",
          "slug": "build-and-deploy-an-asp-net-core-web-application-as-docker-container-using-microsoft-azure",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/06/add-app-service.png"
          },
          "link": "https://emolike.net/2019/05/05/build-and-deploy-an-asp-net-core-web-application-as-docker-container-using-microsoft-azure/",
          "date": "2019-05-05T21:59:07",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNDQ=",
        "node": {
          "id": "cG9zdDoxMjQ0",
          "title": "Create React App 3 0",
          "content": "<p><iframe title=\"What&#039;s New in Create React App 3 0?\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/gpgHmWFaCkM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "create-react-app-3-0",
          "featuredImage": null,
          "link": "https://emolike.net/2019/05/05/create-react-app-3-0/",
          "date": "2019-05-05T15:29:37",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "React"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyNDA=",
        "node": {
          "id": "cG9zdDoxMjQw",
          "title": "distrotest : Test a new Linux operating system on Browser",
          "content": "<p>distrotest.net is providing a great free service to test many numbers of linux distros on the browser through VNC.</p>\n<p>DistroTest.net &#8211; The first online operating system tester</p>\n<div id=\"at_zurlpreview\">\n<h3 style=\"display: none;\">DistroTest.net &#8211; The first online operating system tester</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-1241\" src=\"https://emolike.net/wp-content/uploads/2019/04/DistroTest.net_1000x130.png\" width=\"1000\" height=\"130\" srcset=\"https://emolike.net/wp-content/uploads/2019/04/DistroTest.net_1000x130.png 1000w, https://emolike.net/wp-content/uploads/2019/04/DistroTest.net_1000x130-300x39.png 300w, https://emolike.net/wp-content/uploads/2019/04/DistroTest.net_1000x130-768x100.png 768w, https://emolike.net/wp-content/uploads/2019/04/DistroTest.net_1000x130-604x79.png 604w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n<p class=\"imgd\">Online operating system tester</p>\n<p class=\"imgs\">Source: <a href=\"https://distrotest.net/\" target=\"_blank\" rel=\"noopener noreferrer\">distrotest.net/</a></p>\n</div>\n",
          "slug": "distrotest-test-a-new-linux-operating-system-on-browser",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/04/DistroTest.net_1000x130.png"
          },
          "link": "https://emolike.net/2019/04/20/distrotest-test-a-new-linux-operating-system-on-browser/",
          "date": "2019-04-20T02:37:22",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0OTc=",
        "node": {
          "id": "cG9zdDoxNDk3",
          "title": "Getting started with CI/CD &#038; Azure Container Service (AKS) powered by VSTS",
          "content": "<p><iframe title=\"Getting started with CI/CD &amp; Azure Container Service (AKS) powered by VSTS\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/HMIxLaisKiI?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "getting-started-with-ci-cd-azure-container-service-aks-powered-by-vsts",
          "featuredImage": null,
          "link": "https://emolike.net/2019/04/14/getting-started-with-ci-cd-azure-container-service-aks-powered-by-vsts/",
          "date": "2019-04-14T22:19:07",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0OTU=",
        "node": {
          "id": "cG9zdDoxNDk1",
          "title": "Setting up CI/CD Pipelines for Azure Functions on VSTS",
          "content": "<p><iframe title=\"Setting up CI/CD Pipelines for Azure Functions on VSTS\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/zN0W2IPF1hI?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n",
          "slug": "setting-up-ci-cd-pipelines-for-azure-functions-on-vsts",
          "featuredImage": null,
          "link": "https://emolike.net/2019/04/05/setting-up-ci-cd-pipelines-for-azure-functions-on-vsts/",
          "date": "2019-04-05T22:15:58",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MTA=",
        "node": {
          "id": "cG9zdDoxNTEw",
          "title": "Edwin van Wijk — Building microservices with .NET Core and Docker",
          "content": "<p><iframe title=\"Edwin van Wijk — Building microservices with .NET Core and Docker\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/-AfZxdXa7yc?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "edwin-van-wijk-building-microservices-with-net-core-and-docker",
          "featuredImage": null,
          "link": "https://emolike.net/2019/03/06/edwin-van-wijk-building-microservices-with-net-core-and-docker/",
          "date": "2019-03-06T10:12:37",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0OTk=",
        "node": {
          "id": "cG9zdDoxNDk5",
          "title": "Azure vs AWS vs GCP Cloud Services Free Tier comparison",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">Due to the nature of competition in public cloud business, almost all major service providers offer some of their services free for life time, some services free for first 12 months and some service for a free credit for an initial period. There are already a number of articles online</p>\n<p class=\"imgs\">Source: <a href=\"http://sudhakarplugged.com/azure-vs-aws-vs-gcp-cloud-services-free-tier-comparison/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">sudhakarplugged.com/azure-vs-aws-vs-gcp-cloud-services-free-tier-comparison/index.html</a></p>\n</div>\n<p>&nbsp;</p>\n",
          "slug": "azure-vs-aws-vs-gcp-cloud-services-free-tier-comparison",
          "featuredImage": null,
          "link": "https://emolike.net/2019/03/03/azure-vs-aws-vs-gcp-cloud-services-free-tier-comparison/",
          "date": "2019-03-03T22:35:10",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "AWS"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMzg=",
        "node": {
          "id": "cG9zdDoxMjM4",
          "title": "c# unit testing with Moq in 9 min",
          "content": "<p><iframe title=\"c# unit testing with Moq in 9 min\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/SHAKzgYtu9E?start=196&#038;feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "c-unit-testing-with-moq-in-9-min",
          "featuredImage": null,
          "link": "https://emolike.net/2019/02/09/c-unit-testing-with-moq-in-9-min/",
          "date": "2019-02-09T17:35:48",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MDQ=",
        "node": {
          "id": "cG9zdDoxNTA0",
          "title": "Full CI/CD pipeline to deploy multi-containers application on Azure Container Service with Docker Swarm using Visual Studio Team Services",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgd\">Azure Container Service (ACS) allows to deploy and manage containers using Docker Swarm, Mesosphere DC/OS or Kubernetes orchestrators. Recently, the ACS team open sources ACS-engine. It is now very easy to deploy these three orchestrators on Azure, using the portal, an Azure Resource Manager template or Azure-CLI. They also have released in preview the Azure Container Registry which is an implementation of the open source Docker Registry and that can run as a service on Azure and is fully compatible with Docker Swarm, Kubernetes and DC/OS. This is a private registry that allows to store Docker images for enterprise applications instead of having to use the public Docker Hub, for example. In this new blog post I will detail how I have used ACS with Docker Swarm, an Azure Container Registry and Visual Studio Team Services to deliver continuously a multi-containers application wrote in .NET Core. Tooling has also been recently released to create a similar CI/CD pipeline with VSTS when using Mesosphere DC/OS.</p>\n<p class=\"imgs\">Source: <a href=\"https://blog.jcorioland.io/archives/2016/11/29/full-ci-cd-pipeline-to-deploy-multi-containers-application-on-azure-container-service-docker-swarm-using-visual-studio-team-services.html\" target=\"_blank\" rel=\"noopener noreferrer\">blog.jcorioland.io/archives/2016/11/29/full-ci-cd-pipeline-to-deploy-multi-containers-application-on-azure-container-service-docker-swarm-using-visual-studio-team-services.html</a></p>\n</div>\n",
          "slug": "full-ci-cd-pipeline-to-deploy-multi-containers-application-on-azure-container-service-with-docker-swarm-using-visual-studio-team-services",
          "featuredImage": null,
          "link": "https://emolike.net/2019/02/07/full-ci-cd-pipeline-to-deploy-multi-containers-application-on-azure-container-service-with-docker-swarm-using-visual-studio-team-services/",
          "date": "2019-02-07T16:15:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MDY=",
        "node": {
          "id": "cG9zdDoxNTA2",
          "title": "Microservice Architecture with ASP.NET Core",
          "content": "<p><iframe title=\"Microservice Architecture with ASP.NET Core\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/RyHDWlIq6vI?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "microservice-architecture-with-asp-net-core",
          "featuredImage": null,
          "link": "https://emolike.net/2019/02/02/microservice-architecture-with-asp-net-core/",
          "date": "2019-02-02T17:02:15",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMzQ=",
        "node": {
          "id": "cG9zdDoxMjM0",
          "title": "M.2 vs NVME: What&#8217;s the difference?",
          "content": "<p><iframe title=\"M.2 vs NVME: What&#039;s the difference?\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/fJCHx7mZEKo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "m-2-vs-nvme-whats-the-difference",
          "featuredImage": null,
          "link": "https://emolike.net/2019/01/24/m-2-vs-nvme-whats-the-difference/",
          "date": "2019-01-24T04:28:20",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Others"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMzE=",
        "node": {
          "id": "cG9zdDoxMjMx",
          "title": "How to install Active Directory &#038;&#038; Connect to AD using C#",
          "content": "<p><iframe title=\"How to install Active Directory (AD) Domain Services in Windows server 2012 R2\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/-BqNC3s5-ec?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing System.DirectoryServices.AccountManagement;\r\nnamespace AD1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            ActiveDirectory ac = new ActiveDirectory();\r\n            Console.WriteLine(\"Login : \" + ac.Login(\"eramax@domain.local\", \"x\"));\r\n            Console.WriteLine(\"Search For eramax : \" + ac.Search(\"eramax\"));\r\n            Console.WriteLine(\"Search For eramax@domain.local : \" + ac.SearchByEmail(\"eramax@domain.local\"));\r\n            Console.WriteLine(\"Print All Users in AD\" ); ac.GetAllUsers();\r\n            Console.ReadLine();\r\n        }\r\n\r\n    }\r\n    public class ActiveDirectory\r\n    {\r\n        private static string LDAPServerIP = \"x.x.x.x\";\r\n        private static string ADDomain = \"domain.local\";\r\n        private static string ADUsername = \"x@domain.local\";\r\n        private static string ADPassword = \"x\";\r\n        public bool Login(string username, string pass)\r\n        {\r\n            using (PrincipalContext ctx = new PrincipalContext(ContextType.Domain, LDAPServerIP , ADUsername, ADPassword))\r\n            {\r\n                bool userValid = ctx.ValidateCredentials(username, pass);\r\n                return userValid;\r\n            }\r\n        }\r\n\r\n        public string Search(string userName)\r\n        {\r\n            PrincipalContext ctx = new PrincipalContext(ContextType.Domain, LDAPServerIP, ADUsername, ADPassword);\r\n            var user = UserPrincipal.FindByIdentity(ctx, IdentityType.SamAccountName, ADDomain + \"\\\\\" + userName);\r\n            return user != null ? user.UserPrincipalName : null;\r\n        }\r\n        public string SearchByEmail(string userName)\r\n        {\r\n            PrincipalContext ctx = new PrincipalContext(ContextType.Domain, LDAPServerIP, ADUsername, ADPassword);\r\n            var user = UserPrincipal.FindByIdentity(ctx, IdentityType.UserPrincipalName,  userName);\r\n            return user != null ? user.UserPrincipalName : null;\r\n        }\r\n        public void GetAllUsers()\r\n        {\r\n            PrincipalContext domain = new PrincipalContext(ContextType.Domain, LDAPServerIP, ADUsername, ADPassword);\r\n            PrincipalSearcher search = new PrincipalSearcher(new UserPrincipal(domain));\r\n            foreach (UserPrincipal user in search.FindAll())\r\n            {\r\n                Console.WriteLine(user.DistinguishedName);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</pre>\n<p>&nbsp;</p>\n",
          "slug": "how-to-install-active-directory-connect-to-ad-using-c",
          "featuredImage": null,
          "link": "https://emolike.net/2019/01/24/how-to-install-active-directory-connect-to-ad-using-c/",
          "date": "2019-01-24T02:00:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Security"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1MTM=",
        "node": {
          "id": "cG9zdDoxNTEz",
          "title": "Deploying Database changes alongside your code with SSDT projects and VSTS",
          "content": "<p><iframe title=\"Deploying Database changes alongside your code with SSDT projects and VSTS | DevOps Lab\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/eHnxsJeTp_M?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "deploying-database-changes-alongside-your-code-with-ssdt-projects-and-vsts",
          "featuredImage": null,
          "link": "https://emolike.net/2019/01/16/deploying-database-changes-alongside-your-code-with-ssdt-projects-and-vsts/",
          "date": "2019-01-16T14:27:01",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "SQL"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMjc=",
        "node": {
          "id": "cG9zdDoxMjI3",
          "title": "My Top 5 Distros of 2018",
          "content": "<p><iframe title=\"Chasing Perfection? - My Top 5 Distros of 2018\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/BO1jfbdfKIU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "my-top-5-distros-of-2018",
          "featuredImage": null,
          "link": "https://emolike.net/2019/01/12/my-top-5-distros-of-2018/",
          "date": "2019-01-12T21:11:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMjQ=",
        "node": {
          "id": "cG9zdDoxMjI0",
          "title": "Best Screen Recorders For Linux",
          "content": "<h3>Kazam</h3>\n<p>Kazam is a minimal and nifty tool for screencasting. It includes screenshot support too. Kazam is most suitable for beginners and for getting the task done quickly without going too much into various options.</p>\n<div class=\"wp-block-image size-full wp-image-13981\">\n<figure class=\"aligncenter\"><img class=\"alignnone size-full wp-image-1225\" src=\"https://emolike.net/wp-content/uploads/2019/01/Kazam.png\" width=\"384\" height=\"367\" alt=\"Kazam Interface\" srcset=\"https://emolike.net/wp-content/uploads/2019/01/Kazam.png 384w, https://emolike.net/wp-content/uploads/2019/01/Kazam-300x287.png 300w, https://emolike.net/wp-content/uploads/2019/01/Kazam-283x270.png 283w\" sizes=\"(max-width: 384px) 100vw, 384px\" /><figcaption>Kazam Interface</figcaption></figure>\n</div>\n<h4>Main Features</h4>\n<ul>\n<li>Simple and compact user interface</li>\n<li>Supports multiple video output format</li>\n<li>Audio recording from a suitable source (microphone or speaker)</li>\n<li>Support for recording a single window or selected screen area</li>\n<li>Delay timer support</li>\n</ul>\n<div class=\"wp-block-columns has-2-columns\">\n<div class=\"wp-block-column\">\n<h4>Pros</h4>\n<ul>\n<li>Simple and minimal, easy to use.</li>\n</ul>\n</div>\n<div class=\"wp-block-column\">\n<h4>Cons</h4>\n<ul>\n<li>Very few options for tweaking configuration settings</li>\n<li>Lack of WebCam recording support</li>\n</ul>\n</div>\n</div>\n<h4>Installation on Ubuntu</h4>\n<p>Open a terminal window and enter the following command:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt install kazam\r\n</pre>\n<p><strong>N.B.</strong> The latest version — which adds a bunch more features to Kazam — is not available through the official PPA or Ubuntu Universal repositories. How you can install it and use it quite easily. Read this article on <a href=\"https://itsfoss.com/kazam-screen-recorder/\">how to use the latest version of Kazam</a>.</p>\n",
          "slug": "best-screen-recorders-for-linux",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/01/Kazam.png"
          },
          "link": "https://emolike.net/2019/01/12/best-screen-recorders-for-linux/",
          "date": "2019-01-12T20:21:12",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMTc=",
        "node": {
          "id": "cG9zdDoxMjE3",
          "title": "How can I set up an A (address) record for my domain?",
          "content": "<p>It is possible to set up an A record from Namecheap&#8217;s side for domains that are using our <a href=\"https://www.namecheap.com/support/knowledgebase/article.aspx/782/10/how-do-i-set-my-domain-to-use-namecheaps-default-dns-servers\">BasicDNS</a>, <a href=\"https://www.namecheap.com/support/knowledgebase/article.aspx/923/10/what-is-the-difference-between-your-dns-system-v1-and-v2\">BackupDNS</a>(a legacy option), <a href=\"https://www.namecheap.com/support/knowledgebase/article.aspx/9654/2231/what-is-premiumdns\">PremiumDNS</a> or <a href=\"https://www.namecheap.com/support/knowledgebase/article.aspx/531/51/what-is-freedns\">FreeDNS</a>.</p>\n<p>If your <a href=\"https://www.namecheap.com/\">domain name</a> is pointed to any of these DNS systems, perform the following actions to create an<b> A (address) record</b> for it:</p>\n<p>1. Sign into your <b>Namecheap account</b> (The Sign In option is available in the top hat of the page).</p>\n<p>2. Select <b>Domain List</b> from the left sidebar and click on the <b>Manage</b> button next to your domain:</p>\n<p><img class=\"alignnone size-full wp-image-1218\" src=\"https://emolike.net/wp-content/uploads/2019/01/nctutmanage.png\" width=\"1280\" height=\"357\" srcset=\"https://emolike.net/wp-content/uploads/2019/01/nctutmanage.png 1280w, https://emolike.net/wp-content/uploads/2019/01/nctutmanage-300x84.png 300w, https://emolike.net/wp-content/uploads/2019/01/nctutmanage-768x214.png 768w, https://emolike.net/wp-content/uploads/2019/01/nctutmanage-1024x286.png 1024w, https://emolike.net/wp-content/uploads/2019/01/nctutmanage-604x168.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>3. Navigate to the <b>Advanced DNS</b> tab at the top of the page:</p>\n<p><img class=\"alignnone size-full wp-image-1219\" src=\"https://emolike.net/wp-content/uploads/2019/01/advanced_dns.png\" width=\"1110\" height=\"301\" srcset=\"https://emolike.net/wp-content/uploads/2019/01/advanced_dns.png 1110w, https://emolike.net/wp-content/uploads/2019/01/advanced_dns-300x81.png 300w, https://emolike.net/wp-content/uploads/2019/01/advanced_dns-768x208.png 768w, https://emolike.net/wp-content/uploads/2019/01/advanced_dns-1024x278.png 1024w, https://emolike.net/wp-content/uploads/2019/01/advanced_dns-604x164.png 604w\" sizes=\"(max-width: 1110px) 100vw, 1110px\" /></p>\n<p>4. Find the <b>Host records</b> section and click on the <b>Add New Record</b> button (<a href=\"https://www.namecheap.com/support/knowledgebase/article.aspx/323/46\">not able to edit Host Records?</a>):<img class=\"alignnone size-full wp-image-1220\" src=\"https://emolike.net/wp-content/uploads/2019/01/addnewrecord.png\" width=\"1162\" height=\"532\" srcset=\"https://emolike.net/wp-content/uploads/2019/01/addnewrecord.png 1162w, https://emolike.net/wp-content/uploads/2019/01/addnewrecord-300x137.png 300w, https://emolike.net/wp-content/uploads/2019/01/addnewrecord-768x352.png 768w, https://emolike.net/wp-content/uploads/2019/01/addnewrecord-1024x469.png 1024w, https://emolike.net/wp-content/uploads/2019/01/addnewrecord-590x270.png 590w\" sizes=\"(max-width: 1162px) 100vw, 1162px\" /></p>\n<p>5. Select <b>A Record</b> for <b>Type</b> and enter the <b>Host</b> you would like to point to an IP address:</p>\n<p><b>@</b> &#8211; used to point a root domain (<u>yourdomain.tld</u>) to the IP address:<br />\n<b>A Record | @ |  11.22.33.44</p>\n<p></b><b>www</b> &#8211; is selected when it is needed to point <u>www.yourdomain.tld</u> to the IP address: <b><br />\nA Record | www |  11.22.33.44</p>\n<p></b>[any host] &#8211; you can insert any name of a subdomain that should be pointed to the IP address: <b><br />\nA Record | blog |  11.22.33.44</p>\n<p></b>*<b> &#8211;  </b>a <a href=\"https://www.namecheap.com/support/knowledgebase/article.aspx/597/10/how-can-i-set-up-a-catchall-wildcard-subdomain\">wildcard</a> record that matches requests for non-existent subdomains:<br />\n<b>A Record | * |  11.22.33.44</b></p>\n<p>6. Once all details are inserted, save them using the <b>Save changes</b> green icon.</p>\n<p>Normally, it takes <b>30 minutes </b>for newly created records to take effect.</p>\n<p>Once you&#8217;ve done so, you might also want to make sure that there are no conflicting records set for the <b>same host</b> and remove them, if there are any. The records you need to check may be of Unmasked/Masked/Permanent Redirect, A or CNAME record types.</p>\n<p>Here is the example of conflicting records:</p>\n<p><img class=\"alignnone size-full wp-image-1221\" src=\"https://emolike.net/wp-content/uploads/2019/01/conflict01.png\" width=\"1121\" height=\"508\" srcset=\"https://emolike.net/wp-content/uploads/2019/01/conflict01.png 1121w, https://emolike.net/wp-content/uploads/2019/01/conflict01-300x136.png 300w, https://emolike.net/wp-content/uploads/2019/01/conflict01-768x348.png 768w, https://emolike.net/wp-content/uploads/2019/01/conflict01-1024x464.png 1024w, https://emolike.net/wp-content/uploads/2019/01/conflict01-596x270.png 596w\" sizes=\"(max-width: 1121px) 100vw, 1121px\" /></p>\n<p>and</p>\n<p><img class=\"alignnone size-full wp-image-1222\" src=\"https://emolike.net/wp-content/uploads/2019/01/conflict002.png\" width=\"1117\" height=\"520\" srcset=\"https://emolike.net/wp-content/uploads/2019/01/conflict002.png 1117w, https://emolike.net/wp-content/uploads/2019/01/conflict002-300x140.png 300w, https://emolike.net/wp-content/uploads/2019/01/conflict002-768x358.png 768w, https://emolike.net/wp-content/uploads/2019/01/conflict002-1024x477.png 1024w, https://emolike.net/wp-content/uploads/2019/01/conflict002-580x270.png 580w\" sizes=\"(max-width: 1117px) 100vw, 1117px\" /></p>\n<p>That&#8217;s it!</p>\n<p>Source : <a href=\"https://www.namecheap.com/support/knowledgebase/article.aspx/319/2237/how-can-i-set-up-an-a-address-record-for-my-domain\">https://www.namecheap.com/support/knowledgebase/article.aspx/319/2237/how-can-i-set-up-an-a-address-record-for-my-domain</a></p>\n",
          "slug": "how-can-i-set-up-an-a-address-record-for-my-domain",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2019/01/nctutmanage.png"
          },
          "link": "https://emolike.net/2019/01/04/how-can-i-set-up-an-a-address-record-for-my-domain/",
          "date": "2019-01-04T14:06:24",
          "tags": {
            "nodes": [
              {
                "name": "dns"
              },
              {
                "name": "domain"
              },
              {
                "name": "namecheap"
              }
            ]
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMTU=",
        "node": {
          "id": "cG9zdDoxMjE1",
          "title": "Linux Manjaro Switching from BIOS to UEFI",
          "content": "<p>For UEFI install the Disk partition table should be of type <b>GPT (Guid Partition Table).</b></p>\n<p>If you dont want to format your hard disk to GPT, but instead want to migrate from MBR to GPT while trying to save your data, can have a look at <a class=\"external free\" href=\"http://www.rodsbooks.com/gdisk/mbr2gpt.html\" rel=\"nofollow\">http://www.rodsbooks.com/gdisk/mbr2gpt.html</a></p>\n<h4>\n1) You would need to create an <i>ESP (EFI System Partition)</i>.</h4>\n<p>It is a FAT32 partition which has the .efi files for booting, which you can create using Gparted or gdisk. (Size 200-512 MiB).</p>\n<p>You would also need to install/check whether following packages are present-</p>\n<pre>1. efibootmgr\r\n2. dosfstools\r\n3. grub\r\n</pre>\n<p><a title=\"Pacman Overview\" href=\"https://wiki.manjaro.org/index.php?title=Pacman_Overview\">(How to install packages)</a></p>\n<h4>\n2) Create the <i>/boot/efi</i> directory</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo mkdir /boot/efi\r\n</pre>\n<h4>3.) Mount the EFI partition as <i>/boot/efi</i></h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo mount /dev/sdXY /boot/efi\r\n</pre>\n<p>X = Alphabet of the drive = a,b,c &#8230; Y = Partition number of the EFI partition = 1,2,3,4&#8230;</p>\n<p>Example &#8211; <i>/dev/sda4</i></p>\n<h4>\n4.) Install Grub according to UEFI</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=manjaro --recheck\r\n</pre>\n<h4>5.) Update Grub configuration file.</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo update-grub\r\n</pre>\n<p><b>Note-</b> If you get an error like</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">path '/boot/grub' is not readable by Grub on boot. Installation is impossible. Aborting\r\n</pre>\n<p>Then you will need to <a class=\"external text\" href=\"https://wiki.archlinux.org/index.php/Change_Root\" rel=\"nofollow\">chroot</a> as described <a title=\"Restore the GRUB Bootloader\" href=\"https://wiki.manjaro.org/index.php?title=Restore_the_GRUB_Bootloader#Identify_and_Prepare_the_Installed_Partition.28s.29\">here</a>, and then perform Step 5 again.</p>\n<p>If you get the following error :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">EFI variables are not supported on this system.\r\n</pre>\n<p>then you could load the <b>efivarfs</b> module :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo modprobe efivarfs\r\n</pre>\n<p>Source : <a href=\"https://wiki.manjaro.org/index.php?title=UEFI_-_Install_Guide\">https://wiki.manjaro.org/index.php?title=UEFI_-_Install_Guide</a></p>\n",
          "slug": "linux-manjaro-switching-from-bios-to-uefi",
          "featuredImage": null,
          "link": "https://emolike.net/2019/01/04/linux-manjaro-switching-from-bios-to-uefi/",
          "date": "2019-01-04T13:55:11",
          "tags": {
            "nodes": [
              {
                "name": "grub"
              },
              {
                "name": "linux"
              }
            ]
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMTA=",
        "node": {
          "id": "cG9zdDoxMjEw",
          "title": "Downgrade a package from Aur",
          "content": "<p>Hello,</p>\n<p>I had to downgrade a virtualbox-oracle-ext from the newer version 6.0.0 to 5.2.2 and here are the steps</p>\n<h2>First Go to Aur package</h2>\n<p><a href=\"https://aur.archlinux.org/cgit/aur.git/?h=virtualbox-ext-oracle\">https://aur.archlinux.org/cgit/aur.git/?h=virtualbox-ext-oracle</a></p>\n<p><img class=\"alignnone size-full wp-image-1211\" src=\"https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٧١٩.png\" alt=\"\" width=\"926\" height=\"748\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٧١٩.png 926w, https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٧١٩-300x242.png 300w, https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٧١٩-768x620.png 768w, https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٧١٩-334x270.png 334w\" sizes=\"(max-width: 926px) 100vw, 926px\" /></p>\n<p>&nbsp;</p>\n<h2>Select version</h2>\n<p><img class=\"alignnone size-full wp-image-1212\" src=\"https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٨٠٦.png\" alt=\"\" width=\"1136\" height=\"532\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٨٠٦.png 1136w, https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٨٠٦-300x140.png 300w, https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٨٠٦-768x360.png 768w, https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٨٠٦-1024x480.png 1024w, https://emolike.net/wp-content/uploads/2018/12/DeepinScreenshot_select-area_٢٠١٨١٢٢٨١١٣٨٠٦-577x270.png 577w\" sizes=\"(max-width: 1136px) 100vw, 1136px\" /></p>\n<h2>download the package and unzip it and CD to its directory</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cd aur</pre>\n<h2>install the package using command</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">makepkg -si</pre>\n",
          "slug": "downgrade-a-package-from-aur",
          "featuredImage": null,
          "link": "https://emolike.net/2018/12/28/downgrade-a-package-from-aur/",
          "date": "2018-12-28T11:40:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMDU=",
        "node": {
          "id": "cG9zdDoxMjA1",
          "title": "The Unstated React Service Pattern",
          "content": "<figure id=\"2c5d\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*rAMvk--gDy8YI6vXsaCl_Q.png\" data-width=\"1687\" data-height=\"945\" data-action=\"zoom\" data-action-value=\"1*rAMvk--gDy8YI6vXsaCl_Q.png\" data-scroll=\"native\"><img class=\"alignnone size-full wp-image-1206\" src=\"https://emolike.net/wp-content/uploads/2018/12/1rAMvk-gDy8YI6vXsaCl_Q.png\" width=\"1000\" height=\"560\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/1rAMvk-gDy8YI6vXsaCl_Q.png 1000w, https://emolike.net/wp-content/uploads/2018/12/1rAMvk-gDy8YI6vXsaCl_Q-300x168.png 300w, https://emolike.net/wp-content/uploads/2018/12/1rAMvk-gDy8YI6vXsaCl_Q-768x430.png 768w, https://emolike.net/wp-content/uploads/2018/12/1rAMvk-gDy8YI6vXsaCl_Q-482x270.png 482w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></div>\n</div>\n</figure>\n<p id=\"01a2\" class=\"graf graf--p graf-after--figure\">This guide demonstrates a React Pattern for sharing global state, without requiring any of the following:</p>\n<ul class=\"postList\">\n<li id=\"23ef\" class=\"graf graf--li graf-after--p\">😒 Prop-Drilling</li>\n<li id=\"e9ac\" class=\"graf graf--li graf-after--li\">🔥 Redux</li>\n<li id=\"0528\" class=\"graf graf--li graf-after--li\">💲 MobX</li>\n<li id=\"b7b3\" class=\"graf graf--li graf-after--li\">🏀 Apollo Link State</li>\n</ul>\n<p id=\"c571\" class=\"graf graf--p graf-after--li\"><em class=\"markup--em markup--p-em\">(The above emojis were auto-selected by </em><a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/sindresorhus/emoj\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/sindresorhus/emoj\"><em class=\"markup--em markup--p-em\">Emoj</em></a><em class=\"markup--em markup--p-em\">)</em></p>\n<h3 id=\"bdcf\" class=\"graf graf--h3 graf-after--p\">The Context API</h3>\n<p id=\"b5b7\" class=\"graf graf--p graf-after--h3\">Recently I found myself at an <a class=\"markup--anchor markup--p-anchor\" href=\"https://reacttraining.com/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://reacttraining.com/\">Advanced React</a> Training with <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/mjackson\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/mjackson\">Michael Jackson</a>(no… <em class=\"markup--em markup--p-em\">not the King of Pop</em>, the King of <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/ReactTraining/react-router\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/ReactTraining/react-router\">React Router</a> 😉). We spent a good deal of the time working through Higher Order components and the new React Context API.</p>\n<p id=\"88fa\" class=\"graf graf--p graf-after--p\">Being so new to <em class=\"markup--em markup--p-em\">The React Way</em>, (yet so familiar with frameworks like Angular), I was surprised that React didn’t ship with any built-in service architecture. React is a very different beast to other frameworks. It is intentionally designed to be <em class=\"markup--em markup--p-em\">all-state</em> and <em class=\"markup--em markup--p-em\">no-service</em>.</p>\n<p id=\"c59b\" class=\"graf graf--p graf-after--p\">If you want to learn more about the React Context API, I recommend reading:</p>\n<ol class=\"postList\">\n<li id=\"cfea\" class=\"graf graf--li graf-after--p\">Docs: <a class=\"markup--anchor markup--li-anchor\" href=\"https://reactjs.org/docs/context.html\" target=\"_blank\" rel=\"noopener\" data-href=\"https://reactjs.org/docs/context.html\">The React Context API</a></li>\n<li id=\"4a74\" class=\"graf graf--li graf-after--li\">Blog: <a class=\"markup--anchor markup--li-anchor\" href=\"https://hackernoon.com/how-to-use-the-new-react-context-api-fce011e7d87\" target=\"_blank\" rel=\"noopener\" data-href=\"https://hackernoon.com/how-to-use-the-new-react-context-api-fce011e7d87\">How to use the new React Context API</a><br />\n<em class=\"markup--em markup--li-em\">I found this blog post easier to understand than the examples in the React documentation — perhaps because I’m still on the React learning curve.</em></li>\n</ol>\n<p id=\"4b96\" class=\"graf graf--p graf-after--li\">IMO: The fact that React is now shipping the Context API as a first-class citizen, means that a subscribing to <em class=\"markup--em markup--p-em\">global state </em>(to use the term loosely), is no longer considered an anti-pattern. React is now providing a de-facto way of sharing state within the React tree without some of the limitations of higher order components.</p>\n<h3 id=\"581d\" class=\"graf graf--h3 graf--startsWithDoubleQuote graf-after--p\">“Unstated” Dependency Injection</h3>\n<figure id=\"9eb6\" class=\"graf graf--figure graf--layoutOutsetLeft graf-after--h3\" data-scroll=\"native\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*yViPeWhv8-eGP89lU9pdjg.png\" data-width=\"2000\" data-height=\"479\" data-action=\"zoom\" data-action-value=\"1*yViPeWhv8-eGP89lU9pdjg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"17\"></canvas><img class=\"alignnone size-full wp-image-1207\" src=\"https://emolike.net/wp-content/uploads/2018/12/1yViPeWhv8-eGP89lU9pdjg.png\" width=\"750\" height=\"179\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/1yViPeWhv8-eGP89lU9pdjg.png 750w, https://emolike.net/wp-content/uploads/2018/12/1yViPeWhv8-eGP89lU9pdjg-300x72.png 300w, https://emolike.net/wp-content/uploads/2018/12/1yViPeWhv8-eGP89lU9pdjg-604x144.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></div>\n</div>\n</figure>\n<p id=\"e1b9\" class=\"graf graf--p graf-after--figure\">But, the React Context API does not provide a method of dependency injection.</p>\n<p id=\"5a76\" class=\"graf graf--p graf-after--p\">Dependency injection would allow us to instantiate multiple copies of a component with a discrete state that can be provided and consumed at any point in the app.</p>\n<p id=\"df72\" class=\"graf graf--p graf-after--p\">This pattern is useful for:</p>\n<ul class=\"postList\">\n<li id=\"45d6\" class=\"graf graf--li graf-after--p\">Identical components that subscribe to different data sources with the same model, using the same methods and state properties</li>\n<li id=\"bcea\" class=\"graf graf--li graf-after--li\">Testing snapshots with mock states</li>\n</ul>\n<p id=\"2971\" class=\"graf graf--p graf-after--li\">Thankfully, there is “<a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/jamiebuilds/unstated\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/jamiebuilds/unstated\">Unstated</a>“— a tiny dependency that provides a handy wrapper around the Context API for dependency injection. I want to encourage you to read the Unstated documentation and get a feel for what it does, as I will be using it in the code examples below: <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/jamiebuilds/unstated/blob/master/README.md\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/jamiebuilds/unstated/blob/master/README.md\">Unstated README.md</a></p>\n<p>To Continue Reading the post on <a href=\"https://hmh.engineering/the-unstated-react-service-pattern-786ea6168d1d\">https://hmh.engineering/the-unstated-react-service-pattern-786ea6168d1d</a></p>\n",
          "slug": "the-unstated-react-service-pattern",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/12/1rAMvk-gDy8YI6vXsaCl_Q.png"
          },
          "link": "https://emolike.net/2018/12/22/the-unstated-react-service-pattern/",
          "date": "2018-12-22T15:01:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "programming"
              },
              {
                "name": "React"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMDM=",
        "node": {
          "id": "cG9zdDoxMjAz",
          "title": "DIY React state manager",
          "content": "<p id=\"b289\" class=\"graf graf--p graf-after--h3\">This is a tutorial aim to demystify what libraries like react-redux does under the hood and learn about the new context apis</p>\n<section class=\"section section--body\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<h4 id=\"60a8\" class=\"graf graf--h4 graf--leading\">Why even bother</h4>\n<p id=\"de9c\" class=\"graf graf--p graf-after--h4\">I think there are a couple of reasons why you should be interested in how state management works.</p>\n<ol class=\"postList\">\n<li id=\"afc8\" class=\"graf graf--li graf-after--p\">If you know how it works under the hood, a lot of problems that you might have will be more simple to debug, especially if you’re moving away from a consolidated library to a new library which is more edgy you could face some problems</li>\n<li id=\"6971\" class=\"graf graf--li graf-after--li\">Global state is great but sometimes you don’t want to pollute it for ephemeral things, for example if you have a couple of components that needs to be rendered just in some occasions (loaders, small user stories) you may want to put it put of the global state use the internal state, this has pros (independency) and cons (multiple responsibilities of the component, not clear separation between data and view)</li>\n<li id=\"7271\" class=\"graf graf--li graf-after--li\">Find new ways to avoid P<a class=\"markup--anchor markup--li-anchor\" href=\"https://blog.kentcdodds.com/prop-drilling-bb62e02cb691\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://blog.kentcdodds.com/prop-drilling-bb62e02cb691\">rop Drilling</a> when necessary, after playing around I found new ways to manage my dependencies</li>\n</ol>\n<h4 id=\"e09e\" class=\"graf graf--h4 graf-after--li\">What does a state manager even do then?</h4>\n<p id=\"e070\" class=\"graf graf--p graf-after--h4 graf--trailing\">A state management is just a way to move the state from the component to outside of the component. In case you don’t know what a react state management is you can read <a class=\"markup--anchor markup--p-anchor\" href=\"https://jobs.zalando.com/tech/blog/state-management-react/?gh_src=4n3gxh1\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://jobs.zalando.com/tech/blog/state-management-react/?gh_src=4n3gxh1\">this article from Zalando</a>.</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<h3 id=\"6dec\" class=\"graf graf--h3 graf--leading\">Here we go</h3>\n<p id=\"b7e3\" class=\"graf graf--p graf-after--h3\">Few points before starting:</p>\n<ul class=\"postList\">\n<li id=\"c93d\" class=\"graf graf--li graf-after--p\">The article will follow the code in <a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/unsign3d/react-context-global-state/\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://github.com/unsign3d/react-context-global-state/\">this repo</a></li>\n<li id=\"41b1\" class=\"graf graf--li graf-after--li\">We are using the new <a class=\"markup--anchor markup--li-anchor\" href=\"https://reactjs.org/docs/context.html\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://reactjs.org/docs/context.html\">Context Api</a>,</li>\n</ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">import React from 'react'\r\n\r\nconst AppContext = React.createContext({})\r\n\r\nexport class AppContextProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.updateState = this.updateState.bind(this)\r\n\r\n    this.state = {\r\n      actions: {\r\n        updateState: this.updateState\r\n      },\r\n      data: {\r\n        ...this.props.initialState\r\n      }\r\n    }\r\n  }\r\n\r\n  updateState(props) {\r\n    console.group();\r\n    console.log('diff: ', props)\r\n    this.setState((prevState) =&gt; { \r\n      console.log('previous state:', prevState.data)\r\n      const newState = {\r\n        actions: {...this.state.actions}, \r\n        data: {\r\n          ...this.state.data,\r\n          ...props,\r\n        }\r\n      }\r\n      console.log('new state:', newState)\r\n      return newState\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      &lt;AppContext.Provider value={this.state}&gt;\r\n        {this.props.children}\r\n      &lt;/AppContext.Provider&gt;\r\n    )\r\n  } \r\n}\r\n\r\nexport const AppContextConsumer = AppContext.Consumer</pre>\n<p id=\"e44f\" class=\"graf graf--p graf-after--figure\">This is the entry point of everything and we are doing mainly this:</p>\n<ul class=\"postList\">\n<li id=\"0209\" class=\"graf graf--li graf-after--p\">We are storing the state (within the component state)</li>\n<li id=\"04be\" class=\"graf graf--li graf-after--li\">We are creating a context provider with some rudimentary APIs</li>\n<li id=\"d022\" class=\"graf graf--li graf-after--li\">We are passing on the consumer</li>\n</ul>\n<h4 id=\"40cf\" class=\"graf graf--h4 graf-after--li\">The provider</h4>\n<p id=\"8774\" class=\"graf graf--p graf-after--h4\">You may have encountered a context provider if you ever set up a react-redux project. The behaviour it’s quite straight forward, every children component will be able to ask for the state. If you’re just using the context api it will be just the context.</p>\n<p id=\"f590\" class=\"graf graf--p graf-after--p\">If you look at the code you will note that we need to give some features to the basic context provider:</p>\n<ul class=\"postList\">\n<li id=\"bdd5\" class=\"graf graf--li graf-after--p\">Binding of the context to a component state</li>\n<li id=\"b154\" class=\"graf graf--li graf-after--li\">Exposing an api to change the state</li>\n<li id=\"98fc\" class=\"graf graf--li graf-after--li\">Basic debugging logs</li>\n</ul>\n<h4 id=\"4917\" class=\"graf graf--h4 graf-after--li\">The consumer</h4>\n<p id=\"7606\" class=\"graf graf--p graf-after--h4\">The consumer is actually the most boring part of it, you can basically use the Context consumer as is, you just need to include your component and you will have a block with the context.</p>\n<p id=\"4fa4\" class=\"graf graf--p graf-after--p\">My dislike for this approach comes from 2 major points</p>\n<ul class=\"postList\">\n<li id=\"52d2\" class=\"graf graf--li graf-after--p\">Separation between data logic (in this case context) and view logic</li>\n<li id=\"9a40\" class=\"graf graf--li graf-after--li\">Future proofing the code, if you want to change to a new state manager you should be able to just change the glue code and not rewriting your components</li>\n<li id=\"eb58\" class=\"graf graf--li graf-after--li\">[bonus] having a connected object actually gives you much more flexibility and you can combine in one place data from different sources without the component caring where they came from</li>\n</ul>\n<p id=\"b450\" class=\"graf graf--p graf-after--li\">DISCLAIMER: My implementation is fairly opinionated by react-redux, you can use different patterns</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">import React from 'react'\r\nimport {AppContextConsumer} from './AppContext'\r\n \r\nconst connect = (consumer, mapContextToProps = () =&gt; ({})) =&gt; (\r\n  &lt;AppContextConsumer&gt;{(context) =&gt; (\r\n    React.createElement(consumer, mapContextToProps(context))\r\n  )}\r\n  &lt;/AppContextConsumer&gt;\r\n)\r\n\r\nexport default connect</pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">import connect from '../connect'\r\nimport Cat from './Cat'\r\n\r\nconst mapContextToProps = (props) =&gt; (context) =&gt; ({\r\n  name: props.name,\r\n  family: context.data.family\r\n})\r\n\r\nconst ConnectedCat = (props) =&gt; (connect(Cat, mapContextToProps(props)))\r\n\r\nexport default ConnectedCat\r\nview raw</pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">import React from 'react';\r\n\r\nconst Cat = ({name, family}) =&gt; (\r\n  &lt;div&gt;\r\n    &lt;p&gt;I'm a cat and my name is {name} &lt;br /&gt; and my family is {family}&lt;/p&gt;\r\n  &lt;/div&gt;\r\n)\r\nexport default Cat</pre>\n<section class=\"section section--body\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"b86a\" class=\"graf graf--p graf-after--figure\">There are a few concepts from this 3 pieces of code</p>\n<ul class=\"postList\">\n<li id=\"ecc2\" class=\"graf graf--li graf-after--p\">You can use the “vanilla version” of the context exactly like I created the connect function, the connect function will just DRY out the usage</li>\n<li id=\"b315\" class=\"graf graf--li graf-after--li\">You can map context to props manually, this means that you can add external props and mix them to the context state (as in react-redux)</li>\n<li id=\"3570\" class=\"graf graf--li graf-after--li graf--trailing\">Cat.js is vanilla React, he doesn’t care about how the data got there, he knows what data is from the input and how to use it</li>\n</ul>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<h3 id=\"97b8\" class=\"graf graf--h3 graf--leading\">Closing remarks</h3>\n<p id=\"619e\" class=\"graf graf--p graf-after--h3\">I hope to have demystified the magic behind what is a state manager and how to use the new Context Api.</p>\n<p id=\"f673\" class=\"graf graf--p graf-after--p graf--trailing\">I hope that you will also be able to more critical choose which tool is best for you between state manager, context api and just prop drilling</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body section--last\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"10f0\" class=\"graf graf--p graf--leading graf--trailing\">Many thanks to <a class=\"markup--anchor markup--p-anchor\" href=\"https://medium.com/@marcopoliefesto\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://medium.com/@marcopoliefesto\">https://medium.com/@marcopoliefesto</a> for proofreading and giving cool feedback on this article</p>\n<p>Source : <a href=\"https://medium.com/@unsigned/diy-react-state-manager-22abcfad09bb\">https://medium.com/@unsigned/diy-react-state-manager-22abcfad09bb</a></p>\n</div>\n</div>\n</section>\n</div>\n</div>\n</section>\n",
          "slug": "diy-react-state-manager",
          "featuredImage": null,
          "link": "https://emolike.net/2018/12/22/diy-react-state-manager/",
          "date": "2018-12-22T14:24:03",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "programming"
              },
              {
                "name": "React"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEyMDE=",
        "node": {
          "id": "cG9zdDoxMjAx",
          "title": "You Might Not Need Redux",
          "content": "<p id=\"7e78\" class=\"graf graf--p graf-after--h3\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"db72389e89d8\">People often choose Redux before they need it.</span> “What if our app doesn’t scale without it?” Later, developers frown at the indirection Redux introduced to their code. “Why do I have to touch three files to get a simple feature working?” Why indeed!</p>\n<p id=\"2b2c\" class=\"graf graf--p graf-after--p\">People blame Redux, React, functional programming, immutability, and many other things for their woes, and I understand them. It is natural to compare Redux to an approach that doesn’t require “boilerplate” code to update the state, and to conclude that Redux is just complicated. In a way it is, and by design so.</p>\n<p id=\"de62\" class=\"graf graf--p graf-after--p\">Redux offers a tradeoff. It asks you to:</p>\n<ul class=\"postList\">\n<li id=\"998d\" class=\"graf graf--li graf-after--p\">Describe application state as plain objects and arrays.</li>\n<li id=\"46e5\" class=\"graf graf--li graf-after--li\">Describe changes in the system as plain objects.</li>\n<li id=\"3bca\" class=\"graf graf--li graf-after--li\">Describe the logic for handling changes as pure functions.</li>\n</ul>\n<p id=\"5094\" class=\"graf graf--p graf-after--li\">None of these limitations are required to build an app, with or without React. In fact these are pretty strong constraints, and you should think carefully before adopting them even in parts of your app.</p>\n<p id=\"448f\" class=\"graf graf--p graf-after--p\">Do you have good reasons for doing so?</p>\n<p id=\"3650\" class=\"graf graf--p graf-after--p\">These limitations are appealing to me because they help build apps that:</p>\n<ul class=\"postList\">\n<li id=\"a4dc\" class=\"graf graf--li graf-after--p\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage?course=building-react-applications-with-idiomatic-redux\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage?course=building-react-applications-with-idiomatic-redux\">Persist state to a local storage and then boot up from it, out of the box.</a></li>\n<li id=\"53b4\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"http://redux.js.org/docs/recipes/ServerRendering.html\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://redux.js.org/docs/recipes/ServerRendering.html\">Pre-fill state on the server, send it to the client in HTML, and boot up from it, out of the box.</a></li>\n<li id=\"6163\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/dtschust/redux-bug-reporter\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/dtschust/redux-bug-reporter\">Serialize user actions and attach them, together with a state snapshot, to automated bug reports, so that the product developers can replay them to reproduce the errors.</a></li>\n<li id=\"a3d0\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/philholden/redux-swarmlog\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/philholden/redux-swarmlog\">Pass action objects over the network to implement collaborative environments without dramatic changes to how the code is written.</a></li>\n<li id=\"00d2\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"http://redux.js.org/docs/recipes/ImplementingUndoHistory.html\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://redux.js.org/docs/recipes/ImplementingUndoHistory.html\">Maintain an undo history or implement optimistic mutations without dramatic changes to how the code is written.</a></li>\n<li id=\"7d1e\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/gaearon/redux-devtools\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/gaearon/redux-devtools\">Travel between the state history in development, and re-evaluate the current state from the action history when the code changes, a la TDD.</a></li>\n<li id=\"fb20\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/romseguy/redux-devtools-chart-monitor\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/romseguy/redux-devtools-chart-monitor\">Provide full inspection and control capabilities to the development tooling so that product developers can build custom tools for their apps.</a></li>\n<li id=\"342a\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://youtu.be/gvVpSezT5_M?t=11m51s\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://youtu.be/gvVpSezT5_M?t=11m51s\">Provide alternative UIs while reusing most of the business logic.</a></li>\n</ul>\n<p id=\"8d50\" class=\"graf graf--p graf-after--li\">If you’re working on <a class=\"markup--anchor markup--p-anchor\" href=\"https://hyperterm.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://hyperterm.org/\">an extensible terminal</a>, <a class=\"markup--anchor markup--p-anchor\" href=\"https://hacks.mozilla.org/2016/09/introducing-debugger-html/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://hacks.mozilla.org/2016/09/introducing-debugger-html/\">a JavaScript debugger</a>, or <a class=\"markup--anchor markup--p-anchor\" href=\"https://twitter.com/necolas/status/727538799966715904\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://twitter.com/necolas/status/727538799966715904\">some kinds of webapps</a>, it might be worth giving it a try, or at least considering some of its ideas (they are <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/evancz/elm-architecture-tutorial\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/evancz/elm-architecture-tutorial\">not</a> <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/omcljs/om\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/omcljs/om\">new</a>, by the way!)</p>\n<p id=\"16c1\" class=\"graf graf--p graf-after--p\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"db72389e89d8\">However, if you’re just learning React, don’t make Redux your first choice.</span></p>\n<p id=\"641e\" class=\"graf graf--p graf-after--p\">Instead learn to <a class=\"markup--anchor markup--p-anchor\" href=\"https://facebook.github.io/react/docs/thinking-in-react.html\" target=\"_blank\" rel=\"nofollow noopener noopener\" data-href=\"https://facebook.github.io/react/docs/thinking-in-react.html\">think in React</a>. Come back to Redux if you find a real need for it, or if you want to try something new. But <span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"9b876f24936b\">approach it with caution, just like you do with any highly opinionated tool.</span></p>\n<p id=\"c4ed\" class=\"graf graf--p graf-after--p\">If you feel pressured to do things “the Redux way”, it may be a sign that you or your teammates are taking it too seriously. It’s just one of the tools in your toolbox, <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.youtube.com/watch?v=xsSnOQynTHs\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.youtube.com/watch?v=xsSnOQynTHs\">an experiment</a> <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.youtube.com/watch?v=uvAXVMwHJXU\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.youtube.com/watch?v=uvAXVMwHJXU\">gone wild</a>.</p>\n<p id=\"c33c\" class=\"graf graf--p graf-after--p\">Finally, don’t forget that you can apply ideas from Redux without using Redux. For example, consider a React component with local state:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n  state = { value: 0 };\r\n\r\n  increment = () =&gt; {\r\n    this.setState(prevState =&gt; ({\r\n      value: prevState.value + 1\r\n    }));\r\n  };\r\n\r\n  decrement = () =&gt; {\r\n    this.setState(prevState =&gt; ({\r\n      value: prevState.value - 1\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      &lt;div&gt;\r\n        {this.state.value}\r\n        &lt;button onClick={this.increment}&gt;+&lt;/button&gt;\r\n        &lt;button onClick={this.decrement}&gt;-&lt;/button&gt;\r\n      &lt;/div&gt;\r\n    )\r\n  }\r\n}</pre>\n<p id=\"64b9\" class=\"graf graf--p graf-after--figure\">It is <em class=\"markup--em markup--p-em\">perfectly fine </em>as it is. Seriously, it bears repeating.</p>\n<p id=\"96ce\" class=\"graf graf--p graf-after--p\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"db72389e89d8 anon\"><em class=\"markup--em markup--p-em\">Local state is fine.</em></span></p>\n<p id=\"307f\" class=\"graf graf--p graf-after--p\">The tradeoff that Redux offers is to <em class=\"markup--em markup--p-em\">add indirection </em>to decouple “what happened” from “how things change”.</p>\n<p id=\"066f\" class=\"graf graf--p graf-after--p\">Is it always a good thing to do? No. It’s a tradeoff.</p>\n<p id=\"53d3\" class=\"graf graf--p graf-after--p\">For example, we can extract a reducer from our component:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">import React, { Component } from 'react';\r\n\r\nconst counter = (state = { value: 0 }, action) =&gt; {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { value: state.value + 1 };\r\n    case 'DECREMENT':\r\n      return { value: state.value - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nclass Counter extends Component {\r\n  state = counter(undefined, {});\r\n  \r\n  dispatch(action) {\r\n    this.setState(prevState =&gt; counter(prevState, action));\r\n  }\r\n\r\n  increment = () =&gt; {\r\n    this.dispatch({ type: 'INCREMENT' });\r\n  };\r\n\r\n  decrement = () =&gt; {\r\n    this.dispatch({ type: 'DECREMENT' });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      &lt;div&gt;\r\n        {this.state.value}\r\n        &lt;button onClick={this.increment}&gt;+&lt;/button&gt;\r\n        &lt;button onClick={this.decrement}&gt;-&lt;/button&gt;\r\n      &lt;/div&gt;\r\n    )\r\n  }\r\n}</pre>\n<p id=\"e8bc\" class=\"graf graf--p graf-after--figure\">Notice how we just used Redux without running <em class=\"markup--em markup--p-em\">npm install.</em> Wow!</p>\n<p id=\"653e\" class=\"graf graf--p graf-after--p\">Should you do this to your stateful components? Probably not. That is, <em class=\"markup--em markup--p-em\">not unless you have a plan</em> to benefit from this additional indirection. Having a plan is, in the parlance of our times, the 🔑.</p>\n<p id=\"4b4c\" class=\"graf graf--p graf-after--p\"><a class=\"markup--anchor markup--p-anchor\" href=\"http://redux.js.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://redux.js.org/\">Redux library</a> itself is only a set of helpers to “mount” reducers to a single global store object. You can use as little, or as much of Redux, as you like.</p>\n<p id=\"658b\" class=\"graf graf--p graf-after--p\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"1ce42c2716a5\">But if you trade something off, make sure you get something in return.</span></p>\n<p>Source : <a href=\"https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367\">https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367</a></p>\n",
          "slug": "you-might-not-need-redux",
          "featuredImage": null,
          "link": "https://emolike.net/2018/12/22/you-might-not-need-redux/",
          "date": "2018-12-22T14:10:13",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "programming"
              },
              {
                "name": "React"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExOTk=",
        "node": {
          "id": "cG9zdDoxMTk5",
          "title": "SQL diagrams tools",
          "content": "<p><a href=\"https://dbmstools.com/database-er-diagram-tools/sqlserver\">https://dbmstools.com/database-er-diagram-tools/sqlserver</a></p>\n",
          "slug": "sql-diagrams-tools",
          "featuredImage": null,
          "link": "https://emolike.net/2018/12/20/sql-diagrams-tools/",
          "date": "2018-12-20T17:47:55",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "SQL"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExOTU=",
        "node": {
          "id": "cG9zdDoxMTk1",
          "title": "LINQ for JavaScript library: mini-linq-js",
          "content": "<h1 class=\"package-name-redundant\">mini-linq.js</h1>\n<p class=\"package-description-redundant\">LINQ for JavaScript library, which allows to work with arrays in a more easy way and focus on business logic.</p>\n<h2>Installation</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">bower install mini-linq-js --save\r\nnpm install mini-linq-js --save</pre>\n<h2>Usage</h2>\n<p>Just link <code>mini-linq.js</code> or <code>mini-linq.min.js</code> in your html.</p>\n<div class=\"highlight\">\n<div class=\"line\"><span class=\"text html\"><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\">&lt;</span><span class=\"entity name tag html\">script</span> <span class=\"entity other attribute-name html\">type</span>=<span class=\"string quoted double html\"><span class=\"punctuation definition string begin html\">&#8220;</span>text/javascript<span class=\"punctuation definition string end html\">&#8220;</span></span> <span class=\"entity other attribute-name html\">src</span>=<span class=\"string quoted double html\"><span class=\"punctuation definition string begin html\">&#8220;</span>mini-linq.min.js<span class=\"punctuation definition string end html\">&#8220;</span></span><span class=\"punctuation definition tag html\">&gt;<span class=\"meta scope html\">&lt;</span>/</span><span class=\"entity name tag html\">script</span><span class=\"punctuation definition tag html\">&gt;</span></span></span></div>\n</div>\n<p>You can also attach and use mini-linq with <a href=\"http://knockoutjs.com/documentation/observableArrays.html\" rel=\"nofollow\">knockout observableArray</a>. Just link <code>mini-linq.knockout.js</code>. Also you may use postponed <a href=\"https://www.npmjs.com/package/mini-linq-js/v/1.2.3#lazyArrays\" rel=\"nofollow\">lazy-execution for arrays</a> by linking <code>mini-linq.lazy.js</code>.</p>\n<p>You also may use it in your Node.JS project by using</p>\n<div class=\"highlight javascript\">\n<div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"support function js\">require</span><span class=\"meta js\"><span class=\"punctuation definition begin round js\">(</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\">&#8216;</span>mini-linq-js<span class=\"punctuation definition string end js\">&#8216;</span></span><span class=\"punctuation definition end round js\">)</span></span></span><span class=\"punctuation terminator statement js\">;</span></span></div>\n<div>\n<h2>Available methods</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">any\r\nall\r\nwhere\r\nselect\r\nselectMany\r\ncount\r\norderBy\r\norderByDescending\r\ngroupBy\r\ndistinct\r\nfirstOrDefault\r\nlastOrDefault\r\njoinWith\r\ncontains\r\naggregate\r\nsum\r\nmin\r\nmax\r\nskip\r\ntake\r\nofType\r\nunion</pre>\n<p>More : <a href=\"https://www.npmjs.com/package/mini-linq-js/v/1.2.3\">https://www.npmjs.com/package/mini-linq-js/v/1.2.3</a></p>\n</div>\n</div>\n",
          "slug": "linq-for-javascript-library-mini-linq-js",
          "featuredImage": null,
          "link": "https://emolike.net/2018/12/07/linq-for-javascript-library-mini-linq-js/",
          "date": "2018-12-07T22:18:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExODI=",
        "node": {
          "id": "cG9zdDoxMTgy",
          "title": "Installing and Configuring Web Deploy on IIS 8.0 or Later",
          "content": "<ol>\n<li class=\"\">Download the <a href=\"https://www.microsoft.com/web/downloads/platform.aspx\" data-linktype=\"external\">Web Platform Installer</a>.</li>\n<li>Open Web PI.</li>\n<li>Select the Web Deploy that you want, and then click <strong>Add</strong>.<br />\n<img class=\"alignnone size-full wp-image-1183\" src=\"https://emolike.net/wp-content/uploads/2018/12/image6.jpg\" alt=\"\" width=\"901\" height=\"521\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image6.jpg 901w, https://emolike.net/wp-content/uploads/2018/12/image6-300x173.jpg 300w, https://emolike.net/wp-content/uploads/2018/12/image6-768x444.jpg 768w, https://emolike.net/wp-content/uploads/2018/12/image6-467x270.jpg 467w\" sizes=\"(max-width: 901px) 100vw, 901px\" /></li>\n</ol>\n<ol>\n<li>On the <strong>Prerequisites</strong> page, click <strong>I accept</strong>.</li>\n<li>After the installation has completed, click <strong>Finish</strong>.</li>\n</ol>\n<p>&nbsp;</p>\n<hr />\n<h3 id=\"using-the-iis-manager-to-configure-web-deploy-for-a-non-administrator\" class=\"heading-with-anchor x-hidden-focus\">Using the IIS Manager to configure Web Deploy for a Non-Administrator</h3>\n<p>The following steps configure publishing on an existing site for an existing user using the IIS Manager UI.</p>\n<ol>\n<li>Start IIS Manager (open <strong>Server Manager</strong>, click <strong>Tools</strong>, and then open <strong>IIS Manager</strong>.</li>\n<li>Expand the <strong>Sites</strong> node and click a site.</li>\n<li>In the <strong>Management</strong> area of the site&#8217;s home pane, double-click <strong>IIS Manager Permissions</strong>. <img class=\"alignnone size-full wp-image-1184\" src=\"https://emolike.net/wp-content/uploads/2018/12/image10.jpg\" alt=\"\" width=\"754\" height=\"549\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image10.jpg 754w, https://emolike.net/wp-content/uploads/2018/12/image10-300x218.jpg 300w, https://emolike.net/wp-content/uploads/2018/12/image10-371x270.jpg 371w\" sizes=\"(max-width: 754px) 100vw, 754px\" /></li>\n<li>In the <strong>Actions</strong> pane, click <strong>Allow User</strong>. <img class=\"alignnone size-full wp-image-1185\" src=\"https://emolike.net/wp-content/uploads/2018/12/image12.jpg\" alt=\"\" width=\"741\" height=\"459\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image12.jpg 741w, https://emolike.net/wp-content/uploads/2018/12/image12-300x186.jpg 300w, https://emolike.net/wp-content/uploads/2018/12/image12-436x270.jpg 436w\" sizes=\"(max-width: 741px) 100vw, 741px\" /></li>\n<li>In the <strong>Allow User…</strong> dialog box, with <strong>Windows</strong> selected, click <strong>Select</strong>.<img class=\"size-full wp-image-1186 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2018/12/image14.jpg\" alt=\"\" width=\"437\" height=\"255\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image14.jpg 437w, https://emolike.net/wp-content/uploads/2018/12/image14-300x175.jpg 300w\" sizes=\"(max-width: 437px) 100vw, 437px\" /></li>\n<li>In the <strong>Select User or Group</strong> dialog box, in <strong>Enter the object name to select</strong>, enter the name of a non-administrator Windows user who will have publishing permissions to the site, with domain. Click <strong>Check Names</strong>, and then after the name has been verified, click <strong>OK</strong>.<img class=\"size-full wp-image-1187 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2018/12/image16.jpg\" alt=\"\" width=\"468\" height=\"256\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image16.jpg 468w, https://emolike.net/wp-content/uploads/2018/12/image16-300x164.jpg 300w\" sizes=\"(max-width: 468px) 100vw, 468px\" /></li>\n<li>In the <strong>Allow User…</strong> dialog box, click <strong>OK</strong>.<img class=\"size-full wp-image-1188 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2018/12/image18.jpg\" alt=\"\" width=\"436\" height=\"254\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image18.jpg 436w, https://emolike.net/wp-content/uploads/2018/12/image18-300x175.jpg 300w\" sizes=\"(max-width: 436px) 100vw, 436px\" /></li>\n<li>Verify that the name with domain is entered in the <strong>IIS Manager Permissions</strong> pane.<img class=\"alignnone size-full wp-image-1189\" src=\"https://emolike.net/wp-content/uploads/2018/12/image20.jpg\" alt=\"\" width=\"757\" height=\"444\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image20.jpg 757w, https://emolike.net/wp-content/uploads/2018/12/image20-300x176.jpg 300w, https://emolike.net/wp-content/uploads/2018/12/image20-460x270.jpg 460w\" sizes=\"(max-width: 757px) 100vw, 757px\" /></li>\n<li>Right-click the site that you are configuring, point to <strong>Deploy</strong>, and then click <strong>Configure Web Deploy Publishing&#8230;</strong>. The following UI will appear:Note: If the Deploy command is not shown in the menu for a site, close and then reopen IIS Manager.\n<p><img class=\"alignnone size-full wp-image-1190\" src=\"https://emolike.net/wp-content/uploads/2018/12/image22.jpg\" alt=\"\" width=\"496\" height=\"492\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image22.jpg 496w, https://emolike.net/wp-content/uploads/2018/12/image22-150x150.jpg 150w, https://emolike.net/wp-content/uploads/2018/12/image22-300x298.jpg 300w, https://emolike.net/wp-content/uploads/2018/12/image22-272x270.jpg 272w\" sizes=\"(max-width: 496px) 100vw, 496px\" /></li>\n<li>Click the down arrow for <strong>Select a user to give publishing permissions</strong>, and select the user that you entered for IIS Manager Permissions.<img class=\"alignnone size-full wp-image-1191\" src=\"https://emolike.net/wp-content/uploads/2018/12/image24.jpg\" alt=\"\" width=\"495\" height=\"490\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image24.jpg 495w, https://emolike.net/wp-content/uploads/2018/12/image24-300x297.jpg 300w, https://emolike.net/wp-content/uploads/2018/12/image24-273x270.jpg 273w\" sizes=\"(max-width: 495px) 100vw, 495px\" /></li>\n<li>Click <strong>Setup</strong>.The following log lines will appear:</li>\n</ol>\n<ul>\n<li>Publish enabled for &#8216;NonAdminUser&#8217;</li>\n<li>Granted &#8216;NonAdminUser&#8217; full control on <code>C:\\inetpub\\wwwroot\\test</code></li>\n<li>Successfully created settings file <code>C:\\Users\\janedoe\\Desktop\\CONTOSO\\_johndoe\\_Default Web Site.PublishSettings</code></li>\n</ul>\n<p>The non-administrator Windows user (NonAdminUser) may now publish to the site.</p>\n<p><img class=\"size-full wp-image-1192 aligncenter\" src=\"https://emolike.net/wp-content/uploads/2018/12/image26.jpg\" alt=\"\" width=\"498\" height=\"489\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/image26.jpg 498w, https://emolike.net/wp-content/uploads/2018/12/image26-300x295.jpg 300w, https://emolike.net/wp-content/uploads/2018/12/image26-275x270.jpg 275w\" sizes=\"(max-width: 498px) 100vw, 498px\" /></p>\n<p>Source : <a href=\"https://docs.microsoft.com/en-us/iis/install/installing-publishing-technologies/installing-and-configuring-web-deploy-on-iis-80-or-later\">https://docs.microsoft.com/en-us/iis/install/installing-publishing-technologies/installing-and-configuring-web-deploy-on-iis-80-or-later</a></p>\n",
          "slug": "installing-and-configuring-web-deploy-on-iis-8-0-or-later",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/12/image6.jpg"
          },
          "link": "https://emolike.net/2018/12/07/installing-and-configuring-web-deploy-on-iis-8-0-or-later/",
          "date": "2018-12-07T11:53:08",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "deployment"
              },
              {
                "name": "system admin"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExODA=",
        "node": {
          "id": "cG9zdDoxMTgw",
          "title": "GitKraken Tutorial: Intro to Gitflow",
          "content": "<p><iframe title=\"GitKraken Tutorial: Intro to Gitflow\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/eTOgjQ9o4vQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "gitkraken-tutorial-intro-to-gitflow-2",
          "featuredImage": null,
          "link": "https://emolike.net/2018/12/07/gitkraken-tutorial-intro-to-gitflow-2/",
          "date": "2018-12-07T11:48:46",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Git"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExNzg=",
        "node": {
          "id": "cG9zdDoxMTc4",
          "title": "Enable IIS, Web Deploy &#038; Web Platform",
          "content": "<p><iframe title=\"How to Enable/Install IIS7, Web Deploy &amp; Web Platform Tools on Windows 7\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/Bi9hvFswYTc?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "enable-iis-web-deploy-web-platform",
          "featuredImage": null,
          "link": "https://emolike.net/2018/12/07/enable-iis-web-deploy-web-platform/",
          "date": "2018-12-07T11:47:29",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "deployment"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExNjc=",
        "node": {
          "id": "cG9zdDoxMTY3",
          "title": "ASP.NET MVC 5: Using a Simple Repository Pattern for Performing Database Operations",
          "content": "<p><b>Abstract: </b>The Repository pattern decouples your ASP.NET MVC application and shields it from changes by creating a boundary between your data access code and the other parts of your application.</p>\n<p>Recently a client of mine asked for a solution to isolate the direct dependency of the Data Access Layer with the rest of the layers of the application. In this article we will discuss one of the concepts I suggested to him for an ASP.NET MVC application.</p>\n<p>Typically in multi-layer applications, the business logic or Domain logic retrieves data from various sources, e.g. Database, Web/WCF services, etc. In this type of direct access, the business logic is tightly coupled with the data access code which may result in code maintenance issues; because if the Database or Service changes, then the dependency code also needs to be changed. So the point here is that how to minimize this maintenance effort?</p>\n<p>&nbsp;</p>\n<ul>\n<li>Implementing an isolation layer for the data access which can be effectively tested.</li>\n<li>Implement consistent data access logic irrespective of the data source locations.</li>\n<li>Implementing maintainable code by separating business logic from data access logic.</li>\n<li>Implementing an easy domain model development for complex business logic.</li>\n</ul>\n<p>The following diagram gives a general overview of the repository pattern:</p>\n<p><img class=\"alignnone size-full wp-image-1168\" src=\"https://emolike.net/wp-content/uploads/2018/12/repository-pattern.png\" width=\"1000\" height=\"549\" alt=\"repository-pattern\" title=\"repository-pattern\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/repository-pattern.png 1000w, https://emolike.net/wp-content/uploads/2018/12/repository-pattern-300x165.png 300w, https://emolike.net/wp-content/uploads/2018/12/repository-pattern-768x422.png 768w, https://emolike.net/wp-content/uploads/2018/12/repository-pattern-492x270.png 492w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n<p>The repository layer isolates Business layer from the Data Access Layer. The Repository contains Data Mapper entity. This entity can be used as a model entity for providing schema of the data for performing CRUD operations, by using the CRUD operations defined in the repository. The Business layer performs Data Access using repository layer. If the application makes use of WCF/Web services for data access, then repository can be used to isolate these service references from the Business layer.</p>\n<h3>Repository in case of ASP.NET MVC</h3>\n<p>In case of ASP.NET MVC, we uses the Model layer for interacting with Data Access and Controller talks to the Model for performing the Data Access operations. In MVC, it is important to think of the repository pattern so that if the Model layers needs some breaking changes, then it should have minimum or no maintenance impact on the controller layer. In MVC, finally the Controller is responsible for exposing data to the View or accessing Http posted data from View and send it further to the Model. So here, if the Controller has tight-coupling dependency on the Model, then any change in the Model will impact the Controller and hence sometimes the View too. In this case, we can use the Repository pattern as shown in the following diagram:</p>\n<p><img class=\"alignnone size-full wp-image-1169\" src=\"https://emolike.net/wp-content/uploads/2018/12/repository-aspnet-mvc.png\" width=\"1280\" height=\"713\" alt=\"repository-aspnet-mvc\" title=\"repository-aspnet-mvc\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/repository-aspnet-mvc.png 1280w, https://emolike.net/wp-content/uploads/2018/12/repository-aspnet-mvc-300x167.png 300w, https://emolike.net/wp-content/uploads/2018/12/repository-aspnet-mvc-768x428.png 768w, https://emolike.net/wp-content/uploads/2018/12/repository-aspnet-mvc-1024x570.png 1024w, https://emolike.net/wp-content/uploads/2018/12/repository-aspnet-mvc-485x270.png 485w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>The above diagram explains the repository process flow. When using EntityFramework in MVC, we have Model Entities available which can be used by all layers of the application. Once the Web Server passed the request to Controller for Actions (e.g. Read/Write), the Controller calls repository and passes the Model Entity to it. It is recommended that the Controller should use <b><a href=\"https://www.dotnetcurry.com/aspnet-mvc/786/dependency-injection-aspnet-mvc-introduction\">Dependency Injection</a></b> to instantiate the Repository and call methods from it. The Repository further passes the Model Entity to Data Access implemented using Entity Framework for performing operation requested by the Controller. Here Repository must also use <a href=\"https://www.dotnetcurry.com/aspnet-mvc/786/dependency-injection-aspnet-mvc-introduction\"><b>Dependency Injection</b></a><b> </b>to instantiate the <b>DbContext</b> of Entity Framework. To implement Dependency Injection, any DI framework can be used e.g. <a href=\"http://www.devcurry.com/2013/01/aspnet-mvc-getting-started-with-unity.html\" target=\"_blank\" rel=\"nofollow noopener\">Unity</a>, <a href=\"https://www.dotnetcurry.com/aspnet-mvc/829/dependency-injection-ninject-aspnet-mvc\">Ninject</a>, etc.</p>\n<h3>Implementing Repository in ASP.NET MVC</h3>\n<p><b>Step 1: </b>Open Visual Studio and create a new Empty MVC application. Name this as MVC_Repository. In this application, add a new Sql Server database of name Application.mdf. In this database add new table called EmployeeInfo as shown in the following schema:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">CREATE TABLE [dbo].[EmployeeInfo] (\r\n    [EmpNo]       INT          IDENTITY (1, 1) NOT NULL,\r\n    [EmpName]     VARCHAR (50) NOT NULL,\r\n    [Salary]      INT          NOT NULL,\r\n    [DeptName]    VARCHAR (50) NOT NULL,\r\n    [Designation] VARCHAR (50) NOT NULL,\r\n    PRIMARY KEY CLUSTERED ([EmpNo] ASC)\r\n);</pre>\n<p>Insert the following Test Data in this table as shown in the following statement</p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">INSERT INTO [dbo].[EmployeeInfo] ([EmpNo], [EmpName], [Salary], [DeptName], [Designation]) VALUES (1, N'MS', 45000, N'Tech', N'Manager')\r\nINSERT INTO [dbo].[EmployeeInfo] ([EmpNo], [EmpName], [Salary], [DeptName], [Designation]) VALUES (2, N'LS', 55000, N'HR', N'Manager')\r\nINSERT INTO [dbo].[EmployeeInfo] ([EmpNo], [EmpName], [Salary], [DeptName], [Designation]) VALUES (3, N'TS', 85000, N'Store', N'Manager')\r\n</pre>\n<p><b>Step 2: </b>In the Models folder, add a new ADO.NET Entity Data Model. This will start the wizard, in this wizard select Application.mdf database and the EmployeeInfo table. After completion of the wizard, we will generate code using EntityFramework. This will generate Entity Model class of name EmployeeInfo as shown in the following code:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public partial class EmployeeInfo\r\n{\r\n    public int EmpNo { get; set; }\r\n    public string EmpName { get; set; }\r\n    public int Salary { get; set; }\r\n    public string DeptName { get; set; }\r\n    public string Designation { get; set; }\r\n}</pre>\n<p>The <b>DbContext </b>class gets generated as shown in the following code:</p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public partial class ApplicationEntities : DbContext\r\n{\r\n    public ApplicationEntities()\r\n        : base(\"name=ApplicationEntities\")\r\n    {\r\n    }\r\n \r\n    protected override void OnModelCreating(DbModelBuilder modelBuilder)\r\n    {\r\n        throw new UnintentionalCodeFirstException();\r\n    }\r\n \r\n    public virtual DbSet&lt;EmployeeInfo&gt; EmployeeInfoes { get; set; }\r\n}</pre>\n<p>This completes the Data Access layer creation. The <b>DbContext</b> class manages the Database table mapping and data read/write operations.</p>\n<p id=\"mvcplus\" class=\"alsoread\">\n<p><b>Step 3: </b>Since we will be using <b>Dependency Injection</b> for instantiating the Repository object and DbContext object, we need to add a Unity Container in this project using NuGet Package manager as shown in the following image:</p>\n<p><img class=\"alignnone size-full wp-image-1170\" src=\"https://emolike.net/wp-content/uploads/2018/12/unity-dependency.png\" width=\"1126\" height=\"748\" alt=\"unity-dependency\" title=\"unity-dependency\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/unity-dependency.png 1126w, https://emolike.net/wp-content/uploads/2018/12/unity-dependency-300x199.png 300w, https://emolike.net/wp-content/uploads/2018/12/unity-dependency-768x510.png 768w, https://emolike.net/wp-content/uploads/2018/12/unity-dependency-1024x680.png 1024w, https://emolike.net/wp-content/uploads/2018/12/unity-dependency-406x270.png 406w\" sizes=\"(max-width: 1126px) 100vw, 1126px\" /></p>\n<p>This will add UnityConfig.cs file in the App_Start folder of the project. We will visit this file in the forthcoming steps.</p>\n<p><b>Step 4: </b>To isolate the Data Access from the MVC controllers, we need to now create Repository. To implement this in the project, add a folder of the name <b>Repositories. </b>In this folder, add a new interface file of the name IRepository.cs. In this file, add the following code:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System.Collections.Generic;\r\n \r\nnamespace MVC_Repository.Repositories\r\n{\r\n    //The Generic Interface Repository for Performing Read/Add/Delete operations\r\n    public interface IRepository&lt;TEnt, in TPk&gt; where TEnt :class\r\n    {\r\n        IEnumerable&lt;TEnt&gt; Get();\r\n        TEnt Get(TPk id);\r\n        void Add(TEnt entity);\r\n        void Remove(TEnt entity);\r\n    }\r\n}</pre>\n<p>The above code is the generic interface which has <b>TEny </b>and <b>TPk </b>generic type. <b>TEnt </b>is set with the constraints as <b>class. </b>This interface defines methods for Read/Write operations. We are implementing this interface as generic interface so that we can use it for all model entities for performing CRUD operations.</p>\n<p>In the folder, add a new class file of name EmployeeInfoRepository.cs. Add the following code in it:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using Microsoft.Practices.Unity;\r\nusing MVC_Repository.Models;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n \r\nnamespace MVC_Repository.Repositories\r\n{\r\n    //The EmployeeInfo Repository Class. This is used to \r\n    //Isolate the EntityFramework based Data Access Layer from\r\n    //the MVC Controller class\r\n    public class EmployeeInfoRepository : IRepository&lt;EmployeeInfo,int&gt;\r\n    {\r\n        [Dependency]\r\n        public ApplicationEntities context{get;set;}\r\n \r\n        public IEnumerable&lt;EmployeeInfo&gt; Get()\r\n        {\r\n            return context.EmployeeInfoes.ToList();\r\n        }\r\n \r\n        public EmployeeInfo Get(int id)\r\n        {\r\n            return context.EmployeeInfoes.Find(id);\r\n        }\r\n \r\n        public void Add(EmployeeInfo entity)\r\n        {\r\n            context.EmployeeInfoes.Add(entity);\r\n            context.SaveChanges();\r\n        }\r\n \r\n        public void Remove(EmployeeInfo entity)\r\n        {\r\n            var obj = context.EmployeeInfoes.Find(entity.EmpNo);\r\n            context.EmployeeInfoes.Remove(obj);\r\n            context.SaveChanges();\r\n        }\r\n    }\r\n}</pre>\n<p>The above EmployeeInfoRepository class implements IRepository interface by passing <b>TEnt</b> value as <b>EmployeeInfo</b>, and <b>TPk </b>value as <b>int</b>, so that we can implement Read/Write operations for EmployeeInfo model entity and use the <b>int</b> type for <b>id </b>parameter<b> </b>to read Employee based<b> </b>on<b> id</b>.</p>\n<p>The most important part in the above code is the following:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">[Dependency]\r\npublic ApplicationEntities context{get;set;}</pre>\n<p>Using the <b>[Dependency]</b> attribute means that the <b>context </b>property of the type <b>ApplicationEntities </b>is target for Dependency injection in the current type. When the Unity Container instantiates, the property types marked with [Dependency] is instantiated and injected.</p>\n<p><b>Step 5: </b>Open the UnityConfig.cs from the App_Start folder, and register the EmployeeInfoRepository in the UnityContainer as shown in the following code: (highlighted)</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public static void RegisterComponents()\r\n{\r\n    var container = new UnityContainer();\r\n    //Register the Repository in the Unity Container\r\n    container.RegisterType&lt;IRepository&lt;EmployeeInfo,int&gt;,EmployeeInfoRepository&gt;();\r\n    DependencyResolver.SetResolver(new UnityDependencyResolver(container));\r\n}</pre>\n<p>Open the Global.asax and add the following line in Application_Start</p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">UnityConfig.RegisterComponents(); //Method call to Complete the Component Registration</pre>\n<p><b>Step 6: </b>In the Controllers folder add a new Empty MVC controller of the name EmployeeInfoController.cs. Add the following code in it:</p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System.Web.Mvc;\r\n \r\nusing MVC_Repository.Models;\r\nusing MVC_Repository.Repositories;\r\n \r\nnamespace MVC_Repository.Controllers\r\n{\r\n    public class EmployeeInfoController : Controller\r\n    {\r\n        //Property of the type IRepository &lt;TEnt, in TPk&gt;\r\n        private IRepository&lt;EmployeeInfo, int&gt; _repository;\r\n \r\n        //The Dependency Injection of the IRepository&lt;TEnt, in TPk&gt;\r\n        public EmployeeInfoController(IRepository&lt;EmployeeInfo, int&gt; repo)\r\n        {\r\n            _repository = repo;\r\n        }\r\n \r\n        // GET: EmployeeInfo\r\n        public ActionResult Index()\r\n        {\r\n            var Emps = _repository.Get();\r\n \r\n            return View(Emps);\r\n        }\r\n \r\n        public ActionResult Create()\r\n        {\r\n            var Emp = new EmployeeInfo();\r\n            return View(Emp);\r\n        }\r\n \r\n \r\n        [HttpPost]\r\n        public ActionResult Create(EmployeeInfo Emp)\r\n        {\r\n            _repository.Add(Emp);\r\n            return RedirectToAction(\"Index\");\r\n        }\r\n \r\n        public ActionResult Delete(int id)\r\n        {\r\n            var Emp = _repository.Get(id);\r\n            return View(Emp);\r\n        }\r\n \r\n        [HttpPost]\r\n        public ActionResult Delete(int id,EmployeeInfo emp)\r\n        {\r\n            var Emp = _repository.Get(id);\r\n            _repository.Remove(Emp);\r\n            return RedirectToAction(\"Index\");\r\n        }\r\n    }\r\n}</pre>\n<p>The above controller class uses the EmployeeInfoRepository using Dependency Injection with constructor injection. Using this implementation of Repository, we have implemented isolation between the Controller class and the Data Access using entity Framework. All action method from the controller uses an instance of the Repository for performing Read/Write operations. Generate Views from Index, Create and Delete action methods by using Model class as EmployeeInfo as shown in the following image</p>\n<p><img class=\"alignnone size-full wp-image-1171\" src=\"https://emolike.net/wp-content/uploads/2018/12/add-view.png\" width=\"743\" height=\"457\" alt=\"add-view\" title=\"add-view\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/add-view.png 743w, https://emolike.net/wp-content/uploads/2018/12/add-view-300x185.png 300w, https://emolike.net/wp-content/uploads/2018/12/add-view-439x270.png 439w\" sizes=\"(max-width: 743px) 100vw, 743px\" /></p>\n<p>Run and Test the Index, Create and Delete operations.</p>\n<p><b>Conclusion: </b>The Repository pattern decouples your application and shield it from changes by creating a boundary between your data access code and the other parts of your application.</p>\n<p><a title=\"ASP.NET MVC Repository Pattern\" href=\"https://github.com/dotnetcurry/ASP.NET-MVC-Repository-pattern\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Download the entire source code of this article</strong></a><strong> </strong>(Github)</p>\n<p>Source : <a href=\"https://www.dotnetcurry.com/aspnet-mvc/1155/aspnet-mvc-repository-pattern-perform-database-operations\">https://www.dotnetcurry.com/aspnet-mvc/1155/aspnet-mvc-repository-pattern-perform-database-operations</a></p>\n</div>\n</div>\n</div>\n</div>\n",
          "slug": "asp-net-mvc-5-using-a-simple-repository-pattern-for-performing-database-operations",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/12/repository-pattern.png"
          },
          "link": "https://emolike.net/2018/12/01/asp-net-mvc-5-using-a-simple-repository-pattern-for-performing-database-operations/",
          "date": "2018-12-01T17:17:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExNTM=",
        "node": {
          "id": "cG9zdDoxMTUz",
          "title": "How to Implement the Repository Pattern in ASP.NET MVC Application",
          "content": "<p>The Repository Pattern is one of the most popular patterns to create an enterprise level application. It restricts us to work directly with the data in the application and creates new layers for database operations, business logic, and the application’s UI. If an application does not follow the Repository Pattern, it may have the following problems:</p>\n<ul>\n<li>Duplicate database operations codes</li>\n<li>Need of UI to unit test database operations and business logic</li>\n<li>Need of External dependencies to unit test business logic</li>\n<li>Difficult to implement database caching, etc.</li>\n</ul>\n<p>Using the Repository Pattern has many advantages:</p>\n<ul>\n<li>Your business logic can be unit tested without data access logic;</li>\n<li>The database access code can be reused;</li>\n<li>Your database access code is centrally managed so easy to implement any database access policies, like caching;</li>\n<li>It’s easy to implement domain logic;</li>\n<li>Your domain entities or business entities are strongly typed with annotations; and more.</li>\n</ul>\n<p>On the internet, there are millions of articles written around Repository Pattern, but in this one, we’re going to focus on how to implement it in an ASP.NET MVC Application. So let’s get started!</p>\n<p><b>Project Structure</b></p>\n<p>Let us start with creating the Project structure for the application. We are going to create four projects:</p>\n<ol>\n<li>Core Project</li>\n<li>Infrastructure Project</li>\n<li>Test Project</li>\n<li>MVC Project</li>\n</ol>\n<p>Each project has its own purpose. You can probably guess by the projects’ names what they’ll contain: Core and Infrastructure projects are Class Libraries, Web project is an MVC project, and Test project is a Unit Test project. Eventually, the projects in the solution explorer will look as shown in the image below:</p>\n<p><img class=\"alignnone size-full wp-image-1154\" src=\"https://emolike.net/wp-content/uploads/2018/12/3857.pic1_.png\" alt=\" \" width=\"398\" height=\"277\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/3857.pic1_.png 398w, https://emolike.net/wp-content/uploads/2018/12/3857.pic1_-300x209.png 300w, https://emolike.net/wp-content/uploads/2018/12/3857.pic1_-388x270.png 388w\" sizes=\"(max-width: 398px) 100vw, 398px\" /></p>\n<p>As we progress in this post, we will learn in detail about the purpose of each project, however, to start we can summarize the main objective of each project as the following:</p>\n<p><img class=\"alignnone size-full wp-image-1155\" src=\"https://emolike.net/wp-content/uploads/2018/12/2352.pic2_.png\" alt=\" \" width=\"883\" height=\"387\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/2352.pic2_.png 883w, https://emolike.net/wp-content/uploads/2018/12/2352.pic2_-300x131.png 300w, https://emolike.net/wp-content/uploads/2018/12/2352.pic2_-768x337.png 768w, https://emolike.net/wp-content/uploads/2018/12/2352.pic2_-604x265.png 604w\" sizes=\"(max-width: 883px) 100vw, 883px\" /></p>\n<p>So far our understanding for different projects is clear. Now let us go ahead and implement each project one by one. During the implementations, we will explore the responsibilities of each project in detail.</p>\n<p>&nbsp;</p>\n<p><b>Core Project</b></p>\n<p>In the core project, we keep the entities and the repository interfaces or the database operation interfaces. The core project contains information about the domain entities and the database operations required on the domain entities. In an ideal scenario, the core project should not have any dependencies on external libraries. It must not have any business logic, database operation codes etc.</p>\n<p>In short, the core project should contain:</p>\n<ul>\n<li>Domain entities</li>\n<li>Repository interfaces or database operations interfaces on domain entities</li>\n<li>Domain-specific data annotations</li>\n</ul>\n<p>The core project can NOT contain:</p>\n<ul>\n<li>Any external libraries for database operations</li>\n<li>Business logic</li>\n<li>Database operations code</li>\n</ul>\n<p>While creating the domain entities, we also need to make a decision on the restrictions on the domain entities properties, for example:</p>\n<ul>\n<li>Whether a particular property is required or not. For instance, for a Product entity, the name of the product should be required property.</li>\n<li>Whether a value of a particular property is in given range or not. For instance, for a Product entity, the price property should be in given range.</li>\n<li>Whether the maximum length of a particular property should not be given value. For instance, for a Product entity, the name property value should be less than the maximum length.</li>\n</ul>\n<p>There could be many such data annotations on the domain entities properties. There are two ways we can think about these data annotations:</p>\n<ol>\n<li>As part of the domain entities</li>\n<li>As part of the database operations logic</li>\n</ol>\n<p>It is purely up to us how we see data annotations. If we consider them part of database operation then we can apply restrictions using database operation libraries API. We are going to use the Entity Framework for database operations in the Infrastructure project, so we can use Entity Framework Fluent API to annotate data.</p>\n<p>If we consider them part of the domain, then we can use <b>System.ComponentModel.DataAnnotations</b> library to annotate the data. To use this, right click on the Core project’s Reference folder and click on Add Reference. From the Framework tab, select <b>System.ComponentModel.DataAnnotations </b>and add to the project.</p>\n<p>We are creating a ProductApp, so let us start with creating the Product entity. To add an entity class, right click on the Core project and add a class, then name the class Product.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System.ComponentModel.DataAnnotations;\r\nnamespace ProductApp.Core\r\n{\r\n    public class Product\r\n    {\r\n        public int Id { get; set; }\r\n [Required]\r\n [MaxLength(100)]\r\n        public string Name { get; set; }\r\n [Required]\r\n        public double Price { get; set; }\r\n        public bool inStock { get; set; }\r\n    }\r\n}</pre>\n<p>We have annotated the Product entity properties with <b>Required</b> and <b>MaxLength</b>. Both of these annotations are part of <b>System.ComponentModel.DataAnnotations</b>. Here, we have considered restriction as part of the domain, hence used data annotations in the core project itself.</p>\n<p>We have created Product Entity class and also applied data annotation to that. Now let us go ahead and create Repository interface. But before we create that, let us understand, what is a Repository Interface?</p>\n<p>The repository interface defines all the database operations possible on the domain entities. All database operations that can be performed on the domain entities are part of the domain information, hence we will put the repository interface in the core project. How these operations can be performed will be the part of the Infrastructure project.</p>\n<p>To create a Repository Interface, right click on the Core project and add a folder named Interfaces. Once the Interfaces folder is created, right click on the Interface folder and select add a new item, then from the Code tab select Interface. Name the Interface <b>IProductRepository</b></p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System.Collections.Generic;\r\n\r\nnamespace ProductApp.Core.Interfaces\r\n{\r\n    public interface IProductRepository\r\n    {\r\n        void Add(Product p);\r\n        void Edit(Product p);\r\n        void Remove(int Id);\r\n        IEnumerable GetProducts(); Product FindById(int Id); } } \r\n</pre>\n<p>Now we have created a Product entity class and a Product Repository Interface. At this point, the core project should look like this:</p>\n<p><img class=\"alignnone size-full wp-image-1156\" src=\"https://emolike.net/wp-content/uploads/2018/12/8228.pic3_.png\" alt=\" \" width=\"348\" height=\"279\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/8228.pic3_.png 348w, https://emolike.net/wp-content/uploads/2018/12/8228.pic3_-300x241.png 300w, https://emolike.net/wp-content/uploads/2018/12/8228.pic3_-337x270.png 337w\" sizes=\"(max-width: 348px) 100vw, 348px\" /></p>\n<p>Let us go ahead and build the core project to verify everything is in place and move ahead to create Infrastructure project.</p>\n<p>&nbsp;</p>\n<p><b>Infrastructure Project</b></p>\n<p>The main purpose of Infrastructure project is to perform database operations. Besides database operations, it can also consume web services, perform IO operations etc. So mainly, Infrastructure project may perform the following operations:</p>\n<ul>\n<li>Database operations</li>\n<li>Working with WCF and Web Services</li>\n<li>IO operations</li>\n</ul>\n<p>We can use any database technology to perform database operations. In this post, we are going to use Entity Framework. So we are going to create a database using the Code First approach. In the Code First approach, the database gets created on basis of the classes. Here database will be created on the basis of the Domain entities from the Core Project.</p>\n<p>To create the database from the Core project domain entity, we need to perform these tasks:</p>\n<ol>\n<li>Create DataContext class</li>\n<li>Configure the connection string</li>\n<li>Create DataBase Initializer class to seed data in the database</li>\n<li>Implement IProductRepsitory interface</li>\n</ol>\n<p><b> </b></p>\n<p><b>Adding References</b></p>\n<p>First, let’s add references to the Entity Framework and ProductApp.Core project. To add the Entity Framework, right click on the Infrastructure project and click on Manage Nuget Package. In the Package Manager Window, search for Entity Framework and install the latest stable version.</p>\n<p>To add a reference of the ProductApp.Core project, right click on the Infrastructure project and click on Add Reference. In the Reference Window, click on the Project tab and select ProductApp.Core.</p>\n<p><b>DataContext class</b></p>\n<p>The objective of the DataContext class is to create the DataBase in the Entity Framework Code First approach. We pass a connection string in the constructor of DataContext class. By reading the connection string, the Entity Framework creates the database. If a connection string is not specified then the Entity Framework creates the database in a local database server.</p>\n<p>In the DataContext class:</p>\n<ul>\n<li>Create a DbSet type property. This is responsible for creating the table for the Product entity</li>\n<li>In the constructor of the DataContext class, pass the connection string to specify information to create a database, for example, server name, database name, login information etc. We need to pass the name of the connection string. name where the database would be created</li>\n<li>If connection string is not passed, Entity Framework creates with the name of data context class in the local database server.</li>\n<li>The productdatacontext class inherits the DbContext class</li>\n</ul>\n<p>The ProductDataContext class can be created as shown in the listing below:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using ProductApp.Core;\r\nusing System.Data.Entity;\r\n\r\nnamespace ProductApp.Infrastructure\r\n{\r\n    public class ProductContext  : DbContext\r\n    {\r\n        public ProductContext()\r\n           : base(\"name=ProductAppConnectionString\")\r\n       {\r\n       }\r\n        public DbSet Products { get; set; } } }</pre>\n<p>Next, we need to work on the Connection String. As discussed earlier, we can either pass the connection string to specify database creation information or reply on the Entity Framework to create default database at default location for us. We are going to specify the connection string that is why we passed a connection string name ProductAppConnectionString in the constructor of ProductDataContext class. In the App.Config file the ProductAppConnectionString connection string can be created as shown in the listing below:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;add name=\"ProductAppConnectionString\" connectionString=\"Data Source=(LocalDb)\\v11.0;Initial Catalog=ProductAppJan;Integrated Security=True;MultipleActiveResultSets=true\" providerName=\"System.Data.SqlClient\"/&gt;\r\n</pre>\n<p><b>Database Initializer class</b></p>\n<p>We create a database initializer class to seed the database with some initial value at the time of the creation. To create the Database initializer class, create a class which inherits from <b>DropCreateDatabaseIfModelChnages</b>. There are other options of classes available to inherit in order to create a database initializer class. If we inherit DropCreateDatabaseIfModelChnages class then each time a new database will be created on the model changes. So for example, if we add or remove properties from the Product entity class, Entity Framework will drop the existing database and create a new one. Of course, this is not a great option, since data will be lost too, so I recommend you explore other options to inherit the database initializer class.</p>\n<p>The database initializer class can be created as shown in the listing below. Here we are seeding the product table with two rows. To seed the data:</p>\n<ol>\n<li>Override Seed method</li>\n<li>Add product to Context.Products</li>\n<li>Call Context.SaveChanges()</li>\n</ol>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using ProductApp.Core;\r\nusing System.Data.Entity;\r\n\r\nnamespace ProductApp.Infrastructure\r\n{\r\n    public class ProductInitalizeDB : DropCreateDatabaseIfModelChanges { protected override void Seed(ProductContext context) { context.Products.Add(new Product { Id = 1, Name = \"Rice\", inStock = true, Price = 30 }); context.Products.Add(new Product { Id = 2, Name = \"Sugar\", inStock = false, Price = 40 }); context.SaveChanges(); base.Seed(context); } } }</pre>\n<p>So far, we have done all the Entity Framework Code First related work to create the database. Now let’s go ahead and implement an IProductRepository interface from the Core project in a concrete ProductRepository class.</p>\n<p>&nbsp;</p>\n<p><b>Repository Class</b></p>\n<p>This is the class which will perform database operations on the Product Entity. In this class, we will implement the IProductRepository interface from the Core project. Let us start with adding a class ProductRepository to the Infrastructure project and implement the IProductRepository interface. To perform database operations, we are going to write simple LINQ to Entity queries. The product repository class can be created as shown in the listing below:</p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using ProductApp.Core.Interfaces;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing ProductApp.Core;\r\n\r\nnamespace ProductApp.Infrastructure\r\n{\r\n    public class ProductRepository : IProductRepository\r\n    {\r\n        ProductContext context = new ProductContext();\r\n        public void Add(Product p)\r\n        {\r\n            context.Products.Add(p);\r\n            context.SaveChanges();\r\n        }\r\n\r\n        public void Edit(Product p)\r\n        {\r\n            context.Entry(p).State = System.Data.Entity.EntityState.Modified;\r\n        }\r\n\r\n        public Product FindById(int Id)\r\n        {\r\n            var result = (from r in context.Products where r.Id == Id select r).FirstOrDefault();\r\n            return result;\r\n        }\r\n\r\n        public IEnumerable GetProducts() { return context.Products; } public void Remove(int Id) { Product p = context.Products.Find(Id); context.Products.Remove(p); context.SaveChanges(); } } }</pre>\n<p>So far we have created a Data Context class, a Database Initializer class, and the Repository class. Let us build the infrastructure project to make sure that everything is in place. The ProductApp.Infrastructure project will look as given in the below image:</p>\n<p><img class=\"alignnone size-full wp-image-1157\" src=\"https://emolike.net/wp-content/uploads/2018/12/5657.pic4_.png\" alt=\" \" width=\"394\" height=\"196\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/5657.pic4_.png 394w, https://emolike.net/wp-content/uploads/2018/12/5657.pic4_-300x149.png 300w\" sizes=\"(max-width: 394px) 100vw, 394px\" /></p>\n<p>Now we’re done creating the Infrastructure project. We have written all the database operations-related classes inside the Infrastructure project, and all the database-related logic is in a central place. Whenever any changes in database logic are required, we need to change only the infrastructure project.</p>\n<p>&nbsp;</p>\n<p><b>Test Project</b></p>\n<p>The biggest advantage of Repository Pattern is the testability. This allows us to unit test the various components without having dependencies on other components of the project. For example, we have created the Repository class which performs the database operations to verify the correctness of the functionality, so we should unit test it. We should also be able to write tests for the Repository class without any dependency on the web project or UI. Since we are following the Repository Pattern, we can write Unit Tests for the Infrastructure project without any dependency on the MVC project (UI).</p>\n<p>To write Unit Tests for ProductRepository class, let us add following references in the Test project.</p>\n<ol>\n<li>Reference of ProductApp.Core project</li>\n<li>Reference of ProductApp.Infrastructure project</li>\n<li>Entity Framework package</li>\n</ol>\n<p>&nbsp;</p>\n<p>To add the Entity Framework, right click on the Test project and click on Manage Nuget Package. In the Package Manager Windows, search for Entity Framework and install the latest stable version.</p>\n<p>To add a reference of the ProductApp.Core project, right click on the Test project and click on Add Reference. In the Reference Window, click on Project tab and select ProductApp.Core.</p>\n<p>To add a reference of the ProductApp.Infrastructure project, right click on the Test project and click on Add Reference. In the Reference Window, click on Project tab and select ProductApp.Infrastructure.</p>\n<p><b>Copy the Connection String</b></p>\n<p>Visual Studio always reads the config file of the running project. To test the Infrastructure project, we will run the Test project. Hence the connection string should be part of the App.Config of the Test project. Let us copy and paste the connection string from Infrastructure project in the Test project.</p>\n<p>We have added all the required references and copied the connection string. Let’s go ahead now and set up the Test Class. We’ll create a Test Class with the name ProductRepositoryTest. <i>Test Initialize</i> is the function executed before the tests are executed. We need to create an instance of the ProductRepository class and call the ProductDbInitalize class to seed the data before we run tests. Test Initializer can be written as shown in the listing below:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">[TestClass]\r\n    public class ProductRepositoryTest\r\n    {\r\n        ProductRepository Repo; \r\n [TestInitialize]\r\n        public void TestSetup()\r\n        {\r\n            ProductInitalizeDB db = new ProductInitalizeDB();\r\n            System.Data.Entity.Database.SetInitializer(db);\r\n            Repo = new ProductRepository();\r\n        }\r\n    }</pre>\n</div>\n<p>Now we’ve written the Test Initializer. Now let write the very first test to verify whether ProductInitalizeDB class seeds two rows in the Product table or not. Since it is the first test we will execute, it will also verify whether the database gets created or not. So essentially we are writing a test:</p>\n<ol>\n<li>To verify database creation</li>\n<li>To verify the number of rows inserted by the seed method of Product Database Initializer</li>\n</ol>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">[TestMethod]\r\n        public void IsRepositoryInitalizeWithValidNumberOfData()\r\n        {\r\n            var result = Repo.GetProducts();\r\n            Assert.IsNotNull(result);\r\n            var numberOfRecords = result.ToList().Count;\r\n            Assert.AreEqual(2, numberOfRecords);\r\n        }</pre>\n<p>As you can see, we’re calling the Repository GetProducts() function to fetch all the Products inserted while creating the database. This test is actually verifying whether GetProducts() works as expected or not, and also verifying database creation. In the Test Explorer window, we can run the test for verification.</p>\n<p><img class=\"alignnone size-full wp-image-1158\" src=\"https://emolike.net/wp-content/uploads/2018/12/6253.pic5_.png\" alt=\" \" width=\"792\" height=\"249\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/6253.pic5_.png 792w, https://emolike.net/wp-content/uploads/2018/12/6253.pic5_-300x94.png 300w, https://emolike.net/wp-content/uploads/2018/12/6253.pic5_-768x241.png 768w, https://emolike.net/wp-content/uploads/2018/12/6253.pic5_-604x190.png 604w\" sizes=\"(max-width: 792px) 100vw, 792px\" /></p>\n<p>To run the test, first build the Test project, then from the top menu select Test-&gt;Windows-Test Explorer. In the Test Explorer, we will find all the tests listed. Select the test and click on Run.</p>\n<p>Let’s go ahead and write one more test to verify Add Product operation on the Repository:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">[TestMethod]\r\n        public void IsRepositoryAddsProduct()\r\n        {\r\n            Product productToInsert = new Product\r\n            {\r\n                Id = 3,\r\n                inStock = true,\r\n                Name = \"Salt\",\r\n                Price = 17\r\n\r\n            };\r\n            Repo.Add(productToInsert);\r\n            // If Product inserts successfully, \r\n            //number of records will increase to 3 \r\n            var result = Repo.GetProducts();\r\n            var numberOfRecords = result.ToList().Count;\r\n            Assert.AreEqual(3, numberOfRecords);\r\n        }</pre>\n<p>To verify insertion of the Product, we are calling the Add function on the Repository. If Product gets added successfully, the number of records will increase to 3 from 2 and we are verifying that. On running the test, we will find that the test has been passed.</p>\n<p><img class=\"alignnone size-full wp-image-1159\" src=\"https://emolike.net/wp-content/uploads/2018/12/3326.pic6_.png\" alt=\" \" width=\"792\" height=\"257\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/3326.pic6_.png 792w, https://emolike.net/wp-content/uploads/2018/12/3326.pic6_-300x97.png 300w, https://emolike.net/wp-content/uploads/2018/12/3326.pic6_-768x249.png 768w, https://emolike.net/wp-content/uploads/2018/12/3326.pic6_-604x196.png 604w\" sizes=\"(max-width: 792px) 100vw, 792px\" /></p>\n<p>In this way, we can write tests for all the Database operations from the Product Repository class. Now we are sure that we have implemented the Repository class correctly because tests are passing, which means the Infrastructure and Core project can be used with any UI (in this case MVC) project.</p>\n<p>&nbsp;</p>\n<p><b>MVC or Web Project</b></p>\n<p>Finally, we have gotten to the MVC project! Like the Test project, we need to add following references</p>\n<ol>\n<li>Reference of ProductApp.Core project</li>\n<li>Reference of ProductApp.Infrastructure project</li>\n</ol>\n<p>To add a reference of the ProductApp.Core project, right click on the MVC project and click on Add Reference. In the Reference Window, click on Project tab and select ProductApp.Core.</p>\n<p>To add a reference of the ProductApp.Infrastructure project, right click on the MVC project and click on Add Reference. In the Reference Window, click on Project tab and select ProductApp.Infrastructure.</p>\n<p><b> </b></p>\n<p><b>Copy the Connection String</b></p>\n<p>Visual Studio always reads the config file of the running project. To test the Infrastructure project, we will run the Test project, so the connection string should be part of the App.Config of the Test project. To make it easier, let’s copy and paste the connection string from Infrastructure project in the Test project.</p>\n<p>&nbsp;</p>\n<p><b>Scaffolding the Application</b></p>\n<p>We should have everything in place to scaffold the MVC controller. To scaffold, right click on the Controller folder and select MVC 5 Controller with Views, using Entity Framework as shown in the image below:</p>\n<p><b><img class=\"alignnone size-full wp-image-1160\" src=\"https://emolike.net/wp-content/uploads/2018/12/2746.pic7_.png\" alt=\" \" width=\"992\" height=\"560\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/2746.pic7_.png 992w, https://emolike.net/wp-content/uploads/2018/12/2746.pic7_-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/12/2746.pic7_-768x434.png 768w, https://emolike.net/wp-content/uploads/2018/12/2746.pic7_-478x270.png 478w\" sizes=\"(max-width: 992px) 100vw, 992px\" /></b></p>\n<p>Next, we will see the Add Controller window. Here we need to provide the Model Class and Data context class information. In our project, model class is the Product class from the Core project and the Data context class is the ProductDataContext class from the Infrastructure project. Let us select both the classes from the drop-down as shown in the image below:</p>\n<p><img class=\"alignnone size-full wp-image-1161\" src=\"https://emolike.net/wp-content/uploads/2018/12/1351.pic8_.png\" alt=\" \" width=\"738\" height=\"477\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/1351.pic8_.png 738w, https://emolike.net/wp-content/uploads/2018/12/1351.pic8_-300x194.png 300w, https://emolike.net/wp-content/uploads/2018/12/1351.pic8_-418x270.png 418w\" sizes=\"(max-width: 738px) 100vw, 738px\" /></p>\n<p>Also, we should make sure that the Generate Views, Reference script libraries, and Use a layout page options are selected.</p>\n<p>On clicking Add, Visual Studio will create the ProductsController and Views inside Views/Products folder. The MVC project should have the structure shown in the image below:</p>\n<p><img class=\"alignnone size-full wp-image-1162\" src=\"https://emolike.net/wp-content/uploads/2018/12/4578.pic9_.png\" alt=\" \" width=\"371\" height=\"436\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/4578.pic9_.png 371w, https://emolike.net/wp-content/uploads/2018/12/4578.pic9_-255x300.png 255w, https://emolike.net/wp-content/uploads/2018/12/4578.pic9_-230x270.png 230w\" sizes=\"(max-width: 371px) 100vw, 371px\" /></p>\n<p>At this point, if we go ahead and run the application, we will be able to perform CRUD operations on the Product entity.</p>\n<p><img class=\"alignnone size-full wp-image-1163\" src=\"https://emolike.net/wp-content/uploads/2018/12/4062.pic10.png\" alt=\" \" width=\"937\" height=\"454\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/4062.pic10.png 937w, https://emolike.net/wp-content/uploads/2018/12/4062.pic10-300x145.png 300w, https://emolike.net/wp-content/uploads/2018/12/4062.pic10-768x372.png 768w, https://emolike.net/wp-content/uploads/2018/12/4062.pic10-557x270.png 557w\" sizes=\"(max-width: 937px) 100vw, 937px\" /></p>\n<p><b>Problem with Scaffolding</b></p>\n<p>But we are not done yet! Let’s open the ProductsController class and examine the code. On the very first line, we will find the problem. Since we have used MVC scaffolding, MVC is creating an object of the ProductContext class to perform the database operations.</p>\n<p><img class=\"alignnone size-full wp-image-1164\" src=\"https://emolike.net/wp-content/uploads/2018/12/4544.pic11.png\" alt=\" \" width=\"632\" height=\"302\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/4544.pic11.png 632w, https://emolike.net/wp-content/uploads/2018/12/4544.pic11-300x143.png 300w, https://emolike.net/wp-content/uploads/2018/12/4544.pic11-565x270.png 565w\" sizes=\"(max-width: 632px) 100vw, 632px\" /></p>\n<p>Any dependencies on the context class bind the UI project and the Database tightly to each other. As we know the Datacontext class is an Entity Framework component. We do not want the MVC project to know which database technology is being used in the Infrastructure project. On the other hand, we haven’t tested the Datacontext class; we’ve tested the ProductRepository class. Ideally, we should use ProductRepository class instead of the ProductContext class to perform database operations in the MVC Controller.  To summarize,</p>\n<ol>\n<li>MVC Scaffolding uses Data context class to perform database operations. The data context class is an Entity Framework component, so its use tightly couples UI (MVC) with the Database (EF) technology.</li>\n<li>The data context class is not unit tested so it’s not a good idea to use that.</li>\n<li>We have a tested ProductRepository class. We should use this inside Controller to perform database operations. Also, the ProductRepository class does not expose database technology to the UI.</li>\n</ol>\n<p>To use the ProductRepository class for database operations, we need to refactor the ProductsController class. To do so, there are two steps we need to follow:</p>\n<ol>\n<li>Create an object of ProductRepository class instead of ProductContext class.</li>\n<li>Call methods of ProductRepository class to perform database operations on Product entity instead of methods of ProductContext class.</li>\n</ol>\n<p>In the listing below, I have commented codes using ProductContext and called ProductRepository methods. After refactoring, the ProductController class will look like the following:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing System.Net;\r\nusing System.Web.Mvc;\r\nusing ProductApp.Core;\r\nusing ProductApp.Infrastructure;\r\n\r\nnamespace ProductApp.Web.Controllers\r\n{\r\n    public class ProductsController : Controller\r\n    {\r\n        //private ProductContext db = new ProductContext();\r\n        private ProductRepository db = new ProductRepository();\r\n\r\n     \r\n        public ActionResult Index()\r\n        {\r\n            //return View(db.Products.ToList());\r\n            return View(db.GetProducts());\r\n        }\r\n\r\n    \r\n        public ActionResult Details(int? id)\r\n        {\r\n            if (id == null)\r\n            {\r\n                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);\r\n            }\r\n            // Product product = db.Products.Find(id);\r\n            Product product = db.FindById(Convert.ToInt32(id));\r\n            if (product == null)\r\n            {\r\n                return HttpNotFound();\r\n            }\r\n            return View(product);\r\n        }\r\n\r\n     \r\n        public ActionResult Create()\r\n        {\r\n            return View();\r\n        }\r\n\r\n [HttpPost]\r\n [ValidateAntiForgeryToken]\r\n        public ActionResult Create([Bind(Include = \"Id,Name,Price,inStock\")] Product product)\r\n        {\r\n            if (ModelState.IsValid)\r\n            {\r\n                // db.Products.Add(product);\r\n                //db.SaveChanges();\r\n                db.Add(product);\r\n                return RedirectToAction(\"Index\");\r\n            }\r\n\r\n            return View(product);\r\n        }\r\n\r\n       \r\n        public ActionResult Edit(int? id)\r\n        {\r\n            if (id == null)\r\n            {\r\n                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);\r\n            }\r\n            Product product = db.FindById(Convert.ToInt32(id));\r\n            if (product == null)\r\n            {\r\n                return HttpNotFound();\r\n            }\r\n            return View(product);\r\n        }\r\n\r\n [HttpPost]\r\n [ValidateAntiForgeryToken]\r\n        public ActionResult Edit([Bind(Include = \"Id,Name,Price,inStock\")] Product product)\r\n        {\r\n            if (ModelState.IsValid)\r\n            {\r\n                //db.Entry(product).State = EntityState.Modified;\r\n                //db.SaveChanges();\r\n                db.Edit(product);\r\n                return RedirectToAction(\"Index\");\r\n            }\r\n            return View(product);\r\n        }\r\n\r\n   \r\n        public ActionResult Delete(int? id)\r\n        {\r\n            if (id == null)\r\n            {\r\n                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);\r\n            }\r\n            Product product = db.FindById(Convert.ToInt32(id));\r\n            if (product == null)\r\n            {\r\n                return HttpNotFound();\r\n            }\r\n            return View(product);\r\n        }\r\n\r\n \r\n [HttpPost, ActionName(\"Delete\")]\r\n [ValidateAntiForgeryToken]\r\n        public ActionResult DeleteConfirmed(int id)\r\n        {\r\n            //Product product = db.FindById(Convert.ToInt32(id));\r\n            // db.Products.Remove(product);\r\n            // db.SaveChanges();\r\n            db.Remove(id);\r\n            return RedirectToAction(\"Index\");\r\n        }\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            if (disposing)\r\n            {\r\n                //db.Dispose();\r\n            }\r\n            base.Dispose(disposing);\r\n        }\r\n    }\r\n}</pre>\n<p>After refactoring, let’s go ahead and build and run the application – we should be able to do so and perform the CRUD operations.</p>\n<p><b>Injecting the Dependency</b></p>\n<p>Now we’re happy that the application is up and running, and it was created using the Repository pattern. But there is still a problem: we are directly creating an object of the ProductRepository class inside the ProductsController class, and we don’t want this. We want to invert the dependency and delegate the task of injecting the dependency to a third party, popularly known as a DI container. Essentially, ProductsController will ask the DI container to return the instance of IProductRepository.</p>\n<p>There are many DI containers available for MVC applications. In this example, we’ll use the simplest Unity DI container. To do so, right-click on the MVC project and click Manage Nuget Package. In the NuGet Package Manager search for Unity.Mvc and install the package.</p>\n<p><img class=\"alignnone size-full wp-image-1165\" src=\"https://emolike.net/wp-content/uploads/2018/12/2084.pic12.png\" alt=\" \" width=\"1112\" height=\"408\" srcset=\"https://emolike.net/wp-content/uploads/2018/12/2084.pic12.png 1112w, https://emolike.net/wp-content/uploads/2018/12/2084.pic12-300x110.png 300w, https://emolike.net/wp-content/uploads/2018/12/2084.pic12-768x282.png 768w, https://emolike.net/wp-content/uploads/2018/12/2084.pic12-1024x376.png 1024w, https://emolike.net/wp-content/uploads/2018/12/2084.pic12-604x222.png 604w\" sizes=\"(max-width: 1112px) 100vw, 1112px\" /></p>\n<p>Once the Unity.Mvc package is installed, let us go ahead and open an App_Start folder. Inside the App_Start folder, we will find the UnityConfig.cs file. In the UnityConfig class, we have to register the type. To do so, open RegisterTypes function in UnityConfig class and register the type as shown in the listing below:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public static void RegisterTypes(IUnityContainer container)\r\n        {\r\n            \r\n\r\n            // TODO: Register your types here\r\n            container.RegisterType&lt;iproductrepository, productrepository=\"\"&gt;(); }</pre>\n<p>We have registered the type to Unity DI container. Now let us go ahead and do a little bit of refactoring in the ProductsController class.  In the constructor of ProductsController, we will pass the reference to the repository interface. Whenever required by the application, the Unity DI container will inject the concrete object of ProductRepository in the application by resolving the type. We need to refactor the ProductsController as shown in the listing below:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public class ProductsController : Controller\r\n   {\r\n       IProductRepository db;\r\n       public ProductsController(IProductRepository db)\r\n       {\r\n\r\n           this.db = db;\r\n       }</pre>\n<p>Let us go ahead and build and run the application. We should have the application up and running, and we should able to perform CRUD operations using Repository Pattern and Dependency Injection!</p>\n<p><b>Conclusion</b></p>\n<p>In this article, we learned in a step by step manner how to create an MVC application following the Repository pattern. In doing so, we can put all the database logic in one place and whenever required, we only need to change the repository and test that. The Repository Pattern also loosely couples the application UI with the Database logic and the Domain entities and makes your application more testable.</p>\n<p>ٍSource : <a href=\"https://www.infragistics.com/community/blogs/b/dhananjay_kumar/posts/how-to-implement-the-repository-pattern-in-asp-net-mvc-application\">https://www.infragistics.com/community/blogs/b/dhananjay_kumar/posts/how-to-implement-the-repository-pattern-in-asp-net-mvc-application</a></p>\n</div>\n</div>\n",
          "slug": "how-to-implement-the-repository-pattern-in-asp-net-mvc-application",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/12/3857.pic1_.png"
          },
          "link": "https://emolike.net/2018/12/01/how-to-implement-the-repository-pattern-in-asp-net-mvc-application/",
          "date": "2018-12-01T12:58:13",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "testing"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExNTA=",
        "node": {
          "id": "cG9zdDoxMTUw",
          "title": "Kubernetes on Ubuntu 18.04 &#8211; Master and Dashboard setup",
          "content": "<p><iframe title=\"Kubernetes on Ubuntu 18.04 - Master and Dashboard setup\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/79oLiDhZAm4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "kubernetes-on-ubuntu-18-04-master-and-dashboard-setup",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/30/kubernetes-on-ubuntu-18-04-master-and-dashboard-setup/",
          "date": "2018-11-30T13:53:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExNDI=",
        "node": {
          "id": "cG9zdDoxMTQy",
          "title": "Batch: An API to bundle multiple PayPal REST operations",
          "content": "<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"ab91\" class=\"graf graf--p graf-after--h3\"><a class=\"markup--anchor markup--p-anchor\" href=\"https://developer.paypal.com/docs/api/overview\" target=\"_blank\" rel=\"nofollow noopener noopener\" data-href=\"https://developer.paypal.com/docs/api/overview\">REST APIs </a>are vital business tools that allow merchants, partners and developers to consume and build on top of the various payment capabilities that PayPal provides. Whether it is checkout, recurring payments, vaulting or identity operations there are multiple end to end API interactions involved in each of those business flows.</p>\n<p id=\"15c7\" class=\"graf graf--p graf-after--p\">These APIs are also a critical part of the internal Service Oriented Architecture (SOA) at PayPal. Different domains expose various internal capabilities and operations via REST interfaces using which the PayPal platform orchestrates and processes billions of transactions per day.</p>\n<p id=\"5110\" class=\"graf graf--p graf-after--p\">Earlier this year, <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.linkedin.com/in/aniket-pol/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.linkedin.com/in/aniket-pol/\">Aniket Pol</a> and I started working on a project that would allow for logical bundling of these different REST API operations into one single API call on an <strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">as-needed basis</em></strong>. The primary motivation behind this being; cutting down on the number of API calls between external clients (merchants and developers) and PayPal or between different internal services at PayPal.</p>\n<blockquote id=\"7d7b\" class=\"graf graf--blockquote graf-after--p\"><p>Reducing multiple API calls into a single API call between client and server allows for enormous performance boost as we cut down significantly on the round trip network time.</p></blockquote>\n<p id=\"d71a\" class=\"graf graf--p graf-after--blockquote\">Another common business use case is doing bulk API operations. Often large merchants and marketplaces initiate transactions in bulk where they need to create multiple payments at one go.</p>\n<blockquote id=\"5f72\" class=\"graf graf--blockquote graf-after--p\"><p>There was a need for an interface that allows clients to invoke the same API call with different request contexts multiple times via a single optimized API call. This eliminates the need for the clients to call an API endpoint in bulk and write code at their end to manage parallel and sequential requests.</p></blockquote>\n<p id=\"9f3f\" class=\"graf graf--p graf-after--blockquote\">Enter <strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">Batch API </em></strong>that facilitates the logical bundling of these multiple REST calls via a simplified interface. This REST API is based on the <a class=\"markup--anchor markup--p-anchor\" href=\"https://tools.ietf.org/html/rfc7644\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://tools.ietf.org/html/rfc7644\">IETF SCIM specification</a> which provides guidance on how clients can send a large collection of resource operations in a single request. The body of a bulk operation contains a set of HTTP resource operations using one of the HTTP methods supported by the API such as POST, PUT, PATCH, or DELETE.</p>\n<p id=\"6976\" class=\"graf graf--p graf-after--p\">Using this API one can make both <strong class=\"markup--strong markup--p-strong\">non-dependent</strong> and <strong class=\"markup--strong markup--p-strong\">dependent</strong> batch requests to the PayPal server.</p>\n<p id=\"f1aa\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Non-dependent batch requests do not support dependencies between batch operations.</strong></p>\n<p id=\"567f\" class=\"graf graf--p graf-after--p\">Non-dependent batch requests contain multiple API operations that are not dependent on each other. For example bulk API operations in which one API endpoint is being called multiple times would be a collection of non-dependent operations.</p>\n</div>\n<div class=\"section-inner sectionLayout--outsetColumn\">\n<figure id=\"a68a\" class=\"graf graf--figure graf--layoutOutsetCenter graf-after--p\" data-scroll=\"native\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*okfjJcmLRgw0rVkE66xkEw.png\" data-width=\"1776\" data-height=\"398\" data-action=\"zoom\" data-action-value=\"1*okfjJcmLRgw0rVkE66xkEw.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"15\"></canvas><img class=\"alignnone size-full wp-image-1143\" src=\"https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw.png\" width=\"1250\" height=\"280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw.png 1250w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-300x67.png 300w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-768x172.png 768w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-1024x229.png 1024w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-604x135.png 604w\" sizes=\"(max-width: 1250px) 100vw, 1250px\" /></div>\n</div><figcaption class=\"imageCaption\">Processing a non-dependent batch request</figcaption></figure>\n</div>\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"6b98\" class=\"graf graf--p graf-after--figure\">The PayPal batch server returns the response of the batch request as a single-wrapped response only after receiving responses for individual independent operations.</p>\n<p id=\"7434\" class=\"graf graf--p graf-after--p\">Here is an example of how a non-dependent batch API request looks like:</p>\n<figure id=\"0c20\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*gHy7IjcoyGLiBYejlS0yiA.png\" data-width=\"1195\" data-height=\"1794\" data-action=\"zoom\" data-action-value=\"1*gHy7IjcoyGLiBYejlS0yiA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"50\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-1144\" src=\"https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA.png\" width=\"852\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA.png 852w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-200x300.png 200w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-768x1154.png 768w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-682x1024.png 682w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-180x270.png 180w\" sizes=\"(max-width: 852px) 100vw, 852px\" /></div>\n</div>\n</figure>\n<p id=\"8d86\" class=\"graf graf--p graf-after--figure\">Notice how we can define an array of API operations that are independent of each other and send them in one single request. The batch service handles unwrapping them and executing them in an optimized fashion and returns the response.</p>\n<p id=\"98dd\" class=\"graf graf--p graf-after--p\">The response for a batch operation like this also contains an array of operations with individual response metadata and body for each operation.</p>\n<figure id=\"7087\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*uDlJ11u7s21qA2KqzNxpcg.png\" data-width=\"1729\" data-height=\"3938\" data-action=\"zoom\" data-action-value=\"1*uDlJ11u7s21qA2KqzNxpcg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"33\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-1145\" src=\"https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg.png\" width=\"562\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg.png 562w, https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg-132x300.png 132w, https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg-450x1024.png 450w, https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg-119x270.png 119w\" sizes=\"(max-width: 562px) 100vw, 562px\" /></div>\n</div>\n</figure>\n<p id=\"1693\" class=\"graf graf--p graf-after--figure\"><strong class=\"markup--strong markup--p-strong\">Dependent batch requests support dependencies between two operations.</strong></p>\n<p id=\"e931\" class=\"graf graf--p graf-after--p\">Dependent batch requests contain multiple API operations that are dependent on each other. For example, the output of one operation might be passed as input to another operation in the batch request.</p>\n</div>\n<div class=\"section-inner sectionLayout--outsetColumn\">\n<figure id=\"af7c\" class=\"graf graf--figure graf--layoutOutsetCenter graf-after--p\" data-scroll=\"native\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*U8x5Ena2nueGqgKNSW94gg.png\" data-width=\"1734\" data-height=\"496\" data-action=\"zoom\" data-action-value=\"1*U8x5Ena2nueGqgKNSW94gg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"19\"></canvas><img class=\"alignnone size-full wp-image-1146\" src=\"https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg.png\" width=\"1250\" height=\"357\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg.png 1250w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-300x86.png 300w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-768x219.png 768w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-1024x292.png 1024w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-604x173.png 604w\" sizes=\"(max-width: 1250px) 100vw, 1250px\" /></div>\n</div><figcaption class=\"imageCaption\">Processing a dependent batch request</figcaption></figure>\n</div>\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"5f9c\" class=\"graf graf--p graf-after--figure\">Here is an example of how a dependent batch request looks like:</p>\n<figure id=\"450d\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*hR2zYWAr0b1W51HN4d7_BA.png\" data-width=\"1638\" data-height=\"4143\" data-action=\"zoom\" data-action-value=\"1*hR2zYWAr0b1W51HN4d7_BA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"29\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-1147\" src=\"https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA.png\" width=\"506\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA.png 506w, https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA-119x300.png 119w, https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA-405x1024.png 405w, https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA-107x270.png 107w\" sizes=\"(max-width: 506px) 100vw, 506px\" /></div>\n</div>\n</figure>\n<p id=\"71e2\" class=\"graf graf--p graf-after--figure\">Notice how the dependency is defined. The resource Id generated as part of the first operation (defined by operation Id<strong class=\"markup--strong markup--p-strong\"> </strong><em class=\"markup--em markup--p-em\">— f81d4fae-7dec-11d0-a765–00a0c91e6bf6</em>) is used as an input to the second dependent operation in the path as <em class=\"markup--em markup--p-em\">v1/payments/payment/{bulk_id:f81d4fae-7dec-11d0-a765–00a0c91e6bf6}</em><strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">.</em></strong></p>\n<p id=\"1aca\" class=\"graf graf--p graf-after--p\">The batch service takes care of orchestrating the first request and then using the resource Id generated as the result of that in the second operation. This is exactly how a client consuming 2 dependent APIs sequentially would make the calls as well.</p>\n<p id=\"b715\" class=\"graf graf--p graf-after--p\">Currently this API is in pilot mode and supports the batching of only certain PayPal Checkout API operations being used by some of our large partners and we plan on making it gradually available for widespread use. We see promising performance gains with these integrations.</p>\n<p id=\"608e\" class=\"graf graf--p graf-after--p\">Source : <a href=\"https://medium.com/paypal-engineering/batch-an-api-to-bundle-multiple-paypal-rest-operations-6af6006e002?\">https://medium.com/paypal-engineering/batch-an-api-to-bundle-multiple-paypal-rest-operations-6af6006e002?</a></p>\n</div>\n",
          "slug": "batch-an-api-to-bundle-multiple-paypal-rest-operations",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw.png"
          },
          "link": "https://emolike.net/2018/11/28/batch-an-api-to-bundle-multiple-paypal-rest-operations/",
          "date": "2018-11-28T16:20:44",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Rest"
              },
              {
                "name": "Software Architecture"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExNDA=",
        "node": {
          "id": "cG9zdDoxMTQw",
          "title": "GitKraken Tutorial: Intro to Gitflow",
          "content": "<p><iframe title=\"GitKraken Tutorial: Intro to Gitflow\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/eTOgjQ9o4vQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "gitkraken-tutorial-intro-to-gitflow",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/27/gitkraken-tutorial-intro-to-gitflow/",
          "date": "2018-11-27T00:54:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Git"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMzg=",
        "node": {
          "id": "cG9zdDoxMTM4",
          "title": "Toward Reactive Programming &#8211; Arabic",
          "content": "<p><iframe title=\"Toward Reactive Programming - Arabic\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/5bPtnRP2sl4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "toward-reactive-programming-arabic",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/26/toward-reactive-programming-arabic/",
          "date": "2018-11-26T18:36:59",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMzY=",
        "node": {
          "id": "cG9zdDoxMTM2",
          "title": "Learn Bulma CSS for free",
          "content": "<p><a href=\"https://scrimba.com/g/gbulma\">https://scrimba.com/g/gbulma</a></p>\n",
          "slug": "learn-bulma-css-for-free",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/26/learn-bulma-css-for-free/",
          "date": "2018-11-26T17:14:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Courses"
              },
              {
                "name": "Css"
              },
              {
                "name": "DESIGN"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMzE=",
        "node": {
          "id": "cG9zdDoxMTMx",
          "title": "The new programming language for web apps Imba",
          "content": "<p><a href=\"http://imba.io/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/88d15a15681c293263006215d52ba476903961f6/687474703a2f2f696d62612e696f2f6172742f6c6f676f2e737667\" width=\"80\" data-canonical-src=\"http://imba.io/art/logo.svg\" /></a></p>\n<p><em>if ruby and react had an indentation-based child, what would it look like?</em> Imba is a new programming language for the web that compiles to performant and readable JavaScript. It has language level support for defining, extending, subclassing, instantiating and rendering dom nodes.</p>\n<h2><a href=\"https://github.com/somebee/imba\">https://github.com/somebee/imba</a></h2>\n<p><a href=\"http://imba.io/\">http://imba.io/</a></p>\n<p><a href=\"https://somebee.github.io/dom-reconciler-bench/index.html\">https://somebee.github.io/dom-reconciler-bench/index.html</a></p>\n<p><iframe src=\"https://scrimba.com/c/cGZB2f7.embed?minimal\" height=\"500px\"><span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span></iframe></p>\n",
          "slug": "the-new-programming-language-for-web-apps-imba",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/26/the-new-programming-language-for-web-apps-imba/",
          "date": "2018-11-26T17:10:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              },
              {
                "name": "javascript"
              },
              {
                "name": "programming"
              },
              {
                "name": "React"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMjc=",
        "node": {
          "id": "cG9zdDoxMTI3",
          "title": "async/await &#8211; What You Should Know",
          "content": "<h2>Introduction</h2>\n<p>Sometimes, we use new technologies while we are not aware of the bottlenecks and weird parts of that technology which eventually might trap us in bad situations like deadlocks which may be really hard to track. What exactly happens in Task-based Asynchronous Pattern (TAP), what are the improvements since .NET 4.0, how may we introduce a deadlock and how to prevent it?</p>\n<p>Consider somewhere in your code, you need to do something asynchronous, what are the different ways to do it? Here are some of the patterns:</p>\n<ul>\n<li>Asynchronous Programming Model (APM): This model is also called <code>IAsyncResult</code> pattern where asynchronous operations require <code>Begin</code> and <code>End</code> methods. You are responsible to call <code>Begin</code> method of that operation and somewhere else pool for the completion/cancellation status and finally call <code>End</code>method to retrieve the actual result of that operation. It is possible to define a callback function so when the operation is done, your callback function is called or you can block your execution until the result is ready. This pattern is not recommended in the new development, please keep it in mind.</li>\n<li>Event-based Asynchronous Pattern (EAP): This type of async programming was introduced in .NET 2.0 and is not recommended in the new development. In this model, you need to have event handler delegate types and <code>EventArg</code>-derived types and in some scenarios, a worker thread to handle the async job and when it is finished, signal the parent about completion of the job.</li>\n<li>TAP model: We will discuss it in this article.</li>\n</ul>\n<p>In the above patterns, you may easily end-up with lots of worker threads that are consuming your resources or in the worse case, you may face a hard time to manage sequence of events and execution process.</p>\n<p>But, what about a way to somehow code synchronous but execute it asynchronous? Just leave the hard part to the compiler to make it happen for us?</p>\n<h2>async/await</h2>\n<h3>What Does async/await Exactly Do?</h3>\n<p>Whenever you declare or see a function as <code>async</code>, it means that this function is wait able and you can call it asynchronously using <code>await</code><strong> </strong>keyword. As soon as compiler sees the <code>await</code> keyword, it does the magic for us and immediately returns to the calling function without the need to wait for the job to be completed and the execution would be able to continue its job.</p>\n<p>It sounds great, isn&#8217;t it?</p>\n<p><img class=\"alignnone size-full wp-image-1128\" src=\"https://emolike.net/wp-content/uploads/2018/11/async1.png\" width=\"785\" height=\"605\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/async1.png 785w, https://emolike.net/wp-content/uploads/2018/11/async1-300x231.png 300w, https://emolike.net/wp-content/uploads/2018/11/async1-768x592.png 768w, https://emolike.net/wp-content/uploads/2018/11/async1-350x270.png 350w\" sizes=\"(max-width: 785px) 100vw, 785px\" /></p>\n<p>Here is the explanation:</p>\n<ol>\n<li>The <code>doTheJob()</code> is called (this is our initial step).</li>\n<li>The function executes synchronously until it reaches the <code>await</code> keyword in <code>doSomethingASync()</code> where the asynchronous task is returned.</li>\n<li>A new <code>Task</code> is created on-the-fly and starts to execute asynchronously and the continuation is scheduled at this point to run the remainder of the code in <code>doTheJob()</code>.</li>\n<li>The execution continues in the &#8220;anounymous-task&#8221; function until it reaches to “<code>return</code>” and continues in the &#8220;<code>doTheJob()</code>&#8221; synchronously up to “<code>return</code>”.</li>\n<li>The execution of this function is done too and the <code>Task</code> which is returned by <code>doTheJob()</code> is completed and any possible continuations registered with it may now be scheduled.</li>\n</ol>\n<p>It seems a little weird but it is actually simple to understand. as you may have already noticed, although your code seems to be very similar to synchronous programming, but in fact it is going to be executed in an <code>async</code>way. You can simply await for a &#8220;time consuming&#8221; task and leave it there to be completed and schedule your execution once it is done!</p>\n<h3>What is the Benefit?</h3>\n<ul>\n<li>Your synchronous style of coding would be executed asynchronously , that&#8217;s the magic (of course with the help of <code>async</code>/<code>await</code> and <code>Task.Run</code> in this article for example)</li>\n<li>You won&#8217;t be worried anymore about lots of event pooling/checking, thread synchronizations and tough situations you experienced before just to handle multi-threaded asynchronous approaches.<br />\nOf course, you still have to understand asynchronous programming and how to synchronous any shared state, which means there&#8217;s still the potential for race conditions, deadlocks, starvation, etc. as you may find in this article. (See the “What is the <code>ConfigureAwait()</code> for”)</li>\n<li>Your code is more readable, understandable and thus debug able.</li>\n</ul>\n<h3>What is the Difference with ContinueWith() in .NET 4.0?</h3>\n<p>Actually, the <code>async</code>/<code>await</code> is a replacement of their successor &#8220;<code>ContinueWith()</code>&#8221; which was introduced in NET 4.0. Each approach has its pros and cons.</p>\n<ul>\n<li><code>ContinueWith</code> is ignorance of sync context</li>\n<li><code>ContinueWith</code> pushes you to a new thread, even if the parent is already complete</li>\n<li>Access <code>.Result</code> on a faulted <code>Task</code> inside of <code>ContinueWith</code> will re-throw</li>\n<li><code>Async</code>/<code>await</code> will try to keep you on the same thread if they can</li>\n</ul>\n<p>So upgrade to .NET 4.5 and use <code>async</code> and <code>await</code>…</p>\n<h3>What is the ConfigureAwait() for?</h3>\n<p>It was introduced since .NET 4.5 because of some deadlock situation which may happen in accordance with a bad code structure. Consider the following diagram:</p>\n<p><img class=\"alignnone size-full wp-image-1129\" src=\"https://emolike.net/wp-content/uploads/2018/11/async2.png\" width=\"648\" height=\"542\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/async2.png 648w, https://emolike.net/wp-content/uploads/2018/11/async2-300x251.png 300w, https://emolike.net/wp-content/uploads/2018/11/async2-323x270.png 323w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></p>\n<p>What happened? Did you get it?</p>\n<ol>\n<li>When you awaitened in <code>Fn2()</code>, it actually moved the <code>f()</code> execution into another context with its thread pool and the rest of <code>Fn2()</code> was wrapped to be executed after the <code>f()</code> call is done.</li>\n<li>The execution control returned to <code>Fn1()</code> and continued until it reached out to a <strong>Blocking</strong> wait. Here is the point. (<em>You actually blocked &#8220;Context a&#8221; execution process for another async operation to be completed)</em></li>\n<li>As soon as <code>async</code> operation in &#8220;<code>Context b</code>&#8221; is completed, it tries to get access to &#8220;<code>Context a</code>&#8221; just to inform it that &#8220;execution is done, let&#8217;s continue with the wrapped part&#8221;.</li>\n<li>But, &#8220;<code>Context a</code>&#8221; is blocked before!</li>\n<li>Deadlock!</li>\n</ol>\n<p>There are two approaches for that:</p>\n<ul>\n<li>Never use any kind of blocking waits and instead use <code>WhenAll</code> or <code>When</code><strong> </strong>functions to wait for a task to be completed and continue after completion.</li>\n<li>Allow <u>wrapped content</u> to be executed in &#8220;<code>Context b</code>&#8220;.</li>\n</ul>\n<p>For the second approach, you need to somehow configure the <code>await</code><strong> </strong>keyword to be aware of that! So you need to call <code>ConfigureAwait(false)</code> so the compiler would know that the wrapped content must be executed in the <code>async</code> context and there is no need to return back to calling context just to continue wrapped content!</p>\n<p>continue reading in Codeproject :</p>\n<p><a href=\"https://www.codeproject.com/Articles/1054993/async-await-What-You-Should-Know-Updated\">https://www.codeproject.com/Articles/1054993/async-await-What-You-Should-Know-Updated</a></p>\n",
          "slug": "async-await-what-you-should-know",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/async1.png"
          },
          "link": "https://emolike.net/2018/11/26/async-await-what-you-should-know/",
          "date": "2018-11-26T14:58:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMTk=",
        "node": {
          "id": "cG9zdDoxMTE5",
          "title": "Stackify Prefix",
          "content": "<h2>What is Prefix?</h2>\n<p><a href=\"https://stackify.com/prefix/\" target=\"_blank\" rel=\"noopener\">Prefix</a> is free lightweight profiler for .NET &amp; Java developers. It runs on their workstation and gives them details about what their code is doing while creating or testing their apps. I always described Prefix as the world&#8217;s best log viewer for developers. By ASP.NET web request you can see all your log statements plus many other details. For example, it can show you how long a request takes, what SQL queries were executed, HTTP calls, exceptions and much more.</p>\n<p><img class=\"alignnone size-full wp-image-1125\" src=\"https://emolike.net/wp-content/uploads/2018/11/prefix-trace-features-detail.png\" width=\"1280\" height=\"730\" alt=\"Prefix Trace Return Features Highlighted\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/prefix-trace-features-detail.png 1280w, https://emolike.net/wp-content/uploads/2018/11/prefix-trace-features-detail-300x171.png 300w, https://emolike.net/wp-content/uploads/2018/11/prefix-trace-features-detail-768x438.png 768w, https://emolike.net/wp-content/uploads/2018/11/prefix-trace-features-detail-1024x584.png 1024w, https://emolike.net/wp-content/uploads/2018/11/prefix-trace-features-detail-473x270.png 473w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p><iframe title=\"How to install prefix for .NET Complete Walkthrough\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/0EKQfdgdP0Y?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>Download Link <a href=\"https://stackify.com/prefix-download/\">https://stackify.com/prefix-download/</a></p>\n<p><a href=\"https://docs.stackify.com/docs/prefix-configure-iis-express\">https://docs.stackify.com/docs/prefix-configure-iis-express</a></p>\n<p>&nbsp;</p>\n<h2 id=\"enabling-the-stackify-http-module\">Enabling the Stackify HTTP Module</h2>\n<p><strong>Option 1:</strong> Edit your csproj file to force IIS Express to use the global applicationHost.config which will already have the Stackify module registered in it.</p>\n<div class=\"code-toolbar\">\n<pre class=\" language-xml\"><code class=\" language-xml\"></code></pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;UseGlobalApplicationHostFile&gt;True&lt;/UseGlobalApplicationHostFile&gt;</pre>\n</div>\n<p><strong>Option 2:</strong> Add our HTTP module to the applicationHost.config for your solution/project located in “.vsconfigapplicationHost.config” as shown below. Add it under system.webServer modules, not to be confused with globalModules which is different.</p>\n<p><strong>Option 3:</strong> Add our HTTP module as a reference to your project and configure it on your web.config file. It is safe to deploy the module with your app. It doesn&#8217;t do anything on servers where Stackify Prefix or APM is not present. Be sure to include the part of the config in case your app gets used on your PC or a server which has the module installed in IIS. Install our package via <a href=\"https://www.nuget.org/packages/StackifyHttpModule/\">nuget</a>:</p>\n<div class=\"code-toolbar\">\n<div class=\"toolbar\">\n<div class=\"toolbar-item\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">PM&gt;Install-Package StackifyHttpModule</pre>\n<p>The package will add the module as a reference to your project. Make sure your web.config is modified to include our module. It should look something like what is shown below:</p>\n</div>\n</div>\n</div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;system.webServer&gt;\r\n  &lt;modules&gt;\r\n    &lt;!-- Other modules may exist before or after the Stackify Prefix modules. Do not remove any others. --&gt;\r\n    &lt;remove name=\"StackifyModule_Net40\" /&gt;\r\n    &lt;add name=\"StackifyModule_Net40\" type=\"StackifyHttpTracer.StackifyHttpModule,StackifyHttpTracer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=93c44ce23f2048dd\" preCondition=\"managedHandler,runtimeVersionv4.0\" /&gt;\r\n  &lt;/modules&gt;\r\n&lt;/system.webServer&gt;</pre>\n<p>&nbsp;</p>\n",
          "slug": "stackify-prefix",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/prefix-trace-features-detail.png"
          },
          "link": "https://emolike.net/2018/11/26/stackify-prefix/",
          "date": "2018-11-26T02:22:46",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Technology"
              },
              {
                "name": "testing"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMTM=",
        "node": {
          "id": "cG9zdDoxMTEz",
          "title": "Dotnet-Boxed Very good asp.net template",
          "content": "<div class=\"\">\n<div class=\"f4\"><span class=\"text-gray-dark mr-2\">.NET project templates with batteries included, providing the minimum amount of code required to get you going faster.</span></div>\n<div><a href=\"https://github.com/Dotnet-Boxed/Templates\">https://github.com/Dotnet-Boxed/Templates</a></div>\n<div><img class=\"alignnone size-full wp-image-1114\" src=\"https://emolike.net/wp-content/uploads/2018/11/Banner.png\" width=\"1140\" height=\"235\" alt=\".NET Boxed Banner\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/Banner.png 1140w, https://emolike.net/wp-content/uploads/2018/11/Banner-300x62.png 300w, https://emolike.net/wp-content/uploads/2018/11/Banner-768x158.png 768w, https://emolike.net/wp-content/uploads/2018/11/Banner-1024x211.png 1024w, https://emolike.net/wp-content/uploads/2018/11/Banner-604x125.png 604w\" sizes=\"(max-width: 1140px) 100vw, 1140px\" /></div>\n</div>\n<p><img class=\"alignnone size-full wp-image-1115\" src=\"https://emolike.net/wp-content/uploads/2018/11/API-Preview.png\" width=\"1280\" height=\"720\" alt=\"ASP.NET Core API Boxed Preview Image\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/API-Preview.png 1280w, https://emolike.net/wp-content/uploads/2018/11/API-Preview-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/11/API-Preview-768x432.png 768w, https://emolike.net/wp-content/uploads/2018/11/API-Preview-1024x576.png 1024w, https://emolike.net/wp-content/uploads/2018/11/API-Preview-480x270.png 480w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<h2><a id=\"user-content-technology-map\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#technology-map\" aria-hidden=\"true\"></a>Technology Map</h2>\n<p>The ASP.NET Core API project template contains the following features:</p>\n<p><img class=\"alignnone size-full wp-image-1116\" src=\"https://emolike.net/wp-content/uploads/2018/11/API-Technology-Map.png\" width=\"800\" height=\"300\" alt=\"ASP.NET Core API Boxed Technology Map\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/API-Technology-Map.png 800w, https://emolike.net/wp-content/uploads/2018/11/API-Technology-Map-300x113.png 300w, https://emolike.net/wp-content/uploads/2018/11/API-Technology-Map-768x288.png 768w, https://emolike.net/wp-content/uploads/2018/11/API-Technology-Map-604x227.png 604w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<h2><a id=\"user-content-optional-feature-selection\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#optional-feature-selection\" aria-hidden=\"true\"></a>Optional Feature Selection</h2>\n<p>The ASP.NET Core API project template uses <code>dotnet new</code> to enable you to turn features of the project template on or off. Literally everything can be turned on or off with the click of a button for a truly personalized project. Find out more about <code>dotnet new</code> <a href=\"http://rehansaeed.com/custom-project-templates-using-dotnet-new/\" rel=\"nofollow\">here</a>.</p>\n<h4><a id=\"user-content-api\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#api\" aria-hidden=\"true\"></a>API</h4>\n<ul>\n<li><strong>Swagger</strong> (Default=On) &#8211; Swagger is a format for describing the endpoints in your API and letting you try out your site using its user interface.</li>\n<li><strong>Versioning</strong> (Default=On) &#8211; Enable API versioning to version API endpoints.</li>\n<li><strong>HealthCheck</strong> (Default=On) &#8211; A health-check endpoint that returns the status of this API and its dependencies, giving an indication of its health.</li>\n<li><strong>XmlFormatter</strong> &#8211; Choose whether to use the XML input/output formatter and which serializer to use.\n<ul>\n<li><strong>DataContractSerializer</strong> &#8211; The default XML serializer you should use. Requires the use of [DataContract] and [DataMember] attributes.</li>\n<li><strong>XmlSerializer</strong> &#8211; The alternative XML serializer which is slower but gives more control. Uses the [XmlRoot], [XmlElement] and [XmlAttribute] attributes.</li>\n<li><strong>None</strong> (Default) &#8211; No XML formatter.</li>\n</ul>\n</li>\n</ul>\n<h4><a id=\"user-content-project\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#project\" aria-hidden=\"true\"></a>Project</h4>\n<ul>\n<li><strong>Title</strong> &#8211; The name of the project which determines the assembly product name. If the Swagger feature is enabled, shows the title on the Swagger UI.</li>\n<li><strong>Description</strong> &#8211; A description of the project which determines the assembly description. If the Swagger feature is enabled, shows the description on the Swagger UI.</li>\n<li><strong>Author</strong> &#8211; The name of the author of the project which determines the assembly author and copyright information.</li>\n<li><strong>TreatWarningsAsErrors</strong> &#8211; Treat warnings as errors.</li>\n<li><strong>HttpPort</strong> &#8211; Port number to use for the HTTP endpoint in launchSettings.json.</li>\n<li><strong>HttpsPort</strong> &#8211; Port number to use for the HTTPS endpoint in launchSettings.json.</li>\n</ul>\n<h4><a id=\"user-content-performance\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#performance\" aria-hidden=\"true\"></a>Performance</h4>\n<ul>\n<li><strong>Response Caching</strong> (Default=On) &#8211; Response caching is allows the use of the <code>[ResponseCache]</code> attribute on your action methods. Cache settings (cache profiles) are stored in the configuration file and referred to by name.</li>\n<li><strong>Response Compression</strong> (Default=On) &#8211; Enables dynamic GZIP response compression of HTTP responses. Not enabled for HTTPS to avoid the BREACH security vulnerability.</li>\n</ul>\n<h4><a id=\"user-content-security\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#security\" aria-hidden=\"true\"></a>Security</h4>\n<ul>\n<li><strong>HttpsEverywhere</strong> (Default=On) &#8211; Use the HTTPS scheme and TLS security across the entire site, redirects HTTP to HTTPS and adds a Strict Transport Security (HSTS) HTTP header with preloading enabled.</li>\n<li><strong>HstsPreload</strong> (Default=Off) &#8211; Enable Strict Transport Security (HSTS) HTTP header with preloading.</li>\n<li><strong>CORS</strong> (Default=On) &#8211; Browser security prevents a web page from making AJAX requests to another domain. This restriction is called the same-origin policy, and prevents a malicious site from reading sensitive data from another site. CORS is a W3C standard that allows a server to relax the same-origin policy. Using CORS, a server can explicitly allow some cross-origin requests while rejecting others.</li>\n<li><strong>HostFiltering</strong> (Default=On) &#8211; A white-list of host names allowed by the Kestrel web server e.g. example.com. You don&#8217;t need this if you are using a properly configured reverse proxy.</li>\n<li><strong>SecurityTxt</strong> &#8211; Adds a security.txt file to allow people to contact you if they find a security vulnerability.</li>\n</ul>\n<h4><a id=\"user-content-web-server\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#web-server\" aria-hidden=\"true\"></a>Web Server</h4>\n<ul>\n<li><strong>ForwardedHeaders</strong> (Default=On) &#8211; If you use a load balancer, updates the request host and scheme using the X-Forwarded-Host and X-Forwarded-Proto HTTP headers.</li>\n<li><strong>ReverseProxyWebServer</strong> &#8211; The internet facing reverse proxy web server you want to use in front of the primary web server to host the site.\n<ul>\n<li><strong>None</strong> &#8211; Use Kestrel directly instead of a reverse proxy.</li>\n<li><strong>IIS</strong> &#8211; A flexible, secure and manageable Web server for hosting anything on the Web using Windows Server. Select this option if you are deploying your site to Azure web apps.</li>\n<li><strong>NGINX</strong> &#8211; A free, open-source, cross-platform high-performance HTTP server and reverse proxy.</li>\n<li><strong>Both</strong> (Default) &#8211; Support both reverse proxy web servers.</li>\n</ul>\n</li>\n</ul>\n<h4><a id=\"user-content-analytics\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#analytics\" aria-hidden=\"true\"></a>Analytics</h4>\n<ul>\n<li><strong>CorrelationId</strong> (Default=On) &#8211; Correlate requests between clients and this API. Pass a GUID in the X-Correlation-ID HTTP header to set the HttpContext.TraceIdentifier. The header is also reflected back in a response.</li>\n<li><strong>Analytics</strong> &#8211; Monitor internal information about how your application is running, as well as external user information.\n<ul>\n<li><strong>Application Insights</strong> &#8211; Monitor internal information about how your application is running, as well as external user information using the Microsoft Azure cloud.</li>\n<li><strong>None</strong> (Default) &#8211; Not using any analytics.</li>\n</ul>\n</li>\n<li><strong>ApplicationInsightsKey</strong> &#8211; Your Application Insights instrumentation key e.g. 11111111-2222-3333-4444-555555555555.</li>\n</ul>\n<h4><a id=\"user-content-cloud\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#cloud\" aria-hidden=\"true\"></a>Cloud</h4>\n<ul>\n<li><strong>CloudProvider</strong> &#8211; Select which cloud provider you are using if any, to add cloud specific features.\n<ul>\n<li><strong>Azure</strong> &#8211; The Microsoft Azure cloud. Adds logging features that let you see logs in the Azure portal.</li>\n<li><strong>None</strong> (Default) &#8211; No cloud provider is being used.</li>\n</ul>\n</li>\n</ul>\n<h4><a id=\"user-content-other\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#other\" aria-hidden=\"true\"></a>Other</h4>\n<ul>\n<li><strong>robots.txt</strong> (Default=On) &#8211; Adds a robots.txt file to tell search engines not to index this site.</li>\n<li><strong>humans.txt</strong> (Default=On) &#8211; Adds a humans.txt file where you can tell the world who wrote the application. This file is a good place to thank your developers.</li>\n</ul>\n<h2><a id=\"user-content-always-on-features\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#always-on-features\" aria-hidden=\"true\"></a>Always On Features</h2>\n<h4><a id=\"user-content-api-1\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#api-1\" aria-hidden=\"true\"></a>API</h4>\n<ul>\n<li><strong>Example Controller</strong> &#8211; The example <code>CarController</code> contains the following actions:\n<ul>\n<li>GET &#8211; Returns single car.</li>\n<li>GET &#8211; Implements paging to return a single page worth of cars, where the page size is configurable.</li>\n<li>POST &#8211; Add a new car.</li>\n<li>PUT &#8211; Update an existing car.</li>\n<li>PATCH &#8211; Update one or more properties of an existing car.</li>\n<li>DELETE a single car.</li>\n</ul>\n</li>\n<li><strong>Automatically Return Not Acceptable</strong> &#8211; Returns a 406 Not Acceptable if the MIME type in the Accept HTTP header is not valid.</li>\n</ul>\n<h4><a id=\"user-content-performance-1\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#performance-1\" aria-hidden=\"true\"></a>Performance</h4>\n<ul>\n<li><strong>Caching</strong> &#8211; Both in-memory and distributed cache are configured. You do need to specify where the distributed cache stores its data.</li>\n<li><strong>Caching Static Files</strong> &#8211; Static files are cached by default using the <code>Cache-Control</code> HTTP header.</li>\n<li><strong>304 Not Modified</strong> &#8211; Last-Modified and If-Modified-Since HTTP headers are used to return 304 Not Modified if a resource has not changed.</li>\n<li><strong>AddMvcCore</strong> &#8211; Uses only the features and packages from ASP.NET Core required for an API. Uses ControllerBase instead of Controller.</li>\n<li><strong>Named Routes</strong> &#8211; Uses named attribute routes for best performance and maintainability. All route names are specified as constants.</li>\n</ul>\n<h4><a id=\"user-content-security-1\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#security-1\" aria-hidden=\"true\"></a>Security</h4>\n<ul>\n<li><strong>Kestrel Limits</strong> &#8211; Allow configuring Kestrel security limits such as maximum request size via configuration and set sensible stricter defaults.</li>\n<li><strong>User Secrets</strong> &#8211; This feature is turned on when the site is in development mode to allow storing of secrets on your development machine.</li>\n<li><strong>Remove Server HTTP Header</strong> &#8211; Removes the Server HTTP header for security and performance.</li>\n<li><strong>Translates Models to ViewModels</strong> &#8211; Using your models which usually come from a database directly in your controllers can result in a mass assignment attack. View models with a translation layer are used to avoid this.</li>\n</ul>\n<h4><a id=\"user-content-logging\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#logging\" aria-hidden=\"true\"></a>Logging</h4>\n<ul>\n<li><strong>Serilog</strong> &#8211; Has <a href=\"https://serilog.net/\" rel=\"nofollow\">Serilog</a> built in for an excellent structured logging experience.</li>\n</ul>\n<h4><a id=\"user-content-debugging\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#debugging\" aria-hidden=\"true\"></a>Debugging</h4>\n<ul>\n<li><strong>Developer Exception Page</strong> &#8211; Shows detailed exception information in the browser. Turned on in development mode only for security.</li>\n</ul>\n<h4><a id=\"user-content-patterns--practices\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#patterns--practices\" aria-hidden=\"true\"></a>Patterns &amp; Practices</h4>\n<ul>\n<li><strong>Command Pattern</strong> &#8211; Writing all your code in your controllers can mean you end up with huge classes. The command pattern splits up each controller action into its own class.</li>\n<li><strong>Configure CacheProfile in JSON</strong> &#8211; All cache profiles can be configured from a configuration file.</li>\n</ul>\n<h2><a id=\"user-content-how-can-i-get-it\" class=\"anchor\" href=\"https://github.com/Dotnet-Boxed/Templates/blob/master/Docs/API.md#how-can-i-get-it\" aria-hidden=\"true\"></a>How can I get it?</h2>\n<ol>\n<li>Install the latest <a href=\"https://dot.net/\" rel=\"nofollow\">.NET Core SDK</a>.</li>\n<li>Run <code>dotnet new --install \"Boxed.Templates::*\"</code> to install the project template.</li>\n<li>Run <code>dotnet new api --help</code> to see how to select the feature of the project.</li>\n<li>Run <code>dotnet new api --name \"MyTemplate\"</code> along with any other custom options to create a project from the template.</li>\n</ol>\n",
          "slug": "dotnet-boxed-very-good-asp-net-template",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/Banner.png"
          },
          "link": "https://emolike.net/2018/11/26/dotnet-boxed-very-good-asp-net-template/",
          "date": "2018-11-26T00:42:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMTE=",
        "node": {
          "id": "cG9zdDoxMTEx",
          "title": "What is the Difference Between a DTO and a POCO?",
          "content": "<p>First off, I’m not the authority on DTOs, POCOs, object oriented architecture, or really anything now that I stop to think about it.  However, I do use a DTO / POCO centric architecture whenever I can and there’s at least one former client of mine who is now saddled with an entity class named DevicePoco (there was already a Device entity object that followed the Active Record pattern, otherwise I would never have named an object XXXPoco). When my client saw the new object with the crazy name in their BAL, their first reaction was of course to ask “What the heck is a POCO?”  Not too long ago I was at a Visual Studio User Group meeting where the question of POCOs and how they are different from DTOs came up.  The presenter, who quite honestly is a much better developer than me, stated confidently that POCOs and DTOs are the same thing.  I immediately clamped both hands over my mouth to keep from screaming “They are not!”.  So, there seems to be a lack of good information in the .Net community about what these objects are.  I’m going to try and clarify the issue.</p>\n<p><strong><span style=\"font-size: medium;\">What is a Data Transfer Object (DTO)?</span></strong></p>\n<p>Normally this is where I would say Wikipedia defines a DTO as&#8230;  Unfortunately, the current Wikipedia definition is pretty awful except for the line:</p>\n<p><span style=\"color: #000080;\"><em>“The difference between Data Transfer Objects and </em></span><a href=\"http://en.wikipedia.org/wiki/Business_object_%28computer_science%29\"><span style=\"color: #000080;\"><em>Business Objects</em></span></a><span style=\"color: #000080;\"><em> or </em></span><a href=\"http://en.wikipedia.org/wiki/Data_Access_Object\"><span style=\"color: #000080;\"><em>Data Access Objects</em></span></a><span style=\"color: #000080;\"><em> is that a DTO does not have any behaviour except for storage and retrieval of its own data (</em></span><a href=\"http://en.wikipedia.org/wiki/Method_%28computer_science%29\"><span style=\"color: #000080;\"><em>accessors</em></span></a><span style=\"color: #000080;\"><em> and </em></span><a href=\"http://en.wikipedia.org/wiki/Mutator_method\"><span style=\"color: #000080;\"><em>mutators</em></span></a><span style=\"color: #000080;\"><em>).”</em></span></p>\n<p>That’s the key concept.  A DTO stores data.  It has no methods (behaviors) other than accessors and mutators which are just used to get and set data.  Why make an object that simple? Because they make a great, lightweight, strongly typed data container when you want to move data from your DAL to your BAL or between the umpteen layers in your n-tier architecture.  Below is the code for the PersonDTO that I’ve been using in many of my recent posts. You’ll notice that it really does nothing except store data.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public class PersonDTO : DTOBase\r\n\r\n{\r\n\r\n    public Guid PersonGuid { get;set; }\r\n\r\n    public int PersonId { get; set; }\r\n\r\n    public DateTime UtcCreated { get; set; }\r\n\r\n    public DateTime UtcModified { get; set; }\r\n\r\n    public string Password { get; set; }\r\n\r\n    public string Name { get; set; }\r\n\r\n    public string Nickname { get; set; }\r\n\r\n    public string PhoneMobile { get; set; }\r\n\r\n    public string PhoneHome { get; set; }\r\n\r\n    public string Email { get; set; }\r\n\r\n    public string ImAddress { get; set; }\r\n\r\n    public int ImType { get; set; }\r\n\r\n    public int TimeZoneId { get; set; }\r\n\r\n    public int LanguageId { get; set; }\r\n\r\n    public string City { get; set; }\r\n\r\n    public string State { get; set; }\r\n\r\n    public int ZipCode { get; set; }\r\n\r\n \r\n\r\n \r\n\r\n    // Constructor\r\n\r\n    // No parameters and all value types are intialized to the\r\n\r\n    // null values defined in CommonBase.\r\n\r\n    public PersonDTO()\r\n\r\n    {        \r\n\r\n        PersonGuid = Guid_NullValue;\r\n\r\n        PersonId = Int_NullValue;\r\n\r\n        UtcCreated = DateTime_NullValue;\r\n\r\n        UtcModified = DateTime_NullValue; \r\n\r\n        Name = String_NullValue;\r\n\r\n        Nickname = String_NullValue;\r\n\r\n        PhoneMobile = String_NullValue;\r\n\r\n        PhoneHome = String_NullValue;\r\n\r\n        Email = String_NullValue;\r\n\r\n        ImAddress = String_NullValue;\r\n\r\n        ImType = Int_NullValue;\r\n\r\n        TimeZoneId = Int_NullValue;\r\n\r\n        LanguageId = Int_NullValue;\r\n\r\n        City = String_NullValue;\r\n\r\n        State = String_NullValue;\r\n\r\n        ZipCode = Int_NullValue;\r\n\r\n        IsNew = true;\r\n\r\n    }\r\n\r\n}</pre>\n<p>So, to sum up, a DTO is just a collection of properties (or data members).  It has no validation, no business logic, no logic of any kind.  It’s just a simple, lightweight data container used for moving data between layers.</p>\n<p><strong><span style=\"font-size: medium;\">So What’s a POCO?</span></strong></p>\n<p>A POCO is not a DTO.  POCO stands for Plain Old CLR Object, or Plain Old C# Object.  It’s basically the .Net version of a POJO, Plain Old Java Object.  A POCO is your Business Object.  It has data, validation, and any other business logic that you want to put in there.  But there’s one thing a POCO does not have, and that’s what makes it a POCO.  POCOs do not have persistence methods.  If you have a POCO of type Person, you can’t have a Person.GetPersonById() method, or a Person.Save() method.  POCOs contain only data and domain logic, no persistence logic of any kind.  The term you’ll hear for this concept is Persistence Ignorance (PI).  POCOs are Persistence Ignorant.</p>\n<p>Below is the code for my BAL.Person class which is a POCO.  You’ll notice that it contains no persistence logic of any kind, just data and validation methods.  You’ll also notice that I don’t recreate a bunch of accessors and mutators for my person data.  That would clutter up my Person class, plus they would be redundant since they’ve already been defined in PersonDTO.  Instead I just have a single property named Data that is of type PersonDTO.  This approach makes getting and saving a person really easy.  When getting a person, I just get a PersonDTO from my DAL and then set person.Data = personDTO.  When saving, my save methods all take a PersonDTO as a parameter so I can just use my person.Data property for that as well.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public class Person : BALBase\r\n\r\n{\r\n\r\n        // Data\r\n\r\n        // This property exists for all BAL objects, and it is\r\n\r\n        // set to the DTO type for this entity.  This is the\r\n\r\n        // mechanism that we use to implement \"has a\" inheritance\r\n\r\n        // instead of \"is a\" inheritance.\r\n\r\n        public PersonDTO Data { get; set; }\r\n\r\n \r\n\r\n \r\n\r\n        // Person - default constructor\r\n\r\n        public Person() {this.Data = new PersonDTO();}\r\n\r\n\r\n        // Person - takes a DTO\r\n\r\n        public Person(PersonDTO dto) {this.Data = dto;}\r\n\r\n \r\n\r\n \r\n\r\n\r\n          // Validate\r\n        public override List&lt;ValidationError&gt; Validate()\r\n\r\n        {\r\n\r\n            // Call all validation functions\r\n\r\n            Val_Name();\r\n\r\n            Val_Email();\r\n\r\n            Val_Password();\r\n\r\n            Val_TimeZone();\r\n\r\n            Val_City();\r\n\r\n            Val_State();\r\n\r\n            Val_ZipCode();\r\n\r\n            Val_ImType();\r\n\r\n \r\n\r\n            // If the ValidationErrors list is empty then\r\n\r\n            // we passed validation.\r\n\r\n            return this.ValidationErrors;\r\n\r\n        }\r\n\r\n \r\n\r\n \r\n\r\n        // Validation Methods:\r\n\r\n        // There are only 2 requirements on validation methods.\r\n\r\n        //  - They must handle adding a Validation Error to the\r\n\r\n        //    ValidationErrors list if they find an error.\r\n\r\n        //  - You must manually add a call to all validation methods\r\n\r\n        //    to the Validate() function.\r\n\r\n        //  When creating a new ValidationError object, remember\r\n\r\n        //  that the first parameter is the exact name of the field\r\n\r\n        //  that has the bad value, and the error message should\r\n\r\n        //  not contain the field name, but instead the &lt;FieldName&gt;\r\n\r\n        //  tag, which will be replaced by the UI or consuming app.\r\n\r\n \r\n\r\n        // Val_Name\r\n\r\n        public bool Val_Name()\r\n\r\n        {\r\n\r\n            // Name required\r\n\r\n            if (this.Data.Name == DTOBase.String_NullValue)\r\n\r\n            {\r\n\r\n                this.ValidationErrors.Add(new ValidationError(\"Person.Name\", \"&lt;FieldName&gt; is required\"));\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n            else\r\n\r\n            {\r\n\r\n                return true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n \r\n\r\n        // You get the idea.  I’m leaving out the rest of the validation code\r\n\r\n        // so you don’t go blind reading the same lines over and over.\r\n\r\n}</pre>\n<p>&nbsp;</p>\n<p>No persistence logic there, just data and validation logic.  So you’re probably thinking, if the persistence logic doesn’t go in my entity class, then where does it go?  The answer is, another class.  POCOs must be hydrated by some other class that encapsulates the persistence logic for that entity, like a repository or a data controller.  I typically use a repository.  For this example I used a PersonRepository class that encapsulates the logic for getting a new person object, getting a personDTO from the DAL, and then setting person.Data = personDTO. Same with the save.  My PersonRepository class has a SavePerson() method that takes a full person object then passes its person.Data value to the DAL to be persisted.  Code for getting and setting a person entity in my UI looks like this:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">hydrate from db:\r\n\r\nPerson person = PersonRepository.GetPersonByEmail(email);\r\n\r\n \r\n\r\nsave to db:\r\n\r\nPersonRepository.SavePerson(ref person, true);</pre>\n<p><span style=\"font-size: medium;\"><strong>Why Would I Ever Want to Do This?</strong></span></p>\n<p>The next question you might ask is What’s the point?  Why should I use these patterns instead of just using DataTables and putting all my persistence logic in my entity objects?  That answer is a little tougher.  I prefer a POCO / Repository / DTO architecture, but it’s not the one right way to design an application.  I think the benefits are that it is a very clean and easy to maintain architecture.  It provides separation of business logic and persistence logic, which is more in line with the Single Responsibility Principle.  Using POCOs with DTOs and a well designed DAL is just about the best performing architecture you can build, see my series on <a href=\"http://rlacovara.blogspot.com/2009/02/high-performance-data-access-layer.html\">High Performance DAL Architecture</a>. But, I think most .Net developers will be driven to use POCOs and repositories (but not DTOs) by ORMs.  Entity Framework, nHibernate, and a lot of the ORMs out there require or assume a POCO type architecture. In fact, Entity Framework has introduced an IPOCO interface which I’m having trouble finding documentation on but it sounds like something good. Also, if you want to get into Domain Driven Design, you’ve got to embrace the POCO.  In his excellent book Applying Domain-Driven Design and Patterns, Jimmy Nilsson even has a section titled “POCO as a Lifestyle”.</p>\n<p>So, in conclusion, learn to love the POCO, and make sure you don’t spread any misinformation about it being the same thing as a DTO.  DTOs are simple data containers used for moving data between the layers of an application.  POCOs are full fledged business objects with the one requirement that they are Persistence Ignorant (no get or save methods).  Lastly, if you haven’t checked out Jimmy Nilsson’s book yet, pick it up from your local university stacks.  It has examples in C# and it’s a great read.</p>\n<p>Source : <a href=\"https://rlacovara.blogspot.com/2009/03/what-is-difference-between-dto-and-poco.html\">https://rlacovara.blogspot.com/2009/03/what-is-difference-between-dto-and-poco.html</a></p>\n<p>&nbsp;</p>\n",
          "slug": "what-is-the-difference-between-a-dto-and-a-poco",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/25/what-is-the-difference-between-a-dto-and-a-poco/",
          "date": "2018-11-25T23:24:54",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMDg=",
        "node": {
          "id": "cG9zdDoxMTA4",
          "title": "Play with Docker",
          "content": "<p><img class=\"alignnone size-full wp-image-1109\" src=\"https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٢٥٢٢٥٧٢٦.png\" alt=\"\" width=\"874\" height=\"647\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٢٥٢٢٥٧٢٦.png 874w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٢٥٢٢٥٧٢٦-300x222.png 300w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٢٥٢٢٥٧٢٦-768x569.png 768w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٢٥٢٢٥٧٢٦-365x270.png 365w\" sizes=\"(max-width: 874px) 100vw, 874px\" /></p>\n<p><a href=\"https://labs.play-with-docker.com/\">https://labs.play-with-docker.com/</a></p>\n<p>&nbsp;</p>\n",
          "slug": "play-with-docker",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/25/play-with-docker/",
          "date": "2018-11-25T22:58:26",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMDQ=",
        "node": {
          "id": "cG9zdDoxMTA0",
          "title": "Performance-Analyser chrome extension",
          "content": "<p><img class=\"alignnone size-full wp-image-1105\" src=\"https://emolike.net/wp-content/uploads/2018/11/R95Bpwl5jpwqzLpK6QokqieY3sYFgBLCpOKP8-PZ0JsVIw00GKRf3EDMb8SXXtTrzwdL83JWw640-h400-e365.jpg\" width=\"640\" height=\"400\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/R95Bpwl5jpwqzLpK6QokqieY3sYFgBLCpOKP8-PZ0JsVIw00GKRf3EDMb8SXXtTrzwdL83JWw640-h400-e365.jpg 640w, https://emolike.net/wp-content/uploads/2018/11/R95Bpwl5jpwqzLpK6QokqieY3sYFgBLCpOKP8-PZ0JsVIw00GKRf3EDMb8SXXtTrzwdL83JWw640-h400-e365-300x188.jpg 300w, https://emolike.net/wp-content/uploads/2018/11/R95Bpwl5jpwqzLpK6QokqieY3sYFgBLCpOKP8-PZ0JsVIw00GKRf3EDMb8SXXtTrzwdL83JWw640-h400-e365-432x270.jpg 432w\" sizes=\"(max-width: 640px) 100vw, 640px\" /></p>\n<pre class=\"C-b-p-j-Oa\">Performance-Analyser (aka Performance-Analyzer) helps to analyze the current page through the Resource,\r\n Navigation and User Timing APIs\r\n - see requests by type, domain, load times, marks and more - instantly.\r\n<a href=\"https://chrome.google.com/webstore/detail/performance-analyser/djgfmlohefpomchfabngccpbaflcahjf?hl=en\">https://chrome.google.com/webstore/detail/performance-analyser/djgfmlohefpomchfabngccpbaflcahjf?hl=en</a>\r\n</pre>\n",
          "slug": "performance-analyser-chrome-extension",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/R95Bpwl5jpwqzLpK6QokqieY3sYFgBLCpOKP8-PZ0JsVIw00GKRf3EDMb8SXXtTrzwdL83JWw640-h400-e365.jpg"
          },
          "link": "https://emolike.net/2018/11/25/performance-analyser-chrome-extension/",
          "date": "2018-11-25T22:56:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "testing"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExMDI=",
        "node": {
          "id": "cG9zdDoxMTAy",
          "title": "Architecture the Lost Years by Robert Martin",
          "content": "<p><iframe title=\"Ruby Midwest 2011 - Keynote: Architecture the Lost Years by Robert Martin\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/WpkDN78P884?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "architecture-the-lost-years-by-robert-martin",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/25/architecture-the-lost-years-by-robert-martin/",
          "date": "2018-11-25T22:55:12",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwOTg=",
        "node": {
          "id": "cG9zdDoxMDk4",
          "title": "C# 8 New Features",
          "content": "<ul>\n<li><a href=\"https://www.infoq.com/articles/default-interface-methods-cs8?p13nId=4&amp;p13nType=followTopic\">https://www.infoq.com/articles/default-interface-methods-cs8?p13nId=4&amp;p13nType=followTopic</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/\">https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/</a></li>\n</ul>\n<p>&nbsp;</p>\n",
          "slug": "c-8-new-features",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/24/c-8-new-features/",
          "date": "2018-11-24T17:25:12",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwOTY=",
        "node": {
          "id": "cG9zdDoxMDk2",
          "title": "Comparison of databases for UWP apps: SQLite, Realm &#038; LiteDB",
          "content": "<p class=\"perex\">Object oriented ap­pli­ca­tions usu­ally needs ob­ject ori­ented stor­age. Re­la­tions are good at map­ping poin­t­ers but many tech­ni­cal lim­i­ta­tions are hid­den un­der doc­u­men­ta­tion crust. It is not easy to choose the right database tech­nol­ogy be­cause pros are writ­ten ev­ery­where and cons are spread across many GitHub is­sues. It is like buy­ing a new car. You know the price, power and fuel con­sump­tion but you must in­quire into re­li­a­bil­ity and main­te­nance costs.</p>\n<h3>SQLite</h3>\n<ul>\n<li>Im­pos­si­ble to re­name or re­move ex­ist­ing ta­ble col­umn.</li>\n</ul>\n<p>SQLite is writ­ten in C which lim­its UWP pro­ces­sor ar­chi­tec­tures to those that SQLite sup­ports be­cause Win­dows does not have SQLite build in. It is not big deal but Lit­eDB does not have this lim­i­ta­tion. SQLite re­quires <em>SQLite for Uni­ver­sal Win­dows Plat­form </em>Vi­sual Stu­dio ex­ten­sion which up­dates au­to­mat­i­cally but you need to man­u­ally recre­ate project ref­er­ence to SDK ev­ery time it hap­pens. Database ver­sion can be tracked by <em>user_ver­sion</em>pragma state­ment which is both sim­ple and ef­fec­tive. When you want use En­tity Frame­work Core you must tar­get at least Win­dows 10 Fall Cre­ators Up­date in which UWP sup­ports .NET Stan­dard 2.0.</p>\n<h3>Realm</h3>\n<ul>\n<li>Doesn’t sup­port Uni­code char­ac­ters in file paths.</li>\n<li>Doesn’t sup­port for­eign key in query.</li>\n<li>Ob­ject prop­er­ties are ac­ces­si­ble only in­side <em>us­ing</em> block of the database con­text.</li>\n<li>The query doesn’t sup­port mul­ti­ple val­ues in <em>where</em> clause.</li>\n<li>It is im­pos­si­ble to use <em>await</em> in­side <em>us­ing</em> block of the database con­text.</li>\n<li>Once set, the pri­mary key can­not be mod­i­fied.</li>\n<li>The query doesn’t sup­port pro­jec­tion.</li>\n</ul>\n<p>Realm lacks UTF-8 char­ac­ters sup­port for file paths. It means that Realm is not able to open a database file when user pro­file name con­tains char­ac­ters out­side ASCII ta­ble. This <a href=\"https://github.com/realm/realm-dotnet/issues/1710\" target=\"_blank\" rel=\"noopener noreferrer\">bug</a> was per­sists more than one year af­ter be­gin­n­ing sup­port of UWP and no fix is planned. Realm is us­able only for An­droid or iOS en­vi­ron­ments. It also re­lies on Fody which in­jects some code changes in­side build pro­cess. When Fody up­dates build breaks.</p>\n<h3>LiteDB</h3>\n<ul>\n<li>When the query has more <em>and</em> op­er­a­tions en­gine will run only one con­di­tion with in­dex and other con­di­tions will use full scan.</li>\n</ul>\n<p>Lit­eDB is writ­ten in C# which means it nicely fits Vi­sual Stu­dio, NuGet and .NET en­vi­ron­ment. It re­quires .NET Stan­dard 1.3 which is im­ple­mented since UWP 10.0.10240. It is very use­ful for sim­ple ap­pli­ca­tions but when data ma­nip­u­la­tion re­quires com­plex rules and per­for­mance has a high pri­or­ity it turns out that Lit­eDB needs some speed op­ti­miza­tions.</p>\n<p><a href=\"https://dajbych.net/comparison-of-databases-for-uwp-apps-sqlite-realm-litedb\">https://dajbych.net/comparison-of-databases-for-uwp-apps-sqlite-realm-litedb</a></p>\n",
          "slug": "comparison-of-databases-for-uwp-apps-sqlite-realm-litedb",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/20/comparison-of-databases-for-uwp-apps-sqlite-realm-litedb/",
          "date": "2018-11-20T01:37:25",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Database"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwOTQ=",
        "node": {
          "id": "cG9zdDoxMDk0",
          "title": "JeremyBytes &#8211; TDD Basics with C#",
          "content": "<p><iframe title=\"JeremyBytes - TDD Basics with C#\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/l4xhTq4qmC0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "jeremybytes-tdd-basics-with-c",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/12/jeremybytes-tdd-basics-with-c/",
          "date": "2018-11-12T21:59:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "testing"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwOTE=",
        "node": {
          "id": "cG9zdDoxMDkx",
          "title": "Introduction to BDD in C# .net SpecFlow Visual Studio",
          "content": "<p><iframe title=\"Introduction to BDD in C# .net SpecFlow Visual Studio\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/4hv_qyrLvp4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "introduction-to-bdd-in-c-net-specflow-visual-studio",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/12/introduction-to-bdd-in-c-net-specflow-visual-studio/",
          "date": "2018-11-12T20:21:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "testing"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwODY=",
        "node": {
          "id": "cG9zdDoxMDg2",
          "title": "Create chrome extension",
          "content": "<p><iframe title=\"Build &amp; Publish a Custom Google Chrome Extension\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/wHZCYi1K664?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>I made an example for chrome extension :</p>\n<div class=\"github-embed github-embed-repository github-logo-mark\">\n<p>        <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension\" target=\"_blank\">\t\t\t<strong>\t\t\t\tchrome extension to generate rss feeds url from a youtube video \t\t\t</strong>\t\t</a>\t\t<br />        <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension\" target=\"_blank\">https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension</a><br />        <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension/network\" target=\"_blank\">0</a> forks.<br />        <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension/stargazers\" target=\"_blank\">0</a> stars.<br />        <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension/issues\" target=\"_blank\">0</a> open issues.<br />        Recent commits:        </p>\n<ul class=\"github_commits\">\n<li class=\"github_commit\">                    <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension/commit/ca3dd2a36aa582bbbd08303ca373fbb0c2e5e328\" target=\"_blank\">updated readme</a>, Ahmed Essam                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension/commit/1244e04e3bbbe594ea81e006ca4c05c7ae0bd963\" target=\"_blank\">added readme</a>, Ahmed Essam                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/eramax/RSS-Youtube-Channels-Chrome-extension/commit/cc4016acecffbfe452e776641d6b1ed7e7e7b942\" target=\"_blank\">init</a>, Ahmed Essam                </li>\n</ul>\n</div>\n<p>&nbsp;</p>\n",
          "slug": "1086",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/04/1086/",
          "date": "2018-11-04T15:29:19",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwODQ=",
        "node": {
          "id": "cG9zdDoxMDg0",
          "title": "Free ASP.NET Hosting",
          "content": "<p><a href=\"https://hosting.asp.net/hosting/home\">https://hosting.asp.net/hosting/home</a></p>\n",
          "slug": "free-asp-net-hosting",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/03/free-asp-net-hosting/",
          "date": "2018-11-03T22:32:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNzk=",
        "node": {
          "id": "cG9zdDoxMDc5",
          "title": "LINQPad: build and test LINQ queries",
          "content": "<p><img class=\"alignnone size-full wp-image-1080\" src=\"https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣٢١٤٤٥٠.png\" alt=\"\" width=\"1399\" height=\"577\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣٢١٤٤٥٠.png 1399w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣٢١٤٤٥٠-300x124.png 300w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣٢١٤٤٥٠-768x317.png 768w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣٢١٤٤٥٠-1024x422.png 1024w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣٢١٤٤٥٠-604x249.png 604w\" sizes=\"(max-width: 1399px) 100vw, 1399px\" /></p>\n<p>LINQPad is not just for LINQ queries, but any <b>C#/F#/VB expression, statement block or program</b>. Put an end to those hundreds of Visual Studio Console projects cluttering your source folder and join the revolution of LINQPad scripters and incremental developers.</p>\n<p><img class=\"alignnone size-full wp-image-1081\" src=\"https://emolike.net/wp-content/uploads/2018/11/maincodescratchpad.png\" width=\"785\" height=\"532\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/maincodescratchpad.png 785w, https://emolike.net/wp-content/uploads/2018/11/maincodescratchpad-300x203.png 300w, https://emolike.net/wp-content/uploads/2018/11/maincodescratchpad-768x520.png 768w, https://emolike.net/wp-content/uploads/2018/11/maincodescratchpad-398x270.png 398w\" sizes=\"(max-width: 785px) 100vw, 785px\" /></p>\n<p>LINQPad also supports all the LINQ APIs in the .NET Framework, including LINQ to XML, PLINQ, LINQ to SQL and Entity Framework.</p>\n<div class=\"center\"><img class=\"alignnone size-full wp-image-1082\" src=\"https://emolike.net/wp-content/uploads/2018/11/mainscreenshot.png\" width=\"970\" height=\"641\" alt=\"LINQPad Screenshot\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/mainscreenshot.png 970w, https://emolike.net/wp-content/uploads/2018/11/mainscreenshot-300x198.png 300w, https://emolike.net/wp-content/uploads/2018/11/mainscreenshot-768x508.png 768w, https://emolike.net/wp-content/uploads/2018/11/mainscreenshot-409x270.png 409w\" sizes=\"(max-width: 970px) 100vw, 970px\" /></div>\n<div></div>\n<div><a href=\"https://www.linqpad.net/\">https://www.linqpad.net/</a></div>\n",
          "slug": "linqpad-build-and-test-linq-queries",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/maincodescratchpad.png"
          },
          "link": "https://emolike.net/2018/11/03/linqpad-build-and-test-linq-queries/",
          "date": "2018-11-03T21:46:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Database"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNzQ=",
        "node": {
          "id": "cG9zdDoxMDc0",
          "title": "Top IT Certification 2018",
          "content": "<p>&nbsp;</p>\n<p><img class=\"alignnone size-full wp-image-1076\" src=\"https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-front.jpg\" alt=\"\" width=\"1069\" height=\"778\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-front.jpg 1069w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-front-300x218.jpg 300w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-front-768x559.jpg 768w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-front-1024x745.jpg 1024w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-front-371x270.jpg 371w\" sizes=\"(max-width: 1069px) 100vw, 1069px\" /><img class=\"alignnone size-full wp-image-1075\" src=\"https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-back.jpg\" alt=\"\" width=\"1069\" height=\"788\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-back.jpg 1069w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-back-300x221.jpg 300w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-back-768x566.jpg 768w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-back-1024x755.jpg 1024w, https://emolike.net/wp-content/uploads/2018/11/it-certification-roadmap-back-366x270.jpg 366w\" sizes=\"(max-width: 1069px) 100vw, 1069px\" /> <img class=\"alignnone size-full wp-image-1077\" src=\"https://emolike.net/wp-content/uploads/2018/11/Most-valuable-IT-certifications-in-2018-1.jpg\" alt=\"\" width=\"884\" height=\"495\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/Most-valuable-IT-certifications-in-2018-1.jpg 884w, https://emolike.net/wp-content/uploads/2018/11/Most-valuable-IT-certifications-in-2018-1-300x168.jpg 300w, https://emolike.net/wp-content/uploads/2018/11/Most-valuable-IT-certifications-in-2018-1-768x430.jpg 768w, https://emolike.net/wp-content/uploads/2018/11/Most-valuable-IT-certifications-in-2018-1-482x270.jpg 482w\" sizes=\"(max-width: 884px) 100vw, 884px\" /></p>\n<p><iframe title=\"Top 10 Certifications For 2018 | Highest Paying IT Certifications 2018 | @edureka!\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/8KeodgxXc0c?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>Reference : <a href=\"https://www.edureka.co/blog/top-paying-it-certifications\">https://www.edureka.co/blog/top-paying-it-certifications</a></p>\n",
          "slug": "top-it-certification-2018",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/03/top-it-certification-2018/",
          "date": "2018-11-03T20:38:41",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Certifications"
              },
              {
                "name": "Courses"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNzI=",
        "node": {
          "id": "cG9zdDoxMDcy",
          "title": "How to become MCSD App Builder",
          "content": "<h2>The globally recognized standard for developer excellence</h2>\n<p>The Microsoft Certified Solutions Developer (MCSD): App Builder certification validates that you have the skills needed to build modern mobile and/or web applications and services.</p>\n<p>Earning an MCSD: App Builder certification qualifies you for a position as an application developer.</p>\n<h3>This MCSD certification can be earned as follows:</h3>\n<h2><strong>Step 1</strong>:</h2>\n<p>Earn either your <a title=\"\" href=\"https://www.globalknowledge.com/us-en/training/certification-prep/brands/microsoft/section/app-builder/mcsa-web-applications/\" data-id=\"155524\" data-hasqtip=\"578\" aria-describedby=\"qtip-578\">Microsoft Certified Solutions Associate (MCSA) Web Applications certification</a> or your <a title=\"\" href=\"https://www.globalknowledge.com/us-en/training/certification-prep/brands/microsoft/section/app-builder/mcsa-universal-windows-platform/\" data-id=\"155525\" data-hasqtip=\"579\" aria-describedby=\"qtip-579\">MCSA: Universal Windows Platform certification</a>.</p>\n<p>Earning an MCSA: Web Applications certification qualifies you for a position as a web developer or web administrator.</p>\n<div class=\"responsive-table-wrapper\">\n<table border=\"0\">\n<thead>\n<tr>\n<th></th>\n<th><span class=\"responsive-table\">Recommended Training</span></th>\n<th><span class=\"responsive-table\">Required Exam</span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"responsive-table\"><strong>Step 1</strong></span></td>\n<td><a title=\"\" href=\"https://www.globalknowledge.com/us-en/course/87512/programming-in-html5-with-javascript-and-css3-m20480/\" data-id=\"87512\" data-hasqtip=\"590\" aria-describedby=\"qtip-590\"><span class=\"responsive-table\">Programming in HTML5 with JavaScript and CSS3 (M20480)</span></a></td>\n<td><span class=\"responsive-table\"><strong>70-480</strong>: Programming in HTML5 with JavaScript and CSS3*</span></p>\n<p><em><span class=\"responsive-table\">*You can substitute Exam 70-483: Programming in C#</span></em></td>\n</tr>\n<tr>\n<td><span class=\"responsive-table\"><strong>Step 2</strong></span></td>\n<td><a title=\"\" href=\"https://www.globalknowledge.com/us-en/course/87513/developing-aspnet-45-mvc-web-applications-m20486/\" data-id=\"87513\" data-hasqtip=\"604\" aria-describedby=\"qtip-604\"><span class=\"responsive-table\">Developing ASP.NET MVC 4 Web Applications (M20486)</span></a></td>\n<td><span class=\"responsive-table\"><strong>70-486</strong>: Developing ASP.NET MVC Web Applications</span></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2><strong>Step 2</strong>:</h2>\n<p>Pass one of the following elective exams:</p>\n<div class=\"responsive-table-wrapper\">\n<table border=\"0\">\n<thead>\n<tr>\n<th><span class=\"responsive-table\">Recommended Training</span></th>\n<th><span class=\"responsive-table\">Exams (choose one)</span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a title=\"\" href=\"https://www.globalknowledge.com/us-en/course/90342/developing-microsoft-azure-solutions-m20532/\" data-id=\"90342\" data-hasqtip=\"593\" aria-describedby=\"qtip-593\"><span class=\"responsive-table\">Developing Microsoft Azure Solutions (M20532)</span></a></td>\n<td><span class=\"responsive-table\"><strong>70-532</strong>: Developing Microsoft Azure Solutions</span></td>\n</tr>\n<tr>\n<td><a title=\"\" href=\"https://www.globalknowledge.com/us-en/course/87514/developing-windows-azure-and-web-services-m20487/\" data-id=\"87514\" data-hasqtip=\"600\"><span class=\"responsive-table\">Developing Windows Azure and Web Services (M20487)</span></a></td>\n<td><span class=\"responsive-table\"><strong>70-487</strong>: Developing Microsoft Azure and Web Services</span></td>\n</tr>\n<tr>\n<td><a title=\"\" href=\"https://www.globalknowledge.com/us-en/course/88159/developing-microsoft-sharepoint-server-2013-core-solutions-m20488/\" data-id=\"88159\" data-hasqtip=\"607\"><span class=\"responsive-table\">Developing Microsoft SharePoint Server 2013 Core Solutions (M20488)</span></a></td>\n<td><span class=\"responsive-table\"><strong>70-488</strong>: Developing Microsoft SharePoint Server 2013 Core Solutions</span></td>\n</tr>\n<tr>\n<td><a title=\"\" href=\"https://www.globalknowledge.com/us-en/course/88162/developing-microsoft-sharepoint-server-2013-advanced-solutions-m20489/\" data-id=\"88162\" data-hasqtip=\"614\" aria-describedby=\"qtip-614\">Developing Microsoft SharePoint Server 2013 Advanced Solutions (M20489)</a></td>\n<td><strong>70-489</strong>: Developing Microsoft SharePoint Server 2013 Advanced Solutions</td>\n</tr>\n<tr>\n<td>Not yet available</td>\n<td><strong>70-354</strong>: Universal Windows Platform – App Architecture and UX/UI</td>\n</tr>\n<tr>\n<td>Not yet available</td>\n<td><strong>70-355</strong>: Universal Windows Platform – App Data, Services, and Coding Patterns</td>\n</tr>\n<tr>\n<td>MVA course: Administering Visual Studio TFS 2012 Jump Start</td>\n<td><strong>70-496</strong>: Administering Microsoft Visual Studio Team Foundation Server</td>\n</tr>\n<tr>\n<td>Not yet available</td>\n<td><strong>70-497</strong>: Software Testing with Visual Studio</td>\n</tr>\n<tr>\n<td>Not yet available</td>\n<td><strong>70-498</strong>: Delivering Continuous Value with Visual Studio Application Lifecycle Management</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
          "slug": "how-to-become-mcsd-app-builder",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/03/how-to-become-mcsd-app-builder/",
          "date": "2018-11-03T20:26:29",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Certifications"
              },
              {
                "name": "Courses"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNTg=",
        "node": {
          "id": "cG9zdDoxMDU4",
          "title": "Microsoft Certifications",
          "content": "<h2 id=\"overview\">Microsoft Certification Program Overview</h2>\n<p>Currently there are six paths you can follow. As you can see in the diagram below, these cover all Microsoft products and technologies.</p>\n<div id=\"attachment_2386\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1059\" src=\"https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-overview.png\" width=\"1280\" height=\"649\" alt=\"Microsoft Certifications Overview\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-overview.png 1280w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-overview-300x152.png 300w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-overview-768x389.png 768w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-overview-1024x519.png 1024w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-overview-533x270.png 533w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Microsoft Certifications Overview</p>\n</div>\n<p>In particular:</p>\n<p><strong>Mobility Path:</strong> Acquire the necessary skills to deploy mobility management solutions for large businesses.</p>\n<p><strong>Cloud Platform and Infrastructure Path:</strong> Get certified to use the Microsoft Cloud Platform infrastructure and learn how to deploy cloud-based solutions using Microsoft Azure and Windows server virtualization technologies.</p>\n<p><strong>Productivity Path:</strong> This is mainly related to deploying enterprise solutions using Microsoft Office Cloud products. If you want to get certified for Microsoft Office 365, Exchange, SharePoint and Skype for business, then you should follow the productivity path.</p>\n<p><strong>Data Management and Analysis Path: </strong>Learn how to setup, manage and deploy SQL Server solutions and how to utilize the capabilities of Microsoft Business Intelligence (BI) products to support BI projects.</p>\n<p><strong>App Builder Path:</strong> If you want to work as a software developer, the app builder path will teach you everything you need to know about Microsoft Development languages (C#, .NET, etc) and platforms.</p>\n<p><strong>Business Applications Path:</strong> Learn how to use and deploy Microsoft Dynamics technologies to businesses.</p>\n<h3 id=\"certifications\">Available Certifications</h3>\n<p>As we will see in detail below, each certification path includes a number of certifications, and some certifications are common in a number of paths.</p>\n<p>For example, the <a href=\"https://www.certificationcamps.com/certifications/mcsa-windows-server-2016-1-cert-training-certification-9-days/\">MCSA Windows Server 2016 certification</a>, it’s part of both the Mobility and Productivity paths.</p>\n<p>Before getting into the details of each path, let’s first clarify what are the different types of certifications you can get.</p>\n<div id=\"gallery-1\" class=\"gallery galleryid-2371 gallery-columns-4 gallery-size-thumbnail\">\n<dl class=\"gallery-item\">\n<dt class=\"gallery-icon landscape\"><img class=\"alignnone size-full wp-image-1060\" src=\"https://emolike.net/wp-content/uploads/2018/11/microsoft-mta-certification-150x150.png\" width=\"150\" height=\"150\" alt=\"Microsoft MTA Certification\" /></dt>\n<dd id=\"gallery-1-2390\" class=\"wp-caption-text gallery-caption\">MTA</dd>\n</dl>\n<dl class=\"gallery-item\">\n<dt class=\"gallery-icon landscape\"><img class=\"alignnone size-full wp-image-1061\" src=\"https://emolike.net/wp-content/uploads/2018/11/mcsa-badge-150x150.png\" width=\"150\" height=\"150\" alt=\"Microsoft MCSA Badge\" /></dt>\n<dd id=\"gallery-1-2130\" class=\"wp-caption-text gallery-caption\">MCSA</dd>\n</dl>\n<dl class=\"gallery-item\">\n<dt class=\"gallery-icon landscape\"><img class=\"alignnone size-full wp-image-1062\" src=\"https://emolike.net/wp-content/uploads/2018/11/mcsd-badge-150x150.png\" width=\"150\" height=\"150\" alt=\"Microsoft MCSD Badge\" /></dt>\n<dd id=\"gallery-1-2134\" class=\"wp-caption-text gallery-caption\">MCSD</dd>\n</dl>\n<dl class=\"gallery-item\">\n<dt class=\"gallery-icon landscape\"><img class=\"alignnone size-full wp-image-1063\" src=\"https://emolike.net/wp-content/uploads/2018/11/mcse-badge-150x150.png\" width=\"150\" height=\"150\" alt=\"Microsoft MCSE\" /></dt>\n<dd id=\"gallery-1-2133\" class=\"wp-caption-text gallery-caption\">MCSE</dd>\n</dl>\n</div>\n<p><strong>MTA – Microsoft Technology Associate</strong>. It shows that the certification holder has fundamental knowledge in a wide range of technical concepts. The MTA certification is the first certification you can get in the Mobility, Cloud, Productivity, Data and App Builder paths.</p>\n<p>Once you pass ANY of the Microsoft exams, then you become an MTA holder for the particular product or technology.</p>\n<p>The MTA is the lowest level certification you can achieve.</p>\n<p><a href=\"https://www.certificationcamps.com/bootcamp-type/mcsa/\"><strong>MCSA – Microsoft Certified Solutions Associate</strong></a>. It’s an entry level certification but a step above MTA. To get an MCSA you need to pass two or more exams (depending on the certification).</p>\n<p>The MCSA is available in all certification paths and a requirement to get to the more advanced Microsoft Certifications (MCSE and MCSD).</p>\n<p><a href=\"https://www.certificationcamps.com/bootcamp-type/mcsd/\"><strong>MCSD – Microsoft Certified Solutions Developer</strong>.</a> That’s the most popular Microsoft Certification for Developers.  It’s the top certification you can achieve if you follow the Apps Builder path. The MCSD is a step above MCSA and equivalent to MCSE.</p>\n<p><strong><a href=\"https://www.certificationcamps.com/bootcamp-type/mcse/\">MCSE: Microsoft Certified Solutions Expert</a>.</strong> For all other paths (besides Apps Builder), the most advanced certification you can get is the MCSE. It’s also very popular and widely recognized in the IT industry.</p>\n<h2 id=\"roadmap\">Microsoft Certification Roadmap</h2>\n<h3 id=\"mobility\">Mobility Certification Path (MCSE Mobility)</h3>\n<div id=\"attachment_2383\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1064\" src=\"https://emolike.net/wp-content/uploads/2018/11/mobility-path.png\" width=\"1280\" height=\"530\" alt=\"Mobility Path\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/mobility-path.png 1280w, https://emolike.net/wp-content/uploads/2018/11/mobility-path-300x124.png 300w, https://emolike.net/wp-content/uploads/2018/11/mobility-path-768x318.png 768w, https://emolike.net/wp-content/uploads/2018/11/mobility-path-1024x424.png 1024w, https://emolike.net/wp-content/uploads/2018/11/mobility-path-604x250.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Mobility Path</p>\n</div>\n<p>To achieve the <a href=\"https://www.certificationcamps.com/certifications/mcse-mobility/\">MCSE Mobility</a>, you need first to achieve an <a href=\"https://www.certificationcamps.com/certifications/microsoft-certified-specialist/\">MCSA Windows 10</a> certification by passing exams 70-698 and 70-697.</p>\n<p>Once you have the MCSA Windows 10, you can get the MCSE Mobility certification by passing one more exam: 70-398, 70-695 or 70-696.</p>\n<h3 id=\"cloud\">Cloud Platform &amp; Infrastructure Path (MCSE Cloud Platform &amp; Infrastructure)</h3>\n<div id=\"attachment_2381\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1065\" src=\"https://emolike.net/wp-content/uploads/2018/11/microsoft-cloud-certifications.png\" width=\"1280\" height=\"826\" alt=\"Cloud Platform &amp; Infrastructure Path\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/microsoft-cloud-certifications.png 1280w, https://emolike.net/wp-content/uploads/2018/11/microsoft-cloud-certifications-300x194.png 300w, https://emolike.net/wp-content/uploads/2018/11/microsoft-cloud-certifications-768x496.png 768w, https://emolike.net/wp-content/uploads/2018/11/microsoft-cloud-certifications-1024x661.png 1024w, https://emolike.net/wp-content/uploads/2018/11/microsoft-cloud-certifications-418x270.png 418w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Cloud Platform &amp; Infrastructure Path</p>\n</div>\n<p>The top certification in the cloud platform &amp; Infrastructure path is MCSE Cloud Platform &amp; Infrastructure. To get to this certification, you first need to:</p>\n<p>Achieve one of the following MCSA Certifications: <a href=\"https://www.certificationcamps.com/certifications/mcsa-windows-server-2012-r2/\">MCSA Windows 2012</a> or <a href=\"https://www.certificationcamps.com/certifications/mcsa-windows-server-2016-1-cert-training-certification-9-days/\">MCSA Windows 2016</a> or MCSA Cloud Platform.</p>\n<p>And pass one more exam from this group: 70-413, 70-414, 70-473, 70-475, 70-532, 70-533, 70-537, 70-538, 70-539, 70-744, 70-745.</p>\n<h3 id=\"productivity\">Productivity Path (MCSE Productivity)</h3>\n<div id=\"attachment_2387\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1066\" src=\"https://emolike.net/wp-content/uploads/2018/11/productivity-path.png\" width=\"1280\" height=\"711\" alt=\"Productivity Path\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/productivity-path.png 1280w, https://emolike.net/wp-content/uploads/2018/11/productivity-path-300x167.png 300w, https://emolike.net/wp-content/uploads/2018/11/productivity-path-768x427.png 768w, https://emolike.net/wp-content/uploads/2018/11/productivity-path-1024x569.png 1024w, https://emolike.net/wp-content/uploads/2018/11/productivity-path-486x270.png 486w, https://emolike.net/wp-content/uploads/2018/11/productivity-path-1038x576.png 1038w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Productivity Path</p>\n</div>\n<p>The Productivity path includes a number of Microsoft Products. The most advanced certification is MCSE Productivity.</p>\n<p>To become MCSE Certified, you first need to achieve one MCSA certification on Windows Server (MCSA Windows Server 2012 or MCSA Windows Server 2016) or to get an <a href=\"https://www.certificationcamps.com/certifications/mcsa-office-365-1-cert-training-certification-7-days/\">MCSA Office 365</a> certification.</p>\n<p>Once you get the MCSA status, you then need to pass one more exam (70-331, 70-332, 70-333, 70-334, 70-339, 70-341, 70-342, 70-345) to get your MCSE.</p>\n<h3>Data Management &amp; Analytics Path (MCSE Data Management &amp; Analytics)</h3>\n<div id=\"attachment_2380\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1067\" src=\"https://emolike.net/wp-content/uploads/2018/11/data-management-path.png\" width=\"1280\" height=\"715\" alt=\"Data Management &amp; Analytics \" srcset=\"https://emolike.net/wp-content/uploads/2018/11/data-management-path.png 1280w, https://emolike.net/wp-content/uploads/2018/11/data-management-path-300x168.png 300w, https://emolike.net/wp-content/uploads/2018/11/data-management-path-768x429.png 768w, https://emolike.net/wp-content/uploads/2018/11/data-management-path-1024x572.png 1024w, https://emolike.net/wp-content/uploads/2018/11/data-management-path-483x270.png 483w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Data Management &amp; Analytics Path</p>\n</div>\n<p>You have a lot of options on your way to the top, which is the <a href=\"https://www.certificationcamps.com/certifications/mcse-data-management-analytics-business-intelligence/\">MCSE Data Management &amp; Analytics</a>.</p>\n<p>The first step is to achieve ONE of the following MCSA Certifications:</p>\n<p><a href=\"https://www.certificationcamps.com/certifications/mcsa-sql-server-2012/\">MCSA SQL Server 2012 / 2014</a></p>\n<p><a href=\"https://www.certificationcamps.com/certifications/mcsa-sql-2016-database-development-certification/\">MCSA SQL Server 2016 Database Developer</a></p>\n<p><a href=\"https://www.certificationcamps.com/certifications/mcsa-sql-2016-database-development-certification/\">MCSA SQL Server 2016 Database Admin</a></p>\n<p><a href=\"https://www.certificationcamps.com/certifications/mcse-data-management-analytics-business-intelligence/\">MCSA SQL Server 2016 BI Development</a></p>\n<p>MCSA Machine Leaning</p>\n<p>MCSA BI Reporting</p>\n<p>MCSA Data Engineering with Azure</p>\n<p>Then, you need to take an elective exam, by choosing one of the following: 70-464, 70-465, 70-466, 70-467, 70-473, 70-475, 70-762, 70-767, 70-768, 70-773, 70-774 or 70-775.</p>\n<h3 id=\"apps\">App Builder (MCSD App Builder)</h3>\n<div id=\"attachment_2384\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1068\" src=\"https://emolike.net/wp-content/uploads/2018/11/app-builder-path.png\" width=\"1280\" height=\"743\" alt=\"Apps Builder Path\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/app-builder-path.png 1280w, https://emolike.net/wp-content/uploads/2018/11/app-builder-path-300x174.png 300w, https://emolike.net/wp-content/uploads/2018/11/app-builder-path-768x446.png 768w, https://emolike.net/wp-content/uploads/2018/11/app-builder-path-1024x594.png 1024w, https://emolike.net/wp-content/uploads/2018/11/app-builder-path-465x270.png 465w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Apps Builder Path</p>\n</div>\n<p>The App Builder path is for developers. If you want to make a career as a Microsoft Certified Developer than this is the certification you should go after.</p>\n<p>To get the <a href=\"https://www.certificationcamps.com/certifications/mcsd-app-builder/\">MCSD App Builder</a> certification you need to achieve <a href=\"https://www.certificationcamps.com/certifications/mcsa-web-applications/\">MCSA Web Applications</a> or MCSA Universal Windows Platform and once pass one more exam from the following exam pool: 70-487, 70-488, 70-489, 70-496, 70-497, 70-498, 70-532, 70-535, 70-538.</p>\n<h3 id=\"business\">Business Applications (MSCE Business Applications)</h3>\n<div id=\"attachment_2385\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1069\" src=\"https://emolike.net/wp-content/uploads/2018/11/business-applications-path.png\" width=\"1280\" height=\"640\" alt=\"Business Applications Path\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/business-applications-path.png 1280w, https://emolike.net/wp-content/uploads/2018/11/business-applications-path-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/11/business-applications-path-768x384.png 768w, https://emolike.net/wp-content/uploads/2018/11/business-applications-path-1024x512.png 1024w, https://emolike.net/wp-content/uploads/2018/11/business-applications-path-540x270.png 540w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Business Applications Path</p>\n</div>\n<p>This certification is for students who want to get certified for Microsoft Dynamics 365. The top level certification is MCSE Business Applications and candidates need to first achieve either MCSA Dynamics 365 or MCSA Dynamics for Operations and also pass one of the following exams: MB2-717, MB2-718, MB6-895, MB6-896, MB6-897, MB2-877.</p>\n<h2 id=\"technology\">Microsoft Certifications by Technology</h2>\n<p>The Microsoft certification paths outlined above group certifications by category but we know that most students want to know what Microsoft certifications are available per technology.</p>\n<p>Here is an overview of certifications grouped by technology.</p>\n<div id=\"attachment_2382\" class=\"wp-caption alignnone\"><img class=\"alignnone size-full wp-image-1070\" src=\"https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-by-technology.png\" width=\"1280\" height=\"806\" alt=\"Microsoft Certifications by Technology\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-by-technology.png 1280w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-by-technology-300x189.png 300w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-by-technology-768x484.png 768w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-by-technology-1024x645.png 1024w, https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-by-technology-429x270.png 429w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Microsoft Certifications by Technology</p>\n</div>\n<p>Here is how certifications are grouped by type:</p>\n<h3 id=\"desktop\">Microsoft Desktop Certifications</h3>\n<ul>\n<li>MCSA: Windows 10</li>\n<li>MCSE: Mobility</li>\n</ul>\n<h3 id=\"server\">Microsoft Server Certifications</h3>\n<p><strong>Windows Server</strong></p>\n<ul>\n<li>MCSA: Windows Server 2012 R2</li>\n<li>MCSA: Windows Server 2016</li>\n<li>MCSA: Windows 2016 UPGRADE</li>\n<li>MCSE: Cloud Platform &amp; Infrastructure (Security)</li>\n<li>MCSE: Cloud Platform &amp; Infrastructure (Azure DevOps)</li>\n<li>MTA: IT Infrastructure Windows Server</li>\n</ul>\n<p><strong>Exchange Server</strong></p>\n<ul>\n<li>MCSE: Productivity – Exchange 2013</li>\n<li>MCSE: Productivity – Exchange 2016</li>\n</ul>\n<p><strong>Skype Server</strong></p>\n<ul>\n<li>Skype For Business</li>\n<li>MCSE: Productivity Skype for Business</li>\n</ul>\n<p><strong>Sharepoint Server</strong></p>\n<ul>\n<li>MCSD: App Builder (SharePoint Developer)</li>\n<li>MCSE Productivity Sharepoint 2013 Administrator</li>\n<li>MCSE Productivity SharePoint 2016 Administrator</li>\n</ul>\n<p><strong>System Center</strong></p>\n<ul>\n<li>MCS: System Center Configuration Manager (SCCM)</li>\n</ul>\n<p><strong>Azure Server</strong></p>\n<ul>\n<li>MCSA: Cloud Platform (Azure Admin)</li>\n<li>MCSE: Cloud Platform &amp; Infrastructure (Azure DevOps)</li>\n<li>MCSD: Azure Solutions Architect</li>\n</ul>\n<h3 id=\"database\">Microsoft Database Certifications</h3>\n<ul>\n<li>MCSA: SQL Server 2012 / 2014</li>\n<li>MCSA: SQL 2016 Database Administration</li>\n<li>MCSA: SQL 2016 Database Development</li>\n<li>MCSA: SQL 2016 Business Intelligence Development</li>\n<li>MCSE: Data Management &amp; Analytics (Developer)</li>\n<li>MCSE: Data Management &amp; Analytics (Business Intelligence)</li>\n<li>MTA: Database SQL Server</li>\n</ul>\n<h3 id=\"developer\">Microsoft Developer Certifications</h3>\n<p><strong>Visual Studio</strong></p>\n<ul>\n<li>MCSA: Web Applications</li>\n<li>MCSD: App Builder</li>\n<li>MCSD: Web Applications</li>\n<li>MCP: Programming in C#</li>\n<li>MTA: Intro To Programming</li>\n</ul>\n",
          "slug": "microsoft-certifications",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/microsoft-certifications-overview.png"
          },
          "link": "https://emolike.net/2018/11/03/microsoft-certifications/",
          "date": "2018-11-03T20:06:02",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Courses"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNTU=",
        "node": {
          "id": "cG9zdDoxMDU1",
          "title": ".Net test web applications from external computers",
          "content": "<p><img class=\"alignnone size-full wp-image-1056\" src=\"https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣١٤٥٦٥٩.png\" alt=\"\" width=\"1541\" height=\"455\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣١٤٥٦٥٩.png 1541w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣١٤٥٦٥٩-300x89.png 300w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣١٤٥٦٥٩-768x227.png 768w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣١٤٥٦٥٩-1024x302.png 1024w, https://emolike.net/wp-content/uploads/2018/11/DeepinScreenshot_select-area_٢٠١٨١١٠٣١٤٥٦٥٩-604x178.png 604w\" sizes=\"(max-width: 1541px) 100vw, 1541px\" /></p>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=vs-publisher-1448185.ConveyorbyKeyoti\">https://marketplace.visualstudio.com/items?itemName=vs-publisher-1448185.ConveyorbyKeyoti</a></p>\n",
          "slug": "net-test-web-applications-from-external-computers",
          "featuredImage": null,
          "link": "https://emolike.net/2018/11/03/net-test-web-applications-from-external-computers/",
          "date": "2018-11-03T14:57:51",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNDc=",
        "node": {
          "id": "cG9zdDoxMDQ3",
          "title": "Recommended VSCode extensions for React",
          "content": "<h1 id=\"prettier\"><a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier</a></h1>\n<p>Prettier is a JavaScript, TypeScript and CSS formatting for VSCode with ESLint integration.</p>\n<p><img class=\"alignnone size-full wp-image-1048\" src=\"https://emolike.net/wp-content/uploads/2018/11/prettier.gif\" width=\"1206\" height=\"608\" alt=\"prettier\" /></p>\n<p>To enable ESLint integration, go to Preferences-&gt;Seetings and add the following configuration object:</p>\n<pre><code class=\"hljs json\"></code></pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">{\r\n    \"prettier.eslintIntegration\": true,\r\n}</pre>\n<pre><code class=\"hljs json\"></code></pre>\n<pre><code class=\"hljs json\"></code></pre>\n<h1 id=\"eslint\"><a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\">ESLint</a></h1>\n<p>As usual, when coding using React as our front-end framework, we&#8217;re writing ES6 code, which is not strongly typed nor compiled ahead, so it&#8217;s easy to introduce syntax errors that are not evident until execution time, so to solve these problems, eslint is a must have a tool, checking the most common types of errors as you write.</p>\n<h1 id=\"autoclosetag\"><a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag\">Auto Close Tag</a></h1>\n<p><em>Auto Close Tag</em> is a simple extension that does a single task, closing tags in HTML markup. However, as simple as it sounds it&#8217;s something missing in a plain VSCode installation and makes your life easier when writing web content. <em>Auto Close Tag</em> works with plain HTML code as well as with JSX.</p>\n<p><img class=\"alignnone size-full wp-image-1049\" src=\"https://emolike.net/wp-content/uploads/2018/11/usage.gif\" width=\"1280\" height=\"833\" alt=\"usage\" /></p>\n<h1 id=\"autoimportes6tsjsxtsx\"><a href=\"https://marketplace.visualstudio.com/items?itemName=NuclleaR.vscode-extension-auto-import\">Auto Import &#8211; ES6,TS,JSX,TSX</a></h1>\n<p>This extension let us automatically find and code complete for all available import as we type. Very useful when creating a new component, module index or any other piece of JS code that needs an import from an external module. It works for JavaScript ES6 and TypeScript as well.</p>\n<p><img class=\"alignnone size-full wp-image-1050\" src=\"https://emolike.net/wp-content/uploads/2018/11/giphy.gif\" width=\"480\" height=\"287\" alt=\"giphy\" /></p>\n<h1 id=\"npmintellisense\"><a href=\"https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense\">npm Intellisense</a></h1>\n<p>A perfect complement to Auto Import. This extension autocompletes npm modules in import statements.</p>\n<p><img class=\"alignnone size-full wp-image-1051\" src=\"https://emolike.net/wp-content/uploads/2018/11/auto_complete.gif\" width=\"931\" height=\"281\" alt=\"auto_complete\" /></p>\n<h1 id=\"githistory\"><a href=\"https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory\">Git History</a></h1>\n<p>Git history is one of those extensions we should have independently of the language we use as long as we handle source control with Git. Especially when we work in a large team and need to review the changes history for a file or branch.<br />\nGit History <a href=\"https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory\">site</a> is Market Place list the following features:</p>\n<blockquote>\n<ul>\n<li>View and search git log along with the graph and details.</li>\n<li>View a previous copy of the file.</li>\n<li>View and search the history\n<ul>\n<li>View the history of one or all branches (git log)</li>\n<li>View the history of a file</li>\n<li>View the history of a line in a file (Git Blame).</li>\n<li>View the history of an author</li>\n</ul>\n</li>\n<li>Compare:\n<ul>\n<li>Compare branches</li>\n<li>Compare commits</li>\n<li>Compare files across commits</li>\n</ul>\n</li>\n<li>Miscellaneous features:\n<ul>\n<li>Github avatars</li>\n<li>Cherry-picking commits</li>\n<li>Reverting commits</li>\n<li>Create branches from a commits</li>\n<li>View commit information in a treeview (snapshot of all changes)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><img class=\"alignnone size-full wp-image-1052\" src=\"https://emolike.net/wp-content/uploads/2018/11/gitLogv2.gif\" width=\"1280\" height=\"800\" alt=\"gitLogv2\" /></p>\n<h1 id=\"gitlens\"><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">Git Lens</a></h1>\n<p>Another excellent extension for VSCode to work with Git. Similar to Git History, it provides the changes log for every file and branch we have in the project we&#8217;re working on, but also offer other useful features, like current line blame at the end of each line of code.<br />\nGit Lens site in Market Place offers a list of some of the features:</p>\n<blockquote>\n<ul>\n<li>a GitLens explorer to navigate and explore repositories or file histories</li>\n<li>an on-demand GitLens Results view to explore committed searches, visualize comparisons between branches, tags, commits, and more</li>\n<li>authorship code lens showing the most recent commit and # of authors to the top of files and/or on code blocks</li>\n<li>an unobtrusive current line blame annotation at the end of the line<br />\non-demand gutter blame annotations, including a heat map, for the whole file<br />\ndetailed blame information accessible via hovers</li>\n<li>on-demand recent changes annotations to highlight lines changed by the most recent commit</li>\n<li>a status bar blame annotation showing author and date for the current line</li>\n<li>commit search — by the message, author, filename, commit id, or code changes</li>\n<li>many powerful commands for exploring commits and histories, comparing and navigating revisions, stash access, repository status, and others</li>\n<li>and so much more</li>\n</ul>\n</blockquote>\n<p><img class=\"alignnone size-full wp-image-1053\" src=\"https://emolike.net/wp-content/uploads/2018/11/gitlens-preview.gif\" width=\"727\" height=\"600\" alt=\"gitlens-preview\" /></p>\n<p>&nbsp;</p>\n<p>source : <a href=\"https://fullstackengine.net/recommended-vscode-extensions-react/\">https://fullstackengine.net/recommended-vscode-extensions-react/</a></p>\n",
          "slug": "recommended-vscode-extensions-for-react",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/11/prettier.gif"
          },
          "link": "https://emolike.net/2018/11/03/recommended-vscode-extensions-for-react/",
          "date": "2018-11-03T14:55:05",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNDQ=",
        "node": {
          "id": "cG9zdDoxMDQ0",
          "title": "Developing Enterprise Apps with ASP .NET Core 2.1",
          "content": "<p><iframe title=\"Developing Enterprise Apps with ASP .NET Core 2.1 | Jason Taylor\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/fAJrVf8f6M4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "developing-enterprise-apps-with-asp-net-core-2-1",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/29/developing-enterprise-apps-with-asp-net-core-2-1/",
          "date": "2018-10-29T23:35:08",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              },
              {
                "name": "Videos"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNDI=",
        "node": {
          "id": "cG9zdDoxMDQy",
          "title": "12+ Lightweight CSS Frameworks to Build a Blazing Fast Website",
          "content": "<p align=\"justify\">When it comes to building a website, <a href=\"https://getbootstrap.com/\" target=\"_blank\" rel=\"nofollow noopener\">Bootstrap</a>, <a href=\"https://foundation.zurb.com/\" target=\"_blank\" rel=\"nofollow noopener\">Foundation</a> and <a href=\"https://semantic-ui.com/\" target=\"_blank\" rel=\"nofollow noopener\">Semantic UI</a> are probably the three frameworks that come to your mind. However, all these frameworks are relatively heavy and require a deep understanding of the core. Particularly when you’re working on a light project, using a lightweight CSS framework can do the job effectively by cutting down all the bloat and providing you just enough features to help you get started quickly.</p>\n<p align=\"justify\">With that in mind, we’ve researched and compiled a list of 12+ minimal and lightweight CSS frameworks that you may not have even heard about but can use to create beautiful, functional and insanely fast loading websites in no time. All these frameworks require a fairly steep learning curve and ship with just what you actually need to kickstart your next web project.</p>\n<p><strong>So, let’s check them out now!</strong></p>\n<h2>#<a href=\"https://mustard-ui.com/\" target=\"_blank\" rel=\"nofollow noopener\">Mustard UI</a>:</h2>\n<p align=\"justify\">An open-source, lightweight and exceptionally beautiful starter CSS framework to build amazingly fast websites in less time! Mustard includes a directory structure that splits the framework into modules aka building blocks, allowing you to selectively exclude or include CSS components into your project. Even, with a single click of the mouse, you can pull in everything to your project. Powered by the <a href=\"https://www.w3schools.com/Css/css3_flexbox.asp\" target=\"_blank\" rel=\"nofollow noopener\">CSS Flexbox</a>, Mustard UI comes with everything needed for a stunning front-end design.</p>\n<p><strong>Size:</strong> 5.3kb</p>\n<h2>#<a href=\"http://getmobicss.com/\" target=\"_blank\" rel=\"nofollow noopener\">Mobi.css</a>:</h2>\n<p align=\"justify\">Mobi.css is a lightweight, scalable, and mobile-first CSS framework designed to help you build clean, elegant and content-rich web pages quickly and easily. What makes the framework great and scalable is the plug-in and theme system. In addition to enhancing Mobi.css, any plug-in can even be used as a standalone CSS library. Although Mobi.css is designed with mobile in mind, it also works quite well for desktop devices.</p>\n<p><strong>Size:</strong> 2.6kb</p>\n<h2>#<a href=\"https://siimple.juanes.xyz/\" target=\"_blank\" rel=\"nofollow noopener\">Siimple</a>:</h2>\n<p align=\"justify\">Siimple is a flexible, beautiful and minimal front-end CSS framework that can be used as the foundation to build flat and clean websites. Built on the top of SASS/SCSS mixins, it has an ultra-clean codebase with only a small number (around 250) of code lines. Supported by the latest versions of almost all mobile and web browsers, Siimple provides developers a clean starting point for their web designs.</p>\n<p><strong>Size:</strong> 6kb</p>\n<h2>#<a href=\"http://beauter.outboxcraft.com/\" target=\"_blank\" rel=\"nofollow noopener\">Beauter</a>:</h2>\n<p align=\"justify\">Based on an experimental design methodology BOL, Beauter is a minimal yet powerful CSS framework for building faster and beautiful responsive websites. This is an extremely lightweight framework; however, it doesn’t inevitably mean that the framework is not packed with all the essential elements. From the basic elements like a responsive grid to advanced elements like parallax scrolling, Beauter offers you almost everything to make your web development cleaner and faster than ever.</p>\n<p><strong>Size:</strong> 6kb</p>\n<h2>#<a href=\"https://milligram.io/\" target=\"_blank\" rel=\"nofollow noopener\">Milligram</a>:</h2>\n<p align=\"justify\">As the name explains itself, Milligram is a simple, lightweight and minimal CSS framework built with three crucial things in mind: cleaner code, better performance, and higher productivity. Offering a minimal setup of styles, it provides developers with a clean and fast start. While Milligram is not designed to work with old browsers, it still supports some old versions of popular browsers. It works on top of <a href=\"https://necolas.github.io/normalize.css/\" target=\"_blank\" rel=\"nofollow noopener\">Normalize</a> and can be installed using any of the popular package managers such as Bower, Yarn or NPM.</p>\n<p><strong>Size:</strong> 2kb</p>\n<h2>#<a href=\"https://picturepan2.github.io/spectre/\" target=\"_blank\" rel=\"nofollow noopener\">Spectre</a>:</h2>\n<p align=\"justify\">Lightweight, modern and responsive, Spectre is a CSS framework for easier, faster and extensible front-end web development. It provides everything you need to make your web design exceptional, including modern base styles for typography and elements, pure CSS components and utilities, and a Flexbox-based, responsive and mobile-friendly layout system. Spectre.css is completely free to use and can be installed manually, from CDN or using popular package managers.</p>\n<p><strong>Size:</strong> 10kb</p>\n<h2>#<a href=\"http://getbase.org/\" target=\"_blank\" rel=\"nofollow noopener\">Base</a>:</h2>\n<p align=\"justify\">Built on top of the latest Normalize.css, Base is a robust, semantic and extensible responsive CSS framework designed to let you focus less on overriding styles and more on creating cross-browser compatible, mobile-first website applications. The framework is split into independent modules so you can include only the ones you actually need in your project. Moreover, it is packed with a GulpJS config to automate your website development workflow.</p>\n<p><strong>Size:</strong> 2kb</p>\n<h2>#<a href=\"https://minicss.org/\" target=\"_blank\" rel=\"nofollow noopener\">Mini.css</a>:</h2>\n<p align=\"justify\">Mini.css is a responsive, minimal and style-agnostic CSS framework to build websites that look beautiful and load fast on all kind of mobile and desktop devices. Providing as much functionality as possible in a very small footprint, Mini.css bridges the gap between fully-featured frameworks like Bootstrap and Foundation) and micro frameworks (such as Beauter and Milligram). As it relies solely on CSS, you need not worry about having any conflicts with other JS libraries you might be using.</p>\n<p><strong>Size:</strong> 7kb</p>\n<h2>#<a href=\"https://bulma.io/\" target=\"_blank\" rel=\"nofollow noopener\">Bulma</a>:</h2>\n<p align=\"justify\">Built with Flexbox, Bulma is an easy to learn, simple to use and quick to customize open source CSS framework built with a mobile-first approach in mind. Every single element in this framework is not only well-optimized for vertical reading on small screen devices but also can be easily customized to fit your specific project requirements. What’s more, the entire framework is divided into 39.sass files which you can import individually to your project.</p>\n<p><strong>Size:</strong> 21kb</p>\n<h2>#<a href=\"http://www.pavilion.io/\" target=\"_blank\" rel=\"nofollow noopener\">Pavilion</a>:</h2>\n<p align=\"justify\">Pavilion is simple, lightweight and highly customizable CSS framework particularly built for developers who never want to use the countless pre-defined UI components which most of the CSS framework usually ship with. Packed with a versatile fully responsive grid system, SCSS variables, Gulp, and several handy tools and utilities to speed up your web development, Pavilion is definitely a great CSS starting point without the bloat.</p>\n<p><strong>Size:</strong> 7kb</p>\n<h2>#<a href=\"https://www.cutestrap.com/\" target=\"_blank\" rel=\"nofollow noopener\">Cutestrap</a>:</h2>\n<p align=\"justify\">Designed to cut down on repetitive tasks as well as to reduce the overall development time, Cutestrap is a tiny alternative to full-blown frameworks such as Bootstrap and Foundation. Taking advantage of the BEM methodology for naming conventions, it facilitates you great CSS organization. Just because Cutestrap has a very small file size, it doesn’t mean it is just a blank starter template. Rather it comes bundled with an implicit Flexbox-based grid, beautiful and consistent form controls, a color palette, a choice of typefaces and much more.</p>\n<p><strong>Size:</strong> 8kb</p>\n<h2>#<a href=\"https://vitalcss.com/\" target=\"_blank\" rel=\"nofollow noopener\">Vital</a>:</h2>\n<p align=\"justify\">Billed as the “reverse approach” to all the heaviest frameworks out there, Vital is a lightweight, flexible and scalable CSS framework to design modern websites and applications. Built using Sass with the principal ‘less is more’, this minimally invasive framework is written almost entirely in em values to provide easy and consistent scaling on all devices. Reducing workflow inefficiencies to the maximum extent possible, Vital saves the time you spend on coding and allows you to focus on the most vital features of your project.</p>\n<p><strong>Size:</strong> 6kb</p>\n<h2>Some Other Popular Lightweight CSS Frameworks That Are Worth Trying Out</h2>\n<ul>\n<li><strong><a href=\"https://purecss.io/\" target=\"_blank\" rel=\"nofollow noopener\">Pure</a>:</strong> A set of small, responsive CSS modules | <strong>Size:</strong> 3.8kb</li>\n<li><strong><a href=\"https://picnicss.com/\" target=\"_blank\" rel=\"nofollow noopener\">Picnic CSS</a>:</strong> A lightweight and beautiful CSS library built on the top of Normalize.css | <strong>Size:</strong> Under 10kb</li>\n<li><strong><a href=\"https://www.muicss.com/\" target=\"_blank\" rel=\"nofollow noopener\">MUI</a>:</strong> A lightweight CSS framework based on Google’s Material Design | <strong>Size:</strong> 6kb</li>\n<li><strong><a href=\"http://cardinalcss.com/\" target=\"_blank\" rel=\"nofollow noopener\">Cardinal</a>:</strong> A modular, scalable, mobile-first CSS framework | <strong>Size:</strong> 12kb</li>\n<li><strong><a href=\"http://furtive.co/\" target=\"_blank\" rel=\"nofollow noopener\">Furtive</a>:</strong> A truly mobile-first CSS micro-framework | <strong>Size:</strong> 2.47kb</li>\n<li><strong><a href=\"http://labs.jerryjappinen.com/layers/\" target=\"_blank\" rel=\"nofollow noopener\">Layers</a>:</strong> A lightweight, unobtrusive and style-agnostic CSS framework | <strong>Size:</strong> 8kb</li>\n<li><strong><a href=\"http://goatslacker.github.io/lotus.css/\" target=\"_blank\" rel=\"nofollow noopener\">Lotus</a>:</strong> An insanely tiny yet extremely powerful CSS library | <strong>Size:</strong> 1.8kb</li>\n<li><strong><a href=\"https://mildrenben.github.io/surface/\" target=\"_blank\" rel=\"nofollow noopener\">Surface</a>:</strong> A super lightweight, CSS only framework based on Google’s Material Design | <strong>Size:</strong> 5.7kb</li>\n<li><strong><a href=\"https://jenil.github.io/chota/\" target=\"_blank\" rel=\"nofollow noopener\">Chota</a>:</strong> A super lightweight, micro CSS framework | <strong>Size:</strong> 3kb</li>\n<li><a href=\"http://rmmfree.github.io/shine_css/\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Shine</strong></a><strong>:</strong> A simple and lightweight CSS framework | <strong>Size:</strong> 5.7kb</li>\n</ul>\n<p>source : <a href=\"http://www.creativeweblogix.com/blog/12-lightweight-css-frameworks\">http://www.creativeweblogix.com/blog/12-lightweight-css-frameworks</a></p>\n",
          "slug": "12-lightweight-css-frameworks-to-build-a-blazing-fast-website",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/27/12-lightweight-css-frameworks-to-build-a-blazing-fast-website/",
          "date": "2018-10-27T12:56:30",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              },
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMzk=",
        "node": {
          "id": "cG9zdDoxMDM5",
          "title": "Quilljs a powerful rich text editor.",
          "content": "<p><img class=\"alignnone size-full wp-image-1040\" src=\"https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠٢٧١٢٤٠٢٦.png\" alt=\"\" width=\"1534\" height=\"845\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠٢٧١٢٤٠٢٦.png 1534w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠٢٧١٢٤٠٢٦-300x165.png 300w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠٢٧١٢٤٠٢٦-768x423.png 768w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠٢٧١٢٤٠٢٦-1024x564.png 1024w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠٢٧١٢٤٠٢٦-490x270.png 490w\" sizes=\"(max-width: 1534px) 100vw, 1534px\" /></p>\n<p><a href=\"https://quilljs.com/\">https://quilljs.com/</a></p>\n",
          "slug": "quilljs-a-powerful-rich-text-editor",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/27/quilljs-a-powerful-rich-text-editor/",
          "date": "2018-10-27T12:41:24",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMzY=",
        "node": {
          "id": "cG9zdDoxMDM2",
          "title": "Entity Framework 6 Tutorial: Learn Entity Framework 6 from Scratch",
          "content": "<p><iframe title=\"Entity Framework 6 Tutorial: Learn Entity Framework 6 from Scratch\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/ZX7_12fwQLU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "entity-framework-6-tutorial-learn-entity-framework-6-from-scratch",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/24/entity-framework-6-tutorial-learn-entity-framework-6-from-scratch/",
          "date": "2018-10-24T20:42:15",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "SQL"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMzA=",
        "node": {
          "id": "cG9zdDoxMDMw",
          "title": "Change windows server 2012 administrator username &#038;password",
          "content": "<p>Change Administrator User Name for security reason.<br />\n[1] Click Windows icon with Right button and open [Computer Management].</p>\n<table class=\"base_win\" summary=\"1-1\">\n<tbody>\n<tr>\n<td><img class=\"alignnone size-full wp-image-1032\" src=\"https://emolike.net/wp-content/uploads/2018/10/1.png\" width=\"800\" height=\"600\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/1.png 800w, https://emolike.net/wp-content/uploads/2018/10/1-300x225.png 300w, https://emolike.net/wp-content/uploads/2018/10/1-768x576.png 768w, https://emolike.net/wp-content/uploads/2018/10/1-360x270.png 360w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></td>\n</tr>\n</tbody>\n</table>\n<p>[2] Open [Local Users and Groups] &#8211; [Users] and click [Administrator] with Right button and select [Rename]. Change any name you like.</p>\n<table class=\"base_win\" summary=\"2-1\">\n<tbody>\n<tr>\n<td><img class=\"alignnone size-full wp-image-1033\" src=\"https://emolike.net/wp-content/uploads/2018/10/9.png\" width=\"800\" height=\"600\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/9.png 800w, https://emolike.net/wp-content/uploads/2018/10/9-300x225.png 300w, https://emolike.net/wp-content/uploads/2018/10/9-768x576.png 768w, https://emolike.net/wp-content/uploads/2018/10/9-360x270.png 360w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></td>\n</tr>\n</tbody>\n</table>\n<p>[3] Administrator Name is just changed.</p>\n<table class=\"base_win\" summary=\"3-1\">\n<tbody>\n<tr>\n<td><img class=\"alignnone size-full wp-image-1034\" src=\"https://emolike.net/wp-content/uploads/2018/10/10.png\" width=\"800\" height=\"600\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/10.png 800w, https://emolike.net/wp-content/uploads/2018/10/10-300x225.png 300w, https://emolike.net/wp-content/uploads/2018/10/10-768x576.png 768w, https://emolike.net/wp-content/uploads/2018/10/10-360x270.png 360w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></td>\n</tr>\n</tbody>\n</table>\n",
          "slug": "change-windows-server-2012-administrator-username-password",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/10/1.png"
          },
          "link": "https://emolike.net/2018/10/21/change-windows-server-2012-administrator-username-password/",
          "date": "2018-10-21T15:38:30",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMjc=",
        "node": {
          "id": "cG9zdDoxMDI3",
          "title": "Pass props to a component rendered by React Router",
          "content": "<p><iframe title=\"Pass props to a component rendered by React Router v4\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/By7vJuSPaYo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "pass-props-to-a-component-rendered-by-react-router",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/20/pass-props-to-a-component-rendered-by-react-router/",
          "date": "2018-10-20T18:21:35",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMTk=",
        "node": {
          "id": "cG9zdDoxMDE5",
          "title": "Bulma CSS Framework &#8211; tutorials",
          "content": "<p><iframe title=\"Intro to Bulma - A CSS Framework\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/I8ezFcJ6AeM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<p><iframe title=\"Bulma Layouts - Sections, Containers, Columns, and Levels\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/ouI1_tZ1yK4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<p><iframe title=\"How to Create Tiles in Bulma\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/H-2tcg_Qvhs?start=1&#038;feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<p><iframe title=\"Bulma CSS Framework Crash Course\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/IiPQYQT2-wg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<p><iframe title=\"Bulma CSS Framework - complete tutorial\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/LBzZLzu2GKo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "bulma-css-framework-tutorials",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/20/bulma-css-framework-tutorials/",
          "date": "2018-10-20T16:06:42",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Css"
              },
              {
                "name": "DESIGN"
              },
              {
                "name": "Uncategorized"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMTY=",
        "node": {
          "id": "cG9zdDoxMDE2",
          "title": "ESlint in Arabic",
          "content": "<p><iframe title=\"مقدمة في ESlint وطريقة استخدامه - سيمي كولون | SemiColon\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/5bmiuXxozcY?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "eslint-in-arabic",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/18/eslint-in-arabic/",
          "date": "2018-10-18T21:02:48",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "React"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMTI=",
        "node": {
          "id": "cG9zdDoxMDEy",
          "title": "Fontello include only required icons",
          "content": "<p><a href=\"http://fontello.com/\"><strong>Fontello</strong></a> generates archive with required icons, fonts, css files.</p>\n<p><img class=\"alignnone size-full wp-image-1013\" src=\"https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠١٨٠٣١٩٢١.png\" alt=\"\" width=\"1444\" height=\"945\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠١٨٠٣١٩٢١.png 1444w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠١٨٠٣١٩٢١-300x196.png 300w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠١٨٠٣١٩٢١-768x503.png 768w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠١٨٠٣١٩٢١-1024x670.png 1024w, https://emolike.net/wp-content/uploads/2018/10/DeepinScreenshot_select-area_٢٠١٨١٠١٨٠٣١٩٢١-413x270.png 413w\" sizes=\"(max-width: 1444px) 100vw, 1444px\" /></p>\n<p><a href=\"http://fontello.com/\">http://fontello.com/</a></p>\n",
          "slug": "fontello-include-only-required-icons",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/18/fontello-include-only-required-icons/",
          "date": "2018-10-18T03:20:32",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "tools"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMDk=",
        "node": {
          "id": "cG9zdDoxMDA5",
          "title": "BxJS &#8211; Building an app with React, Bulma and i18n",
          "content": "<p><iframe title=\"BxJS - Building an app with React, Bulma and i18n\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/Q3qcL8GGQsA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "bxjs-building-an-app-with-react-bulma-and-i18n",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/18/bxjs-building-an-app-with-react-bulma-and-i18n/",
          "date": "2018-10-18T00:51:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMDY=",
        "node": {
          "id": "cG9zdDoxMDA2",
          "title": "Excel Drop Downs From List on Different Sheet",
          "content": "<p><iframe title=\"Excel Drop Downs From List on Different Sheet\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/_OiklMpAmK8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "excel-drop-downs-from-list-on-different-sheet",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/15/excel-drop-downs-from-list-on-different-sheet/",
          "date": "2018-10-15T16:29:55",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "tools"
              },
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMDE=",
        "node": {
          "id": "cG9zdDoxMDAx",
          "title": "Lighter than Lightweight: How We Built the Same App Twice with Preact and Glimmer.js",
          "content": "<div class=\"resourceParagraph section\">\n<div class=\"resource-text-section\">\n<div class=\"resource-paragraph rich-text\">\n<p>The beauty of the web is that there is no “install” step. Someone, somewhere taps a link to your site, and moments later it appears instantly in front of them.</p>\n<p>At least, that’s the idea—but not all devices and networks are created equally. Sites that feel fast on a desktop computer with broadband can feel downright slow on a mobile phone with spotty 3G service.</p>\n<p>So how do you build sites that stay fast no matter what? To help us better understand, we built a prototype application with two popular JavaScript libraries, <a href=\"https://preactjs.com/\" target=\"_blank\" rel=\"nofollow noopener\">Preact</a> and <a href=\"http://glimmerjs.com/\" target=\"_blank\" rel=\"nofollow noopener\">Glimmer.js</a>, that embody different philosophies of how to maximize web performance.</p>\n<h2>Emerging performance trends</h2>\n<p>Over the past few years, there has been excitement in the web development community about the idea of using lightweight libraries—those that prioritize small file size above all else—to build websites that load instantly. Advocates of this approach explain that every byte of JavaScript is a performance liability—and many popular frameworks should be considered “too big” even before you’ve written a single line of app code. Detractors of this philosophy argue that prioritizing file size over robustness stops paying dividends—and can become a liability—as an application grows. They argue that skimping on abstractions and infrastructure in the beginning just means pushing additional complexity into the app itself.</p>\n<p>One exciting trend to emerge recently has been the idea of <a href=\"https://tomdale.net/2017/09/compilers-are-the-new-frameworks/\" target=\"_blank\" rel=\"nofollow noopener\">using compilers to “bend the curve” of tradeoffs between file size and robustness</a>. A compiler can analyze your entire application and, theoretically, produce optimized output and assets that include only what you need.</p>\n<p>This approach has its skeptics, too, who argue that compilers will have trouble beating a hand-tuned lightweight library. If the compiled output is still larger than the lightweight library, the argument goes, any performance gains will be wiped out.</p>\n<p>Unfortunately, it’s very difficult to test these competing philosophies in the real world. If you want to compare how performance changes as complexity grows, how do you test that without building the same app twice? If you’re really motivated to answer this question, you could try to build the same app twice. But is that feasible? Well, that’s exactly what we did here at LinkedIn.</p>\n<h2>The need for feed</h2>\n<p>This project first started with the goal of building a prototype that optimized for page load time at all costs, to help us calibrate what “theoretical maximum” performance looked like.</p>\n<p>Since the first thing members see when they visit LinkedIn is the feed, we thought a reimplementation of this page would be the ideal prototype for experiments around initial load time. It’s also a complex page with many different features, which was important for verifying that performance improvements held as the application grew.</p>\n</div>\n</div>\n</div>\n<div class=\"resourceImageBlock section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourceimageblock\"></a></div>\n<ul class=\"resource-image-block single\">\n<li class=\"resource-image\"><img class=\"alignnone size-full wp-image-1002\" src=\"https://emolike.net/wp-content/uploads/2018/10/preactglimmer2.jpg\" width=\"700\" height=\"374\" alt=\"preactglimmer2\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/preactglimmer2.jpg 700w, https://emolike.net/wp-content/uploads/2018/10/preactglimmer2-300x160.jpg 300w, https://emolike.net/wp-content/uploads/2018/10/preactglimmer2-505x270.jpg 505w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></li>\n</ul>\n</div>\n<div class=\"resourceParagraph section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourceparagraph_1969725901\"></a></div>\n<div class=\"resource-text-section\">\n<div class=\"resource-paragraph rich-text\">\n<p><i>The LinkedIn Feed</i></p>\n<p>Some of the engineers on our team believed Preact would help us build the fastest site possible. Preact is an open source JavaScript library that implements a subset of the <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"nofollow noopener\">React</a> component API. Many developers in the JavaScript community consider Preact to be the gold standard for building fast sites, and for good reason. What sets Preact apart is its truly remarkable file size. While the standard build of React is about 30kb minified and gzipped, Preact is just 3kb—10x smaller—for very similar functionality.</p>\n<p>Other engineers on our team believed that Glimmer.js would yield a faster experience for the app we were building. Like Preact, Glimmer.js is an open source JavaScript library for building UI components for the web. It is built on the same rendering engine as <a href=\"https://www.emberjs.com/\" target=\"_blank\" rel=\"nofollow noopener\">Ember.js</a>, but unlike Ember, provides just the UI layer—no routing, data loading, or other features. Even though Glimmer is about 20kb larger than Preact, it compiles an application’s HTML templates into <a href=\"https://engineering.linkedin.com/blog/2017/12/the-glimmer-binary-experience\" target=\"_blank\" rel=\"noopener\">compact bytecode</a> that gets executed in the browser. Preact, like React, relies on using JavaScript to build Virtual DOM. Glimmer’s bytecode, besides being smaller than the equivalent <a href=\"https://jsx.github.io/\" target=\"_blank\" rel=\"nofollow noopener\">JSX</a> output, does not require a parse step. The engineers advocating for Glimmer believed that, given an app with a real-world feature set, the faster template downloading and parsing speed would make up for any difference in library size.</p>\n<p>LinkedIn is a data-driven company and we wanted to let data help us answer this question. Instead of choosing between Preact and Glimmer.js, we instead built our prototype application in two different “flavors.” Then, we measured how their performance stacked up in the real world.</p>\n</div>\n</div>\n</div>\n<div class=\"resourceImageBlock section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourceimageblock_1778660636\"></a></div>\n<ul class=\"resource-image-block single\">\n<li class=\"resource-image\"><img class=\"alignnone size-full wp-image-1003\" src=\"https://emolike.net/wp-content/uploads/2018/10/preactglimmer3.jpg\" width=\"700\" height=\"463\" alt=\"preactglimmer3\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/preactglimmer3.jpg 700w, https://emolike.net/wp-content/uploads/2018/10/preactglimmer3-300x198.jpg 300w, https://emolike.net/wp-content/uploads/2018/10/preactglimmer3-408x270.jpg 408w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></li>\n</ul>\n</div>\n<div class=\"resourceParagraph section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourceparagraph_1580440323\"></a></div>\n<div class=\"resource-text-section\">\n<div class=\"resource-paragraph rich-text\">\n<p><i>Our prototype: a reimplementation of the LinkedIn feed in Preact and Glimmer.js “flavors”<br />\n</i></p>\n<h2>The tech stack</h2>\n<p>Given the experimental nature of this project, we took the opportunity to test-drive several other exciting frontend technologies to see if they would help us achieve our load time goals.</p>\n<p>In addition to Preact and Glimmer.js, our prototype used:</p>\n<ul>\n<li><a href=\"http://www.typescriptlang.org/\" target=\"_blank\" rel=\"nofollow noopener\">TypeScript</a>, a typed superset of JavaScript</li>\n<li><a href=\"https://webpack.js.org/\" target=\"_blank\" rel=\"nofollow noopener\">webpack</a>, a compiler and runtime for JavaScript to produce optimized static assets</li>\n<li><a href=\"http://css-blocks.com/\" target=\"_blank\" rel=\"nofollow noopener\">CSS Blocks</a>, a component-oriented, highly-optimizable subset of CSS</li>\n</ul>\n<p>To reduce the cost of building the same app twice, we shared as much implementation as possible between the Preact and Glimmer flavors. All of our code went into a single repository that we organized into packages. Components for each flavor went into either the glimmer-ui or preact-ui package. Things like routing, data fetching, performance monitoring, and CSS were shared across both flavors.</p>\n</div>\n</div>\n</div>\n<div class=\"resourceImageBlock section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourceimageblock_1472227923\"></a></div>\n<ul class=\"resource-image-block single\">\n<li class=\"resource-image\"><img class=\"alignnone size-full wp-image-1004\" src=\"https://emolike.net/wp-content/uploads/2018/10/preactglimmer4.jpg\" width=\"500\" height=\"184\" alt=\"preactglimmer4\" srcset=\"https://emolike.net/wp-content/uploads/2018/10/preactglimmer4.jpg 500w, https://emolike.net/wp-content/uploads/2018/10/preactglimmer4-300x110.jpg 300w\" sizes=\"(max-width: 500px) 100vw, 500px\" /></li>\n</ul>\n</div>\n<div class=\"resourceParagraph section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourceparagraph_1601532073\"></a></div>\n<div class=\"resource-text-section\">\n<div class=\"resource-paragraph rich-text\">\n<p>When it came time to deploy, we used webpack to create optimized Glimmer and Preact builds, with any code unused by a particular flavor left out of its bundle.</p>\n<h2>Measuring up</h2>\n<p>Page load is a continuum, not a single point in time. While it’s tempting to pick a single number to compare “page load time,” we wanted to capture and compare the holistic experience of each flavor.</p>\n<p>Chrome exposes two <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\" target=\"_blank\" rel=\"nofollow noopener\">performance metrics that better approximate the user experience</a>:</p>\n<ol>\n<li><b>First Meaningful Paint</b>, which approximates when the page’s primary content first appears.</li>\n<li><b>Time to Interactive</b>, which measures how long it takes for the main thread to become idle enough to reliably respond to user interaction.</li>\n</ol>\n<p>When available, we reported these metrics using LinkedIn’s <a href=\"https://engineering.linkedin.com/blog/2017/06/site-speed-monitoring-in-a-b-testing-and-feature-ramp-up\" target=\"_blank\" rel=\"noopener\">Real User Monitoring</a>(RUM) infrastructure. For browsers that don’t expose these metrics, we implemented approximations that measured when the HTML page had finished loading and when the application had finished starting up, indicating the page was fully interactive.</p>\n<h2>The results</h2>\n<p>Once both prototypes were feature-complete, benchmarking using <a href=\"https://www.webpagetest.org/\" target=\"_blank\" rel=\"nofollow noopener\">WebPagetest</a>indicated that both flavors performed neck-and-neck, even on a smartphone with a simulated 3G network. However, experience has taught us that synthetic benchmarks don’t always tell the full story. We know the only way to be confident in how these prototypes behaved for members was to test in the real world.</p>\n<p>We also created two variants of each flavor: one that used server-side rendering (SSR) to generate initial HTML on the server, and another that performed all rendering on the client in JavaScript. We hypothesized that client-side rendering may be faster in some cases by parallelizing the work of booting the app and fetching API data.</p>\n<p>We ran the four variations of the prototype for one week to collect performance metrics from real members, which we fed into our <a href=\"https://engineering.linkedin.com/blog/topic/rum\" target=\"_blank\" rel=\"noopener\">Real User Monitoring (RUM)</a>system. At the end of the week, we saw the following results:</p>\n</div>\n</div>\n</div>\n<div class=\"resourceTable section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourcetable\"></a></div>\n<div class=\"resource-table-section header-row\">\n<table>\n<tbody>\n<tr>\n<td>Variant</td>\n<td>First Meaningful Paint (90th %ile)</td>\n<td>Render/Rehydrate Complete (90th %ile)</td>\n<td>Time to Interactive (90th %ile)</td>\n</tr>\n<tr>\n<td>Glimmer SSR</td>\n<td>2533</td>\n<td>4112</td>\n<td>6323</td>\n</tr>\n<tr>\n<td>Glimmer CSR</td>\n<td>4029</td>\n<td>4000</td>\n<td>5709</td>\n</tr>\n<tr>\n<td>Preact SSR</td>\n<td>2938</td>\n<td>4263</td>\n<td>5749</td>\n</tr>\n<tr>\n<td>Preact CSR</td>\n<td>4096</td>\n<td>4043</td>\n<td>6257</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"resourceParagraph section\">\n<div class=\"component-anchor-container\"><a class=\"component-anchor\" name=\"post_par_resourceparagraph_90015706\"></a></div>\n<div class=\"resource-text-section\">\n<div class=\"resource-paragraph rich-text\">\n<p><i>Time in milliseconds; lower is better. SSR = Server-side rendered, CSR = Client-side rendered. Render time measured in CSR mode, rehydration time measured in SSR mode.</i></p>\n<p>Both flavors performed very well. The SSR variants in particular showed dramatic improvement in First Meaningful Paint, reducing the time before a member sees useful content by over one second compared to the CSR variants.</p>\n<p>Based on our test, Glimmer.js seemed to slightly outperform Preact at achieving First Meaningful Paint and Rehydrating/Rendering the page, in both the server-side rendered and client-side rendered variants. Preact seemed to slightly outperform Glimmer.js in Time to Interactive (TTI), which measures how quickly the CPU becomes idle after page load. Performing a root cause analysis of this difference has proven difficult because it is much more variable than the other metrics, and is sensitive to confounding factors such as ads and members beginning to interact with the page.</p>\n<p>Either way, overall load time performance is very close—within hundreds of milliseconds—between the two flavors.</p>\n<h2>So what does it mean?</h2>\n<p>Ultimately, both Preact and Glimmer.js are fantastic tools for building fast, modern web applications. Both technologies allowed us to build an app that beat the initial load time of the control version. The difference in performance between the two flavors was so small as to be effectively imperceptible.</p>\n<p>Both libraries offer their own unique benefits. Our team noted that Preact’s use of JSX offered productivity benefits, particularly thanks to integration with TypeScript. On the other hand, Glimmer’s unique architecture will allow it to take advantage of WebAssembly. This opens up a tantalizing avenue of exploration for improving load time even more in the future.</p>\n<p>One takeaway from our experiment is that file size, while important, is not the whole story. Many people use library size as a proxy for how fast their application will load. Based on our findings, apps built with a larger library can load as fast or faster than those built with a smaller library, by amortizing the file size difference via savings in other areas.</p>\n<p>It’s important to reiterate that we focused only on initial load times. There are other important performance metrics, such as responsiveness to interaction, that were out of scope for this experiment.</p>\n<p>We are grateful for the rare opportunity to conduct this test, where we were given the time and resources to build two versions of the same app with the same team. We are also grateful to be in the unique position of having had maintainers from both Preact and Glimmer.js on the team, helping guide each implementation.</p>\n<p>For us, the outcome of this experiment is particularly exciting because Glimmer.js shares a rendering engine with Ember.js, which is used to build LinkedIn today. We are in the process of taking the learnings from our prototype and contributing them back to Ember.js, so that we can improve the performance of our existing app and bring our learnings to the rest of the community.</p>\n<p>Source : <a href=\"https://engineering.linkedin.com/blog/2018/03/how-we-built-the-same-app-twice-with-preact-and-glimmerjs\">https://engineering.linkedin.com/blog/2018/03/how-we-built-the-same-app-twice-with-preact-and-glimmerjs</a></p>\n</div>\n</div>\n</div>\n",
          "slug": "lighter-than-lightweight-how-we-built-the-same-app-twice-with-preact-and-glimmer-js",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/10/preactglimmer2.jpg"
          },
          "link": "https://emolike.net/2018/10/10/lighter-than-lightweight-how-we-built-the-same-app-twice-with-preact-and-glimmer-js/",
          "date": "2018-10-10T16:24:56",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              },
              {
                "name": "javascript"
              },
              {
                "name": "React"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk5OQ==",
        "node": {
          "id": "cG9zdDo5OTk=",
          "title": "Access-Control-Allow-Origin Header and the ASP.NET Web API",
          "content": "<h2><strong>Adding Header Information in Web.config</strong></h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;system.webServer&gt;\r\n     &lt;httpProtocol&gt;\r\n       &lt;customHeaders&gt;\r\n         &lt;add name=\"Access-Control-Allow-Origin\" value=\"*\" /&gt;\r\n         &lt;add name=\"Access-Control-Allow-Headers\" value=\"Content-Type\" /&gt;\r\n         &lt;add name=\"Access-Control-Allow-Methods\" value=\"GET,POST,PUT,DELETE,OPTIONS\" /&gt;\r\n        &lt;add name=\"Access-Control-Allow-Credentials\" value=\"true\" /&gt;\r\n       &lt;/customHeaders&gt;\r\n     &lt;/httpProtocol&gt;\r\n &lt;/system.webServer&gt;</pre>\n<p>As you can see we have added keys with value for the listed items.</p>\n<p>&nbsp;</p>\n<ul>\n<li>Access-Control-Allow-Origin (For Origin)</li>\n<li>Access-Control-Allow-Headers (For Headers)</li>\n<li>Access-Control-Allow-Methods (For Methods)</li>\n</ul>\n<p>source : <a href=\"https://dzone.com/articles/access-control-allow-origin-header-and-the-aspnet\">https://dzone.com/articles/access-control-allow-origin-header-and-the-aspnet</a></p>\n<p>&nbsp;</p>\n",
          "slug": "access-control-allow-origin-header-and-the-asp-net-web-api",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/08/access-control-allow-origin-header-and-the-asp-net-web-api/",
          "date": "2018-10-08T11:33:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk5Nw==",
        "node": {
          "id": "cG9zdDo5OTc=",
          "title": "JavaScript Templating Tutorial EJS",
          "content": "<p><iframe title=\"JavaScript Templating Tutorial | Introduction To EJS\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/3Jz18kXCLwg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "javascript-templating-tutorial-ejs",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/07/javascript-templating-tutorial-ejs/",
          "date": "2018-10-07T13:06:26",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              },
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk5NA==",
        "node": {
          "id": "cG9zdDo5OTQ=",
          "title": "Setting Up React With ASP.NET",
          "content": "<p><iframe title=\"Setting Up React With ASP.NET\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/bnFgGYooDCM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "setting-up-react-with-asp-net",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/06/setting-up-react-with-asp-net/",
          "date": "2018-10-06T04:39:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "javascript"
              },
              {
                "name": "React"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk5Mg==",
        "node": {
          "id": "cG9zdDo5OTI=",
          "title": "git clients",
          "content": "<p class=\"ui_qtext_para\">I love <span class=\"qlink_container\"><a class=\"external_link\" href=\"https://www.sourcetreeapp.com/download/\" target=\"_blank\" rel=\"noopener nofollow\" data-qt-tooltip=\"sourcetreeapp.com\" data-tooltip=\"attached\">SourceTree</a></span> from Atlassian. But this is my personal opinion. The main down side is that every user in a company needs a personal account.</p>\n<p class=\"ui_qtext_para\">There is an old Player: <span class=\"qlink_container\"><a class=\"external_link\" href=\"https://tortoisegit.org/\" target=\"_blank\" rel=\"noopener nofollow\" data-qt-tooltip=\"tortoisegit.org\" data-tooltip=\"attached\">TortoiseGIT</a></span>. But I’m not a fan of this tool. There are to much points to see that it comes from TortoiseSVN and it feels more like SVN over Git…</p>\n<p class=\"ui_qtext_para\"><span class=\"qlink_container\"><a class=\"external_link\" href=\"https://www.syntevo.com/smartgit/\" target=\"_blank\" rel=\"noopener nofollow\" data-qt-tooltip=\"syntevo.com\" data-tooltip=\"attached\">Git Client SmartGit</a></span> is a Client with a longer history. It’s a client with a lot of features. But it’s not free for commercial projects.</p>\n<p class=\"ui_qtext_para\">A new client is <span class=\"qlink_container\"><a class=\"external_link\" href=\"http://www.gitkraken.com/\" target=\"_blank\" rel=\"noopener nofollow\" data-qt-tooltip=\"gitkraken.com\" data-tooltip=\"attached\">GitKraken</a></span>. It is one of the youngest tool Git GUI. (Started Nov 2015) So, there will be some points, but it has some great features and a lot of keyboard shortcuts. And the main benefit: It runs on all major systems: Windows, OSX and Linux.</p>\n<p class=\"ui_qtext_para\">And: There is the official Git GUI client. But… don’t try it 😉</p>\n<p class=\"ui_qtext_para\">There are some others, visit <span class=\"qlink_container\"><a class=\"external_link\" href=\"https://git-scm.com/downloads/guis\" target=\"_blank\" rel=\"noopener nofollow\" data-qt-tooltip=\"git-scm.com\" data-tooltip=\"attached\">Git &#8211; GUI Clients</a></span> for more information.</p>\n<p>Source : <a href=\"https://www.quora.com/Which-Bitbucket-GIT-desktop-client-should-I-use-for-Windows-7\">https://www.quora.com/Which-Bitbucket-GIT-desktop-client-should-I-use-for-Windows-7</a></p>\n",
          "slug": "git-clients",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/05/git-clients/",
          "date": "2018-10-05T02:09:09",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Git"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk5MA==",
        "node": {
          "id": "cG9zdDo5OTA=",
          "title": "Enable SQL Server Express Remote Access and create new user",
          "content": "<p><iframe title=\"Allow remote connections to SQL Server Express : How to Video\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/5UkHYNwUtCo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<p><iframe title=\"Microsoft SQL Server Error 18456 Login Failed for User\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/aU8RhjdkCoE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<p><iframe title=\"Create new user for Microsoft SQL Server 2014 Database\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/26B08vsVJ9A?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "enable-sql-server-express-remote-access-and-create-new-user",
          "featuredImage": null,
          "link": "https://emolike.net/2018/10/04/enable-sql-server-express-remote-access-and-create-new-user/",
          "date": "2018-10-04T16:15:15",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "SQL"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk4Nw==",
        "node": {
          "id": "cG9zdDo5ODc=",
          "title": "adding printer in virtualbox",
          "content": "<p><iframe title=\"adding printer in virtualbox\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/D0zs8lb1PbY?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "adding-printer-in-virtualbox",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/29/adding-printer-in-virtualbox/",
          "date": "2018-09-29T03:35:17",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "tools"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk4MA==",
        "node": {
          "id": "cG9zdDo5ODA=",
          "title": "Awesome Looking Terminal With Oh-My-Zsh",
          "content": "<p>how do I get my terminal window to look so awesome. It’s not that hard as it may look like, I keep it simple. Here is what I use:</p>\n<ul>\n<li><a title=\"Guak Terminal\" href=\"https://github.com/Guake/guake\" target=\"_blank\" rel=\"noopener\">Guake terminal</a></li>\n<li><a title=\"Z Shell\" href=\"http://en.wikipedia.org/wiki/Z_shell\" target=\"_blank\" rel=\"noopener\">ZSH (Z shell)</a></li>\n<li><a title=\"Oh-My-Zsh\" href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"noopener\">Oh-My-Zsh</a></li>\n</ul>\n<p>and of course Ubuntu GNU/Linux.</p>\n<p>As a developer, you can increase your productivity by using terminal. But, sometimes people are just too lazy to type long commands over and over again. And it gets even more boring if you repeat same stuff every single day, at the job, at home, everywhere. That’s the primary reason why so many people are so scared of the terminal. But, it does not have to be that way. Few years ago I was so excited when I “discovered” <strong><em>Oh-My-Zsh</em></strong>. And almost instantly I switched <em>Bash</em> with <em>ZSH</em>.</p>\n<p>Here are the main reasons why I chose <em>ZSH</em> instead of <em>Bash</em>:</p>\n<ul>\n<li><strong>incredibly powerful, context based tab completion handling</strong></li>\n<li><strong>pattern matching on steroids</strong></li>\n<li><strong>really great community-driven frameworks available</strong></li>\n</ul>\n<p>There are two major frameworks available for <em>ZSH</em>, <a title=\"Prezto — Instantly Awesome Zsh\" href=\"https://github.com/sorin-ionescu/prezto\" target=\"_blank\" rel=\"noopener\">Prezto</a> and <a title=\"Oh-My-Zsh Github\" href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">Oh-My-Zsh</a>. Personally, I prefer <em><strong>Oh-My-Zsh</strong></em>, but Pretzo have it’s own advantages to.</p>\n<div class=\"su-quote su-quote-style-default\">\n<div class=\"su-quote-inner su-clearfix\">Oh-My-Zsh is an open source, community-driven framework for managing your ZSH configuration. It comes bundled with a ton of helpful functions, helpers, plugins, themes, and a few things that make you shout…</div>\n<div>\n<h1>Installing ZSH and Oh-My-Zsh</h1>\n<p>Installation of <em>ZSH</em> is pretty simple, on Debian/Ubuntu just enter:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt-get install zsh\r\n</pre>\n<p><em><strong>Oh-My-Zsh</strong></em> you can install with <em><strong>curl</strong></em> or <em><strong>wget,</strong></em> so make sure you have them installed:</p>\n<div id=\"crayon-5bace32038b13446522940\" class=\"crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</pre>\n<p>Make it your default shell:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">chsh -s $(which zsh)</pre>\n<h1>Themify Your Promt</h1>\n<p>Another great thing with <em><strong>Oh-My-Zsh</strong></em> is that you have a ton of useful <a title=\"Oh-My-Zsh Themes\" href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\" target=\"_blank\" rel=\"noopener\">themes </a>and <a title=\"Oh-My-Zsh Plugins\" href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins\" target=\"_blank\" rel=\"noopener\">plugins</a> you can use to customize your prompt. I use <a title=\"Agnoster Theme\" href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Themes#agnoster\" target=\"_blank\" rel=\"noopener\">agnoster</a>  as my default theme. To setup this theme, just download and install one of the patched fonts for Vim-Powerline. For me <a href=\"https://github.com/powerline/fonts/tree/master/DejaVuSansMono\" target=\"_blank\" rel=\"noopener\"><em>DejaVuSansMono</em></a> is good enough. After you have installed patched font, edit ~/.zshrc and set <strong><em>agnoster</em></strong> for theme:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">ZSH_THEME=\"agnoster\"\r\n</pre>\n<p>Now, open <strong><em>Guake Preference</em></strong> and set default interpreter to <span id=\"crayon-5bace32038b19910754681\" class=\"crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco\"><span class=\"crayon-pre crayon-code\"><span class=\"crayon-o\">/</span><span class=\"crayon-v\">bin</span><span class=\"crayon-o\">/</span><span class=\"crayon-v\">zsh</span></span></span> :</p>\n<p><img class=\"alignnone size-full wp-image-981\" src=\"https://emolike.net/wp-content/uploads/2018/09/guake_properties.png\" alt=\"Guake General Properties\" width=\"643\" height=\"651\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/guake_properties.png 643w, https://emolike.net/wp-content/uploads/2018/09/guake_properties-296x300.png 296w, https://emolike.net/wp-content/uploads/2018/09/guake_properties-267x270.png 267w\" sizes=\"(max-width: 643px) 100vw, 643px\" /></p>\n<p>and in the <em><strong>Appearance</strong></em> tab your patched font:</p>\n<p>In Manjaro dist copy fonts from this <a href=\"https://github.com/powerline/fonts/tree/master/DejaVuSansMono\">link</a>  to $HOME/.local/share/fonts</p>\n<p>then clear fonts cache</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">fc-cache -vfr\r\n</pre>\n<p><img class=\"alignnone size-full wp-image-982\" src=\"https://emolike.net/wp-content/uploads/2018/09/guake_appearance.png\" alt=\"Guake Appearance Preferences\" width=\"643\" height=\"651\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/guake_appearance.png 643w, https://emolike.net/wp-content/uploads/2018/09/guake_appearance-296x300.png 296w, https://emolike.net/wp-content/uploads/2018/09/guake_appearance-267x270.png 267w\" sizes=\"(max-width: 643px) 100vw, 643px\" /></p>\n<h1>Plugins</h1>\n<p>You can find full list of plugins <a title=\"Oh-My-Zsh Plugin List\" href=\"https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins\">here</a>. To enable some plugin, just add it to the list in the <span id=\"crayon-5bace32038b1b498836116\" class=\"crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco\"><span class=\"crayon-pre crayon-code\"><span class=\"crayon-o\">~</span><span class=\"crayon-o\">/</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">zshrc</span></span></span> . For example, if you are a Laravel developer as I am, you want to have Laravel4 and Laravel5 plugins enabled:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">plugins=(git rvm rails laravel5 laravel4)</pre>\n<p>You’ll now have  <span id=\"crayon-5bace32038b1e925995107\" class=\"crayon-syntax crayon-syntax-inline crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco\"><span class=\"crayon-pre crayon-code\"><span class=\"crayon-e\">php </span><span class=\"crayon-v\">artisan</span></span></span>  completion, which is pretty cool:</p>\n<p><img class=\"alignnone size-full wp-image-983\" src=\"https://emolike.net/wp-content/uploads/2018/09/artisan_autocomplete.png\" alt=\"PHP Artisan Autocomplete\" width=\"963\" height=\"211\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/artisan_autocomplete.png 963w, https://emolike.net/wp-content/uploads/2018/09/artisan_autocomplete-300x66.png 300w, https://emolike.net/wp-content/uploads/2018/09/artisan_autocomplete-768x168.png 768w, https://emolike.net/wp-content/uploads/2018/09/artisan_autocomplete-604x132.png 604w\" sizes=\"(max-width: 963px) 100vw, 963px\" />As I mentioned, you can use plugins for many other tools, for example: <em>bower, capistrano, docker, heroku</em> and so on.</p>\n<p><em>Note: many themes require installing the <a href=\"https://github.com/powerline/fonts\">Powerline Fonts</a> in order to render properly.</em></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">yaourt -S powerline-fonts\r\n</pre>\n<p>That’s it for now. I recommend you to make the switch right now. You’ll  make no regret. Play around with configuration, plugins, themes. Share your configuration or tips how to make it better.</p>\n<p>Source : <a href=\"https://bosnadev.com/2015/02/26/awesome-looking-terminal-with-oh-my-zsh/\">https://bosnadev.com/2015/02/26/awesome-looking-terminal-with-oh-my-zsh/</a></p>\n</div>\n</div>\n</div>\n",
          "slug": "awesome-looking-terminal-with-oh-my-zsh",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/09/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png"
          },
          "link": "https://emolike.net/2018/09/27/awesome-looking-terminal-with-oh-my-zsh/",
          "date": "2018-09-27T18:06:59",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk3NQ==",
        "node": {
          "id": "cG9zdDo5NzU=",
          "title": "Fastest way to create instance of a Type in Runtime C#",
          "content": "<p>When working with refactoring and loading and creating instances of types in run time using c# the important factor you should take care of is the performance and time needed to create this instance.</p>\n<p>we always need to create objects of a type and we should use the method that will not take too much time to create this object.</p>\n<p>In this thread, I am going to explain the most famous ways to do this and we will see the performance for each method.</p>\n<h3>Our targeted classes</h3>\n<p>First we have two classes X and Y as following:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public class X : baseClass&lt;X&gt;\r\n{\r\n    public X() { }\r\n    public X(int z) { this.Z = z; }\r\n    public int Z;\r\n}\r\n\r\npublic class Y : X \r\n{\r\n    public Y() { }\r\n    public Y(int z) : base(z) { }\r\n}</pre>\n<h3>First Method using direct method NEW()</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">static void CreateWithNew(int t)\r\n{\r\n    var stopwatch = new Stopwatch();\r\n    stopwatch.Start();\r\n    for (int i = 0; i &lt; t; i++)\r\n    {\r\n        var r1 = new X();\r\n        var r2 = new Y();\r\n    }\r\n    stopwatch.Stop();\r\n    Console.WriteLine(\"{0}, {1}\", stopwatch.Elapsed, \"NEW()\");\r\n}</pre>\n<h3>Second Method using refactoring with Activator.CreateInstance</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">static void CreateWithActivator(int t)\r\n{\r\n    var stopwatch = new Stopwatch();\r\n    stopwatch.Start();\r\n    for (int i=0;i&lt;t; i++)\r\n    {\r\n        var r1 = Activator.CreateInstance(typeof(X)) as X;\r\n        var r2 = Activator.CreateInstance(typeof(Y)) as Y;\r\n    }\r\n    stopwatch.Stop();\r\n    Console.WriteLine(\"{0}, {1}\", stopwatch.Elapsed, \"Activator.CreateInstance\");\r\n}</pre>\n<h3>Third Method using Invoking of the constructor</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">static void CreateWithConstractor(int t)\r\n{\r\n    var stopwatch = new Stopwatch();\r\n    stopwatch.Start();\r\n    for (int i = 0; i &lt; t; i++)\r\n    {\r\n        var r1 = GetNewObject(typeof(X)) as X;\r\n        var r2 = GetNewObject(typeof(Y)) as Y;\r\n    }\r\n    stopwatch.Stop();\r\n    Console.WriteLine(\"{0}, {1}\", stopwatch.Elapsed, \"InvokeConstractor\");\r\n}\r\npublic static object GetNewObject(Type t)\r\n{\r\n    try\r\n    {\r\n        return t.GetConstructor(new Type[] { }).Invoke(new object[] { });\r\n    }\r\n    catch\r\n    {\r\n        return null;\r\n    }\r\n}</pre>\n<h3>Forth Method using compiled expressions</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">static void CreateWithCompiledExpression(int t)\r\n{\r\n    var stopwatch = new Stopwatch();\r\n    stopwatch.Start();\r\n    for (int i = 0; i &lt; t; i++)\r\n    {\r\n        var r1 = XCreator() as X;\r\n        var r2 = YCreator() as Y;\r\n    }\r\n    stopwatch.Stop();\r\n    Console.WriteLine(\"{0}, {1}\", stopwatch.Elapsed, \"CompiledExpression\");\r\n}\r\nstatic readonly Func&lt;X&gt; XCreator = Expression.Lambda&lt;Func&lt;X&gt;&gt;(\r\n   Expression.New(typeof(X).GetConstructor(Type.EmptyTypes))\r\n ).Compile();\r\n\r\nstatic readonly Func&lt;Y&gt; YCreator = Expression.Lambda&lt;Func&lt;Y&gt;&gt;(\r\n   Expression.New(typeof(Y).GetConstructor(Type.EmptyTypes))\r\n ).Compile();</pre>\n<h3>Fifth and my lovely method using Clone</h3>\n<p>to use clone the classes should implement the IClonable interface</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">static void CreateWithClone(int t)\r\n{\r\n    var stopwatch = new Stopwatch();\r\n    X x = new X();\r\n    Y y = new Y();\r\n    stopwatch.Start();\r\n    for (int i = 0; i &lt; t; i++)\r\n    {\r\n        var r1 = x.Clone() as X;\r\n        var r2 = y.Clone() as Y;\r\n    }\r\n    stopwatch.Stop();\r\n    Console.WriteLine(\"{0}, {1}\", stopwatch.Elapsed, \"Clone\");\r\n}</pre>\n<p>So we implemented IClonable interface  in the base class like that :</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public class baseClass&lt;T&gt; : ICloneable where T : new()\r\n{\r\n    public object Clone()\r\n    {\r\n        return default(T);\r\n    }\r\n}\r\npublic class X : baseClass&lt;X&gt;\r\n{\r\n    public X() { }\r\n    public X(int z) { this.Z = z; }\r\n    public int Z;\r\n}\r\n\r\npublic class Y : X \r\n{\r\n    public Y() { }\r\n    public Y(int z) : base(z) { }\r\n}</pre>\n<h3>Main Method:</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">static void Main(string[] args)\r\n{\r\n    int countOfTest = 10000;\r\n    Console.WriteLine(\"count Of Tests : \" + countOfTest);\r\n    CreateWithNew(countOfTest);\r\n    CreateWithActivator(countOfTest);\r\n    CreateWithConstractor(countOfTest);\r\n    CreateWithCompiledExpression(countOfTest);\r\n    CreateWithClone(countOfTest);\r\n\r\n    Console.ReadLine();\r\n}</pre>\n<h3>Results</h3>\n<p><img class=\"alignnone size-full wp-image-976\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٦٠٠٠٤٠٣.png\" alt=\"\" width=\"455\" height=\"227\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٦٠٠٠٤٠٣.png 455w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٦٠٠٠٤٠٣-300x150.png 300w\" sizes=\"(max-width: 455px) 100vw, 455px\" /></p>\n<p>As we can see cloning is the fastest way to create new instance of each type, and therefore we should create on instance for each type first and use this instance to clone it later, we may lose time for retrieving  this saved instance , but we can manage this retrieving time with many ways.</p>\n<p>about the parameterized constructor we should allow a default constructor without any arguments and later we can config the object.</p>\n<p>Also I found that Activator.CreateInstance perform well in small tests like the following</p>\n<p><img class=\"alignnone size-full wp-image-977\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٦٠٠٢٦٢٤.png\" alt=\"\" width=\"451\" height=\"288\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٦٠٠٢٦٢٤.png 451w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٦٠٠٢٦٢٤-300x192.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٦٠٠٢٦٢٤-423x270.png 423w\" sizes=\"(max-width: 451px) 100vw, 451px\" /></p>\n<p>References : <a href=\"https://stackoverflow.com/questions/752/get-a-new-object-instance-from-a-type\">https://stackoverflow.com/questions/752/get-a-new-object-instance-from-a-type</a></p>\n<p>Best Regards</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n",
          "slug": "fastest-way-to-create-instance-of-a-type-in-runtime-c",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/26/fastest-way-to-create-instance-of-a-type-in-runtime-c/",
          "date": "2018-09-26T00:32:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk3Mw==",
        "node": {
          "id": "cG9zdDo5NzM=",
          "title": "C# | Higher Order Functions",
          "content": "<p><iframe title=\"C# | Higher Order Functions\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/fsqSxjlt94o?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "c-higher-order-functions",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/24/c-higher-order-functions/",
          "date": "2018-09-24T19:17:01",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk2OQ==",
        "node": {
          "id": "cG9zdDo5Njk=",
          "title": "Difference between static class and singleton pattern?",
          "content": "<p><strong>Static Class:-</strong></p>\n<ol>\n<li>You cannot create the instance of static class.</li>\n<li>Loaded automatically by the .NET Framework common language runtime (CLR) when the program or namespace containing the class is loaded.</li>\n<li>Static Class cannot have constructor.</li>\n<li>We cannot pass the static class to method.</li>\n<li>We cannot inherit Static class to another Static class in C#.</li>\n<li>A class having all static methods.</li>\n<li>Better performance (static methods are bonded on compile time)</li>\n<li>static objects are stored in <strong>stack</strong>.</li>\n<li>we can not clone the static class object .</li>\n</ol>\n<p><strong>Singleton:-</strong></p>\n<ol>\n<li>You can create one instance of the object and reuse it.</li>\n<li>Singleton instance is created for the first time when the user requested.</li>\n<li>Singleton class can have constructor.</li>\n<li>You can create the object of singleton class and pass it to method.</li>\n<li>Singleton class does not say any restriction of Inheritance.</li>\n<li>We can dispose the objects of a singleton class but not of static class.</li>\n<li>Methods can be overridden.</li>\n<li>Can be lazy loaded when need (static classes are always loaded).</li>\n<li>We can implement interface(static class can not implement interface).</li>\n<li>Singleton objects are stored in <strong>Heap</strong></li>\n<li>We can <strong>clone</strong> (if the designer did not disallow it) the singleton object</li>\n<li>Singleton classes follow the <strong>OOP</strong> (object oriented principles), static classes do not.</li>\n</ol>\n<p>Source : <a href=\"https://stackoverflow.com/questions/519520/difference-between-static-class-and-singleton-pattern\">https://stackoverflow.com/questions/519520/difference-between-static-class-and-singleton-pattern</a></p>\n",
          "slug": "difference-between-static-class-and-singleton-pattern",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/24/difference-between-static-class-and-singleton-pattern/",
          "date": "2018-09-24T14:25:55",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk1OQ==",
        "node": {
          "id": "cG9zdDo5NTk=",
          "title": "C# Plugin Manager",
          "content": "<p>Plugins and modules are widely used in almost any type of application. They enhance them with additional features. Beside adding features, plugins have the big advantage, that they separate code in a very clean and testable way. Even hundreds of plugins can be managed without problems, as their functionality is encapsuled in a single place.</p>\n<p>This tutorial will explain you, how to implement a C# plugin- and module application-architecure, which is quite simple, clean and easy to maintain!</p>\n<p><strong>Differences between plugins and modules</strong></p>\n<p><i>Plugins</i> add small functionalities to a software. An example could be a plugin which adds business-logic to a CRM- or an ERP-system. The registration is very lightweight normally.</p>\n<p><i>Modules</i> have more functionality. Possibly adding a whole new part to a system like i.e. a logistics-module. The registration comes often with some meta-data about the module and brings resources such as icons, menupoints etc.</p>\n<h2>Application Plugin Architecture</h2>\n<p>The following diagram shows, how a plugin/module based architecture looks like. It is made up of our application with the pluginmanager, the plugins and the SDK. The pluginmanager searches for, loads, registers and executes available plugins.</p>\n<p><img class=\"alignnone size-full wp-image-966\" src=\"https://emolike.net/wp-content/uploads/2018/09/ApplicationPluginArchitecture.png\" alt=\"Application Plugin Architecture\" width=\"376\" height=\"311\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/ApplicationPluginArchitecture.png 376w, https://emolike.net/wp-content/uploads/2018/09/ApplicationPluginArchitecture-300x248.png 300w, https://emolike.net/wp-content/uploads/2018/09/ApplicationPluginArchitecture-326x270.png 326w\" sizes=\"(max-width: 376px) 100vw, 376px\" /></p>\n<p>Notice that the application and the plugins share the SDK, which provides everything the plugin needs to know (i.E. interfaces and parameter-classes). It is normally implemented in a separate library and referenced in each plugin-project.</p>\n<h2>Solution files tree</h2>\n<p><img class=\"alignnone size-full wp-image-960\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٣٤٣٢٠.png\" alt=\"\" width=\"355\" height=\"784\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٣٤٣٢٠.png 355w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٣٤٣٢٠-136x300.png 136w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٣٤٣٢٠-122x270.png 122w\" sizes=\"(max-width: 355px) 100vw, 355px\" /></p>\n<h2>First Implementing an AppSDK in C#</h2>\n<p>we create AppSDK as a library project then we should create an interface for any plugin (AppSDK/interfaces.cs)</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public interface IPlugin\r\n{\r\n    string pluginName();\r\n    void run();\r\n    void load(IConfig conf);\r\n    void unload();\r\n}</pre>\n<p>so each plugin should have to implement pluginName, run , load with configurations, unload methods.</p>\n<p>We are going to create some other interfaces (AppSDK/interfaces.cs)</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">namespace AppSDK\r\n{\r\n    public interface ILoger\r\n    {\r\n        void log(string message);\r\n    }\r\n    public interface IUser\r\n    {\r\n        int getUserId();\r\n        string getUserName();\r\n    }\r\n    public interface IUserManager\r\n    {\r\n        IUser getUser();\r\n    }\r\n    public interface IConfig\r\n    {\r\n        ILoger getLoger();\r\n        IUserManager getUserManager();\r\n        string getDbConnectionString();\r\n    }\r\n\r\n}</pre>\n<p>Then we will implement theses interfaces in our AppSDK with the default implementation but we are later can use alternative implementations coming from the plugins we will attach.(AppSDK/App.cs)</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public class Loger : ILoger\r\n {\r\n     public void log(string message)\r\n     {\r\n         Console.WriteLine(\"Loger: \" + message);\r\n     }\r\n }\r\n public class Config : IConfig\r\n {\r\n     public ILoger getLoger()\r\n     {\r\n         return new Loger();\r\n     }\r\n\r\n     public IUserManager getUserManager()\r\n     {\r\n         throw new NotImplementedException();\r\n     }\r\n\r\n     public string getDbConnectionString()\r\n     {\r\n         return @\"Data Source=.\\SQLEXPRESS;Initial Catalog=AppDb;Integrated Security=True;\";\r\n     }\r\n }</pre>\n<h4>Implementing the Plugin Manager <em>(AppSDK/App.cs)</em></h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">public static class PluginManager\r\n   {\r\n       private static Dictionary&lt;string, IPlugin&gt; _plugins = new Dictionary&lt;string, IPlugin&gt;();\r\n       private static Config _config = new Config();\r\n       public static bool LoadPlugin(string dllFile)\r\n       {\r\n           try\r\n           {\r\n               Assembly.LoadFrom(dllFile);\r\n               foreach(Assembly a in AppDomain.CurrentDomain.GetAssemblies())\r\n               {\r\n                   foreach(Type t in a.GetTypes())\r\n                   {\r\n                       if(t.GetInterface(\"IPlugin\") != null)\r\n                       {\r\n                           IPlugin plugin = Activator.CreateInstance(t) as IPlugin;\r\n                           _plugins.Add(plugin.pluginName(), plugin);\r\n                           _plugins[plugin.pluginName()].load(_config);\r\n                       }\r\n                   }\r\n               }\r\n           }\r\n           catch (Exception ex) { return false; }\r\n           return true;\r\n       }\r\n       public static Dictionary&lt;string, IPlugin&gt; listPlugins()\r\n       {\r\n           return _plugins;\r\n       }\r\n   }</pre>\n<p>as we can see each plugin needs some configurations to work like userManager class, DbConnectionString, LoggerClass so we used IoC to attach these required objects with out configuration object.</p>\n<h2>Second Implementing a plugin in C#</h2>\n<p>we are going to implement a simple plugin that will be used to get connection string from the app and then connect to MS SQL Server and print console message.</p>\n<p>we create this plugin as a library project  (SQLServerClient_plugin/SQLServerClient.cs)</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing AppSDK;\r\nusing System.Data.SqlClient;\r\n\r\nnamespace SQLServerClient_plugin\r\n{\r\n    public class SQLServerClient : IPlugin\r\n    {\r\n        private ILoger _logger;\r\n        private string _connectionString;\r\n        private IUserManager _userManager;\r\n\r\n        public void load(IConfig conf)\r\n        {\r\n            _logger = conf.getLoger();\r\n            _connectionString = conf.getDbConnectionString();\r\n        }\r\n        public void setConnectionString(string connectionString)\r\n        {\r\n            _connectionString = connectionString;\r\n        }\r\n\r\n        public string pluginName()\r\n        {\r\n            return \"SQLServerClient\";\r\n        }\r\n           \r\n        public void run()\r\n        {\r\n            connect(_connectionString);\r\n        }\r\n        public void connect(string connectionString)\r\n        {\r\n            try\r\n            {\r\n                SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder();\r\n                Console.Write(\"Connecting to SQL Server ... \");\r\n                using (SqlConnection connection = new SqlConnection(connectionString))\r\n                {\r\n                    connection.Open();\r\n                    Console.WriteLine(\"Done.\");\r\n                }\r\n            }\r\n            catch (SqlException e)\r\n            {\r\n                Console.WriteLine(e.ToString());\r\n            }\r\n\r\n            Console.WriteLine(\"All done. Press any key to finish...\");\r\n            Console.ReadKey(true);\r\n        }\r\n\r\n        public void unload()\r\n        {\r\n            \r\n        }\r\n    }\r\n}\r\n</pre>\n<p>we can see that each plugin should implement IPlugin interface and therefore it should add AppSDK reference in its dependencies.</p>\n<p>The main logic and work of the plugin will be in run method.</p>\n<h2>Third Implementing a App Client in C#</h2>\n<p>Now we created the AppSDK and implemented one or more plugins, so now we are going to create Application Client  as console application which will use the AppSDK and will request to load some plugins and will run theses plugins.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing System.Collections.Generic;\r\nusing AppSDK;\r\n\r\nnamespace App\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            PluginManager.LoadPlugin(@\"C:\\Users\\Administrator\\Documents\\Visual Studio 2015\\Projects\\AppSDK\\SQLServerClient_plugin\\bin\\Debug\\SQLServerClient_plugin.dll\");\r\n            Dictionary&lt;string, IPlugin&gt; plugins = PluginManager.listPlugins();\r\n            foreach (KeyValuePair&lt;string, IPlugin&gt; p in plugins)\r\n            {\r\n                Console.WriteLine(p.Key);\r\n                p.Value.run();\r\n            }\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre>\n<p>As we can see we called PluginManager to load the SQLServerClient_plugin dll file, then we called a method in the AppSDK to retrieve all loaded plugins and we are going to console each plugin name and then run it.</p>\n<h2>Final Step compile and run</h2>\n<p>To compile this project we have to configure Visual Studio to compile all projects in the workspace with the following steps.</p>\n<p>From Tools -&gt; Options -&gt; Project and Solutions -&gt; Build and Run -&gt;</p>\n<p>&nbsp;</p>\n<p><img class=\"alignnone size-full wp-image-962\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٨٢٨.png\" alt=\"\" width=\"755\" height=\"442\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٨٢٨.png 755w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٨٢٨-300x176.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٨٢٨-461x270.png 461w\" sizes=\"(max-width: 755px) 100vw, 755px\" /></p>\n<p>Then set the default application to startup to App project and then build the project</p>\n<p><img class=\"alignnone size-full wp-image-963\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٩٤١.png\" alt=\"\" width=\"1382\" height=\"236\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٩٤١.png 1382w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٩٤١-300x51.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٩٤١-768x131.png 768w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٩٤١-1024x175.png 1024w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤٠٩٤١-604x103.png 604w\" sizes=\"(max-width: 1382px) 100vw, 1382px\" /></p>\n<p>Then Run the project</p>\n<p><img class=\"alignnone size-full wp-image-964\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤١٠١٣.png\" alt=\"\" width=\"673\" height=\"341\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤١٠١٣.png 673w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤١٠١٣-300x152.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٢٣١٤١٠١٣-533x270.png 533w\" sizes=\"(max-width: 673px) 100vw, 673px\" /></p>\n<p>Congratulations, We succeeded to load a plugin on the fly and execute this plugin logic.</p>\n<p>Source Code pushed to <a href=\"https://gitlab.com/eramax/pluginsystem\">https://gitlab.com/eramax/pluginsystem</a></p>\n<p>Best Wishes.</p>\n",
          "slug": "c-plugin-manager",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/09/ApplicationPluginArchitecture.png"
          },
          "link": "https://emolike.net/2018/09/23/c-plugin-manager/",
          "date": "2018-09-23T14:12:41",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk1Nw==",
        "node": {
          "id": "cG9zdDo5NTc=",
          "title": "Scrum Training Series",
          "content": "<p><center></p>\n<p style=\"text-align: left;\">Free Online Scrum Master Training From Seattle: The fun way to learn about Agile/Scrum, prepare for Scrum Master certification / Agile certification (CSM, CSPO, etc.), and debunk popular misconceptions.</p>\n<p></center><a href=\"http://scrumtrainingseries.com/\">http://scrumtrainingseries.com/</a></p>\n",
          "slug": "scrum-training-series",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/23/scrum-training-series/",
          "date": "2018-09-23T12:44:08",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Agile"
              },
              {
                "name": "Project Management"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk0OA==",
        "node": {
          "id": "cG9zdDo5NDg=",
          "title": "How to use gitlab or any git provider with visual studio",
          "content": "<p>Hello,</p>\n<p>To use gitlab or whatever git provider follow theses steps</p>\n<h3>Make your project as git repository by executing the command</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">git init</pre>\n<h3>Move to Team Explorer tab and click on changes</h3>\n<h2> <img class=\"alignnone size-full wp-image-949\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١١٠.png\" alt=\"\" width=\"481\" height=\"882\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١١٠.png 481w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١١٠-164x300.png 164w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١١٠-147x270.png 147w\" sizes=\"(max-width: 481px) 100vw, 481px\" /></h2>\n<h3>Add your commit message and then commit changes.</h3>\n<p><img class=\"alignnone size-full wp-image-950\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٣٨.png\" alt=\"\" width=\"405\" height=\"974\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٣٨.png 405w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٣٨-125x300.png 125w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٣٨-112x270.png 112w\" sizes=\"(max-width: 405px) 100vw, 405px\" /></p>\n<h3>Select Remote Repository</h3>\n<p><img class=\"alignnone size-full wp-image-951\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٥٤.png\" alt=\"\" width=\"440\" height=\"942\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٥٤.png 440w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٥٤-140x300.png 140w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠١٥٤-126x270.png 126w\" sizes=\"(max-width: 440px) 100vw, 440px\" /></p>\n<h3>Copy the HTTPS url of your repository from git provider like gitlab</h3>\n<p><img class=\"alignnone size-full wp-image-953\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٤٨.png\" alt=\"\" width=\"1024\" height=\"377\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٤٨.png 1024w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٤٨-300x110.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٤٨-768x283.png 768w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٤٨-604x222.png 604w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<h3>Add the HTTPS url of the repository</h3>\n<p>then click publish and visual studio will ask you to enter your credential for that git provider</p>\n<p><img class=\"alignnone size-full wp-image-952\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٣٥.png\" alt=\"\" width=\"1324\" height=\"880\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٣٥.png 1324w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٣٥-300x199.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٣٥-768x510.png 768w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٣٥-1024x681.png 1024w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٣٣٥-406x270.png 406w\" sizes=\"(max-width: 1324px) 100vw, 1324px\" /></p>\n<h3>Sync your repository</h3>\n<p>Now for any upcoming changes or pull requests you have to commit any changes first and then click on home button and select sync to pull the new commits and push the your commits.</p>\n<p><img class=\"alignnone size-full wp-image-954\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٤٣٦.png\" alt=\"\" width=\"401\" height=\"907\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٤٣٦.png 401w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٤٣٦-133x300.png 133w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_٢٠١٨٠٩٢٣١٢٠٤٣٦-119x270.png 119w\" sizes=\"(max-width: 401px) 100vw, 401px\" /></p>\n<p>Regards</p>\n<p>&nbsp;</p>\n",
          "slug": "how-to-use-gitlab-or-any-git-provider-with-visual-studio",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/23/how-to-use-gitlab-or-any-git-provider-with-visual-studio/",
          "date": "2018-09-23T12:22:22",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Git"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk0Ng==",
        "node": {
          "id": "cG9zdDo5NDY=",
          "title": "WordPress &#8211; Changing to PHP 7.2",
          "content": "<p><iframe title=\"WordPress - Changing to PHP 7.2 MySQL extension error fix in cPanel\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/HMrzLU4Y7XU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "wordpress-changing-to-php-7-2",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/22/wordpress-changing-to-php-7-2/",
          "date": "2018-09-22T21:39:32",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk0Mw==",
        "node": {
          "id": "cG9zdDo5NDM=",
          "title": "C# Plugin System Simple video",
          "content": "<p><iframe title=\"C# Plugin System\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/ng5w7HiJRic?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "c-plugin-system-simple-video",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/22/c-plugin-system-simple-video/",
          "date": "2018-09-22T21:27:01",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjk0MQ==",
        "node": {
          "id": "cG9zdDo5NDE=",
          "title": "copy files from one machine to another using ssh",
          "content": "<p>Syntax:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">scp &lt;source&gt; &lt;destination&gt;\r\n</pre>\n<p>To copy a file from <code>B</code> to <code>A</code> while logged into <code>B</code>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">scp /path/to/file username@a:/path/to/destination\r\n</pre>\n<p>To copy a file from <code>B</code> to <code>A</code> while logged into <code>A</code>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">scp username@b:/path/to/file /path/to/destination\r\n</pre>\n<p>ٍSource: <a href=\"https://unix.stackexchange.com/questions/106480/how-to-copy-files-from-one-machine-to-another-using-ssh\">https://unix.stackexchange.com/questions/106480/how-to-copy-files-from-one-machine-to-another-using-ssh</a></p>\n",
          "slug": "copy-files-from-one-machine-to-another-using-ssh",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/20/copy-files-from-one-machine-to-another-using-ssh/",
          "date": "2018-09-20T14:39:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjkzNw==",
        "node": {
          "id": "cG9zdDo5Mzc=",
          "title": "Import data from Asana into JIRA using your API key",
          "content": "<p><iframe title=\"Import data from Asana into JIRA using your API key\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/W5rSyCUTZ2k?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "import-data-from-asana-into-jira-using-your-api-key",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/19/import-data-from-asana-into-jira-using-your-api-key/",
          "date": "2018-09-19T14:48:28",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Project Management"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjkyOQ==",
        "node": {
          "id": "cG9zdDo5Mjk=",
          "title": "SSH Passwordless Login Using SSH Keygen in 5 Easy Steps",
          "content": "<p><strong>SSH</strong> (<strong>Secure SHELL</strong>) is an open source and most trusted network protocol that is used to login into remote servers for execution of commands and programs. It is also used to transfer files from one computer to another computer over the network using secure copy (<strong>SCP</strong>) Protocol.</p>\n<p>In this article we will show you how to setup password-less login on <strong>RHEL/CentOS 7.x/6.x/5.x</strong> and <strong>Fedora</strong> using <strong>ssh keys</strong> to connect to remote <strong>Linux</strong> servers without entering password. Using Password-less login with <strong>SSH keys</strong> will increase the trust between two <strong>Linux</strong> servers for easy file synchronization or transfer.</p>\n<div id=\"attachment_1322\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-930\" title=\"SSH Passwordless Login\" src=\"https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login.jpg\" alt=\"SSH Passwordless Login\" width=\"720\" height=\"345\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login.jpg 720w, https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login-300x144.jpg 300w, https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login-563x270.jpg 563w\" sizes=\"(max-width: 720px) 100vw, 720px\" /></div>\n<h2>Short Method:</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cat ~/.ssh/id_rsa.pub | ssh remote_username@server_ip_address \"mkdir -p ~/.ssh &amp;&amp; chmod 700 ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys &amp;&amp; chmod 600 ~/.ssh/authorized_keys\"</pre>\n<h2>My Setup Environment</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">SSH Client : 192.168.0.12 ( Fedora 21 )\r\nSSH Remote Host : 192.168.0.11 ( CentOS 7 )</pre>\n<p>If you are dealing with number of <strong>Linux</strong> remote servers, then <strong>SSH Password-less</strong> login is one of the best way to automate tasks such as automatic backups with scripts, synchronization files using scp and remote command execution.</p>\n<p>In this example we will setup <strong>SSH password-less</strong> automatic login from server<strong> 192.168.0.12</strong> as user <strong>tecmint</strong> to <strong>192.168.0.11</strong> with user <strong>sheena</strong>.</p>\n<h3>Step 1: Create Authentication SSH-Kegen Keys on – (192.168.0.12)</h3>\n<p><center></center>First login into server <strong>192.168.0.12</strong> with user <strong>tecmint</strong> and generate a pair of public keys using following command.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[tecmint@tecmint.com ~]$ ssh-keygen -t rsa\r\nGenerating public/private rsa key pair.\r\nEnter file in which to save the key (/home/tecmint/.ssh/id_rsa): [Press enter key]\r\nCreated directory '/home/tecmint/.ssh'.\r\nEnter passphrase (empty for no passphrase): [Press enter key]\r\nEnter same passphrase again: [Press enter key]\r\nYour identification has been saved in /home/tecmint/.ssh/id_rsa.\r\nYour public key has been saved in /home/tecmint/.ssh/id_rsa.pub.\r\nThe key fingerprint is:\r\n5f:ad:40:00:8a:d1:9b:99:b3:b0:f8:08:99:c3:ed:d3 tecmint@tecmint.com\r\nThe key's randomart image is:\r\n+--[ RSA 2048]----+\r\n|        ..oooE.++|\r\n|         o. o.o  |\r\n|          ..   . |\r\n|         o  . . o|\r\n|        S .  . + |\r\n|       . .    . o|\r\n|      . o o    ..|\r\n|       + +       |\r\n|        +.       |\r\n+-----------------+</pre>\n<p><img class=\"alignnone size-full wp-image-931\" src=\"https://emolike.net/wp-content/uploads/2018/09/Create-SSH-RSA-Key.gif\" alt=\"Create SSH RSA Key\" width=\"744\" height=\"434\" /></p>\n<h3>Step 2: Create .ssh Directory on – 192.168.0.11</h3>\n<p>Use SSH from server <strong>192.168.0.12</strong> to connect server <strong>192.168.0.11</strong> using <strong>sheena</strong> as user and create <strong>.ssh </strong>directory under it, using following command.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[tecmint@tecmint ~]$ ssh sheena@192.168.0.11 mkdir -p .ssh\r\nThe authenticity of host '192.168.0.11 (192.168.0.11)' can't be established.\r\nRSA key fingerprint is 45:0e:28:11:d6:81:62:16:04:3f:db:38:02:la:22:4e.\r\nAre you sure you want to continue connecting (yes/no)? yes\r\nWarning: Permanently added '192.168.0.11' (ECDSA) to the list of known hosts.\r\nsheena@192.168.0.11's password: [Enter Your Password Here]\r\n</pre>\n<p><img class=\"alignnone size-full wp-image-932\" src=\"https://emolike.net/wp-content/uploads/2018/09/Create-SSH-Directory.gif\" alt=\"Create SSH Directory Under User Home\" width=\"744\" height=\"434\" /></p>\n<h3>Step 3: Upload Generated Public Keys to – 192.168.0.11</h3>\n<p>Use SSH from server <strong>192.168.0.12</strong> and upload new generated public key (<strong>id_rsa.pub</strong>) on server <strong>192.168.0.11</strong> under <strong>sheena</strong>‘s <strong>.ssh</strong> directory as a file name <strong>authorized_keys</strong>.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[tecmint@tecmint ~]$ cat .ssh/id_rsa.pub | ssh sheena@192.168.0.11 'cat &gt;&gt; .ssh/authorized_keys'\r\nsheena@192.168.1.2's password: [Enter Your Password Here]</pre>\n<p><img class=\"alignnone size-full wp-image-933\" src=\"https://emolike.net/wp-content/uploads/2018/09/Upload-RSA-Key.gif\" alt=\"Upload RSA Key\" width=\"744\" height=\"434\" /></p>\n<h3>Step 4: Set Permissions on – 192.168.0.11</h3>\n<p>Due to different SSH versions on servers, we need to set permissions on .ssh directory and authorized_keys file.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[tecmint@tecmint ~]$ ssh sheena@192.168.0.11 \"chmod 700 .ssh; chmod 640 .ssh/authorized_keys\"\r\nsheena@192.168.0.11's password: [Enter Your Password Here]</pre>\n<p><img class=\"alignnone size-full wp-image-934\" src=\"https://emolike.net/wp-content/uploads/2018/09/Set-Permission-on-SSH-Key.gif\" alt=\"Set Permission on SSH Key\" width=\"744\" height=\"434\" /></p>\n<h3>Step 5: Login from 192.168.0.12 to 192.168.0.11 Server without Password</h3>\n<p>From now onwards you can log into <strong>192.168.0.11</strong> as <strong>sheena</strong> user from server <strong>192.168.0.12</strong> as <strong>tecmint </strong>user without password.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[tecmint@tecmint ~]$ ssh sheena@192.168.0.11\r\n</pre>\n<p><img class=\"alignnone size-full wp-image-935\" src=\"https://emolike.net/wp-content/uploads/2018/09/SSH-Remote-Passwordless-Login.gif\" alt=\"SSH Remote Passwordless Login\" width=\"708\" height=\"434\" /></p>\n<p>Source : <a href=\"https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/\">https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/</a></p>\n",
          "slug": "ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login.jpg"
          },
          "link": "https://emolike.net/2018/09/18/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/",
          "date": "2018-09-18T18:28:12",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjkyNw==",
        "node": {
          "id": "cG9zdDo5Mjc=",
          "title": "Arabic Security: BSides Vancouver 2018",
          "content": "<p><iframe title=\"حل تحدي BSides Vancouver 2018 - الجزء الأول\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/f62lrZ-Aoo8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "arabic-security-bsides-vancouver-2018",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/18/arabic-security-bsides-vancouver-2018/",
          "date": "2018-09-18T01:59:07",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Security"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjkyNA==",
        "node": {
          "id": "cG9zdDo5MjQ=",
          "title": "Modern SQL: Evolution of a dinosaur : Markus Winand",
          "content": "<p><iframe title=\"Modern SQL: Evolution of a dinosaur : Markus Winand\" src=\"https://player.vimeo.com/video/289497563?dnt=1&amp;app_id=122963\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe></p>\n",
          "slug": "modern-sql-evolution-of-a-dinosaur-markus-winand",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/16/modern-sql-evolution-of-a-dinosaur-markus-winand/",
          "date": "2018-09-16T22:40:15",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Software Engineering"
              },
              {
                "name": "SQL"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjkxNg==",
        "node": {
          "id": "cG9zdDo5MTY=",
          "title": "Learn how to design large-scale systems",
          "content": "<h1>The System Design Primer</h1>\n<p align=\"center\"><img class=\"alignnone size-full wp-image-917\" src=\"https://emolike.net/wp-content/uploads/2018/09/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67.png\" width=\"1234\" height=\"1666\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67.png 1234w, https://emolike.net/wp-content/uploads/2018/09/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67-222x300.png 222w, https://emolike.net/wp-content/uploads/2018/09/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67-768x1037.png 768w, https://emolike.net/wp-content/uploads/2018/09/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67-758x1024.png 758w, https://emolike.net/wp-content/uploads/2018/09/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67-200x270.png 200w\" sizes=\"(max-width: 1234px) 100vw, 1234px\" /></p>\n<div class=\"github-embed github-embed-repository github-logo-mark\">\n<p>        <a href=\"https://github.com/donnemartin/system-design-primer\" target=\"_blank\">\t\t\t<strong>\t\t\t\tLearn how to design large-scale systems. Prep for the system design interview.  Includes Anki flashcards.\t\t\t</strong>\t\t</a>\t\t<br />        <a href=\"https://github.com/donnemartin/system-design-primer\" target=\"_blank\">https://github.com/donnemartin/system-design-primer</a><br />        <a href=\"https://github.com/donnemartin/system-design-primer/network\" target=\"_blank\">15,162</a> forks.<br />        <a href=\"https://github.com/donnemartin/system-design-primer/stargazers\" target=\"_blank\">88,565</a> stars.<br />        <a href=\"https://github.com/donnemartin/system-design-primer/issues\" target=\"_blank\">142</a> open issues.<br />        Recent commits:        </p>\n<ul class=\"github_commits\">\n<li class=\"github_commit\">                    <a href=\"https://github.com/donnemartin/system-design-primer/commit/449dc27f33991fe558a83c6815eb28ae294428dd\" target=\"_blank\">zh-Hans: Translate solutions (#392)</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/donnemartin/system-design-primer/commit/ac806e46cb63b1b7955d43bf55291f52b0d3eeae\" target=\"_blank\">Revert &quot;zh-cn: Sync with upstream to keep it up-to-date (#374)&quot; (#391)This reverts commit 301b9d88e4aed1c34b3275301f18b14957c38c91.#374 overwrote the English version of the solutions</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/donnemartin/system-design-primer/commit/301b9d88e4aed1c34b3275301f18b14957c38c91\" target=\"_blank\">zh-cn: Sync with upstream to keep it up-to-date (#374)</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/donnemartin/system-design-primer/commit/8e9c89129bc842df6ed8604bf511d6981d4e7d05\" target=\"_blank\">Fix broken link in CAP theorem section (#348)</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/donnemartin/system-design-primer/commit/fc563ca297a4667e12c17fa3c41c82949928c9ac\" target=\"_blank\">Fix broken CAP theorem link (#355)</a>, Donne Martin                </li>\n</ul>\n</div>\n",
          "slug": "learn-how-to-design-large-scale-systems",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/12/learn-how-to-design-large-scale-systems/",
          "date": "2018-09-12T00:04:08",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjg5MQ==",
        "node": {
          "id": "cG9zdDo4OTE=",
          "title": "Project Management tools 2018",
          "content": "<p>Looking for the best project management software for your company? You’re in luck! We’ve made the task easier and combined 42 project software and tools in one comprehensive list.</p>\n<p>Check out the tools’ <strong>top features</strong>, <strong>pricing</strong>, and <strong>what’s special about them</strong> – and find a solution fit for your business.</p>\n<h2>1. SCORO</h2>\n<p><img class=\"alignnone size-full wp-image-37877\" src=\"https://www.scoro.com/wp-content/uploads/2015/11/Dashboard-Library-Scoro.gif\" sizes=\"(max-width: 1220px) 100vw, 1220px\" srcset=\"https://www.scoro.com/wp-content/uploads/2015/11/Dashboard-Library-Scoro.gif 1220w, https://www.scoro.com/wp-content/uploads/2015/11/Dashboard-Library-Scoro-768x466.gif 768w, https://www.scoro.com/wp-content/uploads/2015/11/Dashboard-Library-Scoro-150x91.gif 150w\" alt=\"Dashboard Library - Scoro\" width=\"1220\" height=\"741\" /></p>\n<p><a href=\"https://www.scoro.com/project-management-software/\"><strong>Scoro</strong></a> is a comprehensive solution that combines all the features you might need in project management software: projects &amp; tasks, contact management, quotes, team collaboration, billing, and reporting.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Projects with sub-tasks and deadlines</li>\n<li>Real-time KPI dashboard</li>\n<li>Shared team calendar &amp; meeting scheduling</li>\n<li>Contact management</li>\n<li>Time tracking and billing for work</li>\n<li>Detailed reports on project progress and finances</li>\n<li>Quoting and invoicing with pre-set templates</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> <a href=\"https://www.scoro.com/online-project-management-software/\">Scoro</a> helps to streamline your entire work progress, so you don’t need to use a lot of different tools for every task. All your important information is stored in one central place.</p>\n<p><strong>Pricing:</strong> From $22 user/month</p>\n<p><a href=\"https://www.scoro.com/project-management-software/\">Try Scoro for free for 14 days</a></p>\n<h2>2. PROOFHUB</h2>\n<p><img class=\"original\" title=\"Project Management Tools\" src=\"https://www.scoro.com/wp-content/uploads/2016/03/ProofHub.png\" alt=\"marketing project management software\" /></p>\n<p><strong><a href=\"https://www.proofhub.com/\">ProofHub</a></strong> offers a replacement for conventional emailing and a bunch of other tools, integrating multiple project management features under one roof.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Assigned user roles</li>\n<li>Online team discussions and chats</li>\n<li>Task delegating and assignments</li>\n<li>Reporting and tracking project history</li>\n<li>Secure file storage</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> ProofHub has a simple and well-designed user interface that helps the team to collaborate more efficiently.</p>\n<p><strong>Pricing:</strong> From $20/month (up to 10 projects) to $150/month (unlimited projects)</p>\n<p>&nbsp;</p>\n<h2>3. BASECAMP</h2>\n<p><img class=\"alignnone wp-image-16276\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/basecamp.png\" alt=\"Basecamp project management software\" width=\"700\" height=\"676\" /></p>\n<p><strong><a href=\"https://basecamp.com/\">Basecamp</a></strong> is the preferred tool for thousands of project management teams, who enjoy its modern social media-like interface and carefree team collaboration features.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Projects to manage multiple users’ work</li>\n<li>Message boards for discussing new projects or ideas</li>\n<li>In-app collaboration with team</li>\n<li>Reporting on project performance</li>\n<li>Separate dashboard for showing to clients</li>\n<li>Email and desktop notifications</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Basecamp is free for teachers and students!</p>\n<p><strong>Price:</strong> $99/month for unlimited users</p>\n<p><strong>Read on:</strong> <a href=\"https://www.scoro.com/basecamp-alternative/\">Basecamp Alternative for Project Management and Collaboration</a></p>\n<h2>4. ASANA</h2>\n<p><img class=\"alignnone wp-image-16274 size-full\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Asana.png\" alt=\"Asana project software\" width=\"1024\" height=\"573\" /></p>\n<p><a href=\"https://asana.com/\"><strong>Asana</strong></a> combines elements of project management, file storage, and collaboration and helps to manage projects across a team without email.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Break your work down into tasks, and assign it to team members</li>\n<li>Organize your tasks into projects for roadmaps and timelines</li>\n<li>Review milestones, and check on your team’s progress</li>\n<li>Get notified about projects updates</li>\n<li>Use project dashboards to get a quick overview</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Asana is a really easy-to-use tool with a simplistic layout. If you’re a small team with not too complex projects, check it out.</p>\n<p><strong>Pricing:</strong> Free for up to 15 members, Premium from $8.33 user/month</p>\n<p>Check out this <a href=\"https://www.scoro.com/asana-alternative/\">Asana alternative</a>!</p>\n<h2>5. PODIO</h2>\n<p><img class=\"alignnone size-full wp-image-16285\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Podio.png\" alt=\"Podio\" width=\"960\" height=\"637\" /></p>\n<p><a href=\"https://podio.com/\">Podio</a> is a flexible and highly customizable online hub for work and team communication.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Assign tasks, attach files and discuss details within the solution</li>\n<li>Share encrypted &amp; large files</li>\n<li>Automate the sales pipelines, project budget tracking, and more</li>\n<li>Get an overview of the company with visual dashboards</li>\n<li>Automate your workflows</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Podio’s workflows feature enables you to add if-this-then-that logic to Podio apps. For example, instruct your app to create a task or comment, when an item is created or when a particular update is made to an item.</p>\n<p><strong>Pricing: </strong>From 24$ month/user for full suite of features</p>\n<h2>6. WORKZONE</h2>\n<p><img class=\"aligncenter size-full wp-image-18098\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/workzone.png\" alt=\"workzone project management tool\" width=\"725\" height=\"418\" /></p>\n<p><a href=\"https://www.workzone.com/solutions/agency/\" target=\"_blank\" rel=\"noopener noreferrer\">Workzone</a> was built by experienced ad execs who wanted to help agencies and creative teams get visibility into all of their work.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Personalized, individual to-do lists</li>\n<li>Create subtasks and task dependencies</li>\n<li>Set permissions for certain users (including clients) to access projects, tasks and files</li>\n<li>Quickly see statuses with Gantt charts</li>\n<li>Assign people to more than one task</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Workzone has a lot of powerful features but is simpler to use than more complex tools. Workzone is meant for the whole team to use.</p>\n<p><strong>Pricing: </strong>$24-$44 per month</p>\n<p><a href=\"https://www.scoro.com/\"><img class=\"alignnone size-full wp-image-39622\" src=\"https://www.scoro.com/wp-content/uploads/2018/04/Scoro3-1.jpg\" sizes=\"(max-width: 1000px) 100vw, 1000px\" srcset=\"https://www.scoro.com/wp-content/uploads/2018/04/Scoro3-1.jpg 1000w, https://www.scoro.com/wp-content/uploads/2018/04/Scoro3-1-768x319.jpg 768w, https://www.scoro.com/wp-content/uploads/2018/04/Scoro3-1-150x62.jpg 150w\" alt=\"Scoro\" width=\"1000\" height=\"415\" /></a></p>\n<h2>7. JIRA</h2>\n<p><img class=\"aligncenter size-full wp-image-16374\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/jira-project-tool-min.png\" alt=\"Jira project management tool\" width=\"600\" height=\"389\" /></p>\n<p><a href=\"https://www.atlassian.com/software\" target=\"_blank\" rel=\"noopener noreferrer\">JIRA</a> is a cross-platform issue and bug tracking software with advanced project management capabilities and features.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Create user stories and issues, plan sprints</li>\n<li>Distribute tasks across your software team.</li>\n<li>Prioritize and discuss your team’s work</li>\n<li>Centralize your team communication</li>\n<li>See real-time reporting on your team’s work</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> JIRA is designed for software development teams, making it the perfect IT project management tool.</p>\n<p><strong>Pricing:</strong> Starting from $10/month (up to 10 users), $75/month for 15 users,  $300/month for 50 users.</p>\n<h2>8. NOTION</h2>\n<p><img class=\"original\" title=\"Team collaboration tool\" src=\"https://www.scoro.com/wp-content/uploads/2016/07/Notion-team-communication-tool.png\" alt=\"Team collaboration tools\" width=\"700\" /></p>\n<p><a href=\"https://www.notion.so/\">Notion</a> will give you a completely different take on project management. It helps to plan and discuss projects, share everything with the team, and keep track of all the ideas.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Keep a personal weekly checklist</li>\n<li>Take notes</li>\n<li>Build a task board with flexible drag and drop editor</li>\n<li>Share files</li>\n<li>Nest pages inside each other – like an infinite knowledge base</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> “Notion is like the LEGO set for collaboration software (or Minecraft, if you are from a younger generation). It lets you assemble workflows that work best for your team, as easy as using a text editor.” – Ivan Zhao, Co-founder of Notion</p>\n<p><strong>Pricing:</strong> $8 user/month</p>\n<h2>9. EVENTCOLLAB</h2>\n<p><img class=\"alignnone size-full wp-image-16278\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/EventCollab.png\" alt=\"EventCollab\" width=\"600\" height=\"410\" /></p>\n<p><a href=\"https://eventcollab.com/\" target=\"_blank\" rel=\"noopener noreferrer\">EventCollab</a> is a cloud-based software that helps to collaborate, share project schedules and documents, track time, assign tasks, chat, and more.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Dashboard gives you a high-level view of every active event you’re involved with</li>\n<li>Seamlessly connect everyone involved in your projects, including all external contractors and vendors</li>\n<li>Collaborate with your team in real-time, whether editing a document or strategizing over a chat</li>\n</ul>\n<p><strong>What’s special about this tool: </strong>EventCollab is designed specifically for planning and producing events, conferences, trade shows and meetings, from start to finish.</p>\n<p><strong>Pricing: </strong>From $20/month</p>\n<p><strong>Read on:</strong> <a href=\"https://www.scoro.com/blog/genius-project-management-trends/\">10 Genius Project Management Trends You Haven’t Heard Of</a></p>\n<h2>10. TRELLO</h2>\n<p><img class=\"alignnone size-full wp-image-16287\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Trello.jpg\" alt=\"Trello\" width=\"1130\" height=\"800\" /></p>\n<p><strong><a href=\"https://trello.com/\">Trello</a></strong> is known for visualizing project tasks on a cardboard-like dashboard that’s great fo managing short and quick everyday assignments.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Simple task management on a cardboard</li>\n<li>Creating unlimited task lists</li>\n<li>Image and file sharing</li>\n<li>Organizing lists by dates or priority</li>\n<li>Commenting and collaboration</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> From startups to Fortune 500 companies, Trello is the most visual way for teams to collaborate on any project.</p>\n<p><strong>Pricing:</strong> Free for personal use, $9.99 user/month for businesses</p>\n<p>Check out this<strong> <a href=\"https://www.scoro.com/trello-alternative/\">Trello alternative</a>!</strong></p>\n<h2></h2>\n<h2>11. REDMINE</h2>\n<p><img class=\"original\" title=\"Project Management Tools\" src=\"https://www.scoro.com/wp-content/uploads/2016/03/Redmine1.png\" alt=\"redmine project management\" /></p>\n<p><strong><a href=\"http://www.redmine.org/\">Redmine</a></strong> is an open source project management tool, made highly flexible by its volunteer community.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Gantt charts and calendar for planning</li>\n<li>News feed and document &amp; file management</li>\n<li>Features for planning product roadmaps</li>\n<li>Email notifications</li>\n<li>Simple time tracking</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Redmine is an open-source tool and has multilanguage support which might become handy. However, to use this PM tool, you first need to download it.</p>\n<p><strong>Pricing:</strong> Free</p>\n<h2>12. ZOHO PROJECTS</h2>\n<p><img class=\"original\" title=\"Project Management Tools\" src=\"https://www.scoro.com/wp-content/uploads/2016/03/Zoho-projects1.png\" alt=\"zoho project management tool\" /></p>\n<p><strong><a href=\"https://www.zoho.com/projects/\">Zoho Projects</a></strong> is one of the best-known tools for simple project management, that can help teams streamline their upcoming work and tasks.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Task lists with multiple tasks and milestones</li>\n<li>Time tracking and time sheets</li>\n<li>Gantt charts to oversee project progress</li>\n<li>Document and file management</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Zoho projects can be integrated with Zoho CRM and other tools to manage almost every aspect of your agency in one system.</p>\n<p><strong>Pricing:</strong> Up to 20 projects $25/month, unlimited projects $99/month; CRM and other additional features come with an extra price.</p>\n<p>Check out this <a href=\"https://www.scoro.com/zoho-alternative/\">Zoho Alternative</a> and 21 more <a href=\"https://www.scoro.com/blog/best-zoho-alternatives/\">best Zoho Alternatives for business management</a>!</p>\n<h2>13. WORKBOOK</h2>\n<p><img class=\"alignnone size-full wp-image-16288\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/WorkBook.png\" alt=\"WorkBook\" width=\"1264\" height=\"711\" /></p>\n<p>WorkBook is a software suite for project and resource management, CRM, collaboration and file sharing, forecasting &amp; accounting.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Project and tasks lists</li>\n<li>Gantt charts</li>\n<li>Sales pipeline</li>\n<li>Client portal</li>\n<li>Financial features like budgets, forecasts, and automatic billing</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Not all clients have the same needs. WorkBook lets you choose exactly what modules that suit your needs and only pay for what you use.</p>\n<p><strong>Pricing: </strong>$19 user/month, minimum 30 users</p>\n<h2>14. FUNCTIONFOX</h2>\n<p><img class=\"alignnone size-full wp-image-16299\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/FunctionFox.jpg\" alt=\"FunctionFox\" width=\"1256\" height=\"812\" /></p>\n<p><a href=\"https://www.functionfox.com/\">FunctionFox</a> has many helpful project management features, such as milestone tracking and budget comparison. It also has a nice user interface, making it pleasant to use.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Scheduling unlimited tasks, and meetings</li>\n<li>Interactive real-time reporting</li>\n<li>Projects with sub-tasks and milestones</li>\n<li>Budget estimations</li>\n<li>To-do lists and time-tracking</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> FunctionFox lets users create visual management dashboards that can be customized according to personal preferences. It’s a great way to get a quick overview of your upcoming work and your team’s results.</p>\n<p><strong>Pricing:</strong> From $5 user/month ($35/month for 1st user)</p>\n<h2>15. NUTCACHE</h2>\n<p><img class=\"alignnone size-full wp-image-16284\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Nutache.jpg\" alt=\"Nutache\" width=\"1280\" height=\"800\" /></p>\n<p><a href=\"http://www.nutcache.com/\">Nutcache</a> is an all-in-one project management tool that includes time tracking and invoicing features. It was built for small teams that bill their clients on a project basis.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Project management and tasks</li>\n<li>Time tracking and time billing</li>\n<li>Expense management</li>\n<li>Linking projects and finished tasks to clients</li>\n</ul>\n<p><strong>What’s interesting about this tool:</strong> Nutcache has a good-looking user interface, excellent for team collaboration and simple project management.</p>\n<p><strong>Pricing:</strong> Free up to 20 users (limited features), $6 user/month for project management features, $15 user/month for unlimited features</p>\n<h2>16. WORKETC</h2>\n<p><img class=\"alignnone size-full wp-image-16289\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/WORKetc.png\" alt=\"WORKetc\" width=\"1128\" height=\"935\" /></p>\n<p><a href=\"https://www.worketc.com/\">WORKetc</a> has integrated CRM, projects, billing, helpdesk, reporting, and collaboration.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Link timesheets, documents, discussions, notes, contacts and more to your projects</li>\n<li>Manage complex project budgets</li>\n<li>Automatically capture and invoice all revenue activities across all departments</li>\n<li>Use live support, web forms, and email to capture support tickets</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> By integrating support cases directly inside of all areas of WORKetc, you can ensure the customer is always looked after. Suddenly your sales people are talking with your customer support people, and project issues can be assigned to the right person.</p>\n<p><strong>Pricing:</strong> From $49 user/month (first 3 users $65/month)</p>\n<p>Check out this <a href=\"https://www.scoro.com/worketc-alternative/\">WORKetc alternative</a>!</p>\n<h2>17. CAGE</h2>\n<p><img class=\"alignnone size-full wp-image-16300\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Cage.png\" alt=\"Cage\" width=\"1100\" height=\"500\" /></p>\n<p><a href=\"https://www.cageapp.com/\">Cage</a> is all about improving the way creative teams collaborate and work. It helps your team to manage projects, and have active discussions.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Manage and create projects</li>\n<li>Make notes and comments under tasks</li>\n<li>Keep track of all revisions</li>\n<li>Get approvals from clients</li>\n<li>Have video conversations</li>\n<li>Password protection for your projects</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Cage combines project management and efficient collaboration. You can plan projects and organize video calls by using this one PM tool.</p>\n<p><strong>Pricing:</strong> From $49/month for teams</p>\n<h2>18. PAYMO</h2>\n<p><img class=\"alignnone size-full wp-image-40315\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Paymo.png\" sizes=\"(max-width: 840px) 100vw, 840px\" srcset=\"https://www.scoro.com/wp-content/uploads/2017/02/Paymo.png 840w, https://www.scoro.com/wp-content/uploads/2017/02/Paymo-768x535.png 768w, https://www.scoro.com/wp-content/uploads/2017/02/Paymo-150x104.png 150w\" alt=\"\" width=\"840\" height=\"585\" /></p>\n<p><a href=\"https://www.paymoapp.com/\">Paymo</a> offers a simple yet powerful tool bringing together project management, work reporting, and time billing.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Tracking the time spent on tasks and projects</li>\n<li>Thorough work reports</li>\n<li>Dashboard to see your team’s performance</li>\n<li>Billing customers for completed tasks</li>\n<li>Integrated project accounting</li>\n</ul>\n<p><strong>What’s interesting about this tool:</strong> With Paymo Plus, you can automate your time tracking completely. All you need to do is download the desktop app, let it track your PC usage, and at the end of each day, categorize all your time entries.</p>\n<p><strong>Pricing:</strong> Free and paid plans from $9.56 user/month</p>\n<h2>19. BRIGHTPOD</h2>\n<p><img class=\"original\" title=\"Project Management Tools\" src=\"https://www.scoro.com/wp-content/uploads/2016/03/Brightpod1.png\" alt=\"brightpod creative project management tool\" /></p>\n<p><strong><a href=\"http://www.brightpod.com/index.html\">Brightpod</a> </strong>is a web-based project management &amp; time tracking software for digital marketing &amp; creative teams.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Projects with tasks, priorities, and milestones</li>\n<li>Editorial calendar</li>\n<li>Logging time under each task</li>\n<li>Individual dashboards for team members</li>\n<li>In-app communication and file-sharing</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> When creating a project, your can use pre-set Pod templates for a faster set-up and customized project experience.</p>\n<p><strong>Pricing:</strong> From $29/month for 10 users</p>\n<h2>20. LIQUIDPLANNER</h2>\n<p><img class=\"alignnone size-full wp-image-16280\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/LiquidPlanner.gif\" alt=\"LiquidPlanner\" width=\"1430\" height=\"754\" /></p>\n<p><a href=\"https://www.liquidplanner.com/\">LiquidPlanner</a> is a collaboration tool that combines project management and time-tracking.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Estimating a realistic range of time to complete tasks</li>\n<li>Commenting on tasks and schedule</li>\n<li>Task-specific collaboration boards</li>\n<li>Adding notes to projects</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> LiquidPlanner has an interesting methodology for project management – it helps teams to set realistic deadlines based on best-case and worst-case scenarios.</p>\n<p><strong>Pricing:</strong> From $39 user/month, billed annually</p>\n<h2>21. WEEKDONE</h2>\n<p><img class=\"original\" title=\"Marketing Project Management Tools\" src=\"https://www.scoro.com/wp-content/uploads/2016/03/Weekdone-tool.png\" alt=\"marketing project tool Weekdone\" /></p>\n<p><strong><a href=\"https://weekdone.com/\">Weekdone</a></strong> is a weekly reporting and goal setting tool for small teams, that enables managers and leaders to get a clear overview of both short- and long-term progress.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Weekly status reporting</li>\n<li>Quarterly Objectives and Key Results (OKRs)</li>\n<li>Graphical metric dashboard</li>\n<li>Private 1-on-1 feedback</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> When most project tools focus on either weekly status reporting or long-term goal-setting, Weekdone covers both of these. Employees can link their weekly tasks with quarterly objectives, so that their work is focused on the right objectives.</p>\n<p><strong>Pricing:</strong> Free for small teams, from $49/month for larger teams</p>\n<h2>22. BITRIX24</h2>\n<p><img class=\"alignnone size-full wp-image-16277\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Bitrix24.png\" alt=\"Bitrix24\" width=\"1357\" height=\"938\" /></p>\n<p><a href=\"https://www.bitrix24.com/\">Bitrix24</a> offers a complete suite of social collaboration, communication and management tools for your team.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Social intranet for internal communication</li>\n<li>Gantt charts</li>\n<li>Employee workload management</li>\n<li>Customer relationship management</li>\n<li>Telephone integration</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Bitrix24 has a large set of features, from traditional project management to integrated telephone and HR system, or internal email.</p>\n<p><strong>Pricing: </strong>Free plan, paid plans with more storage from $39/month</p>\n<p>Check out this <a href=\"https://www.scoro.com/bitrix24-alternative/\">Bitrix24 Alternative</a>!</p>\n<h2>23. REDBOOTH</h2>\n<p><img class=\"original\" title=\"Marketing Project Management Tools\" src=\"https://www.scoro.com/wp-content/uploads/2016/09/online-task-project-management-software.png\" alt=\"marketing project tool Redbooth\" width=\"700\" /><br />\n<strong><a href=\"https://redbooth.com/\">Redbooth</a></strong> lets you manage your projects the way you want, with kanban boards or lists to organize tasks, and time tracking to see where your day goes. Or, if you’re not sure where to start, there’s a library of project templates to start your projects out in a click.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Simple project &amp; task planning</li>\n<li>Shared virtual team workspaces</li>\n<li>HD video conferencing for collaboration</li>\n<li>Productivity reports for managers and team leaders</li>\n<li>iOS or Android applications</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Unlike most PM tools, Redbooth’s business package gives you everything you need to see and hear your team members. You’ll get the tools for unlimited high-definition video conferencing, direct messaging, voice calling, and business chat to stay on top of everyone’s schedule.</p>\n<p><strong>Pricing:</strong> From $5 user/month</p>\n<p><a href=\"https://www.scoro.com/\"><img class=\"alignnone size-full wp-image-39618\" src=\"https://www.scoro.com/wp-content/uploads/2018/04/Scoro2-1.jpg\" sizes=\"(max-width: 1000px) 100vw, 1000px\" srcset=\"https://www.scoro.com/wp-content/uploads/2018/04/Scoro2-1.jpg 1000w, https://www.scoro.com/wp-content/uploads/2018/04/Scoro2-1-768x319.jpg 768w, https://www.scoro.com/wp-content/uploads/2018/04/Scoro2-1-150x62.jpg 150w\" alt=\"Scoro\" width=\"1000\" height=\"415\" /></a></p>\n<h2>24. MICROSOFT PROJECT</h2>\n<p><img class=\"alignnone size-full wp-image-16282\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/MSProject.png\" alt=\"MSProject\" width=\"770\" height=\"419\" /></p>\n<p><a href=\"https://products.office.com/en-GB/project/project-and-portfolio-management-software\">Microsoft Project</a> helps to streamline project, resource, and portfolio management. This project tool is used by 20+ million users.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Project scheduling &amp; costing</li>\n<li>Resource management</li>\n<li>Reporting &amp; business intelligence</li>\n<li>Built-in project templates</li>\n<li>Project timelines</li>\n</ul>\n<p><strong>What’s special about this tool:</strong></p>\n<p><strong>Pricing: </strong>From $30 month/user for cloud platform, from $1,159 for on-premise software (for one PC)</p>\n<p><strong>Check out this <a href=\"https://www.scoro.com/microsoft-project-alternative/\">Microsoft Project alternative</a>!</strong></p>\n<h2>25. BARVAS</h2>\n<p><img class=\"alignnone size-full wp-image-16275\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Barvas.png\" alt=\"Barvas\" width=\"660\" height=\"458\" /></p>\n<p><a href=\"http://www.barvas.com/\">Barvas</a> provides guidance on the key practical steps to take in order to deliver projects successfully.</p>\n<p><strong>Top features: </strong></p>\n<ul>\n<li>Task management with task board</li>\n<li>Mind mapping tools</li>\n<li>Internal communication</li>\n<li>Shared workspace</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Barvas offers a mind mapping feature, excellent for brainstorming or idea generation.</p>\n<p><strong>Pricing: From </strong>$5.85 user/month</p>\n<p>&nbsp;</p>\n<h2>26. CLICKUP</h2>\n<p><img class=\"aligncenter size-full wp-image-17854\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/ClickUp.png\" alt=\"ClickUp project management software\" width=\"1024\" height=\"725\" /></p>\n<p>&nbsp;</p>\n<p><a href=\"https://clickup.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ClickUp</a> is a project management platform that’s focused on efficient task management. Built for teams of all sizes and industries, ClickUp’s fully customizable features make it a must-have for agile teams that want to keep everything from design to development in one intuitive place.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>3 different views (Board, Box, List)</li>\n<li>Assign comments</li>\n<li>52 customizable features for each project (Statuses, Assignees, ClickUps)</li>\n<li>Elegant hierarchy to keep projects simple as they grow</li>\n<li>Tools like ‘Smart Search’ and ‘Smart Estimates’ make you more productive over time</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> ClickUp’s beautiful design and unprecedented user experience in an otherwise dull space echoes what Slack did to communication.</p>\n<p><strong>Pricing:</strong> Free for up to 100MB, Premium for $5 user/month</p>\n<h2>27. AVAZA</h2>\n<p><img class=\"alignnone size-full wp-image-16292\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Avaza.png\" alt=\"Avaza\" width=\"653\" height=\"690\" /></p>\n<p><a href=\"https://www.avaza.com/\">Avaza</a> is a simple project management tool that lets you collaborate on projects with both your team and customers. In addition, you’ll be able to track your time and bill your customers.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Task management on a cardboard-style interface</li>\n<li>Automatic task reminders</li>\n<li>Flexible time tracking and timesheet approvals</li>\n<li>Sending quotes &amp; invoices in moments</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Each project in Avaza has a user-friendly email address. Simply forward emails from your Avaza-registered email address to instantly convert these into tasks.</p>\n<p><strong>Pricing: </strong>Start free with up to 5 projects, $39.95 for unlimited projects</p>\n<p><strong>Read on:</strong> <a href=\"https://www.scoro.com/blog/timesheet-software-for-time-management/\">16 Best Employee Timesheet Software for Efficient Time Management</a></p>\n<h2>28. TEAMWEEK</h2>\n<p><img class=\"original\" title=\"Project Management Tools\" src=\"https://www.scoro.com/wp-content/uploads/2016/03/Teamweek1.png\" alt=\"creativ project management software\" /></p>\n<p><strong><a href=\"https://teamweek.com/\">Teamweek</a></strong> is a timeline-based project management tool that lets teams schedule their upcoming tasks and meetings into a shared calendar.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Simple project management</li>\n<li>Gantt-chart interface</li>\n<li>Drag-and-drop task management</li>\n<li>Scheduling work hour by hour</li>\n<li>Overseeing your team members’ availability</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Teamweek serves as an add-on to more comprehensive project management tools, making time-scheduling super easy. If you’re looking for a cool time planning tool, check it out!</p>\n<p><strong>Pricing:</strong> Free fro up to 5 members, $39 for larger teams</p>\n<h2>29. 10,000FT PLANS</h2>\n<p><img class=\"alignnone size-full wp-image-16293\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/10000ft.jpg\" alt=\"10000ft\" width=\"1015\" height=\"645\" /></p>\n<p><strong><a href=\"https://www.10000ft.com/\">10,000ft Plans</a></strong> is a visual project management application with strong features in resource planning and forecasting.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Resource management</li>\n<li>Project and task management</li>\n<li>Task delegation</li>\n<li>Project and resource matching</li>\n<li>Detailed project reporting</li>\n<li>Time tracking</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> 10,000ft gives a broad overview of every project, making it easier to schedule, plan, and estimate the outcome. With a beautiful interface, this tool is suitable for creative agencies of all sizes.</p>\n<p><strong>Pricing:</strong> From $10 user/month</p>\n<h2>30. TEAMWORK PROJECTS</h2>\n<p><img class=\"alignnone size-full wp-image-16294\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Teamwork.jpg\" alt=\"Teamwork\" width=\"1300\" height=\"732\" /></p>\n<p><strong><a href=\"https://www.teamwork.com/\">Teamwork Projects</a></strong> enhances team collaboration and helps creative teams to organize their work and tasks.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Project planning on Gantt charts</li>\n<li>Time tracking and reporting</li>\n<li>Customizable features on each project</li>\n<li>Task lists with sub-tasks</li>\n<li>Milestone management</li>\n<li>Comprehensive user permissions</li>\n<li>Reporting</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Teamwork Projects is easy to use and packed with features. The tool integrates seamlessly with Teamwork.com’s other two products; Teamwork Desk and Teamwork Chat.</p>\n<p><strong>Pricing:</strong> From $49/month</p>\n<p>&nbsp;</p>\n<h2>31. FREEDCAMP</h2>\n<p><img class=\"alignnone size-full wp-image-16296\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Freedcamp.png\" alt=\"Freedcamp\" width=\"820\" height=\"520\" /></p>\n<p>Freedcamp will help you, whether you have wedding plans, organizing a camping trip or leading a work project. Working from home or at the office.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Task lists &amp; status management</li>\n<li>Shared team calendar</li>\n<li>Project templates</li>\n<li>Issue tracker</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Like sticky notes? You’re in luck! Freedcamp uses kanban board with sticky notes to manage tasks.</p>\n<p><strong>Pricing: </strong>Free plan, paid add-ons</p>\n<h2>32. ADVANTAGE</h2>\n<p><img class=\"alignnone size-full wp-image-16421\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Advantage-Agency-Project-Management-Software.jpg\" alt=\"Advantage Project Management Software\" width=\"800\" height=\"410\" /></p>\n<p><strong><a href=\"http://www.gotoadvantage.com/\">Advantage</a> </strong>is a project management software designed for a great user experience – clean interface and simple functionality.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Manage time, tasks, and expenses</li>\n<li>Automate and expedite work</li>\n<li>Manage media</li>\n<li>Manage prospect and client activities</li>\n<li>Get thorough reports and forecasts</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Advantage is most suitable for agencies.</p>\n<p><strong>Pricing: </strong>Upon request</p>\n<h2>33. EASY PROJECT</h2>\n<p><img class=\"alignnone size-full wp-image-16298\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/EasyProject.png\" alt=\"EasyProject\" width=\"1679\" height=\"946\" /></p>\n<p><a href=\"https://www.easyproject.com/\">Easy Project</a> is easy, visual and intuitive project management software.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Gantt chart</li>\n<li>Risk management</li>\n<li>Portfolio management</li>\n<li>Project templates</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Easy Project is a fit for a number of different industries, from IT &amp; software development to education or voluntary projects.</p>\n<h2>34. PROWORKFLOW</h2>\n<p><img class=\"alignnone size-full wp-image-16303\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/ProWorkflow.png\" alt=\"ProWorkflow\" width=\"915\" height=\"632\" /></p>\n<p><a href=\"https://www.proworkflow.com/\">ProWorkflow</a> makes it a breeze to assign staff, track time or reschedule projects.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Dashboard for an overview of your workload</li>\n<li>Allocate tasks</li>\n<li>View workload across teams</li>\n<li>Manage contacts</li>\n<li>Share files</li>\n<li>Manage invoices and quotes</li>\n</ul>\n<p><strong>What’s special about this tool: </strong>Convenient mobile application lets your track time, communicate, and complete tasks on the move.</p>\n<p><strong>Pricing:</strong> From $22 month/user for teams</p>\n<p>Check out this <a href=\"https://www.scoro.com/proworkflow-alternative/\">ProWorkflow alternative</a>!</p>\n<h2>35. SMARTSHEET</h2>\n<p><img class=\"alignnone size-full wp-image-16304\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Smartsheet.png\" alt=\"Smartsheet\" width=\"908\" height=\"640\" /></p>\n<p><a href=\"https://www.smartsheet.com/\">Smartsheet</a> is excellent for managing and automating collaborative work.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Project plans and schedule</li>\n<li>Program rollups</li>\n<li>Resource management</li>\n<li>Budget tracking</li>\n<li>Strategic planning</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Smartsheet is trusted by over 50% of the Fortune 500.</p>\n<p><strong>Pricing:</strong> From $15 month/user for teams</p>\n<p>Check out this <a href=\"https://www.scoro.com/smartsheet-alternative/\">Smartsheet alternative</a>!</p>\n<h2>36. CELOXIS</h2>\n<p><img class=\"alignnone size-full wp-image-16309\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Celoxis.png\" alt=\"Celoxis\" width=\"899\" height=\"600\" /></p>\n<p><a href=\"http://www.celoxis.com/\">Celoxis</a> offers a comprehensive project management software for enterprises.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Advanced scheduling</li>\n<li>Gantt charts</li>\n<li>Project tracking</li>\n<li>Financial management</li>\n<li>Reporting analytics</li>\n</ul>\n<p><strong>What’s special about this tool:</strong></p>\n<p><strong>Pricing:</strong> From $25 user/month for cloud solution, $450/user for on-premise solution</p>\n<h2>37. INSIGHTLY</h2>\n<p><img class=\"alignnone size-full wp-image-16307\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Insightly.jpeg\" alt=\"Insightly\" width=\"1366\" height=\"626\" /></p>\n<p><a href=\"https://www.insightly.com/\">Insightly</a> is a powerful CRM with a project and business management feature set.</p>\n<p><strong>Top features: </strong></p>\n<ul>\n<li>Manage leads, contacts, organizations, partners, vendors and suppliers</li>\n<li>Track project activity and performance against milestones</li>\n<li>Look at your business any way you want with task dashboard, activity sets, reports and more</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Insightly CRM is tailored for any level of experience – from first time CRM users to sales experts.</p>\n<p><strong>Pricing: </strong>From $15 month/user for teams</p>\n<h2>38. COPPER PROJECT</h2>\n<p><img class=\"alignnone size-full wp-image-16305\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Copper.png\" alt=\"Copper\" width=\"1012\" height=\"791\" /></p>\n<p><a href=\"http://www.copperproject.com/\">Copper Project</a> simplifies work processes as an affordable and invaluable executive tool, from Large multi-national projects to small home-based ventures.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Collaborative project and task views</li>\n<li>Project templates</li>\n<li>Task timers</li>\n<li>File sharing</li>\n</ul>\n<p><strong>What’s special about this tool: </strong>Copper offers simplicity in project resource management and communication.</p>\n<p><strong>Pricing: </strong>From $49/month</p>\n<h2>39. CLARIZEN</h2>\n<p><img class=\"alignnone size-full wp-image-16312\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Clarizen-1.png\" alt=\"Clarizen\" width=\"1024\" height=\"574\" /></p>\n<p><a href=\"https://www.clarizen.com/\">Clarizen</a>‘s cloud-based project management software has a single goal: to help move your business forward.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Unlimited number of projects</li>\n<li>Automated and repeatable processes, alerts and workflows</li>\n<li>Social collaboration</li>\n<li>Budget tracking &amp; expense management</li>\n</ul>\n<p><strong>What’s special about this tool: </strong>Clarizen offers configurable workflows – customize Clarizen to fit how your enterprise does business, not the opposite.</p>\n<p><strong>Pricing: </strong>From $60 user/month</p>\n<h2>40. VOLERRO</h2>\n<p><img class=\"alignnone size-full wp-image-16383\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/Volerro-Project-Management-Software.png\" alt=\"Volerro Project Management Software\" width=\"800\" height=\"535\" /></p>\n<p>&nbsp;</p>\n<p><a href=\"http://volerro.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Volerro</a> is a little non-traditional as far as project management services go, in that it uses what it calls “boards” to contain different phases of a project.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Conferencing tools, chat box</li>\n<li>Kanban-style project management</li>\n<li>Collaboration tools</li>\n<li>Image-markup tools</li>\n</ul>\n<p><strong>What’s special about this tool: </strong>Volerro offers most of the tools a team needs to work together while focusing mainly on communication tools.</p>\n<p><strong>Pricing: </strong>Free for up to 3 projects, starting from $7.99 user/month for business teams.</p>\n<p>&nbsp;</p>\n<h2>41. HIGHRISE</h2>\n<p><img class=\"alignnone size-full wp-image-17525\" src=\"https://www.scoro.com/wp-content/uploads/2016/03/Highrise-CRM.png\" alt=\"Highrise\" width=\"800\" height=\"486\" /></p>\n<p><a href=\"https://highrisehq.com/\"><strong>Highrise</strong></a> is the just-right, more thoughtful way to keep track of the people, conversations, and tasks that are the lifelines of your business</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Store important emails</li>\n<li>Attach documents and files</li>\n<li>Control who sees what with easy privacy settings</li>\n<li>Keep track of important tasks</li>\n<li>Assign tasks to team members</li>\n</ul>\n<p><strong>What’s special about this tool:</strong> Highrise was designed to simplify your workflow, no more, no less – as simple as that!</p>\n<p><strong>Pricing:</strong> From $24/month for small teams, from $49/month for larger teams</p>\n<p><strong>Check out this <a href=\"https://www.scoro.com/highrise-alternative/\">Highrise Alternative</a>!</strong></p>\n<h2>42. ACTIVE COLLAB</h2>\n<p><img class=\"alignnone size-full wp-image-16273\" src=\"https://www.scoro.com/wp-content/uploads/2017/02/ActiveCollab.png\" alt=\"ActiveCollab\" width=\"1450\" height=\"825\" /></p>\n<p><a href=\"https://www.activecollab.com/\">Active Collab</a> helps your team stay organized while you outgrow email.</p>\n<p><strong>Top features:</strong></p>\n<ul>\n<li>Time tracking and invoicing</li>\n<li>Gantt-like timeline for planning</li>\n<li>Kanban cards</li>\n<li>Creating tasks with multiple users and deadlines</li>\n<li>A shared team calendar for collaboration</li>\n</ul>\n<p><strong>What’s interesting about this tool:</strong> Active Collab is especially great for collaboration, with functions like collaborative text editing and @mentions for communication.</p>\n<p>Source : <a href=\"https://www.scoro.com/blog/best-project-management-software-list/\">https://www.scoro.com/blog/best-project-management-software-list/</a></p>\n",
          "slug": "891",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/09/download-3.png"
          },
          "link": "https://emolike.net/2018/09/11/891/",
          "date": "2018-09-11T10:57:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Project Management"
              },
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjg4Nw==",
        "node": {
          "id": "cG9zdDo4ODc=",
          "title": "30 Things to do After Installing Ubuntu 18.04 LTS",
          "content": "<p><iframe title=\"30 Things to do After Installing Ubuntu 18.04 LTS (all-in-one video)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/BLVtxpm5c2A?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">This is a list of 30 things to do after installing Ubuntu Bionic Beaver to make your Ubuntu Linux experience great.\r\n\r\n1:15 Configure the update manager.\r\n5:03 Install Drivers\r\n5:45 Install Synaptic package manager\r\n6:32 Install additional codecs, MS fonts, flash and a few more useful packages.\r\n6:54 Install Microcode\r\n9:40 Activate Minimize to dock.\r\n11:00 Decrease Swap Use\r\n12:40 Enable Drive Cache\r\n14:01 Reduce SSD Writes\r\n15:45 Set up firewall\r\n16:57 Configure Ubuntu settings\r\n18:47 Move apps button to top\r\n19:25 Install Gnome tweak tool\r\n19:47 Install Gnome Extensions\r\n21:04 Install Arc menu\r\n22:36 Install additional themes\r\n26:38 Change Firefox settings (open last closed tabs, add search field)\r\n27:37 Enable Netflix Support in Firefox\r\n28:16 Tweak LibreOffice\r\n29:54 Enable Google Drive integration\r\n30:48 Schedule Backups\r\n32:06 Remove unnecessary software\r\n33:28 Turn Off Startup Applications\r\n34:18 Clean system (Bleachbit)\r\n35:58 Install VLC\r\n37:28 Install Google Chrome\r\n38:28 Install Dropbox\r\n39:41 Install Skype\r\n40:27 Install Spotify\r\n40:43 Laptop Tweaks\r\n\r\n# Dropbox registration https://db.tt/rrcs7agl\r\n\r\n# Mentioned videos:\r\n\r\nUbuntu 17.10 review https://youtu.be/gdX606Hjt04\r\n\r\nLinux Mint videos https://www.youtube.com/playlist?list...\r\n\r\n15 things to do after installing Linux Mint https://youtu.be/RXV6FXVL6xI\r\n\r\nBack up in Linux https://www.youtube.com/playlist?list...\r\n\r\nConvert video to images with VLC https://youtu.be/4NuK7wSQUNs\r\n\r\n# Code and packages used in the video:\r\n\r\ngrep Package /var/lib/apt/lists/archive.canonical.com_ubuntu_dists_bionic_partner_binary-amd64_Packages\r\nubuntu-restricted-extras, libdvd-pkg, openjdk-8-jre, flashplugin-installer\r\nsudo dpkg-reconfigure libdvd-pkd\r\napt-xapian-index\r\ngsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize' \r\ngsettings reset org.gnome.shell.extensions.dash-to-dock click-action\r\ncat /proc/sys/vm/swappiness\r\ngedit admin:///etc/sysctl.conf\r\nvm.swappiness = 10\r\ngedit admin:///etc/fstab\r\nnoatime\r\nlibavcodec-extra\r\nsudo sed -i 's/NoDisplay=true/NoDisplay=false/g' /etc/xdg/autostart/*.desktop\r\napt://vlc\r\ntlp, tlp-rdw</pre>\n<p><iframe title=\"Ubuntu 18.04: Themes, Icons, Layouts\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/dQh-VxkNZKA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n",
          "slug": "30-things-to-do-after-installing-ubuntu-18-04-lts",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/11/30-things-to-do-after-installing-ubuntu-18-04-lts/",
          "date": "2018-09-11T10:50:04",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjg3OQ==",
        "node": {
          "id": "cG9zdDo4Nzk=",
          "title": "These 5 “clean code” tips will dramatically improve your productivity",
          "content": "<figure id=\"4d2e\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n</div>\n</figure>\n<p id=\"eeab\" class=\"graf graf--p graf-after--p\">Most people who code naturally know what quality code should look or <em class=\"markup--em markup--p-em\">feel </em>like. It should be very easy to read and understand quickly, there shouldn’t be any major faults, edge cases should be handled, and it should be “self documenting”. Still, many people miss the mark when trying (hopefully) to write quality code.</p>\n<p id=\"9c7a\" class=\"graf graf--p graf-after--p\">The cause of the mistakes are understandable in many cases. It can be challenging to predict how people will interpret your code, whether they will find it easy to read or an absolute nightmare. Not only that, once your project gets very big even <strong class=\"markup--strong markup--p-strong\">you</strong> might not be able to read it!</p>\n<p id=\"9257\" class=\"graf graf--p graf-after--p\">In such a case, it’s always good to establish some principals that you can rely on. Some go-to rules that you can always reference whenever you’re designing or writing code.</p>\n<p id=\"8ac8\" class=\"graf graf--p graf-after--p\">The following 5 clean coding principals are the ones I code by! They’ve given me a massive productivity boost in my work and helped both myself and my colleagues be able to easily interpret and expand the code base which I’ve worked on. Hopefully they help you code faster and better too!</p>\n<h3 id=\"cff7\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">If it isn’t tested, it’s broken</strong></h3>\n<p id=\"8e4d\" class=\"graf graf--p graf-after--h3\">Test, test, test. We know we should always do it, but sometimes we cut corners so we can push the project out faster. But without thorough testing, how will you <strong class=\"markup--strong markup--p-strong\">100%</strong> fully know that the code works? Yes there are very simple pieces of code, but one is always surprised when that crazy edge case comes up that you thought you didn’t need to test for!</p>\n<p id=\"28c2\" class=\"graf graf--p graf-after--p\">Do yourself and everyone on your team a favour and regularly test the code you write. You’ll want to test in a <em class=\"markup--em markup--p-em\">coarse to fine </em>style. Start small with unit tests to make sure every small part works on its own. Then slowly start testing the different subsystems together working your way up towards testing the whole new system end to end. Testing in this way allows you to easily track where the system breaks, since you can easily verify each individual component or the small subsystems as the source of any issues.</p>\n<h3 id=\"13b1\" class=\"graf graf--h3 graf-after--p\">Choose meaningful names</h3>\n<p id=\"7cc4\" class=\"graf graf--p graf-after--h3\">This is what makes code self-documenting. When you read over your old code, you shouldn’t have to look over every little comment and run every small piece of code to figure out what it all does!</p>\n<p id=\"b5bc\" class=\"graf graf--p graf-after--p\">The code should <em class=\"markup--em markup--p-em\">roughly</em> read like plain English. This is especially true for variable names, classes, and functions. Those three items should always have names that are self-explanatory. Rather than use a default name like “x” for example, call it “width” or “distance” or whatever the variable is supposed to represent in “read-world” terms. Coding in “real-world” terms will help make your code read in that way</p>\n<h3 id=\"a792\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">Classes and functions should be small and obey the Single Responsibility Principle (SRP)</strong></h3>\n<p id=\"86ba\" class=\"graf graf--p graf-after--h3\">Small classes and functions make code approximately 9832741892374 times easier to read….</p>\n<p id=\"a107\" class=\"graf graf--p graf-after--p\">But seriously they really do. First off, they allow for very isolated unit testing. If the piece of code you are testing is small, it’s easy to source and debug any issues that come up in the test or during deployment. Small classes and functions also allow for better readability. Instead of having a giant block of code with many loops and variables, you can reduce that block to a function that runs several <em class=\"markup--em markup--p-em\">smaller</em> functions. You can then name each of those functions according to what they do and voila, human readable code!</p>\n<p id=\"a5ab\" class=\"graf graf--p graf-after--p\">SRP gives you similar benefits. One responsibility means you only have to test a handful of edge cases and those cases are quite easy to debug. In addition it’s quite easy to name the function so it has real-world meaning. Since it only has one single purpose, it’ll just be named after it’s purpose, rather than trying to name a function that’s trying to accomplish so many different things.</p>\n<h3 id=\"3dae\" class=\"graf graf--h3 graf-after--p\">Catch and handle exceptions, even if you don’t think you need to</h3>\n<p id=\"0448\" class=\"graf graf--p graf-after--h3\">Exceptions in code are usually edges case or errors that we would like to handle in our own specific way. For example, normally when an error is raised the program will stop; this definitely will not work for code we have deployed to production that is serving users! We’ll want to handle that error separately, perhaps try to see if it’s super critical or if we should just pass over it.</p>\n<p id=\"4284\" class=\"graf graf--p graf-after--p\">You should always be catching and handling exceptions specifically, even if you don’t think you need to. Better to be safe than sorry. Exception handling will give you a better sense of order and control over your code, since you know <em class=\"markup--em markup--p-em\">specifically</em> what will happen if a certain exception is triggered or a piece of code fails. Having a deeper understand of your code like this makes it easier to debug and makes your code more fault tolerant.</p>\n<h3 id=\"6b26\" class=\"graf graf--h3 graf-after--p\">Logs, logs, logs</h3>\n<p id=\"bc59\" class=\"graf graf--p graf-after--h3\">Log it. What you may ask? …. Everything that’s what! There’s no such thing as too much logs!</p>\n<p id=\"81fa\" class=\"graf graf--p graf-after--p\">Logs are your absolute number 1 source for debugging your code and monitoring your application when it’s in production. You should be logging every major “step” your program takes, any important calculations it makes, any errors, exceptions, or out of the ordinary results. It may also be useful to log the date and time that these events occur for easy tracking. All of this will make it easy to trace exactly which <em class=\"markup--em markup--p-em\">step in the pipeline the program failed</em>.</p>\n<p id=\"076b\" class=\"graf graf--p graf-after--p\">Many common programming languages such as Python come with their own logging libraries that have some very useful functions you can play with. If your application is to run as a SaaS app, then you may want to consider off-device, centralised logging. This way if one of your servers dies you can easily recover the logs!</p>\n<h3 id=\"0fa7\" class=\"graf graf--h3 graf-after--p\">TL;DR</h3>\n<p id=\"0e2f\" class=\"graf graf--p graf-after--h3\">(1) If it isn’t tested, it’s broken</p>\n<p id=\"9e19\" class=\"graf graf--p graf-after--p\">(2) Choose meaningful names</p>\n<p id=\"0175\" class=\"graf graf--p graf-after--p\">(3) Classes and functions should be small and obey the Single Responsibility Principle (SRP)</p>\n<p id=\"20d8\" class=\"graf graf--p graf-after--p\">(4) Catch and handle exceptions, even if you don’t think you need to</p>\n<p id=\"5c6c\" class=\"graf graf--p graf-after--p graf--trailing\">(5) Logs, logs, logs</p>\n<hr />\n<p>Source : <a href=\"https://medium.com/@george.seif94/these-5-clean-code-tips-will-dramatically-improve-your-productivity-b20c152783b\">https://medium.com/@george.seif94/these-5-clean-code-tips-will-dramatically-improve-your-productivity-b20c152783b</a></p>\n",
          "slug": "these-5-clean-code-tips-will-dramatically-improve-your-productivity",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/09/1V3VfEgYhjqOxQHjthchsNA.png"
          },
          "link": "https://emolike.net/2018/09/08/these-5-clean-code-tips-will-dramatically-improve-your-productivity/",
          "date": "2018-09-08T18:02:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjg2Nw==",
        "node": {
          "id": "cG9zdDo4Njc=",
          "title": "Why and how to setup your own Cloud on Bare-Metal",
          "content": "<p id=\"8adc\" class=\"graf graf--p graf-after--h3\">In this article I will be explaining the various benefits that coming with deploying your own cloud, which software to use, and how to proceed with setting everything up.</p>\n<p id=\"fcaa\" class=\"graf graf--p graf-after--p\">The benefits of building your own cloud includes control over hardware, better performance, and is also much more cost effective. Renting bare-metal hardware from providers is a very efficient approach of consuming compute resources as these providers offer hardware at a lower performance to cost ratio than traditional cloud providers who maintain an additional layer of management on Computing resources.</p>\n<p id=\"b40b\" class=\"graf graf--p graf-after--p\">Consuming Bare-Metal resources is quite the challenge, as each server has lots of power to spare — running services directly on Bare-Metal would waste resources, especially if the machines contain modern performance rates. It is more efficient to run multiple services in multiple Virtual Machines, you can utilize software such as OpenNebula in order to run these Virtual Machines with ease.</p>\n<p id=\"c8f1\" class=\"graf graf--p graf-after--p\">A cloud also allows you to maintain everything under one center area of control, allowing easier management of IT Resources especially as the cloud grows.</p>\n<p id=\"6c0d\" class=\"graf graf--p graf-after--p\">In this article I will explain how you can proceed with deploying your own OpenNebua Cloud, in this guide we will be using Packet.net’s Bare-Metal Service, but you can use any Dedicated Server provider available in the market.</p>\n<h3 id=\"cd6b\" class=\"graf graf--h3 graf-after--p\">Introduction</h3>\n<p id=\"6f32\" class=\"graf graf--p graf-after--h3\"><a class=\"markup--anchor markup--p-anchor\" href=\"https://opennebula.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://opennebula.org/\">OpenNebula </a>is an Open Source Cloud Management Platform that allows you to build Private Clouds with ease.<br />\n​<br />\nOpenNebula is an alternative to OpenStack, and covers the majority of functionality available by OpenStack. OpenNebula is a mature platform and describes itself as “Enterprise Ready” with a wide user-base and proven stability/scale-ability.</p>\n<h3 id=\"31b9\" class=\"graf graf--h3 graf-after--p\">Preparation</h3>\n<p id=\"091e\" class=\"graf graf--p graf-after--h3\">This guide shows how to deploy and install OpenNebula in a one-node configuration. Additional hosts can easily be prepared and added in a future stage by following the “Installing OpenNebula KVM Node” section in the bottom of this article.</p>\n<p id=\"50d6\" class=\"graf graf--p graf-after--p\">While OpenNebula is very lightweight and can be used on a <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.packet.net/bare-metal/servers/tiny/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.packet.net/bare-metal/servers/tiny/\">t1.small</a>($.07/hr) device with no issues, we will use a <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.packet.net/bare-metal/servers/compute/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.packet.net/bare-metal/servers/compute/\">c1.small</a> server ($.40/hr) with Ubuntu 16.04 in this guide. The single machine will host OpenNebula’s Management Interface as well as the KVM Hypervisor to run Virtual Machines in the same node.</p>\n<p id=\"2795\" class=\"graf graf--p graf-after--p\">When deploying your server you should select a /29 IPv4 subnet (4 Usable IP’s), which will be used to assign VM’s. This saves you the trouble of requesting additional IP’s post deployment using Packet’s <a class=\"markup--anchor markup--p-anchor\" href=\"https://help.packet.net/technical/networking/elastic-ips\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://help.packet.net/technical/networking/elastic-ips\">Elastic IPv4</a> feature.<br />\n​</p>\n<h3 id=\"7520\" class=\"graf graf--h3 graf-after--p\">Selecting a subnet size</h3>\n<p id=\"2929\" class=\"graf graf--p graf-after--h3\">​</p>\n<figure id=\"057a\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*aHAFU8wNdQjYyQAV.\" data-width=\"486\" data-height=\"197\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"30\"></canvas><img class=\"alignnone size-full wp-image-868\" src=\"https://emolike.net/wp-content/uploads/2018/09/0aHAFU8wNdQjYyQAV..png\" width=\"486\" height=\"197\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/0aHAFU8wNdQjYyQAV..png 486w, https://emolike.net/wp-content/uploads/2018/09/0aHAFU8wNdQjYyQAV.-300x122.png 300w\" sizes=\"(max-width: 486px) 100vw, 486px\" /></div>\n</div>\n</figure>\n<p id=\"fc38\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"c21b\" class=\"graf graf--p graf-after--p\">Let’s go ahead and deploy this node:<br />\n​</p>\n<p id=\"d62c\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"dc33\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*7acfUWD3IuY9JjT0.\" data-width=\"1164\" data-height=\"397\" data-action=\"zoom\" data-action-value=\"0*7acfUWD3IuY9JjT0.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"25\"></canvas><img class=\"alignnone size-full wp-image-869\" src=\"https://emolike.net/wp-content/uploads/2018/09/07acfUWD3IuY9JjT0..png\" width=\"1164\" height=\"397\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/07acfUWD3IuY9JjT0..png 1164w, https://emolike.net/wp-content/uploads/2018/09/07acfUWD3IuY9JjT0.-300x102.png 300w, https://emolike.net/wp-content/uploads/2018/09/07acfUWD3IuY9JjT0.-768x262.png 768w, https://emolike.net/wp-content/uploads/2018/09/07acfUWD3IuY9JjT0.-1024x349.png 1024w, https://emolike.net/wp-content/uploads/2018/09/07acfUWD3IuY9JjT0.-604x206.png 604w\" sizes=\"(max-width: 1164px) 100vw, 1164px\" /></div>\n</div>\n</figure>\n<p id=\"717a\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"9747\" class=\"graf graf--p graf-after--p\">It should take about 10 minutes for your server to deploy and install. Once the server is provisioned you can SSH into the device by using authorized SSH keys.</p>\n<h3 id=\"93be\" class=\"graf graf--h3 graf-after--p\">Install OpenNebula</h3>\n<p id=\"1083\" class=\"graf graf--p graf-after--h3\">First, add OpenNebula to the apt-get repository &#8211;</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># wget -q -O- https://downloads.opennebula.org/repo/repo.key | apt-key add -\r\n​\r\nOK\r\n​\r\n# apt-get install apt-transport-https\r\n# echo \"deb https://downloads.opennebula.org/repo/5.4/Ubuntu/16.04 stable opennebula\" &gt; /etc/apt/sources.list.d/opennebula.list</pre>\n<p id=\"c4d4\" class=\"graf graf--p graf-after--pre\">Then install OpenNebula and dependencies (OpenNebula Management Interface)</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># apt-get update\r\n​\r\n# apt-get install -y opennebula opennebula-sunstone opennebula-gate opennebula-flow\r\n# /usr/share/one/install_gems\r\n​\r\nPRESS [ENTER] To continue</pre>\n<h3 id=\"09e5\" class=\"graf graf--h3 graf-after--pre\">Utilize MySQL Database instead of SQLite (optional but recommended for production workloads).</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># apt-get install -y mysql-server\r\n​\r\nWhile not mandatory, it is highly recommended that you set a password for the MySQL administrative \"root\" user.\r\n</pre>\n<p id=\"44d7\" class=\"graf graf--p graf-after--pre\">After MySQL is installed you need to add privileges to oneadmin.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># mysql -u root -p\r\nEnter password:\r\nWelcome to the MySQL monitor. [...]\r\n​\r\nmysql&gt; GRANT ALL PRIVILEGES ON opennebula.* TO 'oneadmin' IDENTIFIED BY 'THEPASSWORD';\r\n​\r\nQuery OK, 0 rows affected (0.00 sec)\r\n​\r\nmysql&gt; SET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;\r\n​\r\nmysql&gt; exit</pre>\n<p id=\"22ac\" class=\"graf graf--p graf-after--pre\">The final step in enabling MySQL includes modifying the oned.conf (ONE Daemon Configuration) file.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># nano /etc/one/oned.conf\r\n​\r\nNavigate down to DB Section, and comment out DB = [ backend = “sqlite” ] \r\n​\r\nUncomment the MySQL Section and enter the password you set via GRANT ALL PRIVILEGES.</pre>\n<h3 id=\"0529\" class=\"graf graf--h3 graf-after--p\">Starting OpenNebula</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># systemctl start opennebula\r\n# systemctl start opennebula-sunstone</pre>\n<p id=\"e5fd\" class=\"graf graf--p graf-after--pre\">Test if OpenNebula is running properly:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># oneuser show\r\nUSER 0 INFORMATION\r\nID              : 0\r\nNAME            : oneadmin\r\nGROUP           : oneadmin\r\nPASSWORD        : 3bc15c8aae3e4124dd409035f32ea2fd6835efc9\r\nAUTH_DRIVER     : core\r\nENABLED         : Yes\r\n​\r\nThe above text means that OpenNebula is operating normally, and no additional changes need to be made.</pre>\n<h3 id=\"5d59\" class=\"graf graf--h3 graf-after--p\">Log into OpenNebula Sunstone Interface</h3>\n<p id=\"1948\" class=\"graf graf--p graf-after--h3\">This will output your OpenNebula Username:Password which can be used to Manage your deployment.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># cat /var/lib/one/.one/one_auth\r\n​\r\noneadmin:Vu29Sk39zMn9</pre>\n<p id=\"8514\" class=\"graf graf--p graf-after--pre\">Now navigate to <a class=\"markup--anchor markup--p-anchor\" href=\"http://147.75.x.x:9869/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://147.75.x.x:9869/\">http://147.75.x.x:9869</a> to find the user interface.</p>\n<p id=\"42ab\" class=\"graf graf--p graf-after--p\">​</p>\n<h3 id=\"4087\" class=\"graf graf--h3 graf-after--p\">Install OpenNebula KVM Node</h3>\n<p id=\"a929\" class=\"graf graf--p graf-after--h3\">You can repeat these steps in additional nodes to add additional nodes to your cluster.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># sudo apt-get install -y opennebula-node\r\n​\r\nCountry of origin for the keyboard: 29 (US = 29)\r\n​\r\n# sudo service libvirt-bin restart</pre>\n<p id=\"9eb7\" class=\"graf graf--p graf-after--pre\">Passwordless SSH</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># sudo su oneadmin\r\n​\r\n$ cd ~/.ssh\r\n​\r\nWe need to ensure that the front-end can login to each node without any input, when adding additional nodes you need to sync the front-end .ssh folder with each node. \r\n​\r\n$ cp id_rsa.pub authorized_keys                                                                                                                         This step should log you into the same user account using SSH without any input other than adding the host to your known_hosts file.\r\n​\r\n$ ssh &lt;hostname&gt;\r\n​\r\nAre you sure you want to continue connecting (yes/no)? Yes \r\nWelcome to Ubuntu 16.04.3 LTS \r\n​\r\n$ exit\r\n​\r\nConnection to &lt;hostname&gt; closed.\r\n​\r\n$ exit\r\n​\r\nNow we are back to our root account.</pre>\n<h3 id=\"34c7\" class=\"graf graf--h3 graf-after--p\">Create a Network Bridge</h3>\n<p id=\"11f3\" class=\"graf graf--p graf-after--h3\">You can follow this guide to create a network bridge for KVM on Bonded Networks with Packet.net.</p>\n<p id=\"9a24\" class=\"graf graf--p graf-after--p\"><a class=\"markup--anchor markup--p-anchor\" href=\"https://help.packet.net/technical/networking/kvm-qemu-bridging-on-a-bonded-network\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://help.packet.net/technical/networking/kvm-qemu-bridging-on-a-bonded-network\">https://help.packet.net/technical/networking/kvm-qemu-bridging-on-a-bonded-network</a></p>\n<p id=\"d137\" class=\"graf graf--p graf-after--p\">​</p>\n<h3 id=\"3ad1\" class=\"graf graf--h3 graf-after--p\">Adding KVM Node to Sunstone</h3>\n<p id=\"5a04\" class=\"graf graf--p graf-after--h3\">Navigate to Infrastructure -&gt; Hosts -&gt; +</p>\n<p id=\"1aed\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"7299\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*nluXetgoXzxpvuSP.\" data-width=\"1201\" data-height=\"595\" data-action=\"zoom\" data-action-value=\"0*nluXetgoXzxpvuSP.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"36\"></canvas><img class=\"alignnone size-full wp-image-870\" src=\"https://emolike.net/wp-content/uploads/2018/09/0nluXetgoXzxpvuSP..png\" width=\"1200\" height=\"594\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/0nluXetgoXzxpvuSP..png 1200w, https://emolike.net/wp-content/uploads/2018/09/0nluXetgoXzxpvuSP.-300x149.png 300w, https://emolike.net/wp-content/uploads/2018/09/0nluXetgoXzxpvuSP.-768x380.png 768w, https://emolike.net/wp-content/uploads/2018/09/0nluXetgoXzxpvuSP.-1024x507.png 1024w, https://emolike.net/wp-content/uploads/2018/09/0nluXetgoXzxpvuSP.-545x270.png 545w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></div>\n</div>\n</figure>\n<p id=\"5d4d\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"2f00\" class=\"graf graf--p graf-after--p\">Type in your hostname:<br />\n​<br />\n​</p>\n<p id=\"e603\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"9353\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*5ZxUR0nTl8goN8LT.\" data-width=\"960\" data-height=\"253\" data-action=\"zoom\" data-action-value=\"0*5ZxUR0nTl8goN8LT.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"18\"></canvas><img class=\"alignnone size-full wp-image-871\" src=\"https://emolike.net/wp-content/uploads/2018/09/05ZxUR0nTl8goN8LT..png\" width=\"960\" height=\"253\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/05ZxUR0nTl8goN8LT..png 960w, https://emolike.net/wp-content/uploads/2018/09/05ZxUR0nTl8goN8LT.-300x79.png 300w, https://emolike.net/wp-content/uploads/2018/09/05ZxUR0nTl8goN8LT.-768x202.png 768w, https://emolike.net/wp-content/uploads/2018/09/05ZxUR0nTl8goN8LT.-604x159.png 604w\" sizes=\"(max-width: 960px) 100vw, 960px\" /></div>\n</div>\n</figure>\n<p id=\"d03c\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"7c7b\" class=\"graf graf--p graf-after--p\">Press refresh after a few seconds pass.</p>\n<p id=\"94db\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"89e6\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*tM4YYxp0GTDKfd_f.\" data-width=\"947\" data-height=\"278\" data-action=\"zoom\" data-action-value=\"0*tM4YYxp0GTDKfd_f.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"21\"></canvas><img class=\"alignnone size-full wp-image-872\" src=\"https://emolike.net/wp-content/uploads/2018/09/0tM4YYxp0GTDKfd_f..png\" width=\"947\" height=\"278\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/0tM4YYxp0GTDKfd_f..png 947w, https://emolike.net/wp-content/uploads/2018/09/0tM4YYxp0GTDKfd_f.-300x88.png 300w, https://emolike.net/wp-content/uploads/2018/09/0tM4YYxp0GTDKfd_f.-768x225.png 768w, https://emolike.net/wp-content/uploads/2018/09/0tM4YYxp0GTDKfd_f.-604x177.png 604w\" sizes=\"(max-width: 947px) 100vw, 947px\" /></div>\n</div>\n</figure>\n<p id=\"23b1\" class=\"graf graf--p graf-after--figure\">​</p>\n<h3 id=\"c0a4\" class=\"graf graf--h3 graf-after--p\">Adding a Network Subnet</h3>\n<p id=\"1271\" class=\"graf graf--p graf-after--h3\">Navigate to Network -&gt; Virtual Networks -&gt; +</p>\n<p id=\"d7d5\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"3904\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*cRfPsTKgrgT4BNGc.\" data-width=\"1201\" data-height=\"370\" data-action=\"zoom\" data-action-value=\"0*cRfPsTKgrgT4BNGc.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"21\"></canvas><img class=\"alignnone size-full wp-image-873\" src=\"https://emolike.net/wp-content/uploads/2018/09/0cRfPsTKgrgT4BNGc..png\" width=\"1200\" height=\"369\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/0cRfPsTKgrgT4BNGc..png 1200w, https://emolike.net/wp-content/uploads/2018/09/0cRfPsTKgrgT4BNGc.-300x92.png 300w, https://emolike.net/wp-content/uploads/2018/09/0cRfPsTKgrgT4BNGc.-768x236.png 768w, https://emolike.net/wp-content/uploads/2018/09/0cRfPsTKgrgT4BNGc.-1024x315.png 1024w, https://emolike.net/wp-content/uploads/2018/09/0cRfPsTKgrgT4BNGc.-604x186.png 604w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></div>\n</div>\n</figure>\n<p id=\"b483\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"c8b9\" class=\"graf graf--p graf-after--p\">Type your bridge name in Conf Tab.</p>\n<p id=\"549f\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"3b70\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*3AF7GJ4Qt0jyIRzz.\" data-width=\"968\" data-height=\"385\" data-action=\"zoom\" data-action-value=\"0*3AF7GJ4Qt0jyIRzz.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"28\"></canvas><img class=\"alignnone size-full wp-image-874\" src=\"https://emolike.net/wp-content/uploads/2018/09/03AF7GJ4Qt0jyIRzz..png\" width=\"968\" height=\"385\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/03AF7GJ4Qt0jyIRzz..png 968w, https://emolike.net/wp-content/uploads/2018/09/03AF7GJ4Qt0jyIRzz.-300x119.png 300w, https://emolike.net/wp-content/uploads/2018/09/03AF7GJ4Qt0jyIRzz.-768x305.png 768w, https://emolike.net/wp-content/uploads/2018/09/03AF7GJ4Qt0jyIRzz.-604x240.png 604w\" sizes=\"(max-width: 968px) 100vw, 968px\" /></div>\n</div>\n</figure>\n<p id=\"395f\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"ebf9\" class=\"graf graf--p graf-after--p\">Add your /29 subnet to Addresses Range:<br />\n​<br />\n​</p>\n<p id=\"7946\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"b6f6\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*0ynItSYEEuexj4WK.\" data-width=\"864\" data-height=\"244\" data-action=\"zoom\" data-action-value=\"0*0ynItSYEEuexj4WK.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"20\"></canvas><img class=\"alignnone size-full wp-image-875\" src=\"https://emolike.net/wp-content/uploads/2018/09/00ynItSYEEuexj4WK..png\" width=\"864\" height=\"244\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/00ynItSYEEuexj4WK..png 864w, https://emolike.net/wp-content/uploads/2018/09/00ynItSYEEuexj4WK.-300x85.png 300w, https://emolike.net/wp-content/uploads/2018/09/00ynItSYEEuexj4WK.-768x217.png 768w, https://emolike.net/wp-content/uploads/2018/09/00ynItSYEEuexj4WK.-604x171.png 604w\" sizes=\"(max-width: 864px) 100vw, 864px\" /></div>\n</div>\n</figure>\n<p id=\"4e2a\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"b816\" class=\"graf graf--p graf-after--p\">Setup the context with the correct variables:<br />\n​<br />\n​</p>\n<p id=\"c3b3\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"bb1c\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*KQEXhCeVoay-mnRd.\" data-width=\"939\" data-height=\"325\" data-action=\"zoom\" data-action-value=\"0*KQEXhCeVoay-mnRd.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"25\"></canvas><img class=\"alignnone size-full wp-image-876\" src=\"https://emolike.net/wp-content/uploads/2018/09/0KQEXhCeVoay-mnRd..png\" width=\"939\" height=\"325\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/0KQEXhCeVoay-mnRd..png 939w, https://emolike.net/wp-content/uploads/2018/09/0KQEXhCeVoay-mnRd.-300x104.png 300w, https://emolike.net/wp-content/uploads/2018/09/0KQEXhCeVoay-mnRd.-768x266.png 768w, https://emolike.net/wp-content/uploads/2018/09/0KQEXhCeVoay-mnRd.-604x209.png 604w\" sizes=\"(max-width: 939px) 100vw, 939px\" /></div>\n</div>\n</figure>\n<p id=\"2fc3\" class=\"graf graf--p graf-after--figure\">​</p>\n<h3 id=\"7acb\" class=\"graf graf--h3 graf-after--p\">Adding Virtual Machine Images</h3>\n<p id=\"3605\" class=\"graf graf--p graf-after--h3\">Navigate to Storage -&gt; Apps -&gt; Search “KVM”</p>\n<p id=\"3610\" class=\"graf graf--p graf-after--p\">These are the images found in the default OpenNebula Marketplace.</p>\n<p id=\"0c60\" class=\"graf graf--p graf-after--p\">​</p>\n<figure id=\"ab38\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"0*r8beD-v_jFFsVABA.\" data-width=\"941\" data-height=\"519\" data-action=\"zoom\" data-action-value=\"0*r8beD-v_jFFsVABA.\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"40\"></canvas><img class=\"alignnone size-full wp-image-877\" src=\"https://emolike.net/wp-content/uploads/2018/09/0r8beD-v_jFFsVABA..png\" width=\"941\" height=\"519\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/0r8beD-v_jFFsVABA..png 941w, https://emolike.net/wp-content/uploads/2018/09/0r8beD-v_jFFsVABA.-300x165.png 300w, https://emolike.net/wp-content/uploads/2018/09/0r8beD-v_jFFsVABA.-768x424.png 768w, https://emolike.net/wp-content/uploads/2018/09/0r8beD-v_jFFsVABA.-490x270.png 490w\" sizes=\"(max-width: 941px) 100vw, 941px\" /></div>\n</div>\n</figure>\n<p id=\"e28f\" class=\"graf graf--p graf-after--figure\">​</p>\n<p id=\"bdc0\" class=\"graf graf--p graf-after--p\">Let’s select Ubuntu 16.04 and add it to our Image Datastore.</p>\n<div id=\"at_zurlpreview\">\n<p>&#8212;&#8212;</p>\n<p class=\"imgs\">Source: <a href=\"https://medium.com/@jonathan_39662/why-and-how-to-setup-your-own-cloud-on-bare-metal-f8165e93b9aa\" target=\"_blank\" rel=\"noopener\">medium.com/@jonathan_39662/why-and-how-to-setup-your-own-cloud-on-bare-metal-f8165e93b9aa</a></p>\n</div>\n",
          "slug": "why-and-how-to-setup-your-own-cloud-on-bare-metal",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/09/0aHAFU8wNdQjYyQAV..png"
          },
          "link": "https://emolike.net/2018/09/07/why-and-how-to-setup-your-own-cloud-on-bare-metal/",
          "date": "2018-09-07T16:48:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjg0Nw==",
        "node": {
          "id": "cG9zdDo4NDc=",
          "title": "Dynamic Validator",
          "content": "<p>Hello Again,</p>\n<p>In this tutorial I am using dependency injection to add rules for any class and use these rules later in validation process.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing System.Collections.Generic;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace DynamicValidator\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Emp e1 = new Emp();\r\n\r\n            e1.id = 123;\r\n            bool vv = e1.validate();\r\n            Console.WriteLine(\"Validate: \" + vv.ToString());\r\n\r\n            e1.name = \"Ahmed\";\r\n            vv = e1.validate();\r\n            Console.WriteLine(\"Validate: \" + vv.ToString());\r\n\r\n            e1.email = \"eng@gmail.com\";\r\n            vv = e1.validate();\r\n            Console.WriteLine(\"Validate: \" + vv.ToString());\r\n            Console.ReadKey();\r\n\r\n        }\r\n    }\r\n    public interface RuleType\r\n    {\r\n        bool Validate(object v);\r\n    }\r\n    public class RegexRule: RuleType \r\n    {\r\n        private string _RegexString;\r\n        public RegexRule(string r) { _RegexString = r; }\r\n        public bool Validate(object v)\r\n        {\r\n            if (v == null) return false;\r\n            Regex regex = new Regex(_RegexString);\r\n            Match match = regex.Match(v.ToString());\r\n            if (match.Success) return true;\r\n            else return false;\r\n        }\r\n    }\r\n    public class Required : RuleType\r\n    {\r\n        private bool _required;\r\n        public Required(bool r) { _required = r; }\r\n        public bool Validate(object v)\r\n        {\r\n            if (!_required) return true;\r\n            if (v != null &amp;&amp; (String.IsNullOrEmpty(v.ToString()) || String.IsNullOrWhiteSpace(v.ToString()))) return false;\r\n            else return true;\r\n        }\r\n    }\r\n    public static class RulesMapper\r\n    {\r\n        public static Dictionary&lt;string, List&lt;RuleType&gt;&gt; rule_map = new Dictionary&lt;string, List&lt;RuleType&gt;&gt;();\r\n        public static bool validate(string type , object obj)\r\n        {\r\n            foreach (RuleType r in rule_map[type])\r\n                if (!r.Validate(obj)) return false;\r\n            return true;\r\n        }\r\n        public static void AddRule(string type , List&lt;RuleType&gt; rules)\r\n        {\r\n            List&lt;RuleType&gt; tmp = new List&lt;RuleType&gt;();\r\n            if (!rule_map.TryGetValue(type, out tmp)) rule_map.Add(type, rules);\r\n            else tmp.AddRange(rules);\r\n        }\r\n    }\r\n    public class Emp\r\n    {\r\n        public int id;\r\n        public string name;\r\n        public string email;\r\n\r\n        public Emp()\r\n        {\r\n            List&lt;RuleType&gt; _RuleList0 = new List&lt;RuleType&gt;();\r\n            _RuleList0.Add(new Required(true));\r\n            RulesMapper.AddRule(typeof(Emp) + \":\" + nameof(id), _RuleList0);\r\n\r\n            List&lt;RuleType&gt; _RuleList1 = new List&lt;RuleType&gt;();\r\n            _RuleList1.Add(new Required(true));\r\n            RulesMapper.AddRule(typeof(Emp) + \":\" + nameof(name), _RuleList1);\r\n\r\n            List&lt;RuleType&gt; _RuleList2 = new List&lt;RuleType&gt;();\r\n            _RuleList2.Add(new RegexRule(@\"^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$\"));\r\n            _RuleList2.Add(new Required(true));\r\n            RulesMapper.AddRule(typeof(Emp) + \":\" + nameof(email), _RuleList2);\r\n        }\r\n\r\n        public bool validate()\r\n        {\r\n            if (RulesMapper.validate(typeof(Emp) + \":\" + nameof(id), id) &amp;&amp;\r\n                RulesMapper.validate(typeof(Emp) + \":\" + nameof(name), name) &amp;&amp;\r\n                RulesMapper.validate(typeof(Emp) + \":\" + nameof(email), email) ) return true;\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n</pre>\n<p><strong>The Output</strong></p>\n<p><img class=\"alignnone size-full wp-image-848\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥٢٣٥٤٢٢.png\" alt=\"\" width=\"685\" height=\"343\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥٢٣٥٤٢٢.png 685w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥٢٣٥٤٢٢-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥٢٣٥٤٢٢-539x270.png 539w\" sizes=\"(max-width: 685px) 100vw, 685px\" /></p>\n",
          "slug": "dynamic-validator",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/05/dynamic-validator/",
          "date": "2018-09-05T23:55:20",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjg0Mw==",
        "node": {
          "id": "cG9zdDo4NDM=",
          "title": "Dynamic Workflow",
          "content": "<p>I tried to implement Dynamic Workflow and how we can create dynamic workflow functions and execute it in sequence, I used Inversion of control to achieve this .</p>\n<p>here is the idea code:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">using System;\r\nusing System.Collections.Generic;\r\n\r\nnamespace a1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            WorkFlow wf = new WorkFlow();\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n\r\n            wf._worklist.AddLast(new PrintEmpList());\r\n\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n\r\n            wf._worklist.AddLast(new PrintEmpList());\r\n            wf.execute();\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n    public interface IFunction\r\n    {\r\n        void execute();\r\n    }\r\n    public interface IValidator\r\n    {\r\n        bool isValid();\r\n    }\r\n    public interface ICriteria\r\n    {\r\n        \r\n    }\r\n\r\n    public class DbModel&lt;T&gt;  where T : class\r\n    {\r\n        private static List&lt;T&gt; _list = new List&lt;T&gt;();\r\n\r\n        public static T Add(T m)\r\n        {\r\n            _list.Add(m);\r\n            return m;    \r\n        }\r\n\r\n        public static void Delete(T m)\r\n        {\r\n            _list.Remove(m);\r\n        }\r\n\r\n        public static List&lt;T&gt; Select(ICriteria c)\r\n        {\r\n            //---- TODO \r\n            return _list;\r\n        }\r\n\r\n        public static T Update(T m)\r\n        {\r\n            //---- TODO \r\n            return m;\r\n        }\r\n    }\r\n\r\n    public class Emp : DbModel&lt;Emp&gt; , IValidator\r\n    {\r\n        public string name { set; get; }\r\n        public string email { set; get; }\r\n        public string mobile { set; get; }\r\n\r\n        public bool isValid()\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    public class CreateEmpList : IFunction\r\n    {\r\n        public void execute()\r\n        {\r\n            Emp _emp = new Emp() { name = \"Ahmed Essam\", email = \"eng.eramax@gmail.com\", mobile = \"966666666\" };\r\n            Emp.Add(_emp);\r\n        }\r\n    }\r\n    public class PrintEmpList : IFunction\r\n    {\r\n        public void execute()\r\n        {\r\n            foreach (Emp _emp in Emp.Select(null)) Console.WriteLine(\"Name: \" + _emp.name + \" , Email: \" + _emp.email + \" , Mobile: \" + _emp.mobile);\r\n        }\r\n    }\r\n\r\n    public class WorkFlow : IFunction\r\n    {\r\n        public LinkedList&lt;IFunction&gt; _worklist { get; set; }\r\n        public WorkFlow ()\r\n        {\r\n            _worklist = new LinkedList&lt;IFunction&gt;();\r\n        }\r\n        public void execute()\r\n        {\r\n            foreach (IFunction _func in _worklist) _func.execute();\r\n        }\r\n    }\r\n}\r\n</pre>\n<p>The Output</p>\n<p><img class=\"alignnone size-full wp-image-845\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥١٤٤٠٣٠.png\" alt=\"\" width=\"682\" height=\"340\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥١٤٤٠٣٠.png 682w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥١٤٤٠٣٠-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_٢٠١٨٠٩٠٥١٤٤٠٣٠-542x270.png 542w\" sizes=\"(max-width: 682px) 100vw, 682px\" /></p>\n",
          "slug": "dynamic-workflow",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/05/dynamic-workflow/",
          "date": "2018-09-05T14:39:03",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgyOQ==",
        "node": {
          "id": "cG9zdDo4Mjk=",
          "title": "Hetzner | Proxmox installation with additional IPs and subnets",
          "content": "<p><!--more--></p>\n<p><iframe title=\"Hetzner | Proxmox Installieren mit weitere IP-Adressen | Linux Tutorial\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/KTXmVin5tjg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p><iframe title=\"Install Windows 2016 on Proxmox VE\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/fn6iJzRQDkw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\"> cd /var/lib/vz/template/iso\r\n\r\nhttp://centos.kw.zain.com/7/isos/x86_64/CentOS-7-x86_64-Minimal-1804.iso\r\n\r\n http://ubuntu.mirrors.isu.net.sa/pub/ubuntu-releases/18.04.1/ubuntu-18.04.1-live-server-amd64.iso\r\n\r\n http://ubuntu.mirrors.isu.net.sa/pub/ubuntu-releases/18.04.1/ubuntu-18.04.1-desktop-amd64.iso\r\n\r\n\r\n https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2016?filetype=ISO\r\n\r\nhttp://download.microsoft.com/download/7/5/E/75EC4E54-5B02-42D6-8879-D8D3A25FBEF7/7601.17514.101119-1850_x64fre_server_eval_en-us-GRMSXEVAL_EN_DVD.iso\r\n\r\n https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.126-2/virtio-win-0.1.126.iso\r\n\r\n\r\nhttp://download.openvz.org/template/precreated/ubuntu-16.04-x86_64.tar.gz\r\n</pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">auto vmbr0\r\niface vmbr0 inet static\r\n        address &lt;MAIN IP&gt;\r\n        netmask 255.255.255.255\r\n        bridge_ports none\r\n        bridge_stp off\r\n        bridge_fd 0\r\n        up ip route add &lt;Additional IP&gt;/32 dev vmbr0</pre>\n<p>&nbsp;</p>\n",
          "slug": "hetzner-proxmox-installation-with-additional-ips-and-subnets",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/05/hetzner-proxmox-installation-with-additional-ips-and-subnets/",
          "date": "2018-09-05T00:38:28",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgyNg==",
        "node": {
          "id": "cG9zdDo4MjY=",
          "title": "VULTR How To Install Windows Server 2012 r2 Wirth Custom ISO",
          "content": "<p>https://www.youtube.com/watch?v=4J2Ia0xX0J8</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n",
          "slug": "vultr-how-to-install-windows-server-2012-r2-wirth-custom-iso",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/03/vultr-how-to-install-windows-server-2012-r2-wirth-custom-iso/",
          "date": "2018-09-03T17:53:57",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "system admin"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgyNA==",
        "node": {
          "id": "cG9zdDo4MjQ=",
          "title": "Kubernetes vs. Docker Swarm: What’s the Difference?",
          "content": "<p>Today, containerization has transformed how we deploy software and work with microservices. As the trend of working with Linux-based, virtual containers for developing applications continues to evolve, it has brought in higher demands for their management and deployment.</p>\n<p>Kubernetes and Docker are two of the major players in container orchestration. They have carved reputable niches for themselves and cemented their positions in the Docker and the container ecosystem. Both of these tools enable you to handle a cluster of servers that run one or more services on them. So, before jumping into the comparison part, let’s get an overview of these two tools.</p>\n<h2>Kubernetes</h2>\n<p>Kubernetes is an open-source platform created by Google for container deployment operations, scaling up and down, and automation across the clusters of hosts. This production-ready, enterprise-grade, self-healing (auto-scaling, auto-replication, auto-restart, auto-placement) platform is modular, and so it can be utilized for any architecture deployment.</p>\n<p>Kubernetes also distributes the load amongst containers. It aims to relieve the tools and components from the problem faced due to running applications in private and public clouds by placing the containers into groups and naming them as logical units. Their power lies in easy scaling, environment agnostic portability, and flexible growth.</p>\n<h2>Docker Swarm</h2>\n<p>As a platform, Docker has revolutionized the manner software was packaged. Docker Swarm or simply Swarm is an open-source container orchestration platform and is the native clustering engine for and by Docker. Any software, services, or tools that run with Docker containers run equally well in Swarm. Also, Swarm utilizes the same command line from Docker.</p>\n<p>Swarm turns a pool of Docker hosts into a virtual, single host. Swarm is especially useful for people who are trying to get comfortable with an orchestrated environment or who need to adhere to a simple deployment technique but also have more just one cloud environment or one particular platform to run this on.</p>\n<h2>Kubernetes Versus Docker Swarm</h2>\n<p>Though both the open-source orchestration platforms provide much of the same functionalities, there are some fundamental differences between how these two operate. Below here are some of the notable points. This section compares the features of Docker Swarm and Kubernetes and the weaknesses/strengths of choosing one platform over the other.</p>\n<h3>Application definition</h3>\n<p><strong>Kubernetes:</strong> An application can be deployed in Kubernetes utilizing a combination of services (or microservices), deployments, and pods.</p>\n<p><strong>Docker Swarm:</strong> The applications can be deployed as micro-services or services in a swarm cluster in Docker Swarm. YAML(YAML Ain’t Markup Language) files can be utilized to identify multi-container. Moreover, Docker compose can install the application.</p>\n<h3>Networking</h3>\n<p><strong>Kubernetes:</strong> The networking model is a flat network, allowing all pods to interact with one another. The network policies specify how the pods interact with each other. The flat network is implemented typically as an overlay. The model needs two CIDRs: one for the services and the other from which pods acquire an IP address.</p>\n<p><strong>Docker Swarm: </strong>The Node joining a swarm cluster generates an overlay network for services that span every host in the docker swarm and a host-only docker bridge network for containers. The users have a choice to encrypt container data traffic while creating of an overlay network by on their own in docker swarm.</p>\n<h3>Scalability</h3>\n<p><strong>Kubernetes:</strong> For distributed systems, Kubernetes is more of an all-in-one framework. It is a complex system because it provides strong guarantees about the cluster state and a unified set of APIs. This slows down container scaling and deployment.</p>\n<p><strong>Docker Swarm:</strong> Docker Swarm, when compared to Kubernetes, can deploy container much faster and this allows faster reaction times to scale on demand.</p>\n<h3>High Availability</h3>\n<p><strong>Kubernetes:</strong> All the pods in kubernetes are distributed among nodes and this offers high availability by tolerating the failure of application. Load balancing services in kubernetes detect unhealthy pods and get rid of them. So, this supports high availability.</p>\n<p><strong>Docker Swarm:</strong> As the services can be replicated in Swarm nodes, Docker Swarm also offers high availability. The Swarm manager nodes in Docker Swarm are responsible for the entire cluster and handle the worker nodes’ resources.</p>\n<h3>Container Setup</h3>\n<p><strong>Kubernetes:</strong> Kubernetes utilizes its own YAML, API, and client definitions and each of these differ from that of standard docker equivalents. That is to say, you cannot utilize Docker Compose nor Docker CLI to define containers. While switching platforms, YAML definitions and commands need to be rewritten.</p>\n<p><strong>Docker Swarm:</strong> The Docker Swarm API doesn’t entirely encompass all of Docker’s commands but offers much of the familiar functionality from Docker. It supports most of the tools that run with Docker. Nevertheless, if Docker API is deficient of a particular operation, there doesn’t exist an easy way around it utilizing Swarm.</p>\n<h3>Load Balancing</h3>\n<p><strong>Kubernetes:</strong> Pods are exposed via service, which can be utilized as a load balancer within the cluster. Generally, an ingress is utilized for load balancing.</p>\n<p><strong>Docker Swarm: </strong>Swarm mode consists of a DNS element that can be utilized for distributing incoming requests to a service name. Services can be assigned automatically or can run on ports specified by the user.</p>\n<h2>Conclusion</h2>\n<p>Kubernetes supports higher demands with more complexity while Docker Swarm offers a simple solution that is quick to get started with. Docker Swarm has been quite popular among developers who prefer fast deployments and simplicity. Simultaneously, Kubernetes is utilized in production environments by various high profile internet firms running popular services.</p>\n<p>Both Kubernetes and Docker Swarm can run many of the same services but may need slightly different approaches to certain details. So, by <a class=\"ext-link\" href=\"https://mindmajix.com/kubernetes-training\" rel=\"external \">learning Kubernetes</a> and Docker and comparing them for various features, you can make a decision on choosing the right tool for your container orchestration.</p>\n<div id=\"at_zurlpreview\">\n<p class=\"imgs\">Source: <a href=\"https://thenewstack.io/kubernetes-vs-docker-swarm-whats-the-difference/\" target=\"_blank\" rel=\"noopener\">thenewstack.io/kubernetes-vs-docker-swarm-whats-the-difference/</a></p>\n</div>\n",
          "slug": "kubernetes-vs-docker-swarm-whats-the-difference",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/03/kubernetes-vs-docker-swarm-whats-the-difference/",
          "date": "2018-09-03T13:38:56",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgyMA==",
        "node": {
          "id": "cG9zdDo4MjA=",
          "title": "A plea for lean software: 6 Lessons I learned to help keep software simple",
          "content": "<h2></h2>\n<h2><strong>Preface</strong></h2>\n<p>Recently, I was browsing the codebase of my company and saw that it has three versions of dashboards for an analytics page in it. I am pretty sure that customers don’t need that. This sparked something in my naive brain and I started exploring the internet for related ideas. That’s when I found this age-old paper, <a href=\"https://cr.yp.to/bib/1995/wirth.pdf\" target=\"_blank\" rel=\"noopener\">A Plea for Lean Software</a>.</p>\n<p>This post is largely influenced by ideas presented in the paper that resonated with me.</p>\n<h2><strong>Introduction</strong></h2>\n<p>Size of software that we write today has is huge. Memory and resources required to run any modern software are insanely higher than compared to a similar functional software of even 10 years ago. Enhanced user experience and functionality justify the increased size but there is more to it.</p>\n<p>All modern design patterns, code architecture etc are designed to teach us how to live with this complexity, not at if it can be killed at its root.</p>\n<p>Following two laws very accurately reflect the state of the software:</p>\n<ol>\n<li>The software expands to fill the available memory.</li>\n<li>The software is getting slower more rapidly than the hardware is getting faster.</li>\n</ol>\n<p>The way to streamline software lies in disciplined methodologies and return to the essentials.</p>\n<h2><strong>Causes for “FAT Software”</strong></h2>\n<p>A primary cause of complexity is that the software holds way too much functionality than what is essential for its proper usage. We keep on adding new features and extensions and any incompatibility with the original system is either ignored or passes unrecognized.</p>\n<p>When a system’s power is measured by the number of features, <em>quantity </em>becomes more important than <em>quality. </em>Every new release must add features, even if it doesn’t add functionality.</p>\n<p><strong>1. All features, all the time</strong></p>\n<p>Monolithic design of the software is one of the main causes of making software complex. Each conceivable feature is part of the system design, and over time most of them are rendered irrelevant but continue to take their toll on the system.</p>\n<p><strong>2. To some, complexity is power</strong></p>\n<p>I remember how my PM reacted when I suggested I’ll be taking away some needless flexibility and make things standard in order to reduce complexity and increase maintainability.</p>\n<p>People seem to consider complexity as sophistication, which is baffling. Incomprehensibility should cause suspicion, not admiration.</p>\n<p><strong>3. Never enough time</strong></p>\n<p>Time pressure is the foremost reason for bulky software. We never have enough time to remove deprecated features from code and to improve what we consider an acceptable solution.</p>\n<h2><strong>6 Lessons to help keep software “Lean”</strong></h2>\n<p>1. <strong>Strongly typed languages</strong></p>\n<p>Use of strongly typed languages aids in designing a complex system in a simpler way. It lets the compiler pinpoint the errors and interfaces and abstractions can be consumed and changed with more confidence.</p>\n<p><strong>2. Finding appropriate decomposition</strong></p>\n<p>Systems should be decomposed into modules, modules should be decomposed into components and components should have a single responsibility. The entire system should be decomposed in a hierarchy with minimizing complexity and no code duplication.</p>\n<p><strong>3. Extensibility</strong></p>\n<p>Extensibility is a prerequisite to keep the system streamlined from the outset. It also allows the system to be customized to accommodate new changes and deletion of deprecated extensions.</p>\n<p><strong>4. Complex software should never be built</strong></p>\n<p>The belief that a complex system requires armies of designers and programmers is not true. A system that cannot be understood in its entirety, at least to a significant degree of detail by a single individual should probably never be built in first place.</p>\n<p><strong>5. Communication is the key</strong></p>\n<p>As the time size grows, communication problems become predominant. Complex team structures make complex software.</p>\n<p><strong>6. Reducing complexity should be the goal</strong></p>\n<p>Reducing the complexity and size of the software should be the goal at every step of development. In the system specification, to designing, to detailed programming – each step must deliberately kill any needless complexity in the system.</p>\n<h2><strong>Conclusion</strong></h2>\n<p>This topic does touch a sensitive nerve of software teams. When I discussed this with my team, the responses were like “I disagree. Features are needed to sell.”, “There is no need to keep software small now. We have bigger machines and better tools.” etc.</p>\n<p>I get that. I disagree to some extent too. But not because keeping the software lean is wrong, but because it is hard. Still, I hope that keeping these ideas in mind while designing a system should curtail the complexity explosion in software.</p>\n<h1>That’s all, folks!</h1>\n<div id=\"at_zurlpreview\">\n<p class=\"imgs\">Source: <a href=\"https://priyankvex.wordpress.com/2018/09/02/a-plea-for-lean-software-6-lessons-i-learned-to-help-keep-software-simple/\" target=\"_blank\" rel=\"noopener\">priyankvex.wordpress.com/2018/09/02/a-plea-for-lean-software-6-lessons-i-learned-to-help-keep-software-simple/</a></p>\n</div>\n",
          "slug": "a-plea-for-lean-software-6-lessons-i-learned-to-help-keep-software-simple",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/09/animalli-com-animals-herbal-gazelle-jump-animal-background-picture-960x540-1.jpg"
          },
          "link": "https://emolike.net/2018/09/03/a-plea-for-lean-software-6-lessons-i-learned-to-help-keep-software-simple/",
          "date": "2018-09-03T00:40:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgxNg==",
        "node": {
          "id": "cG9zdDo4MTY=",
          "title": "Authentication Techniques for APIs",
          "content": "<p><a href=\"https://docs.google.com/spreadsheets/d/1tAX5ZJzluilhoYKjra-uHbMCZraaQkqIHl3RIQ8mVkM/htmlview\">https://docs.google.com/spreadsheets/d/1tAX5ZJzluilhoYKjra-uHbMCZraaQkqIHl3RIQ8mVkM/htmlview</a></p>\n",
          "slug": "authentication-techniques-for-apis",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/02/authentication-techniques-for-apis/",
          "date": "2018-09-02T19:09:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgxMw==",
        "node": {
          "id": "cG9zdDo4MTM=",
          "title": "How to install Windows Server 2016 on Hetzner Cloud | 2.5€ Cheap VPS",
          "content": "<p>https://www.youtube.com/watch?v=T-ktOJwrzLA&#038;t=8s</p>\n",
          "slug": "how-to-install-windows-server-2016-on-hetzner-cloud-2-5e-cheap-vps",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/01/how-to-install-windows-server-2016-on-hetzner-cloud-2-5e-cheap-vps/",
          "date": "2018-09-01T15:38:30",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              },
              {
                "name": "VM"
              },
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgxMA==",
        "node": {
          "id": "cG9zdDo4MTA=",
          "title": "How to Install Deepin Desktop On Ubuntu 18.04",
          "content": "<p><iframe title=\"How to Install Deepin Desktop On Ubuntu 18.04\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/lv_Dm11q5gg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo add-apt-repository ppa:leaeasy/dde\r\nsudo apt install dde dde-file-manager\r\nsudo apt install deepin-gtk-theme</pre>\n<p>&nbsp;</p>\n",
          "slug": "810",
          "featuredImage": null,
          "link": "https://emolike.net/2018/09/01/810/",
          "date": "2018-09-01T15:32:23",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjgwNw==",
        "node": {
          "id": "cG9zdDo4MDc=",
          "title": "How To Install Mac OS High Sierra 10.13.5 On VMware Workstation 12",
          "content": "<p><iframe title=\"How To Install Mac OS High Sierra 10.13.5 On VMware Workstation 12\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/K7E_UqgCFbQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n",
          "slug": "how-to-install-mac-os-high-sierra-10-13-5-on-vmware-workstation-12",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/30/how-to-install-mac-os-high-sierra-10-13-5-on-vmware-workstation-12/",
          "date": "2018-08-30T23:18:59",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc5Ng==",
        "node": {
          "id": "cG9zdDo3OTY=",
          "title": "What&#8217;s in a Production Web Application?",
          "content": "<ul>\n<li>Getting Started</li>\n<li>Launch Day</li>\n<li>Performance Problems</li>\n<li>Growing the Team</li>\n<li>Smooth Sailing</li>\n<li>Outro</li>\n</ul>\n<p>Early in my career, I worked at a company that built web content management systems. Their product helped marketing departments self-manage their own websites, instead of relying on developers to make every change. This product helped their customers reduce operational expenses, and it helped me learn how to build web applications.</p>\n<p>While the product itself had a very general purpose, its customers tended to use it to solve very specific problems. These problems pushed the product to its limits in every imaginable way, and engineering ultimately had to provide solutions. Working in this environment for oven ten years gave me a thorough appreciation for the wide variety of ways a production web application can break, some of which we’ll discuss in this post.</p>\n<p>One of the lessons I learned during these years was that individual engineers tend to learn very deeply what interests them, and learn just enough of the supporting pieces to be dangerous. This works out well for a team of engineers with good communication, since that combined knowledge will overlap to fill in any individual’s gaps. For teams with little experience in the industry or for individual engineers, this isn’t possible.</p>\n<p>If you started in an environment like this and then set out to build and deploy an entire web application from scratch, you might find out very quickly what I mean by “dangerous.”</p>\n<p>The industry has provided a number of solutions aimed at addressing this problem: managed web applications (Beanstalk, AppEngine, etc…), hosted container management (Kubernetes, ECS, etc…), and many others. These work well once you get them up and running, and I think they do an excellent job at solving the problem. They hide a lot of the complexity required to get a web application up and running, and they tend to “just work”.</p>\n<p>Unfortunately, when it doesn’t “just work,” or when it comes time to make a nuanced decision around a specific production issue, you may find yourself wishing you understood a bit more about that ominous black box.</p>\n<p>In this post, I’m going to take an unreliable system and evolve it into one with a reasonable level of reliability. Each step along the way will use a real world problem as motivation to move onto the next step. Rather than discussing each piece of the final design, I find that this incremental approach helps provide better context for when and in which order to make certain decisions. At the end, we’ll have built from scratch the basic structure of what a managed web application hosting service provides, and hopefully will have provided ample context around why each piece exists.</p>\n<h2 id=\"getting-started\">Getting Started</h2>\n<p>Let’s pretend that you have a $500 hosting budget for the year, so you’ve decided to rent a single t2.medium server from Amazon AWS. At the time of writing, this costs just about $400 per year.</p>\n<p>You know up front that you’ll have login sessions and that you’ll need to store user information, so you’ll need a database. Due to a constrained budget, let’s host this on our only server. You end up with infrastructure that looks like this:</p>\n<figure><img class=\"alignnone size-full wp-image-797\" src=\"https://emolike.net/wp-content/uploads/2018/08/fig1.png\" width=\"858\" height=\"490\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/fig1.png 858w, https://emolike.net/wp-content/uploads/2018/08/fig1-300x171.png 300w, https://emolike.net/wp-content/uploads/2018/08/fig1-768x439.png 768w, https://emolike.net/wp-content/uploads/2018/08/fig1-473x270.png 473w\" sizes=\"(max-width: 858px) 100vw, 858px\" /><figcaption>\n<h4>Figure 1</h4>\n</figcaption></figure>\n<p>This should suffice for now. In fact, it will probably work for quite a while. You’re small. At this point, you probably only have to handle up to 10 visits per day. A small instance may have sufficed, but since you’re optimistic about your company’s growth, you made a good choice with the t2.medium instance.</p>\n<p>The value of your business is stored in that database, so it’s pretty important. You should make sure if the server goes down, you don’t lose the data. It’s probably a good time to make sure you haven’t stored the database contents on an ephemeral disk. If the instance gets deleted, you’re going to lose all of your data. That’s a scary thought.</p>\n<p>You should also make sure you have backups going to external storage. S3 seems like a good place to put these, and it’s relatively cheap, so let’s set that up as well. And you should definitely test that it’s working by restoring a backup every once in a while.</p>\n<p>Your setup should now look something like this:</p>\n<figure><img class=\"alignnone size-full wp-image-798\" src=\"https://emolike.net/wp-content/uploads/2018/08/fig2.png\" width=\"1188\" height=\"540\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/fig2.png 1188w, https://emolike.net/wp-content/uploads/2018/08/fig2-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/08/fig2-768x349.png 768w, https://emolike.net/wp-content/uploads/2018/08/fig2-1024x465.png 1024w, https://emolike.net/wp-content/uploads/2018/08/fig2-594x270.png 594w\" sizes=\"(max-width: 1188px) 100vw, 1188px\" /><figcaption>\n<h4>Figure 2</h4>\n</figcaption></figure>\n<p>Now that you’ve increased the reliability of your database, you decide to prepare for your massive Hacker News traffic spike by running a load test against your server. Everything seems to be going well until the 500 errors start showing up, followed by a stream of 404s, so you investigate to figure out what happened.</p>\n<p>It turns out you have no clue what failed because you were writing your logs to the console, and you weren’t piping the console output into a log file. You also see that the process isn’t running, so you safely assume that’s why you got 404s. A mild wave of relief washes over you that you had the forsight to run a local load test instead of using Hacker News as a load test.</p>\n<p>You fix the autorestart issue by creating a <code>systemd</code> service that runs your web server, which ends up solving your logging problem as well. Then you run another load test to make sure you’ve solved everything.</p>\n<p>Once again, you see 500 errors (thankfully with no 404s), and you check the logs to see what went wrong. You discover that you’ve saturated your database connection pool, which was set to the unfortunately low limit of 10 connections. You update the limit, restart the database, and then run your load test again. Everything goes well, so you decide to promote your site on Hacker News.</p>\n<h2 id=\"launch-day\">Launch Day</h2>\n<p>Great Scott! Your service is an instant hit. You hit the front page of Hacker News. You get 5,000 hits in the first 30 minutes, and you see comments pouring in. What do they say?</p>\n<blockquote><p>I’m getting a 404, so I had to check the archived version of the page. Here’s the link if anyone needs it: …</p></blockquote>\n<p>…</p>\n<blockquote><p>Nothing shows up for me. Also, I have Javascript disabled. Why do people assume I want your 2 MB Javascript …</p></blockquote>\n<p>…</p>\n<blockquote><p>Your homepage takes 4 seconds to load. Traceroute from where I live in Australia shows the server’s hosted somewhere in Texas. Also, why does your landing page require 2 MB of Javascript?</p></blockquote>\n<p>In a mad scramble, you set up Nginx on your server as a reverse proxy to your application, and you configure it to server a static 404 page. You also update your deployment process to push static files to S3, which is necessary for the CloudFront CDN to help reduce the load time in Australia.</p>\n<figure><img class=\"alignnone size-full wp-image-799\" src=\"https://emolike.net/wp-content/uploads/2018/08/fig3.png\" width=\"1184\" height=\"946\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/fig3.png 1184w, https://emolike.net/wp-content/uploads/2018/08/fig3-300x240.png 300w, https://emolike.net/wp-content/uploads/2018/08/fig3-768x614.png 768w, https://emolike.net/wp-content/uploads/2018/08/fig3-1024x818.png 1024w, https://emolike.net/wp-content/uploads/2018/08/fig3-338x270.png 338w\" sizes=\"(max-width: 1184px) 100vw, 1184px\" /><figcaption>\n<h4>Figure 3</h4>\n</figcaption></figure>\n<p>Now that you’ve addressed your immediate problem, you go onto your server and check the logs. Your SSH connection is curiously laggy. After some inspection, you discover that your log files have completely used up your disk space, which crashed your process and prevented it from starting again. You create a much larger disk and mount your logs on it. You also setup <code>logrotate</code> to prevent your log files from getting so huge again.</p>\n<h2 id=\"performance-problems\">Performance Problems</h2>\n<p>Months pass. Your userbase grow. Your site begins to slow down. You notice in your CloudWatch monitoring that this seems to happen only between the hours of midnight and noon UTC. Due to the consistent start and end times of the slowdown, you guess that it’s due to a scheduled task on your server. You check your crontab and realize that you have one job scheduled at midnight: backups. Sure enough, your backups take twelve hours, and they overload the database causing a significant site slowdown.</p>\n<p>Having read about this before, you decide that you should run backups on your slave database. Then you remember: you don’t have a slave database, so you need to create one. It doesn’t make much sense to run your slave database on the same server, so you decide it’s time to expand. You create two new servers: one for the master database,and one for the slave database. You change your backups to run against the slave database.</p>\n<figure><img class=\"alignnone size-full wp-image-800\" src=\"https://emolike.net/wp-content/uploads/2018/08/fig4.png\" width=\"1163\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/fig4.png 1163w, https://emolike.net/wp-content/uploads/2018/08/fig4-273x300.png 273w, https://emolike.net/wp-content/uploads/2018/08/fig4-768x845.png 768w, https://emolike.net/wp-content/uploads/2018/08/fig4-930x1024.png 930w, https://emolike.net/wp-content/uploads/2018/08/fig4-245x270.png 245w\" sizes=\"(max-width: 1163px) 100vw, 1163px\" /><figcaption>\n<h4>Figure 4</h4>\n</figcaption></figure>\n<h2 id=\"growing-the-team\">Growing the Team</h2>\n<p>Everything runs smoothly for quite some time. Months pass. You hire a larger development team. One of the new developers checks in a bug. It takes down your production server. The developer blames it on his environment differing from production. There’s some truth in what he said. Since you’re an understanding person with a good temperament, you treat this occasion as a learning opportunity.</p>\n<p>It’s time to build more environments: staging, QA, and development. Fortunately, you’ve automated the creation of your infrastructure from day one, so this is easy. You’ve also used good continuous delivery practices from day one, so you easily build pipelines from your new branches.</p>\n<p>Marketing wants to launch v2.0. You’re not sure what v2.0 is, but you go with it anyway. Time to prepare for another traffic spike. You’ve been running close to peak utilization on your web server, so you decide it’s time to start load balancing the traffic. Amazon ELB makes this easy for you. Around this time, you also discover that layered diagrams in blog posts should show layers top to bottom instead of left to right.</p>\n<figure><img class=\"alignnone size-full wp-image-801\" src=\"https://emolike.net/wp-content/uploads/2018/08/fig5.png\" width=\"1172\" height=\"1234\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/fig5.png 1172w, https://emolike.net/wp-content/uploads/2018/08/fig5-285x300.png 285w, https://emolike.net/wp-content/uploads/2018/08/fig5-768x809.png 768w, https://emolike.net/wp-content/uploads/2018/08/fig5-973x1024.png 973w, https://emolike.net/wp-content/uploads/2018/08/fig5-256x270.png 256w\" sizes=\"(max-width: 1172px) 100vw, 1172px\" /><figcaption>\n<h4>Figure 5</h4>\n</figcaption></figure>\n<p>Confident that you’ll be able to handle the load, you post your site to Hacker News again. Lo and behold, it holds up to the traffic. Great success!</p>\n<p>All seems to be well, until you go to check your logs. This takes you an hour due to having twelve servers to check (four in each environment). That’s a hassle. Fortunately you’re making enough money at this point to implement an ELK stack (ElasticSearch, LogStash, Kibana). You build one and point all environments at it.</p>\n<figure><img class=\"alignnone size-full wp-image-802\" src=\"https://emolike.net/wp-content/uploads/2018/08/fig6.png\" width=\"1280\" height=\"956\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/fig6.png 1280w, https://emolike.net/wp-content/uploads/2018/08/fig6-300x224.png 300w, https://emolike.net/wp-content/uploads/2018/08/fig6-768x574.png 768w, https://emolike.net/wp-content/uploads/2018/08/fig6-1024x765.png 1024w, https://emolike.net/wp-content/uploads/2018/08/fig6-362x270.png 362w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><figcaption>\n<h4>Figure 6</h4>\n</figcaption></figure>\n<p>Now that you can read your logs again, you take a look at them and notice something odd. They’re full of this</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">GET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\r\nGET /wp-login.php HTTP/1.1\" 404 169 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1</pre>\n<p>&nbsp;</p>\n<p>You aren’t running PHP, or WordPress for that matter, so this is pretty concerning. You notice similar suspect logs on your database servers, and wonder why you ever had them exposed to the internet. It’s time for public and private subnets.</p>\n<figure><img class=\"alignnone size-full wp-image-803\" src=\"https://emolike.net/wp-content/uploads/2018/08/fig7.png\" width=\"1280\" height=\"980\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/fig7.png 1280w, https://emolike.net/wp-content/uploads/2018/08/fig7-300x230.png 300w, https://emolike.net/wp-content/uploads/2018/08/fig7-768x588.png 768w, https://emolike.net/wp-content/uploads/2018/08/fig7-1024x784.png 1024w, https://emolike.net/wp-content/uploads/2018/08/fig7-353x270.png 353w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><figcaption>\n<h4>Figure 7</h4>\n</figcaption></figure>\n<p>Once again, you check your logs. You still have the hacking attempts, but they’re now limited to port 80 on your load balancer, which eases your mind a bit, since your application servers, database servers, and ELK stack are no longer exposed to the internet.</p>\n<p>Despite having centralized logging, you tire of having to discover outages by manually checking logs. You use Amazon CloudWatch to setup disk, CPU, and network alarms that send you an email when they hit 80% capacity. Wonderful!</p>\n<h2 id=\"smooth-sailing\">Smooth Sailing</h2>\n<p>Just kidding! There’s no such thing as smooth sailing in software. Something will go wrong. Fortunately, you have a lot of tooling in place to make handling these problems easier.</p>\n<p>We’ve built a scalable web application with backups, rollbacks (using blue/green deployments between production and staging), centralized logging, monitoring, and alerting. This is a good point to stop, since growth from here tends to depend on application-specific needs.</p>\n<p>The industry has provided a number of hosted options that handle most of this for you. Instead of building all of this yourself, you can rely on Beanstalk, AppEngine, GKE, ECS, etc. Most of these services setup sensible permissions, load balancers, subnets, etc… automatically. They take a lot of the hassle out of getting an application up and running quickly that has the reliability your site needs to run for a long time.</p>\n<p>Regardless, I think it’s useful to understand what functionality each of these platforms provides and why they provide it. It makes it easier to select a platform based on your own needs. Once you have everything running in the platform, you’ve already figured out how these important aspects of the tool work. When something goes wrong, it helps to know you have the necessary tools to solve the problem.</p>\n<h2 id=\"outro\">Outro</h2>\n<p>This post omits a lot of details. It doesn’t cover how to automate the creation of infrastructure, or how to provision servers, or how to configure servers. It doesn’t cover how to create development environments, or how to setup continuous delivery pipelines, or how to execute deployments or rollbacks. It doesn’t cover network security, or secret sharing, or the principle of least privilege. It doesn’t cover the importance of immutable infrastructure, or stateless servers, or migrations. Each of these topics requires posts of their own.</p>\n<p>This article’s purpose is mostly to provide a high level overview of what a reasonable production web application ought to look like. Future posts may reference this one and expand on it.</p>\n<p>That’s all for now.</p>\n<p>Thanks for reading, and happy coding!</p>\n<blockquote><p>Edit: Don’t take the exact numbers used in this illustrative story literally. Individually, these events have all happened to me at different times, but they were in completely different environments under different types of load.</p></blockquote>\n<div id=\"at_zurlpreview\">\n<h2></h2>\n<h2>What&#8217;s in a Production Web Application? · Stephen Mann</h2>\n<h3 style=\"display: none;\">What&#8217;s in a Production Web Application? · Stephen Mann</h3>\n<p class=\"imgd\">This is Stephen Mann&#8217;s personal blog about building production applications. Code at your own risk.</p>\n<p class=\"imgs\">Source: <a href=\"https://stephenmann.io/post/whats-in-a-production-web-application/\" target=\"_blank\" rel=\"noopener\">stephenmann.io/post/whats-in-a-production-web-application/</a></p>\n</div>\n",
          "slug": "whats-in-a-production-web-application-%c2%b7-stephen-mann",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/08/fig1.png"
          },
          "link": "https://emolike.net/2018/08/27/whats-in-a-production-web-application-%c2%b7-stephen-mann/",
          "date": "2018-08-27T13:41:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "system admin"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc4Nw==",
        "node": {
          "id": "cG9zdDo3ODc=",
          "title": "coder.com new cloud IDE",
          "content": "\n<!-- YouTube Embed v5.1 -->\n<div class=\"youtube-embed\" itemprop=\"video\" itemscope itemtype=\"https://schema.org/VideoObject\">\n\t<meta itemprop=\"url\" content=\"https://www.youtube.com/v/TWebUaPeWC0\" />\n\t<meta itemprop=\"name\" content=\"coder.com new cloud IDE\" />\n\t<meta itemprop=\"description\" content=\"coder.com new cloud IDE\" />\n\t<meta itemprop=\"uploadDate\" content=\"2018-08-25T15:42:43+03:00\" />\n\t<meta itemprop=\"thumbnailUrl\" content=\"https://i.ytimg.com/vi/TWebUaPeWC0/default.jpg\" />\n\t<meta itemprop=\"embedUrl\" content=\"https://www.youtube.com/embed/TWebUaPeWC0\" />\n\t<meta itemprop=\"height\" content=\"340\" />\n\t<meta itemprop=\"width\" content=\"560\" />\n\t<iframe style=\"border: 0;\" class=\"youtube-player\" width=\"560\" height=\"340\" src=\"https://www.youtube.com/embed/TWebUaPeWC0\" allowfullscreen ></iframe>\n</div>\n<!-- End of YouTube Embed code. Generated in 0.00271 seconds -->\n\n<p>it is a good idea ,<br />\nthey give you a free docker container with 3GB of hard disk and with 100 Mb internet and the container runs on a server with 32 core 2 GHz per core with ram 205 GB.<br />\nI like the idea of providing containers for hosting apps<br />\nyou will have the root of the container so you can install anything on it and run whatever you want.<br />\nthe containers comes with git, node,php,python and more<br />\nyou can also install mongodb , mysql , &#8230;.etc.<br />\nFast time move the container to 1Gbps so downloading is faster but it is limited for free users by a limit time of usage.<br />\nhttps://coder.com/</p>\n<p>best wishes</p>\n",
          "slug": "787",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/25/787/",
          "date": "2018-08-25T15:42:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc3NA==",
        "node": {
          "id": "cG9zdDo3NzQ=",
          "title": "Best Open Source Tools For Developers 🛠",
          "content": "<p>Are you as excited as I am? In my quest to find some of the best apps for you, I myself discovered some absolutely brilliant tools. The best thing is all the apps below are free and Open Source. Let&#8217;s get started 🏃🏻‍♂️</p>\n<h3>1. Screencat 🙀</h3>\n<p><img class=\"alignnone size-full wp-image-775\" src=\"https://emolike.net/wp-content/uploads/2018/08/remote-control.gif\" alt=\"\" width=\"870\" height=\"642\" /></p>\n<p>🖥 <strong><em>Platform availability</em></strong>: All Platforms<br />\n🔗 <strong><em>Github Link</em></strong>: <a href=\"https://github.com/maxogden/screencat\">Screencat</a></p>\n<p>This next app makes screen sharing super easy. You can share your desktop with someone else while letting them share your mouse and keyboard remotely. It&#8217;s built in electron.js.</p>\n<h3>2. Manta 💸</h3>\n<p><img class=\"alignnone size-full wp-image-776\" src=\"https://emolike.net/wp-content/uploads/2018/08/wwGYH3k.png\" alt=\"\" width=\"880\" height=\"329\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/wwGYH3k.png 880w, https://emolike.net/wp-content/uploads/2018/08/wwGYH3k-300x112.png 300w, https://emolike.net/wp-content/uploads/2018/08/wwGYH3k-768x287.png 768w, https://emolike.net/wp-content/uploads/2018/08/wwGYH3k-604x226.png 604w\" sizes=\"(max-width: 880px) 100vw, 880px\" /></p>\n<p>🖥 <strong><em>Platform availability</em></strong>: All Platforms<br />\n🔗 <strong><em>Github Link</em></strong>: <a href=\"https://github.com/hql287/Manta\">Manta</a><br />\nThe most frustrating part of any freelance gig is sending an invoice to the client. Searching a template online and then editing it in a word processor takes a lot of time and the result still looks ugly. Try Manta, a desktop application for creating invoices with beautiful and customizable templates. It will make the work hassle-free for you.</p>\n<h3>3. Brave Browser</h3>\n<p><img class=\"alignnone size-full wp-image-777\" src=\"https://emolike.net/wp-content/uploads/2018/08/FfUrlmI.jpg\" alt=\"\" width=\"880\" height=\"401\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/FfUrlmI.jpg 880w, https://emolike.net/wp-content/uploads/2018/08/FfUrlmI-300x137.jpg 300w, https://emolike.net/wp-content/uploads/2018/08/FfUrlmI-768x350.jpg 768w, https://emolike.net/wp-content/uploads/2018/08/FfUrlmI-593x270.jpg 593w\" sizes=\"(max-width: 880px) 100vw, 880px\" /></p>\n<p>🖥 <strong><em>Platform availability</em></strong>: All Platforms<br />\n🔗 <strong><em>Github Link</em></strong>: <a href=\"https://github.com/brave/browser-laptop\">Brave</a></p>\n<p>Privacy and security should be everyone&#8217;s top priority, and that&#8217;s what I always talk about on <a href=\"https://medium.com/@Sarthaksharma0\">my blog</a> also. A browser is the first thing on the list when it comes to changing apps for the sake of privacy. Google tracks a lot of your data from Google Chrome, even if you are using a VPN. Use Brave, it&#8217;s free and Open Source. Check some other cool apps for online privacy <a href=\"https://medium.com/naturehub/the-only-apps-you-need-to-ensure-online-privacy-344d36afc45f\">here</a></p>\n<h3>4. Mark text 📝</h3>\n<p><img class=\"alignnone size-full wp-image-778\" src=\"https://emolike.net/wp-content/uploads/2018/08/dark.jpg\" alt=\"\" width=\"880\" height=\"587\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/dark.jpg 880w, https://emolike.net/wp-content/uploads/2018/08/dark-300x200.jpg 300w, https://emolike.net/wp-content/uploads/2018/08/dark-768x512.jpg 768w, https://emolike.net/wp-content/uploads/2018/08/dark-405x270.jpg 405w\" sizes=\"(max-width: 880px) 100vw, 880px\" /></p>\n<p>🖥 <strong><em>Platform availability</em></strong>: All Platforms<br />\n🔗 <strong><em>Github Link</em></strong>: <a href=\"https://github.com/marktext/marktext/\">Marktext</a></p>\n<p>Markdown is awesome and so are the markdown editors. There are many open source Markdown editors but Mark Text is the coolest I know. It has live preview which is one of my favorite features. Give it a try.</p>\n<h3>5. IconGenerator 👾</h3>\n<p><img class=\"alignnone size-full wp-image-779\" src=\"https://emolike.net/wp-content/uploads/2018/08/gif.gif\" alt=\"\" width=\"880\" height=\"438\" /></p>\n<p>🖥 <strong><em>Platform availability</em></strong>: Only MacOS<br />\n🔗 <strong><em>Github Link</em></strong>: <a href=\"https://github.com/onmyway133/IconGenerator\">IconGenerator</a></p>\n<p>If you have worked on Electron or made an iOS app, you know the pain of generating icons of various sizes. This nifty little app helps you do that very gracefully.</p>\n<h3>6. VMD 🌁</h3>\n<p><img class=\"alignnone size-full wp-image-780\" src=\"https://emolike.net/wp-content/uploads/2018/08/43FdX7A.png\" alt=\"\" width=\"876\" height=\"474\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/43FdX7A.png 876w, https://emolike.net/wp-content/uploads/2018/08/43FdX7A-300x162.png 300w, https://emolike.net/wp-content/uploads/2018/08/43FdX7A-768x416.png 768w, https://emolike.net/wp-content/uploads/2018/08/43FdX7A-499x270.png 499w\" sizes=\"(max-width: 876px) 100vw, 876px\" /></p>\n<p>🖥 <strong><em>Platform availability</em></strong>: All Platforms<br />\n🔗 <strong><em>Github Link</em></strong>: <a href=\"https://github.com/yoshuawuyts/vmd\">vmd</a></p>\n<p>A simple yet very handy tool. It gives you GitHub themed preview of any <code>README.md</code> file. Can easily be installed using npm. It has some other cool options also, check them out on their Github page.</p>\n<h3>7. Insomnia 😴</h3>\n<p><img class=\"alignnone size-full wp-image-781\" src=\"https://emolike.net/wp-content/uploads/2018/08/main.png\" alt=\"\" width=\"880\" height=\"481\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/main.png 880w, https://emolike.net/wp-content/uploads/2018/08/main-300x164.png 300w, https://emolike.net/wp-content/uploads/2018/08/main-768x420.png 768w, https://emolike.net/wp-content/uploads/2018/08/main-494x270.png 494w\" sizes=\"(max-width: 880px) 100vw, 880px\" /></p>\n<p>🖥 <strong><em>Platform availability</em></strong>: All Platforms<br />\n🔗 <strong><em>Github Link</em></strong>: <a href=\"https://github.com/getinsomnia/insomnia\">Insomnia</a></p>\n<p>Insomnia is a cross-platform REST client, built on top of Electron. It has various plugins that you can easily install with npm and increase its functionality.</p>\n<div id=\"at_zurlpreview\">\n<p>&nbsp;</p>\n<p class=\"imgs\">Source: <a href=\"https://dev.to/sarthology/best-open-source-tools-for-developers--300f\" target=\"_blank\" rel=\"noopener\">dev.to/sarthology/best-open-source-tools-for-developers&#8211;300f</a></p>\n</div>\n",
          "slug": "best-open-source-tools-for-developers-%f0%9f%9b%a0",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/23/best-open-source-tools-for-developers-%f0%9f%9b%a0/",
          "date": "2018-08-23T14:59:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "tools"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc2MQ==",
        "node": {
          "id": "cG9zdDo3NjE=",
          "title": "Free Full Plural Sight Subscription",
          "content": "<h1><strong>1-Get a Free Full PluralSight Subscription </strong></h1>\n<p>-Navigate to “Visual studio Dev Essentials” from Google<br />\n<img class=\"alignnone size-full wp-image-762\" title=\"1\" src=\"https://emolike.net/wp-content/uploads/2018/08/1.png\" alt=\"1.PNG\" width=\"700\" height=\"365\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/1.png 700w, https://emolike.net/wp-content/uploads/2018/08/1-300x156.png 300w, https://emolike.net/wp-content/uploads/2018/08/1-518x270.png 518w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>&nbsp;</p>\n<p>-Click to Join Now and Sign in with your Microsoft Email</p>\n<p><img class=\"alignnone size-full wp-image-763\" title=\"2\" src=\"https://emolike.net/wp-content/uploads/2018/08/2.png\" alt=\"2.PNG\" width=\"700\" height=\"324\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/2.png 700w, https://emolike.net/wp-content/uploads/2018/08/2-300x139.png 300w, https://emolike.net/wp-content/uploads/2018/08/2-583x270.png 583w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>&nbsp;</p>\n<p>-Click on Get Code then Click on Activate<br />\n<img class=\"alignnone size-full wp-image-764\" title=\"3\" src=\"https://emolike.net/wp-content/uploads/2018/08/3.png\" alt=\"3.PNG\" width=\"700\" height=\"359\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/3.png 700w, https://emolike.net/wp-content/uploads/2018/08/3-300x154.png 300w, https://emolike.net/wp-content/uploads/2018/08/3-526x270.png 526w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>-Fill your info to continue like here<br />\n<img class=\"alignnone size-full wp-image-765\" title=\"4\" src=\"https://emolike.net/wp-content/uploads/2018/08/4.png\" alt=\"4.PNG\" width=\"700\" height=\"345\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/4.png 700w, https://emolike.net/wp-content/uploads/2018/08/4-300x148.png 300w, https://emolike.net/wp-content/uploads/2018/08/4-548x270.png 548w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>&nbsp;</p>\n<p>-Complete your Plural Sight Basic Info</p>\n<p><img class=\"alignnone size-full wp-image-766\" title=\"5\" src=\"https://emolike.net/wp-content/uploads/2018/08/5.png\" alt=\"5.PNG\" width=\"700\" height=\"319\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/5.png 700w, https://emolike.net/wp-content/uploads/2018/08/5-300x137.png 300w, https://emolike.net/wp-content/uploads/2018/08/5-592x270.png 592w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>-Choose a course you are interested in<br />\n<img class=\"alignnone size-full wp-image-767\" title=\"6\" src=\"https://emolike.net/wp-content/uploads/2018/08/6.png\" alt=\"6.PNG\" width=\"700\" height=\"298\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/6.png 700w, https://emolike.net/wp-content/uploads/2018/08/6-300x128.png 300w, https://emolike.net/wp-content/uploads/2018/08/6-604x257.png 604w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>&nbsp;</p>\n",
          "slug": "free-full-plural-sight-subscription",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/08/pluralsight-review.jpg"
          },
          "link": "https://emolike.net/2018/08/20/free-full-plural-sight-subscription/",
          "date": "2018-08-20T20:39:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Courses"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc1OA==",
        "node": {
          "id": "cG9zdDo3NTg=",
          "title": "Web Developer Security Checklist",
          "content": "<section class=\"section section--body section--first\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"90ea\" class=\"graf graf--p graf-after--figure\">Developing secure, robust web applications in the cloud is <strong class=\"markup--strong markup--p-strong\">hard, very hard</strong>. If you think it is easy, you are either a higher form of life or you have a painful awakening ahead of you.</p>\n<p id=\"56b1\" class=\"graf graf--p graf-after--p\">If you have drunk the <a class=\"markup--anchor markup--p-anchor\" href=\"https://en.wikipedia.org/wiki/Minimum_viable_product\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://en.wikipedia.org/wiki/Minimum_viable_product\">MVP</a> cool-aid and believe that you can create a product in one month that is both valuable and secure — think twice before you launch your “proto-product”. After you review the checklist below, acknowledge that you are skipping many of these critical security issues. At the very minimum, be <em class=\"markup--em markup--p-em\">honest</em> with your potential users and let them know that you don’t have a complete product yet and are offering a prototype without full security.</p>\n<p id=\"81d7\" class=\"graf graf--p graf-after--p\">This checklist is simple, and by no means complete. I’ve been developing secure web applications for over 14 years and this list contains some of the more important issues that I’ve painfully learned over this period. I hope you will consider them seriously when creating a web application.</p>\n<p id=\"1f7f\" class=\"graf graf--p graf-after--p\">Please comment if you have an item I can add to the list.</p>\n<h3 id=\"f20d\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">Database</strong></h3>\n<ul class=\"postList\">\n<li id=\"79ea\" class=\"graf graf--li graf-after--h3\">[ ] Use encryption for data identifying users and sensitive data like access tokens, email addresses or billing details if possible (this will restrict queries to exact match lookups).</li>\n<li id=\"6717\" class=\"graf graf--li graf-after--li\">[ ] If your database supports low cost encryption at rest (like <a class=\"markup--anchor markup--li-anchor\" href=\"https://aws.amazon.com/about-aws/whats-new/2015/12/amazon-aurora-now-supports-encryption-at-rest/\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://aws.amazon.com/about-aws/whats-new/2015/12/amazon-aurora-now-supports-encryption-at-rest/\">AWS Aurora</a>), then enable that to secure data on disk. Make sure all backups are stored encrypted as well.</li>\n<li id=\"bf94\" class=\"graf graf--li graf-after--li\">[ ] Use minimal privilege for the database access user account. Don’t use the database root account and check for unused accounts and accounts with bad passwords.</li>\n<li id=\"e390\" class=\"graf graf--li graf-after--li\">[ ] Store and distribute secrets using a key store designed for the purpose such as <a class=\"markup--anchor markup--li-anchor\" href=\"https://www.vaultproject.io/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.vaultproject.io/\">Vault</a> or <a class=\"markup--anchor markup--li-anchor\" href=\"https://aws.amazon.com/secrets-manager/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://aws.amazon.com/secrets-manager/\">AWS Secret Manager</a>. Don’t hard code secrets in your applications and NEVER check secrets into GitHub.</li>\n<li id=\"8441\" class=\"graf graf--li graf-after--li\">[ ] Fully prevent SQL injection by only using SQL prepared statements. For example: if using NPM, don’t use npm-mysql, use npm-mysql2 which supports prepared statements.</li>\n</ul>\n<h3 id=\"ec7d\" class=\"graf graf--h3 graf-after--li\">Development</h3>\n<ul class=\"postList\">\n<li id=\"9132\" class=\"graf graf--li graf-after--h3\">[ ] Ensure that all components of your software are scanned for vulnerabilities for every version pushed to production. This means O/S, libraries and packages. This should be automated into the <a class=\"markup--anchor markup--li-anchor\" href=\"https://en.wikipedia.org/wiki/CI/CD\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://en.wikipedia.org/wiki/CI/CD\">CI-CD</a> process.</li>\n<li id=\"f7bd\" class=\"graf graf--li graf-after--li\">[ ] Secure development systems with equal vigilance to what you use for production systems. Build the software from secured, isolated development systems.</li>\n</ul>\n<h3 id=\"9169\" class=\"graf graf--h3 graf-after--li\">Authentication</h3>\n<ul class=\"postList\">\n<li id=\"55ee\" class=\"graf graf--li graf-after--h3\">[ ] Ensure all passwords are hashed using appropriate crypto such as <a class=\"markup--anchor markup--li-anchor\" href=\"https://en.wikipedia.org/wiki/Bcrypt\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://en.wikipedia.org/wiki/Bcrypt\">bcrypt</a>. Never write your own crypto and correctly initialize crypto with good random data.</li>\n<li id=\"773b\" class=\"graf graf--li graf-after--li\">Use best-practices and proven components for login, forgot password and other password reset. Don’t invent your own — it is hard to get it right in all scenarios.</li>\n<li id=\"bd5c\" class=\"graf graf--li graf-after--li\">[ ] Implement simple but adequate password rules that encourage users to have long, random passwords.</li>\n<li id=\"d7ed\" class=\"graf graf--li graf-after--li\">[ ] Use multi-factor authentication for your logins to all your service providers.</li>\n</ul>\n<h3 id=\"9bac\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Denial of Service Protection</strong></h3>\n<ul class=\"postList\">\n<li id=\"9321\" class=\"graf graf--li graf-after--h3\">[ ] Make sure that DOS attacks on your APIs won’t cripple your site. At a minimum, have rate limiters on your slower API paths and authentication related APIs like login and token generation routines. Consider CAPTCHA on front-end APIs to protect back-end services against DOS.</li>\n<li id=\"dcca\" class=\"graf graf--li graf-after--li\">[ ] Enforce sanity limits on the size and structure of user submitted data and requests.</li>\n<li id=\"d211\" class=\"graf graf--li graf-after--li\">[ ] Consider using <a class=\"markup--anchor markup--li-anchor\" href=\"https://en.wikipedia.org/wiki/Denial-of-service_attack\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://en.wikipedia.org/wiki/Denial-of-service_attack\">Distributed Denial of Service</a> (DDOS) mitigation via a global caching proxy service like <a class=\"markup--anchor markup--li-anchor\" href=\"https://www.cloudflare.com/\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://www.cloudflare.com/\">CloudFlare</a>. This can be turned on if you suffer a DDOS attack and otherwise function as your DNS lookup.</li>\n</ul>\n<h3 id=\"f1d4\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Web Traffic</strong></h3>\n<ul class=\"postList\">\n<li id=\"5698\" class=\"graf graf--li graf-after--h3\">[ ] Use TLS for the entire site, not just login forms and responses. Never use TLS for just the login form. Transitionally, use the strict-transport-security header to force HTTPS on all requests.</li>\n<li id=\"eb88\" class=\"graf graf--li graf-after--li\">[ ] Cookies must be httpOnly and secure and be scoped by path and domain.</li>\n<li id=\"68be\" class=\"graf graf--li graf-after--li\">[ ] Use <a class=\"markup--anchor markup--li-anchor\" href=\"https://en.wikipedia.org/wiki/Content_Security_Policy\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://en.wikipedia.org/wiki/Content_Security_Policy\">CSP</a> without allowing unsafe-* backdoors. It is a pain to configure, but worthwhile. Use CSP <a class=\"markup--anchor markup--li-anchor\" href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\">Subresource Integrity</a> for CDN content.</li>\n<li id=\"6342\" class=\"graf graf--li graf-after--li\">[ ] Use X-Frame-Option, X-XSS-Protection headers in client responses. Use <a class=\"markup--anchor markup--li-anchor\" href=\"https://observatory.mozilla.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://observatory.mozilla.org\">https://observatory.mozilla.org</a> to score your site.</li>\n<li id=\"f060\" class=\"graf graf--li graf-after--li\">[ ] Use HSTS responses to force TLS only access. Redirect all HTTP request to HTTPS on the server as backup.</li>\n<li id=\"988f\" class=\"graf graf--li graf-after--li\">[ ] Use CSRF tokens in all forms and use the new <a class=\"markup--anchor markup--li-anchor\" href=\"https://scotthelme.co.uk/csrf-is-dead/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://scotthelme.co.uk/csrf-is-dead/\">SameSite Cookie</a>response header which fixes CSRF once and for all newer browsers.</li>\n</ul>\n<h3 id=\"b353\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">APIs</strong></h3>\n<ul class=\"postList\">\n<li id=\"b2f3\" class=\"graf graf--li graf-after--h3\">[ ] Ensure that no resources are enumerable in your public APIs.</li>\n<li id=\"621f\" class=\"graf graf--li graf-after--li\">[ ] Ensure that users are fully authenticated and authorized appropriately when using your APIs.</li>\n<li id=\"9bd4\" class=\"graf graf--li graf-after--li\">[ ] Use canary checks in APIs to detect illegal or abnormal requests that indicate attacks.</li>\n</ul>\n<h3 id=\"274e\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Validation and Encoding</strong></h3>\n<ul class=\"postList\">\n<li id=\"9e6d\" class=\"graf graf--li graf-after--h3\">[ ] Do client-side input validation for quick user feedback, but never trust it. Always validate and encode user input before displaying.</li>\n<li id=\"ae65\" class=\"graf graf--li graf-after--li\">[ ] Validate every last bit of user input using white lists on the server. Never directly inject user content into responses. Never use untrusted user input in SQL statements or other server-side logic.</li>\n</ul>\n<h3 id=\"cf24\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Cloud Configuration</strong></h3>\n<ul class=\"postList\">\n<li id=\"9312\" class=\"graf graf--li graf-after--h3\">[ ] Ensure all services have minimum ports open. While security through obscurity is no protection, using non-standard ports will make it a little bit harder for attackers.</li>\n<li id=\"cbc3\" class=\"graf graf--li graf-after--li\">[ ] Host backend database and services on private VPCs that are not visible on any public network. Be very careful when configuring AWS security groups and peering VPCs which can inadvertently make services visible to the public.</li>\n<li id=\"39e3\" class=\"graf graf--li graf-after--li\">[ ] Isolate logical services in separate VPCs and peer VPCs to provide inter-service communication.</li>\n<li id=\"a1a7\" class=\"graf graf--li graf-after--li\">[ ] Ensure all services only accept data from a minimal set of IP addresses.</li>\n<li id=\"8905\" class=\"graf graf--li graf-after--li\">[ ] Restrict outgoing IP and port traffic to minimize APTs and “botification”.</li>\n<li id=\"6ff0\" class=\"graf graf--li graf-after--li\">[ ] Always use AWS IAM users and roles and not root credentials. Invest in learning to use IAM effectively.</li>\n<li id=\"ad28\" class=\"graf graf--li graf-after--li\">[ ] Use minimal access privilege for all ops and developer staff. Give IAM users and roles the minimum capabilities required to complete the task.</li>\n<li id=\"e718\" class=\"graf graf--li graf-after--li\">[ ] Regularly rotate passwords and access keys according to a schedule.</li>\n</ul>\n<h3 id=\"3810\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Infrastructure</strong></h3>\n<ul class=\"postList\">\n<li id=\"bfb3\" class=\"graf graf--li graf-after--h3\">[ ] Ensure you can do upgrades without downtime. Ensure you can quickly update software in a fully automated manner.</li>\n<li id=\"c8dd\" class=\"graf graf--li graf-after--li\">[ ] Create all infrastructure using a tool such as Terraform, and not via the cloud console. Infrastructure should be defined as “code” and be able to be recreated at the push of a button. Have zero tolerance for any resource created in the cloud by hand — Terraform can then audit your configuration.</li>\n<li id=\"4720\" class=\"graf graf--li graf-after--li\">[ ] Use centralized logging for all services. You should never need SSH to access or retrieve logs.</li>\n<li id=\"f040\" class=\"graf graf--li graf-after--li\">[ ] <span class=\"markup--quote markup--li-quote is-other\" data-creator-ids=\"anon\">Don’t SSH into services except for one-off diagnosis. Using SSH regularly, typically means you have not automated an important task.</span></li>\n<li id=\"518f\" class=\"graf graf--li graf-after--li\">[ ] Don’t keep port 22 open on any AWS service groups on a permanent basis. If you must use SSH, only use public key authentication and not passwords.</li>\n<li id=\"67e4\" class=\"graf graf--li graf-after--li\">[ ] Create <a class=\"markup--anchor markup--li-anchor\" href=\"http://chadfowler.com/2013/06/23/immutable-deployments.html\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"http://chadfowler.com/2013/06/23/immutable-deployments.html\">immutable hosts</a> instead of long-lived servers that you patch and upgrade. (See <a class=\"markup--anchor markup--li-anchor\" href=\"https://simplesecurity.sensedeep.com/immutable-infrastructure-can-be-dramatically-more-secure-238f297eca49\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://simplesecurity.sensedeep.com/immutable-infrastructure-can-be-dramatically-more-secure-238f297eca49\">Immutable Infrastructure Can Be More Secure</a>).</li>\n<li id=\"70fb\" class=\"graf graf--li graf-after--li\">[ ] Use an <a class=\"markup--anchor markup--li-anchor\" href=\"https://en.wikipedia.org/wiki/Intrusion_detection_system\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://en.wikipedia.org/wiki/Intrusion_detection_system\">Intrusion Detection System</a> to minimize <a class=\"markup--anchor markup--li-anchor\" href=\"https://en.wikipedia.org/wiki/Advanced_persistent_threat\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"https://en.wikipedia.org/wiki/Advanced_persistent_threat\">APTs</a>.</li>\n</ul>\n<h3 id=\"929e\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Operation</strong></h3>\n<ul class=\"postList\">\n<li id=\"9ca4\" class=\"graf graf--li graf-after--h3\">[ ] Power off unused services and servers. The most secure server is one that is powered down. Schedule dev servers to be <a class=\"markup--anchor markup--li-anchor\" href=\"https://www.powerdown.io/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.powerdown.io\">powered down</a> after hours when not required.</li>\n</ul>\n<h3 id=\"70f4\" class=\"graf graf--h3 graf-after--li\">Test</h3>\n<ul class=\"postList\">\n<li id=\"83c9\" class=\"graf graf--li graf-after--h3\">[ ] Audit your design and implementation.</li>\n<li id=\"4ce0\" class=\"graf graf--li graf-after--li\">[ ] Do penetration testing — hack yourself, but also have someone other than you pen testing as well.</li>\n</ul>\n<h3 id=\"8e09\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Train</strong></h3>\n<ul class=\"postList\">\n<li id=\"7846\" class=\"graf graf--li graf-after--h3\">Train staff (especially senior staff) as to the dangers and techniques used in security social engineering.</li>\n</ul>\n<h3 id=\"dfc6\" class=\"graf graf--h3 graf-after--li\"><strong class=\"markup--strong markup--h3-strong\">Finally, have a plan</strong></h3>\n<ul class=\"postList\">\n<li id=\"62ec\" class=\"graf graf--li graf-after--h3\">[ ] Have a threat model that describes what you are defending against. It should list and prioritize the possible threats and actors.</li>\n<li id=\"5deb\" class=\"graf graf--li graf-after--li graf--trailing\">[ ] Have a practiced security incident plan. One day, you will need it.</li>\n</ul>\n</div>\n</div>\n</section>\n<section class=\"section section--body section--last\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<div id=\"at_zurlpreview\">\n<p class=\"imgd\">Developing secure, robust web applications in the cloud is hard, very hard. If you think it is easy, you are either a higher form of life…</p>\n<p class=\"imgs\">Source: <a href=\"https://medium.com/simple-security/web-developer-security-checklist-f2e4f43c9c56\" target=\"_blank\" rel=\"noopener\">medium.com/simple-security/web-developer-security-checklist-f2e4f43c9c56</a></p>\n</div>\n</div>\n</div>\n</section>\n",
          "slug": "web-developer-security-checklist",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/19/web-developer-security-checklist/",
          "date": "2018-08-19T14:43:44",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc1MQ==",
        "node": {
          "id": "cG9zdDo3NTE=",
          "title": "Web Architecture 101",
          "content": "<h2 id=\"9767\" class=\"graf graf--h4 graf-after--h3 graf--subtitle\">The basic architecture concepts I wish I knew when I was getting started as a web developer</h2>\n<figure id=\"afbf\" class=\"graf graf--figure graf-after--h4\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*K6M-x-6e39jMq_c-2xqZIQ.png\" data-width=\"665\" data-height=\"421\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"46\"></canvas><img class=\"alignnone size-full wp-image-752\" src=\"https://emolike.net/wp-content/uploads/2018/08/1K6M-x-6e39jMq_c-2xqZIQ.png\" width=\"665\" height=\"421\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/1K6M-x-6e39jMq_c-2xqZIQ.png 665w, https://emolike.net/wp-content/uploads/2018/08/1K6M-x-6e39jMq_c-2xqZIQ-300x190.png 300w, https://emolike.net/wp-content/uploads/2018/08/1K6M-x-6e39jMq_c-2xqZIQ-426x270.png 426w\" sizes=\"(max-width: 665px) 100vw, 665px\" /></div>\n</div><figcaption class=\"imageCaption\">Modern web application architecture overview</figcaption></figure>\n<p id=\"ca90\" class=\"graf graf--p graf-after--figure\">The above diagram is a fairly good representation of our architecture at Storyblocks. If you’re not an experienced web developer, you’ll likely find it complicated. The walk through below should make it more approachable before we dive into the details of each component.</p>\n<blockquote id=\"df77\" class=\"graf graf--blockquote graf-after--p\"><p>A user searches on Google for “Strong Beautiful Fog And Sunbeams In The Forest”. The <a class=\"markup--anchor markup--blockquote-anchor\" href=\"https://www.graphicstock.com/stock-image/strong-beautiful-fog-and-sunbeams-in-the-forest-246703\" target=\"_blank\" rel=\"noopener\" data-href=\"https://www.graphicstock.com/stock-image/strong-beautiful-fog-and-sunbeams-in-the-forest-246703\">first result</a> happens to be from Storyblocks, our leading stock photo and vectors site. The user clicks the result which redirects their browser to the image details page. Underneath the hood the user’s browser sends a request to a DNS server to lookup how to contact Storyblocks, and then sends the request.</p></blockquote>\n<blockquote id=\"ac55\" class=\"graf graf--blockquote graf-after--blockquote\"><p>The request hits our load balancer, which randomly chooses one of the 10 or so web servers we have running the site at the time to process the request. The web server looks up some information about the image from our caching service and fetches the remaining data about it from the database. We notice that the color profile for the image has not been computed yet, so we send a “color profile” job to our job queue, which our job servers will process asynchronously, updating the database appropriately with the results.</p></blockquote>\n<blockquote id=\"219c\" class=\"graf graf--blockquote graf-after--blockquote\"><p>Next, we attempt to find similar photos by sending a request to our full text search service using the title of the photo as input. The user happens to be a logged into Storyblocks as a member so we look up his account information from our account service. Finally, we fire off a page view event to our data firehose to be recorded on our cloud storage system and eventually loaded into our data warehouse, which analysts use to help answer questions about the business.</p></blockquote>\n<blockquote id=\"25e6\" class=\"graf graf--blockquote graf-after--blockquote\"><p>The server now renders the view as HTML and sends it back to the user’s browser, passing first through the load balancer. The page contains Javascript and CSS assets that we load into our cloud storage system, which is connected to our CDN, so the user’s browser contacts the CDN to retrieve the content. Lastly, the browser visibly renders the page for the user to see.</p></blockquote>\n<p id=\"ffc5\" class=\"graf graf--p graf-after--blockquote\">Next I’ll walk you through each component, providing a “101” introduction to each that should give you a good mental model for thinking through web architecture going forward. I’ll follow up with another series of articles providing specific implementation recommendations based on what I’ve learned in my time at Storyblocks.</p>\n<h3 id=\"9d0a\" class=\"graf graf--h3 graf-after--p\">1. DNS</h3>\n<p id=\"f960\" class=\"graf graf--p graf-after--h3\">DNS stands for “Domain Name Server” and it’s a backbone technology that makes the world wide web possible. At the most basic level DNS provides a key/value lookup from a domain name (e.g., google.com) to an IP address (e.g., 85.129.83.120), which is required in order for your computer to route a request to the appropriate server. Analogizing to phone numbers, the difference between a domain name and IP address is the difference between “call John Doe” and “call 201-867–5309.” Just like you needed a phone book to look up John’s number in the old days, you need DNS to look up the IP address for a domain. So you can think of DNS as the phone book for the internet.</p>\n<p id=\"6fe5\" class=\"graf graf--p graf-after--p\">There’s a lot more detail we could go into here but we’ll skip over it because it’s not critical for our 101-level intro.</p>\n<h3 id=\"cccb\" class=\"graf graf--h3 graf-after--p\">2. Load Balancer</h3>\n<p id=\"88bb\" class=\"graf graf--p graf-after--h3\">Before diving into details on load balancing, we need to take a step back to discuss horizontal vs. vertical application scaling. What are they and what’s the difference? Very simply put in <a class=\"markup--anchor markup--p-anchor\" href=\"https://stackoverflow.com/questions/11707879/difference-between-scaling-horizontally-and-vertically-for-databases\" target=\"_blank\" rel=\"noopener\" data-href=\"https://stackoverflow.com/questions/11707879/difference-between-scaling-horizontally-and-vertically-for-databases\">this StackOverflow post</a>, <span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"anon\">horizontal scaling means that you scale by adding more machines into your pool of resources whereas “vertical” scaling means that you scale by adding more power (e.g., CPU, RAM) to an existing machine.</span></p>\n<p id=\"9f4c\" class=\"graf graf--p graf-after--p\">In web development, you (almost) always want to scale horizontally because, to keep it simple, stuff breaks. Servers crash randomly. Networks degrade. Entire data centers occasionally go offline. Having more than one server allows you to plan for outages so that your application continues running. In other words, your app is “fault tolerant.” Secondly, horizontal scaling allows you to minimally couple different parts of your application backend (web server, database, service X, etc.) by having each of them run on different servers. Lastly, you may reach a scale where it’s not possible to vertically scale any more. There is no computer in the world big enough to do all your app’s computations. Think Google’s search platform as a quintessential example though this applies to companies at much smaller scales. Storyblocks, for example, runs 150 to 400 AWS EC2 instances at any given point in time. It would be challenging to provide that entire compute power via vertical scaling.</p>\n<p id=\"930a\" class=\"graf graf--p graf-after--p\">Ok, back to load balancers. They’re the magic sauce that makes scaling horizontally possible. They route incoming requests to one of many application servers that are typically clones / mirror images of each other and send the response from the app server back to the client. Any one of them should process the request the same way so it’s just a matter of distributing the requests across the set of servers so none of them are overloaded.</p>\n<p id=\"bf2b\" class=\"graf graf--p graf-after--p\">That’s it. Conceptually load balancers are fairly straight forward. Under the hood there are certainly complications but no need to dive in for our 101 version.</p>\n<h3 id=\"8cdc\" class=\"graf graf--h3 graf-after--p\">3. Web Application Servers</h3>\n<p id=\"8b38\" class=\"graf graf--p graf-after--h3\">At a high level web application servers are relatively simple to describe. They execute the core business logic that handles a user’s request and sends back HTML to the user’s browser. To do their job, they typically communicate with a variety of backend infrastructure such as databases, caching layers, job queues, search services, other microservices, data/logging queues, and more. As mentioned above, you typically have at least two and often times many more, plugged into a load balancer in order to process user requests.</p>\n<p id=\"8c8c\" class=\"graf graf--p graf-after--p\">You should know that app server implementations require choosing a specific language (Node.js, Ruby, PHP, Scala, Java, C# .NET, etc.) and a web MVC framework for that language (Express for Node.js, Ruby on Rails, Play for Scala, Laravel for PHP, etc.). However, diving into the details of these languages and frameworks is beyond the scope of this article.</p>\n<h3 id=\"b1f1\" class=\"graf graf--h3 graf-after--p\">4. Database Servers</h3>\n<p id=\"51eb\" class=\"graf graf--p graf-after--h3\">Every modern web application leverages one or more databases to store information. Databases provide ways of defining your data structures, inserting new data, finding existing data, updating or deleting existing data, performing computations across the data, and more. In most cases the web app servers talk directly to one, as will the job servers. Additionally, each backend service may have it’s own database that’s isolated from the rest of the application.</p>\n<p id=\"e7dc\" class=\"graf graf--p graf-after--p\">While I’m avoiding a deep dive on particular technologies for each architecture component, I’d be doing you a disservice not to mention the next level of detail for databases: SQL and NoSQL.</p>\n<p id=\"1be9\" class=\"graf graf--p graf-after--p\">SQL stands for “Structured Query Language” and was invented in the 1970s to provide a standard way of querying relational data sets that was accessible to a wide audience. SQL databases store data in tables that are linked together via common IDs, typically integers. Let’s walk through a simple example of storing historical address information for users. You might have two tables, users and user_addresses, linked together by the user’s id. See the image below for a simplistic version. The tables are linked because the user_id column in user_addresses is a “foreign key” to the id column in the users table.</p>\n<figure id=\"e002\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*Ln39QPggpJVMAScUBsrcCQ.png\" data-width=\"451\" data-height=\"171\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"27\"></canvas><img class=\"alignnone size-full wp-image-753\" src=\"https://emolike.net/wp-content/uploads/2018/08/1Ln39QPggpJVMAScUBsrcCQ.png\" width=\"451\" height=\"171\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/1Ln39QPggpJVMAScUBsrcCQ.png 451w, https://emolike.net/wp-content/uploads/2018/08/1Ln39QPggpJVMAScUBsrcCQ-300x114.png 300w\" sizes=\"(max-width: 451px) 100vw, 451px\" /></div>\n</div>\n</figure>\n<p id=\"6d1e\" class=\"graf graf--p graf-after--figure\">If you don’t know much about SQL, I highly recommend walking through a tutorial like you can find on Khan Academy <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.khanacademy.org/computing/computer-programming/sql\" target=\"_blank\" rel=\"noopener\" data-href=\"https://www.khanacademy.org/computing/computer-programming/sql\">here</a>. It’s ubiquitous in web development so you’ll at least want to know the basics in order to properly architect an application.</p>\n<p id=\"ea83\" class=\"graf graf--p graf-after--p\">NoSQL, which stands for “Non-SQL”, is a newer set of database technologies that has emerged to handle the massive amounts of data that can be produced by large scale web applications (most variants of SQL don’t scale horizontally very well and can only scale vertically to a certain point). If you don’t know anything about NoSQL, I recommend starting with some high level introductions like these:</p>\n<ul class=\"postList\">\n<li id=\"7c41\" class=\"graf graf--li graf-after--p\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://www.w3resource.com/mongodb/nosql.php\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.w3resource.com/mongodb/nosql.php\">https://www.w3resource.com/mongodb/nosql.php</a></li>\n<li id=\"c923\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"http://www.kdnuggets.com/2016/07/seven-steps-understanding-nosql-databases.html\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://www.kdnuggets.com/2016/07/seven-steps-understanding-nosql-databases.html\">http://www.kdnuggets.com/2016/07/seven-steps-understanding-nosql-databases.html</a></li>\n<li id=\"ebd3\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://resources.mongodb.com/getting-started-with-mongodb/back-to-basics-1-introduction-to-nosql\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://resources.mongodb.com/getting-started-with-mongodb/back-to-basics-1-introduction-to-nosql\">https://resources.mongodb.com/getting-started-with-mongodb/back-to-basics-1-introduction-to-nosql</a></li>\n</ul>\n<p id=\"e54c\" class=\"graf graf--p graf-after--li\">I would also keep in mind that, by and large, <a class=\"markup--anchor markup--p-anchor\" href=\"https://blog.timescale.com/why-sql-beating-nosql-what-this-means-for-future-of-data-time-series-database-348b777b847a\" target=\"_blank\" rel=\"noopener\" data-href=\"https://blog.timescale.com/why-sql-beating-nosql-what-this-means-for-future-of-data-time-series-database-348b777b847a\">the industry is aligning on SQL as an interface even for NoSQL databases</a> so you really should learn SQL if you don’t know it. There’s almost no way to avoid it these days.</p>\n<h3 id=\"d933\" class=\"graf graf--h3 graf-after--p\">5. Caching Service</h3>\n<p id=\"9a2d\" class=\"graf graf--p graf-after--h3\">A caching service provides a simple key/value data store that makes it possible to save and lookup information in close to O(1) time. Applications typically leverage caching services to save the results of expensive computations so that it’s possible to retrieve the results from the cache instead of recomputing them the next time they’re needed. An application might cache results from a database query, calls to external services, HTML for a given URL, and many more. Here are some examples from real world applications:</p>\n<ul class=\"postList\">\n<li id=\"82ec\" class=\"graf graf--li graf-after--p\">Google caches search results for common search queries like “dog” or “Taylor Swift” rather than re-computing them each time</li>\n<li id=\"14d1\" class=\"graf graf--li graf-after--li\">Facebook caches much of the data you see when you log in, such as post data, friends, etc. Read a detailed article on Facebook’s caching tech <a class=\"markup--anchor markup--li-anchor\" href=\"https://medium.com/@shagun/scaling-memcache-at-facebook-1ba77d71c082\" target=\"_blank\" rel=\"noopener\" data-href=\"https://medium.com/@shagun/scaling-memcache-at-facebook-1ba77d71c082\">here</a>.</li>\n<li id=\"1ba4\" class=\"graf graf--li graf-after--li\">Storyblocks caches the HTML output from server-side React rendering, search results, typeahead results, and more.</li>\n</ul>\n<p id=\"eb61\" class=\"graf graf--p graf-after--li\">The two most widespread caching server technologies are Redis and Memcache. I’ll go into more detail here in another post.</p>\n<h3 id=\"c0b3\" class=\"graf graf--h3 graf-after--p\">6. Job Queue &amp; Servers</h3>\n<p id=\"73ca\" class=\"graf graf--p graf-after--h3\">Most web applications need to do some work asynchronously behind the scenes that’s not directly associated with responding to a user’s request. For instance, Google needs to crawl and index the entire internet in order to return search results. It does not do this every time you search. Instead, it crawls the web asynchronously, updating the search indexes along the way.</p>\n<p id=\"f4f0\" class=\"graf graf--p graf-after--p\">While there are different architectures that enable asynchronous work to be done, the most ubiquitous is what I’ll call the “job queue” architecture. It consists of two components: a queue of “jobs” that need to be run and one or more job servers (often called “workers”) that run the jobs in the queue.</p>\n<p id=\"d0c2\" class=\"graf graf--p graf-after--p\">Job queues store a list of jobs that need to be run asynchronously. The simplest are first-in-first-out (FIFO) queues though most applications end up needing some sort of priority queuing system. Whenever the app needs a job to be run, either on some sort of regular schedule or as determined by user actions, it simply adds the appropriate job to the queue.</p>\n<p id=\"fc7f\" class=\"graf graf--p graf-after--p\">Storyblocks, for instance, leverages a job queue to power a lot of the behind-the-scenes work required to support our marketplaces. We run jobs to encode videos and photos, process CSVs for metadata tagging, aggregate user statistics, send password reset emails, and more. We started with a simple FIFO queue though we upgraded to a priority queue to ensure that time-sensitive operations like sending password reset emails were completed ASAP.</p>\n<p id=\"6ae4\" class=\"graf graf--p graf-after--p\">Job servers process jobs. They poll the job queue to determine if there’s work to do and if there is, they pop a job off the queue and execute it. The underlying languages and frameworks choices are as numerous as for web servers so I won’t dive into detail in this article.</p>\n<h3 id=\"a34f\" class=\"graf graf--h3 graf-after--p\">7. Full-text Search Service</h3>\n<p id=\"593e\" class=\"graf graf--p graf-after--h3\">Many if not most web apps support some sort of search feature where a user provides a text input (often called a “query”) and the app returns the most “relevant” results. The technology powering this functionality is typically referred to as “<a class=\"markup--anchor markup--p-anchor\" href=\"https://en.wikipedia.org/wiki/Full-text_search\" target=\"_blank\" rel=\"noopener\" data-href=\"https://en.wikipedia.org/wiki/Full-text_search\">full-text search</a>”, which leverages an <a class=\"markup--anchor markup--p-anchor\" href=\"https://en.wikipedia.org/wiki/Inverted_index\" target=\"_blank\" rel=\"noopener\" data-href=\"https://en.wikipedia.org/wiki/Inverted_index\">inverted index</a> to quickly look up documents that contain the query keywords.</p>\n<figure id=\"4131\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*gun_BpdDH9KrNna1NnaocA.png\" data-width=\"561\" data-height=\"189\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"25\"></canvas><img class=\"alignnone size-full wp-image-754\" src=\"https://emolike.net/wp-content/uploads/2018/08/1gun_BpdDH9KrNna1NnaocA.png\" width=\"561\" height=\"189\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/1gun_BpdDH9KrNna1NnaocA.png 561w, https://emolike.net/wp-content/uploads/2018/08/1gun_BpdDH9KrNna1NnaocA-300x101.png 300w\" sizes=\"(max-width: 561px) 100vw, 561px\" /></div>\n</div><figcaption class=\"imageCaption\">Example showing how three document titles are converted into an inverted index to facilitate fast lookup from a specific keyword to the documents with that keyword in the title. Note, common words such as “in”, “the”, “with”, etc. (called stop words), are typically not included in an inverted index.</figcaption></figure>\n<p id=\"17b8\" class=\"graf graf--p graf-after--figure\">While it’s possible to do full-text search directly from some databases (e.g., <a class=\"markup--anchor markup--p-anchor\" href=\"https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html\" target=\"_blank\" rel=\"noopener\" data-href=\"https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html\">MySQL supports full-text search</a>), it’s typical to run a separate “search service” that computes and stores the inverted index and provides a query interface. The most popular full-text search platform today is <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.elastic.co/products/elasticsearch\" target=\"_blank\" rel=\"noopener\" data-href=\"https://www.elastic.co/products/elasticsearch\">Elasticsearch</a>though there are other options such as <a class=\"markup--anchor markup--p-anchor\" href=\"http://sphinxsearch.com/\" target=\"_blank\" rel=\"noopener\" data-href=\"http://sphinxsearch.com/\">Sphinx</a> or <a class=\"markup--anchor markup--p-anchor\" href=\"http://lucene.apache.org/solr/features.html\" target=\"_blank\" rel=\"noopener\" data-href=\"http://lucene.apache.org/solr/features.html\">Apache Solr</a>.</p>\n<h3 id=\"32fd\" class=\"graf graf--h3 graf-after--p\">8. Services</h3>\n<p id=\"90f1\" class=\"graf graf--p graf-after--h3\">Once an app reaches a certain scale, there will likely be certain “services” that are carved out to run as separate applications. They’re not exposed to the external world but the app and other services interact with them. Storyblocks, for example, has several operational and planned services:</p>\n<ul class=\"postList\">\n<li id=\"c8f9\" class=\"graf graf--li graf-after--p\"><strong class=\"markup--strong markup--li-strong\">Account service</strong> stores user data across all our sites, which allows us to easily offer cross-sell opportunities and create a more unified user experience</li>\n<li id=\"4282\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">Content service </strong>stores metadata for all of our video, audio, and image content. It also provides interfaces for downloading the content and viewing download history.</li>\n<li id=\"5144\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">Payment service </strong>provides an interface for billing customer credit cards.</li>\n<li id=\"7f9f\" class=\"graf graf--li graf-after--li\"><strong class=\"markup--strong markup--li-strong\">HTML → PDF service</strong> provides a simple interface that accepts HTML and returns a corresponding PDF document.</li>\n</ul>\n<h3 id=\"e18c\" class=\"graf graf--h3 graf-after--li\">9. Data</h3>\n<p id=\"4d99\" class=\"graf graf--p graf-after--h3\">Today, companies live and die based on how well they harness data. Almost every app these days, once it reaches a certain scale, leverages a data pipeline to ensure that data can be collected, stored, and analyzed. A typical pipeline has three main stages:</p>\n<ol class=\"postList\">\n<li id=\"d07b\" class=\"graf graf--li graf-after--p\">The app sends data, typically events about user interactions, to the data “firehose” which provides a streaming interface to ingest and process the data. Often times the raw data is transformed or augmented and passed to another firehose. AWS Kinesis and Kafka are the two most common technologies for this purpose.</li>\n<li id=\"4bc3\" class=\"graf graf--li graf-after--li\">The raw data as well as the final transformed/augmented data are saved to cloud storage. AWS Kinesis provides a setting called “firehose” that makes saving the raw data to it’s cloud storage (S3) extremely easy to configure.</li>\n<li id=\"f705\" class=\"graf graf--li graf-after--li\">The transformed/augmented data is often loaded into a data warehouse for analysis. We use AWS Redshift, as does a large and growing portion of the startup world, though larger companies will often use Oracle or other proprietary warehouse technologies. If the data sets are large enough, a Hadoop-like NoSQL MapReduce technology may be required for analysis.</li>\n</ol>\n<p id=\"f1e9\" class=\"graf graf--p graf-after--li\">Another step that’s not pictured in the architecture diagram: loading data from the app and services’ operational databases into the data warehouse. For example at Storyblocks we load our VideoBlocks, AudioBlocks, Storyblocks, account service, and contributor portal databases into Redshift every night. This provides our analysts a holistic dataset by co-locating the core business data alongside our user interaction event data.</p>\n<h3 id=\"9811\" class=\"graf graf--h3 graf-after--p\">10. Cloud storage</h3>\n<p id=\"0346\" class=\"graf graf--p graf--startsWithDoubleQuote graf-after--h3\">“Cloud storage is a simple and scalable way to store, access, and share data over the Internet” <a class=\"markup--anchor markup--p-anchor\" href=\"https://aws.amazon.com/what-is-cloud-storage/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://aws.amazon.com/what-is-cloud-storage/\">according to AWS</a>. You can use it to store and access more or less anything you’d store on a local file system with the benefits of being able to interact with it via a RESTful API over HTTP. Amazon’s S3 offering is by far the most popular cloud storage available today and the one we rely on extensively here at Storyblocks to store our video, photo, and audio assets, our CSS and Javascript, our user event data and much more.</p>\n<h3 id=\"311c\" class=\"graf graf--h3 graf-after--p\">11. CDN</h3>\n<p id=\"7402\" class=\"graf graf--p graf-after--h3\">CDN stands for “Content Delivery Network” and the technology provides a way of serving assets such as static HTML, CSS, Javascript, and images over the web much faster than serving them from a single origin server. It works by distributing the content across many “edge” servers around the world so that users end up downloading assets from the “edge” servers instead of the origin server. For instance in the image below, a user in Spain requests a web page from a site with origin servers in NYC, but the static assets for the page are loaded from a CDN “edge” server in England, preventing many slow cross-Atlantic HTTP requests.</p>\n<figure id=\"d2c4\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*ZkC_5865Hx-Cgph3iPJghw.png\" data-width=\"918\" data-height=\"411\" data-action=\"zoom\" data-action-value=\"1*ZkC_5865Hx-Cgph3iPJghw.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"32\"></canvas><img class=\"alignnone size-full wp-image-755\" src=\"https://emolike.net/wp-content/uploads/2018/08/1ZkC_5865Hx-Cgph3iPJghw.png\" width=\"918\" height=\"411\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/1ZkC_5865Hx-Cgph3iPJghw.png 918w, https://emolike.net/wp-content/uploads/2018/08/1ZkC_5865Hx-Cgph3iPJghw-300x134.png 300w, https://emolike.net/wp-content/uploads/2018/08/1ZkC_5865Hx-Cgph3iPJghw-768x344.png 768w, https://emolike.net/wp-content/uploads/2018/08/1ZkC_5865Hx-Cgph3iPJghw-604x270.png 604w\" sizes=\"(max-width: 918px) 100vw, 918px\" /></div>\n</div><figcaption class=\"imageCaption\"><a class=\"markup--anchor markup--figure-anchor\" href=\"https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/\">Source</a></figcaption></figure>\n<p id=\"402e\" class=\"graf graf--p graf-after--figure\"><a class=\"markup--anchor markup--p-anchor\" href=\"https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/\">Check out this article</a> for a more thorough introduction. In general a web app should always use a CDN to serve CSS, Javascript, images, videos and any other assets. Some apps might also be able to leverage a CDN to serve static HTML pages.</p>\n<h3 id=\"0532\" class=\"graf graf--h3 graf-after--p\">Parting thoughts</h3>\n<p id=\"1777\" class=\"graf graf--p graf-after--h3 graf--trailing\">And that’s a wrap on Web Architecture 101. I hope you found this useful. I’ll hopefully post a series of 201 articles that provide deep dives into some of these components over the course of the next year or two.</p>\n<div id=\"at_zurlpreview\">\n<p>&nbsp;</p>\n<p class=\"imgd\">The basic architecture concepts I wish I knew when I was getting started as a web developer</p>\n<p class=\"imgs\">Source: <a href=\"https://engineering.videoblocks.com/web-architecture-101-a3224e126947\" target=\"_blank\" rel=\"noopener\">engineering.videoblocks.com/web-architecture-101-a3224e126947</a></p>\n</div>\n",
          "slug": "web-architecture-101",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/17/web-architecture-101/",
          "date": "2018-08-17T13:25:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc0OA==",
        "node": {
          "id": "cG9zdDo3NDg=",
          "title": "Install Windows 2016 on Proxmox VE",
          "content": "<p><iframe title=\"Install Windows 2016 on Proxmox VE\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/fn6iJzRQDkw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "install-windows-2016-on-proxmox-ve",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/15/install-windows-2016-on-proxmox-ve/",
          "date": "2018-08-15T01:29:04",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              },
              {
                "name": "system admin"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjc0NQ==",
        "node": {
          "id": "cG9zdDo3NDU=",
          "title": "Web Performance Checklist",
          "content": "<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-746\" src=\"https://emolike.net/wp-content/uploads/2018/08/19kGABmNHC-1ivH0eoCb2eg.jpeg\" width=\"1200\" height=\"800\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/19kGABmNHC-1ivH0eoCb2eg.jpeg 1200w, https://emolike.net/wp-content/uploads/2018/08/19kGABmNHC-1ivH0eoCb2eg-300x200.jpeg 300w, https://emolike.net/wp-content/uploads/2018/08/19kGABmNHC-1ivH0eoCb2eg-768x512.jpeg 768w, https://emolike.net/wp-content/uploads/2018/08/19kGABmNHC-1ivH0eoCb2eg-1024x683.jpeg 1024w, https://emolike.net/wp-content/uploads/2018/08/19kGABmNHC-1ivH0eoCb2eg-405x270.jpeg 405w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p class=\"imgd\">Simple steps that will increase the performance of your website or web app. Take a look maybe you missed something in yours?</p>\n<p class=\"imgs\">Source: <a href=\"https://itnext.io/web-performance-checklist-6b616f3c6f0d\" target=\"_blank\" rel=\"noopener\">itnext.io/web-performance-checklist-6b616f3c6f0d</a></p>\n</div>\n",
          "slug": "web-performance-checklist",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/13/web-performance-checklist/",
          "date": "2018-08-13T12:22:37",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjczMw==",
        "node": {
          "id": "cG9zdDo3MzM=",
          "title": "top alternatives",
          "content": "\r\n<h2>htop</h2>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image\"><img class=\"alignnone size-full wp-image-734\" src=\"https://emolike.net/wp-content/uploads/2018/08/htop.png\" alt=\"htop\" width=\"974\" height=\"450\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/htop.png 974w, https://emolike.net/wp-content/uploads/2018/08/htop-300x139.png 300w, https://emolike.net/wp-content/uploads/2018/08/htop-768x355.png 768w, https://emolike.net/wp-content/uploads/2018/08/htop-584x270.png 584w\" sizes=\"(max-width: 974px) 100vw, 974px\" /></figure>\r\n\r\n\r\n\r\n\r\nSince the three aforementioned system monitoring tools can hold their own quite easily, I’ll focus on two alternatives which I believe can also hold their own as replacements or at least compliment top and htop. They are, <strong>Glances</strong> and <strong>nnom</strong>.\r\n\r\n\r\n\r\n\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">yum install -y htop</pre>\r\n\r\n\r\n\r\n<h2>Glances – system monitor</h2>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image\"><img class=\"alignnone size-full wp-image-735\" src=\"https://emolike.net/wp-content/uploads/2018/08/screenshot-wide.png\" alt=\"Glances - system monitoring tool written in Python\" width=\"848\" height=\"500\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/screenshot-wide.png 848w, https://emolike.net/wp-content/uploads/2018/08/screenshot-wide-300x177.png 300w, https://emolike.net/wp-content/uploads/2018/08/screenshot-wide-768x453.png 768w, https://emolike.net/wp-content/uploads/2018/08/screenshot-wide-458x270.png 458w\" sizes=\"(max-width: 848px) 100vw, 848px\" /></figure>\r\n\r\n\r\n\r\n\r\n<a href=\"https://nicolargo.github.io/glances/\" target=\"_blank\" rel=\"noreferrer noopener\">Glances</a> is open-source software to monitor and collect operating system statistics. <a href=\"https://github.com/nicolargo/glances\" target=\"_blank\" rel=\"noreferrer noopener\">Glances</a> aims to present the max amount of information, in the minimum amount of space. Glances is a good htop alternative as it can adapt dynamically when displaying system information, depending on the terminal size. Remote monitoring can be done via terminal, Web interface or API (XMLRPC and RESTful). Glances is written in Python and uses the <a href=\"https://github.com/giampaolo/psutil\" target=\"_blank\" rel=\"noreferrer noopener\">psutil</a> library to get information from your system. Stats can also be exported to external time/value databases.\r\n\r\n\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">curl -L https://bit.ly/glances | /bin/bash</pre>\r\nSource: <a href=\"https://haydenjames.io/alternatives-top-htop/\" target=\"_blank\" rel=\"noopener\">haydenjames.io/alternatives-top-htop/</a>\r\n\r\n<!-- /wp:shortcode -->\r\n\r\n<!-- wp:paragraph -->\r\n\r\n<!-- /wp:paragraph -->",
          "slug": "733",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/13/733/",
          "date": "2018-08-13T00:28:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjczMA==",
        "node": {
          "id": "cG9zdDo3MzA=",
          "title": "Workbox: Flexible PWA Libraries",
          "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube\">\n<iframe title=\"Workbox: Flexible PWA Libraries (Chrome Dev Summit 2017)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/DtuJ55tmjps?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</figure>\n",
          "slug": "workbox-flexible-pwa-libraries",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/12/workbox-flexible-pwa-libraries/",
          "date": "2018-08-12T13:21:31",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjcxNA==",
        "node": {
          "id": "cG9zdDo3MTQ=",
          "title": "DevOps roadmap",
          "content": "\n<figure class=\"wp-block-image is-resized\"><img src=\"https://emolike.net/wp-content/uploads/2018/08/devops-3.png\" alt=\"\" class=\"wp-image-723\" width=\"553\" height=\"1108\" srcset=\"https://emolike.net/wp-content/uploads/2018/08/devops-3.png 1105w, https://emolike.net/wp-content/uploads/2018/08/devops-3-150x300.png 150w, https://emolike.net/wp-content/uploads/2018/08/devops-3-768x1540.png 768w, https://emolike.net/wp-content/uploads/2018/08/devops-3-511x1024.png 511w, https://emolike.net/wp-content/uploads/2018/08/devops-3-135x270.png 135w\" sizes=\"(max-width: 553px) 100vw, 553px\" /></figure>\n\n\n\n<figure class=\"wp-block-embed is-type-rich\">\n<div class=\"github-embed github-embed-repository github-logo-mark\">    <p>        <a href=\"https://github.com/kamranahmedse/developer-roadmap\" target=\"_blank\">\t\t\t<strong>\t\t\t\tRoadmap to becoming a web developer in 2020\t\t\t</strong>\t\t</a>\t\t<br>        <a href=\"https://github.com/kamranahmedse/developer-roadmap\" target=\"_blank\">https://github.com/kamranahmedse/developer-roadmap</a><br>        <a href=\"https://github.com/kamranahmedse/developer-roadmap/network\" target=\"_blank\">16,274</a> forks.<br>        <a href=\"https://github.com/kamranahmedse/developer-roadmap/stargazers\" target=\"_blank\">101,655</a> stars.<br>        <a href=\"https://github.com/kamranahmedse/developer-roadmap/issues\" target=\"_blank\">8</a> open issues.<br>        Recent commits:        <ul class=\"github_commits\">                            <li class=\"github_commit\">                    <a href=\"https://github.com/kamranahmedse/developer-roadmap/commit/e26ee775339662e367b0d8be090c13b62a28e4b3\" target=\"_blank\">Translate intro-map and front-end roadmap into Hungarian (#691)Co-authored-by: Sevron &lt;phvhun@gmail.com&gt;</a>, GitHub                </li>                            <li class=\"github_commit\">                    <a href=\"https://github.com/kamranahmedse/developer-roadmap/commit/3ba529e1706a7bf74e11d8bfa4d182c54a4fe134\" target=\"_blank\">Add Persian translations (#690)* Add Persian translation of intro + front-end* Add Persian translation of back-end + devops</a>, GitHub                </li>                            <li class=\"github_commit\">                    <a href=\"https://github.com/kamranahmedse/developer-roadmap/commit/c00f6dfee5f7d1990d605c0a74a2e03429dab122\" target=\"_blank\">Russian translation of Intro and Frontend roadmaps (#689)* Russian readme.md files* intro-map in Russian* frontend-map in Russian* frontend map in Russian* fixes to layout in Russian frontend roadmap</a>, GitHub                </li>                            <li class=\"github_commit\">                    <a href=\"https://github.com/kamranahmedse/developer-roadmap/commit/f7f8f9bacc1bf961a4baf197edce69296b2b6d32\" target=\"_blank\">Add arabic link</a>, GitHub                </li>                            <li class=\"github_commit\">                    <a href=\"https://github.com/kamranahmedse/developer-roadmap/commit/b14f79529e8733a3761dad6064f87fd28d15251b\" target=\"_blank\">#669 adding arabic translations frontend map + intro map</a>, Kamran Ahmed                </li>                    </ul>    </p></div>\n</figure>\n",
          "slug": "devops-roadmap",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/08/1_AwvDJDfErlD34ox2QpwGoA.png"
          },
          "link": "https://emolike.net/2018/08/10/devops-roadmap/",
          "date": "2018-08-10T11:46:41",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "DevOps"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjcxMQ==",
        "node": {
          "id": "cG9zdDo3MTE=",
          "title": "JIRA Installation on Linux",
          "content": "\r\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube\">\n<!-- YouTube Embed v5.1 -->\n<div class=\"youtube-embed\" itemprop=\"video\" itemscope itemtype=\"https://schema.org/VideoObject\">\n\t<meta itemprop=\"url\" content=\"https://www.youtube.com/v/ZtL0tqkLXCA\" />\n\t<meta itemprop=\"name\" content=\"JIRA Installation on Linux\" />\n\t<meta itemprop=\"description\" content=\"JIRA Installation on Linux\" />\n\t<meta itemprop=\"uploadDate\" content=\"2018-08-09T21:14:52+03:00\" />\n\t<meta itemprop=\"thumbnailUrl\" content=\"https://i.ytimg.com/vi/ZtL0tqkLXCA/default.jpg\" />\n\t<meta itemprop=\"embedUrl\" content=\"https://www.youtube.com/embed/ZtL0tqkLXCA\" />\n\t<meta itemprop=\"height\" content=\"340\" />\n\t<meta itemprop=\"width\" content=\"560\" />\n\t<iframe style=\"border: 0;\" class=\"youtube-player\" width=\"560\" height=\"340\" src=\"https://www.youtube.com/embed/ZtL0tqkLXCA\" allowfullscreen ></iframe>\n</div>\n<!-- End of YouTube Embed code. Generated in 0.00356 seconds -->\n</figure>\r\n&nbsp;\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">wget https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-7.12.2-x64.bin\r\n\r\nchmod  a+x atlassian-jira-software-7.12.2-x64.bin\r\n</pre>\r\nfor activating automatic start with boot up\r\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">ln -s   /etc/init.d/jira  /etc/rc3.d/S02jira</pre>\r\n&nbsp;\r\n\r\n",
          "slug": "jira-installation-on-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/09/jira-installation-on-linux/",
          "date": "2018-08-09T21:14:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "Technology"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjcwOA==",
        "node": {
          "id": "cG9zdDo3MDg=",
          "title": "Intro To Service Workers &#038; Caching",
          "content": "\n<figure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube\">\n<iframe title=\"Intro To Service Workers &amp; Caching\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/ksXwaWHCW6k?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</figure>\n",
          "slug": "intro-to-service-workers-caching",
          "featuredImage": null,
          "link": "https://emolike.net/2018/08/03/intro-to-service-workers-caching/",
          "date": "2018-08-03T23:25:23",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjcwMg==",
        "node": {
          "id": "cG9zdDo3MDI=",
          "title": "LAMP stack using docker-compose",
          "content": "<h2 id=\"h1-objective\">Objective</h2>\n<p>Following this tutorial you will be able to create a LAMP environment using the Docker technology.</p>\n<h2 id=\"h2-requirements\">Requirements</h2>\n<ul>\n<li>Root permissions</li>\n<li>Basic knowledge of Docker</li>\n</ul>\n<h2 id=\"h3-difficulty\">Difficulty</h2>\n<p>MEDIUM</p>\n<h2 id=\"h4-conventions\">Conventions</h2>\n<ul>\n<li><b>#</b> &#8211; requires given <a href=\"https://linuxconfig.org/linux-commands\" target=\"_blank\" rel=\"noopener\">linux commands</a> to be executed with root privileges either directly as a root user or by use of <code>sudo</code> command</li>\n<li><b>$</b> &#8211; requires given <a href=\"https://linuxconfig.org/linux-commands\" target=\"_blank\" rel=\"noopener\">linux commands</a> to be executed as a regular non-privileged user</li>\n</ul>\n<h2 id=\"h5-introduction\">Introduction</h2>\n<p><img class=\"alignnone size-full wp-image-703\" src=\"https://emolike.net/wp-content/uploads/2018/07/docker-logo.jpg\" width=\"150\" height=\"118\" alt=\"docker_logo\" />Docker is an open source project aimed at providing software inside <code>containers</code>. You can think of a container as a sort of &#8220;package&#8221;, an isolated environment which shares the kernel with the host machine and contains everything the application needs. All containers are built using <code>images</code> (the central images repository for them being <a href=\"https://hub.docker.com/\" target=\"_blank\" rel=\"nofollow noopener\">Dockerhub</a>).</p>\n<p>In this tutorial, we will see how to create a LAMP stack based on dockerized components: following the &#8220;one service per container&#8221; philosophy, we will assemble the environment using <code>docker-compose</code>, a tool to orchestrate container compositions.</p>\n<h2 id=\"h6-one-service-vs-multiple-service-for-container\">One service vs multiple service for container</h2>\n<p>There are several advantages in using one service per container, instead of running multiple services in the same one. Modularity, for example, (we can reuse a container for different purposes), or a better maintainability: it&#8217;s easier to focus on a specific piece of an environment instead of considering all of them at once. If we want to respect this philosophy, we must create a container for each component of our LAMP stack: one for apache-php and one for the database. The different containers must be able to speak to each other: to easily orchestrate linked containers we will use <code>docker-compose</code>.</p>\n<h2 id=\"h7-preliminary-steps\">Preliminary steps</h2>\n<p>Before proceeding we need to install <code>docker</code> and <code>docker-compose</code> on our system:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># apt-get install docker docker-compose\r\n</pre>\n<p>The packages will be installed in few seconds, and the <code>docker</code> service will be automatically started. We can now proceed into creating a directory for our project and inside of it, another one to hold the pages that will be served by Apache. DocumentRoot would be a meaningful name for it; in this case the only page that will be served it&#8217;s <code>index.php</code>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ mkdir -p dockerized-lamp/DocumentRoot\r\n$ echo \"&lt;?php phpinfo(); ?&gt;\" &gt; dockerized-lamp/DocumentRoot/index.php</pre>\n<p>Here our code consists simply in the <code>phpinfo</code> function: it&#8217;s output (a page showing information about php, in case you don&#8217;t know) will be what our server will display by default. Now let&#8217;s use our favorite editor to create the <code>docker-compose.yml</code> file for our project.</p>\n<div class=\"moduletable\">\n<div class=\"custom\">\n<hr />\n<hr />\n</div>\n</div>\n<h4 id=\"h7-1-1-php-apache\">Php-apache</h4>\n<p>We can now start providing instruction about building and connecting our containers into the docker-compose file. This is a file which uses the <code>yaml</code> syntax. All definitions must be provided into the <code>services</code> section.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">version: '3'\r\nservices:\r\n    php-apache:\r\n        image: php:7.2.1-apache\r\n        ports:\r\n            - 80:80\r\n        volumes:\r\n            - ./DocumentRoot:/var/www/html\r\n        links:\r\n            - 'mariadb'</pre>\n<p>Let&#8217;s take a look at what we just done here. The first line we inserted into the file, <code>version</code>, specifies what docker-compose syntax version we are going to use, in this case the version <code>3</code>, the latest main version available. Inside the <code>services</code> section, we started describing our service by specifying its name, <code>php-apache</code> (an arbitrary name, you can use whatever you want), then the instructions for building it.</p>\n<p>The <code>image</code> keyword lets docker know what image we want to use to build our container: in this case I used <code>7.2.1-apache</code> which will provide us php 7.2.1 together with the apache web server. Need another php version? you just need to choose from the many provided in the image page on <a href=\"https://hub.docker.com/_/php/\" target=\"_blank\" rel=\"nofollow noopener\">dockerhub</a>.</p>\n<p>The second instruction we provided is <code>ports</code>: we are telling docker to map the port <code>80</code> on our host, to the port <code>80</code> on the container: this way will appear as we were running the web server directly on our system.</p>\n<p>We then used the <code>volumes</code> instruction to specify a <code>bind mount</code>. Since during development the code changes a lot and fast, there would be no sense in putting the code directly inside a container: this way we should rebuild it every time we make some modifications. Instead, what we are going to do is to tell docker to bind-mount the <code>DocumentRoot</code> directory, at <code>/var/www/html</code> inside the container. This directory represents the main apache <code>VirtualHost</code> document root, therefore the code we put inside it, will be immediately available.</p>\n<p>Finally we used the <code>link</code> keyword specifying <code>mariadb</code> as its argument. This keyword it&#8217;s not needed, as it may seem, to create a connection between the two containers: even without specifying it, the <code>mariadb</code> service would be reachable from inside the container built for the <code>apache-php</code>service, by using its name as an hostname. The keyword does two things: first let us optionally specify an <code>alias</code> we can use to reference a service in addition to its name. So, for example, by writing:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">link:\r\n    mariadb:database-service</pre>\n<p>the service could also be reached using <code>database-service</code>. The second thing <code>link</code> does, is specify a dependency: in this case the <code>php-apache</code> service will be considered as dependent from the <code>mariadb</code> one, so the latter will be started before the former when building or starting the environment.</p>\n<div class=\"moduletable\">\n<div class=\"custom\">\n<hr />\n<hr />\n</div>\n</div>\n<h4 id=\"h7-1-2-install-php-extensions\">Install php extensions</h4>\n<p>The default php-apache dockerfile does not include some php extensions, like mysqli or pdo. To install them we have to build our own dockerfile, based on it. To do that, we create a directory inside of our project named php-apache (this will be our <code>build context</code>) and inside of it, our dockerfile. Paste and save the code below as php-apache/Dockerfile:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">FROM php:7.2.1-apache\r\nMAINTAINER egidio docile\r\nRUN docker-php-ext-install pdo pdo_mysql mysqli</pre>\n<p>As you can see, with the <code>FROM</code> instruction, we specified that this dockerfile should be based on the default one. Then we included a <code>RUN</code> instruction: using the script provided in the image itself, <code>docker-php-ext-install</code>, we include the extensions needed to use pdo and mysqli. At this point, if we want to use our custom dockerfile, we have to slightly change the php-apache section in our docker-compose.yml, this way:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">version: '3'\r\nservices:\r\n    php-apache:\r\n        build:\r\n            context: ./php-apache\r\n        ports:\r\n            -  80:80\r\n        volumes:\r\n            - ./DocumentRoot:/var/www/html\r\n        links:\r\n            - 'mariadb'</pre>\n<p>What has changed? Instead of directly specifying the remote image to use, we provided the <code>context</code> instruction, inside the <code>build</code> section, so that the dockerfile contained in the directory we created and here provided as the argument, will be automatically used. The context directory is imported by the docker daemon when building the image, so if we want to add additional files we have to put them also there.</p>\n<h4 id=\"h7-1-3-the-database-service\">The database service</h4>\n<p>A database in an essential part of a LAMP environment, it is used for persistence. In this case we are going to use <code>mariadb</code>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">mariadb:\r\n    image: mariadb:10.1\r\n    volumes:\r\n        - mariadb:/var/lib/mysql\r\n    environment:\r\n        TZ: \"Europe/Rome\"\r\n        MYSQL_ALLOW_EMPTY_PASSWORD: \"no\"\r\n        MYSQL_ROOT_PASSWORD: \"rootpwd\"\r\n        MYSQL_USER: 'testuser'\r\n        MYSQL_PASSWORD: 'testpassword'\r\n        MYSQL_DATABASE: 'testdb'</pre>\n<p>We already know what the <code>image</code> keyword is for. The same goes for the <code>volumes</code> instruction, except for the fact that this time we didn&#8217;t declared a <code>bind mount</code>, instead, we referenced a <code>named volume</code>, for persistence. It&#8217;s important to focus on the difference between the two for a moment.</p>\n<p>As said before, a <code>bind mount</code> is a quick way to mount an host directory inside a container, so that the files contained in said directory become accessible from inside the restricted environment: to specify a bind mount, the <code>short syntax</code> is:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;host_path&gt;:&lt;mountpoint_inside_the_container&gt;\r\n</pre>\n<p>The host path can be a relative (to the docker-compose file) or an absolute path, while the mountpoint inside the container must be specified in absolute form.</p>\n<p>A <code>named volume</code> is something different: it is a proper <code>docker volume</code> used for persistence, and it is generally to be preferred over a bind mount, because it doesn&#8217;t depend on the host file structure (one of the many advantages of containers it&#8217;s their portability). The syntax to use to reference a <code>named volume</code> inside a service definition is:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">&lt;volume_name&gt;:&lt;mountpoint_inside_container&gt;\r\n</pre>\n<p>A <code>named volume</code> life cycle is independent from that of a container which uses it, and must be declared in the <code>volumes</code> section of the docker-compose file, as we will see in a moment.</p>\n<p>Back to the definition of the service now. The last keyword we used is <code>environment</code>: it lets us set some environment variables which will influence the behavior of the service. First we used <code>TZ</code> to specify our database timezone: in this case I used &#8220;Europe/Rome&#8221;. The names of the other variables say everything about their purpose: by using them we set important details as the name of the default database to be created (testdb), the user to be created and its password. We also set the root user password and decided to don&#8217;t allow empty passwords.</p>\n<div class=\"moduletable\">\n<div class=\"custom\">\n<hr />\n<hr />\n</div>\n</div>\n<h4 id=\"h7-1-4-the-volumes-section\">The volumes section</h4>\n<p>In this section we must declare the <code>named volume</code> we referenced from the <code>mariadb</code> server definition:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">volumes:\r\n    mariadb:</pre>\n<p>At the end, this is how our file will look in its entirety:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">version: '3'\r\nservices:\r\n    php-apache:\r\n        image: php:7.2.1-apache\r\n        ports:\r\n            - 80:80\r\n        volumes:\r\n            - ./DocumentRoot:/var/www/html:z\r\n        links:\r\n            - 'mariadb'\r\n\r\n    mariadb:\r\n        image: mariadb:10.1\r\n        volumes:\r\n            - mariadb:/var/lib/mysql\r\n        environment:\r\n            TZ: \"Europe/Rome\"\r\n            MYSQL_ALLOW_EMPTY_PASSWORD: \"no\"\r\n            MYSQL_ROOT_PASSWORD: \"rootpwd\"\r\n            MYSQL_USER: 'testuser'\r\n            MYSQL_PASSWORD: 'testpassword'\r\n            MYSQL_DATABASE: 'testdb'\r\n\r\nvolumes:\r\n    mariadb:</pre>\n<p>It&#8217;s really important to respect indentation for the file to be interpreted correctly.</p>\n<h2 id=\"h8-let-s-build-our-environment\">Let&#8217;s build our environment</h2>\n<p>Once we specified all instructions for our services, we can use the <code>docker-compose up</code> command to build them. The command must be executed inside the same directory where the <code>docker-compose.yml</code> file is located:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># docker-compose up\r\n</pre>\n<p>Few minutes and we will be ready to go. At the end if everything went well, by navigating to <code>localhost</code> on our host, we shall see the output of the php script we placed inside <code>DocumentRoot</code>:</p>\n<p><img class=\"alignnone size-full wp-image-704\" src=\"https://emolike.net/wp-content/uploads/2018/07/phpinfo-output.png\" width=\"730\" height=\"366\" alt=\"phpinfo-output\" srcset=\"https://emolike.net/wp-content/uploads/2018/07/phpinfo-output.png 730w, https://emolike.net/wp-content/uploads/2018/07/phpinfo-output-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/07/phpinfo-output-539x270.png 539w\" sizes=\"(max-width: 730px) 100vw, 730px\" /></p>\n<p>Our lamp environment is now ready to be used.</p>\n<h2 id=\"h9-closing-thoughts\">Closing thoughts</h2>\n<p>We have seen how to create a basic <code>LAMP</code> environment, using docker and orchestrating containers and services with <code>docker-compose</code>. The setup we used it&#8217;s focused on development, and can be further expanded and tweaked to match different needs: Docker documentation it&#8217;s a very well written source you can consult to expand your docker knowledge. Don&#8217;t hesitate to leave a comment for whatever doubts or questions you have.</p>\n<div id=\"at_zurlpreview\">\n<p class=\"imgp\"><img data-src=\"\" /></p>\n<p class=\"imgd\">Tutorial about creating a LAMP stack using docker-compose</p>\n<p class=\"imgs\">Source: <a href=\"https://linuxconfig.org/how-to-create-a-docker-based-lamp-stack-using-docker-compose-on-ubuntu-18-04-bionic-beaver-linux\" target=\"_blank\" rel=\"noopener\">linuxconfig.org/how-to-create-a-docker-based-lamp-stack-using-docker-compose-on-ubuntu-18-04-bionic-beaver-linux</a></p>\n</div>\n",
          "slug": "lamp-stack-using-docker-compose",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/07/docker-logo.jpg"
          },
          "link": "https://emolike.net/2018/07/23/lamp-stack-using-docker-compose/",
          "date": "2018-07-23T15:21:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Docker"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY5Nw==",
        "node": {
          "id": "cG9zdDo2OTc=",
          "title": "Full Stack Vue.js &#038; Laravel tutorial",
          "content": "<p><iframe title=\"Full Stack Vue.js &amp; Laravel\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/DJ6PD_jBtU0?start=84&#038;feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "full-stack-vue-js-laravel-tutorial",
          "featuredImage": null,
          "link": "https://emolike.net/2018/07/19/full-stack-vue-js-laravel-tutorial/",
          "date": "2018-07-19T14:01:57",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "PHP"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY5NQ==",
        "node": {
          "id": "cG9zdDo2OTU=",
          "title": "PHP Benchmarks",
          "content": "<div id=\"at_zurlpreview\">\n<h2>PHP Benchmarks</h2>\n<h3 style=\"display: none;\">PHP Benchmarks</h3>\n<p class=\"imgd\">Welcome to PHP Benchmarks, the reference site for PHP code benchmarks.</p>\n<p class=\"imgs\">Source: <a href=\"http://www.phpbenchmarks.com/en/\" target=\"_blank\" rel=\"noopener\">www.phpbenchmarks.com/en/</a></p>\n</div>\n",
          "slug": "php-benchmarks",
          "featuredImage": null,
          "link": "https://emolike.net/2018/07/19/php-benchmarks/",
          "date": "2018-07-19T12:37:02",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "PHP"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY5Mg==",
        "node": {
          "id": "cG9zdDo2OTI=",
          "title": "Add ESLint &#038; Prettier to VS Code for a Create React App",
          "content": "<p><iframe title=\"Add ESLint &amp; Prettier to VS Code for a Create React App\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/bfyI9yl3qfE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "add-eslint-prettier-to-vs-code-for-a-create-react-app",
          "featuredImage": null,
          "link": "https://emolike.net/2018/07/15/add-eslint-prettier-to-vs-code-for-a-create-react-app/",
          "date": "2018-07-15T15:10:05",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              },
              {
                "name": "javascript"
              },
              {
                "name": "React"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY4NQ==",
        "node": {
          "id": "cG9zdDo2ODU=",
          "title": "Julia, high-performance dynamic programming language for numerical computing",
          "content": "<p><a href=\"http://julialang.org/\">Julia</a> is a high-level, high-performance dynamic programming language for numerical computing. It provides a sophisticated compiler, <a href=\"http://docs.julialang.org/en/stable/manual/parallel-computing/\">distributed parallel execution</a>, numerical accuracy, and an <a href=\"https://docs.julialang.org/en/latest/#Standard-Library-1\">extensive mathematical function library</a>. Julia’s Base library, largely written in Julia itself, also integrates mature, best-of-breed open source C and Fortran libraries for <a href=\"http://docs.julialang.org/en/stable/stdlib/linalg/\">linear algebra</a>, <a href=\"http://docs.julialang.org/en/stable/stdlib/numbers/#random-numbers\">random number generation</a>, <a href=\"http://docs.julialang.org/en/stable/stdlib/math/#signal-processing\">signal processing</a>, and <a href=\"http://docs.julialang.org/en/stable/stdlib/strings/#strings\">string processing</a>. In addition, the Julia developer community is contributing a number of <a href=\"http://pkg.julialang.org/\">external packages</a> through Julia’s built-in package manager at a rapid pace. <a href=\"https://github.com/JuliaLang/IJulia.jl\">IJulia</a>, a collaboration between the <a href=\"http://jupyter.org/\">Jupyter</a> and Julia communities, provides a powerful browser-based graphical notebook interface to Julia.</p>\n<h1 id=\"a-summary-of-features\">A Summary of Features</h1>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Multiple_dispatch\">Multiple dispatch</a>: providing the ability to define function behavior across many combinations of argument types</li>\n<li>Dynamic type system: types for documentation, optimization, and dispatch</li>\n<li>Good performance, approaching that of statically-compiled languages like C</li>\n<li>Built-in package manager</li>\n<li><a href=\"http://docs.julialang.org/en/stable/manual/metaprogramming/#macros\">Lisp-like macros</a> and other <a href=\"http://docs.julialang.org/en/stable/manual/metaprogramming/\">metaprogramming facilities</a></li>\n<li>Call Python functions: use the <a href=\"https://github.com/stevengj/PyCall.jl\">PyCall</a> package</li>\n<li><a href=\"http://docs.julialang.org/en/stable/manual/calling-c-and-fortran-code/\">Call C functions</a> directly: no wrappers or special APIs</li>\n<li>Powerful shell-like capabilities for <a href=\"http://docs.julialang.org/en/stable/manual/running-external-programs/\">managing other processes</a></li>\n<li>Designed for <a href=\"http://docs.julialang.org/en/stable/manual/parallel-computing/\">parallelism and distributed computation</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Coroutine\">Coroutines</a>: lightweight “green” threading</li>\n<li><a href=\"http://docs.julialang.org/en/stable/manual/types/\">User-defined types</a> are as fast and compact as built-ins</li>\n<li>Automatic generation of efficient, specialized code for different argument types</li>\n<li>Elegant and extensible <a href=\"http://docs.julialang.org/en/stable/manual/conversion-and-promotion/\">conversions and promotions</a> for numeric and other types</li>\n<li>Efficient support for <a href=\"http://en.wikipedia.org/wiki/Unicode\">Unicode</a>, including but not limited to <a href=\"http://en.wikipedia.org/wiki/UTF-8\">UTF-8</a></li>\n<li><a href=\"https://github.com/JuliaLang/julia/blob/master/LICENSE.md\">MIT licensed</a>: free and open source</li>\n</ul>\n<h1 id=\"high-performance-jit-compiler\">High-Performance JIT Compiler</h1>\n<p>Julia’s LLVM-based just-in-time (JIT) compiler combined with the language’s design allow it to approach and often match the performance of C. To get a sense of the relative performance of Julia compared to other languages that can or could be used for numerical and scientific computing, we’ve written a small set of micro-benchmarks in a variety of languages: <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.c\">C</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.f90\">Fortran</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.jl\">Julia</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.py\">Python</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.m\">Matlab/Octave</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.R\">R</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.js\">JavaScript</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/tree/master/java/src/main/java\">Java</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.lua\">Lua</a>, <a href=\"https://github.com/JuliaLang/Microbenchmarks/blob/master/perf.nb\">Mathematica</a>. We encourage you to skim the code to get a sense for how easy or difficult it is to do numerical programming in each language.</p>\n<p><img class=\"alignnone size-full wp-image-688\" src=\"https://emolike.net/wp-content/uploads/2018/07/download.png\" alt=\"\" width=\"1162\" height=\"687\" srcset=\"https://emolike.net/wp-content/uploads/2018/07/download.png 1162w, https://emolike.net/wp-content/uploads/2018/07/download-300x177.png 300w, https://emolike.net/wp-content/uploads/2018/07/download-768x454.png 768w, https://emolike.net/wp-content/uploads/2018/07/download-1024x605.png 1024w, https://emolike.net/wp-content/uploads/2018/07/download-457x270.png 457w\" sizes=\"(max-width: 1162px) 100vw, 1162px\" /></p>\n<p><b>Figure:</b> Benchmark times relative to C (smaller is better, C performance = 1.0). Plot created with <a href=\"https://github.com/dcjones/Gadfly.jl\">Gadfly</a> and <a href=\"https://github.com/JuliaLang/IJulia.jl\">IJulia</a> from <a href=\"http://nbviewer.ipython.org/url/julialang.org/benchmarks/benchmarks.ipynb\">this notebook</a>. See the <a href=\"https://julialang.org/benchmarks/\">benchmarks page</a> for more information.</p>\n<div id=\"at_zurlpreview\">\n<h2>The Julia Language</h2>\n<h3 style=\"display: none;\">The Julia Language</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-690\" src=\"https://emolike.net/wp-content/uploads/2018/07/ijulia.png\" width=\"914\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/07/ijulia.png 914w, https://emolike.net/wp-content/uploads/2018/07/ijulia-214x300.png 214w, https://emolike.net/wp-content/uploads/2018/07/ijulia-768x1076.png 768w, https://emolike.net/wp-content/uploads/2018/07/ijulia-731x1024.png 731w, https://emolike.net/wp-content/uploads/2018/07/ijulia-193x270.png 193w\" sizes=\"(max-width: 914px) 100vw, 914px\" /></p>\n<p class=\"imgd\">Julia is a high-level, high-performance dynamic programming language for numerical computing. It provides a sophisticated compiler, distributed parallel execution, numerical accuracy, and an extensive mathematical function library. Julia’s Base library, largely written in Julia itself, also integrates mature, best-of-breed open source C and Fortran libraries for linear algebra, random number generation, signal processing, and string processing. In addition, the Julia developer community is contributing a number of external packages through Julia’s built-in package manager at a rapid pace. IJulia, a collaboration between the Jupyter and Julia communities, provides a powerful browser-based graphical notebook interface to Julia.</p>\n<p class=\"imgs\">Source: <a href=\"https://julialang.org/\" target=\"_blank\" rel=\"noopener\">julialang.org/</a></p>\n</div>\n",
          "slug": "julia-high-performance-dynamic-programming-language-for-numerical-computing",
          "featuredImage": null,
          "link": "https://emolike.net/2018/07/12/julia-high-performance-dynamic-programming-language-for-numerical-computing/",
          "date": "2018-07-12T14:28:09",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY3OQ==",
        "node": {
          "id": "cG9zdDo2Nzk=",
          "title": "Moving back from Node 10.5.0 to Node 8.11.3",
          "content": "<p>I faced many dependency issues due to the upgrade in my Linux machine (Manjaro &#8211; arch) so I decided to go back to the last stable version 8.11.3</p>\n<h2>Delete Old NodeJS</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo pacman -Rsc -n nodejs</pre>\n<h2>Install nvm for managing Node.js versions</h2>\n<p>The reason for using <a href=\"https://github.com/creationix/nvm\">nvm</a> instead of other install types is mainly in how easy it is to have multiple versions of Node.js (if needed) without too much of extra complexity. Sometimes applications might require a certain version of Node.js to work, so having the flexibility of using specific versions can save a lot of time from you.</p>\n<ol>\n<li>Open new Terminal window.</li>\n<li>Run <a href=\"https://github.com/creationix/nvm\">nvm</a> installer\n<ul>\n<li>&#8230;with <em>either</em> curl <em>or</em> wget.\n<ul>\n<li><code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</code></li>\n<li><code>wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</code></li>\n</ul>\n</li>\n<li>The script clones the nvm repository to <code>~/.nvm</code> and adds the source line to your profile (<code>~/.bash_profile</code>, <code>~/.zshrc,</code> <code>~/.profile,</code> or <code>~/.bashrc</code>). (You might want/need to add the source loading line by yourself, if the automated install tool does not add it for you.)</li>\n<li>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">export NVM_DIR=\"$HOME/.nvm\"\r\n[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\r\n[ -s \"$NVM_DIR/bash_completion\" ] &amp;&amp; \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\r\n\r\n</pre>\n</li>\n</ul>\n</li>\n<li>If everything went well, you should now be able to reload the shell by running\n<ul>\n<li><code>source ~/.bashrc</code></li>\n<li>(Another option is to open a new Terminal window/tab.)</li>\n</ul>\n</li>\n<li>Verify installation\n<ul>\n<li>To verify that nvm has been installed, do: <code>command -v nvm</code></li>\n</ul>\n</li>\n<li>List what versions of Node are currently installed (probably none).\n<ul>\n<li><code>nvm ls</code></li>\n</ul>\n</li>\n<li>Install latest <a href=\"https://nodejs.org/en/\" rel=\"nofollow\">Node.js</a> LTS release (recommended for production usage).\n<ul>\n<li><code>nvm install v8.11.3</code></li>\n</ul>\n</li>\n<li>Install Current <a href=\"https://nodejs.org/en/\" rel=\"nofollow\">Node.js</a> release with latest features (for testing the future features of Node).\n<ul>\n<li><code>nvm install v10.4.1</code></li>\n</ul>\n</li>\n<li>Set a default Node version for nvm (enabling you to actually use it in a new Terminal session windows).\n<ul>\n<li><code>nvm alias default v8.11.3</code> (when you work with production quality projects)</li>\n<li><code>nvm alias default v10.4.1</code> (ONLY if you want to test the latest features of Node.js. Please note that some packages are broken with the latest Node v10.)</li>\n</ul>\n</li>\n</ol>\n<p>It is also possible to select what Node.js version is used per project basis, by running <code>nvm use v10.4.1</code> (or another version number) on the directory where the individual project is located. One way to do that is to create small Bash shell script for enabling the right environment when needed, so you would not have to remember what exact version was needed. Now you have it.</p>\n<p>You can find a lot of packages from the <a href=\"https://www.npmjs.com/\" rel=\"nofollow\">npm</a> website. Have a good time with the tools.</p>\n<h2><a id=\"user-content-upgrading-from-previous-version-of-nodejs\" class=\"anchor\" href=\"https://gist.github.com/d2s/372b5943bce17b964a79#upgrading-from-previous-version-of-nodejs\" aria-hidden=\"true\"></a>Upgrading from previous version of Node.js</h2>\n<p>If you already have previous version of Node.js installed with nvm, you can upgrade to a different version with these steps.</p>\n<ul>\n<li>Open new Terminal window (to make sure you have latest Node.js version active in your command line environment).</li>\n<li>Linking global packages from previous version (at this example, <code>v8._._</code>).\n<ul>\n<li><code>nvm reinstall-packages v8.11.2</code></li>\n</ul>\n</li>\n</ul>\n<h3><a id=\"user-content-updating-outdated-packages\" class=\"anchor\" href=\"https://gist.github.com/d2s/372b5943bce17b964a79#updating-outdated-packages\" aria-hidden=\"true\"></a>Updating outdated packages</h3>\n<h4><a id=\"user-content-list-what-top-level-packages-are-installed-globally\" class=\"anchor\" href=\"https://gist.github.com/d2s/372b5943bce17b964a79#list-what-top-level-packages-are-installed-globally\" aria-hidden=\"true\"></a>List what (top level) packages are installed globally</h4>\n<div class=\"highlight highlight-source-shell\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">npm ls -g --depth=0.</pre>\n<p><strong>List what packages are outdated</strong></p>\n</div>\n<div class=\"highlight highlight-source-shell\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">npm outdated -g --depth=0.</pre>\n</div>\n<h4><a id=\"user-content-update-outdated-globally-installed-npm-packages\" class=\"anchor\" href=\"https://gist.github.com/d2s/372b5943bce17b964a79#update-outdated-globally-installed-npm-packages\" aria-hidden=\"true\"></a>Update outdated globally installed npm packages</h4>\n<div class=\"highlight highlight-source-shell\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">npm update -g</pre>\n</div>\n<h4><a id=\"user-content-fixing-old-package-versions\" class=\"anchor\" href=\"https://gist.github.com/d2s/372b5943bce17b964a79#fixing-old-package-versions\" aria-hidden=\"true\"></a>Fixing old package versions</h4>\n<p>After installation of Node v10.x (or similar), it can be a good idea to recompile old packages (that have compiled native extensions) to make sure that they work with the new version of Node. That can be done easily by going to a project’s root directory, and running <code>npm rebuild</code>:</p>\n<div class=\"highlight highlight-source-shell\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cd PROJECT_NAME\r\nnpm rebuild</pre>\n</div>\n<h2><a id=\"user-content-deleting-old-nodejs-versions\" class=\"anchor\" href=\"https://gist.github.com/d2s/372b5943bce17b964a79#deleting-old-nodejs-versions\" aria-hidden=\"true\"></a>Deleting old Node.js versions</h2>\n<ul>\n<li>Look what versions are installed:\n<ul>\n<li><code>nvm ls</code></li>\n</ul>\n</li>\n<li>Delete an older version (if it is no longer used in some of your projects):\n<ul>\n<li><code>nvm uninstall v8.11.</code></li>\n</ul>\n</li>\n</ul>\n<div id=\"at_zurlpreview\">\n<p class=\"imgp\">Installing Node.js for Linux &amp; macOS with nvm</p>\n<p class=\"imgs\">Source: <a href=\"https://gist.github.com/d2s/372b5943bce17b964a79\" target=\"_blank\" rel=\"noopener\">gist.github.com/d2s/372b5943bce17b964a79</a></p>\n</div>\n",
          "slug": "moving-back-from-node-10-5-0-to-node-8-11-3",
          "featuredImage": null,
          "link": "https://emolike.net/2018/07/11/moving-back-from-node-10-5-0-to-node-8-11-3/",
          "date": "2018-07-11T14:25:23",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY3Ng==",
        "node": {
          "id": "cG9zdDo2NzY=",
          "title": "New API development solution",
          "content": "<p class=\"my-3\">Standard Library is the fastest way to build, ship, host, document, scale and integrate with APIs without the headache of managing infrastructure and complicated toolchains. See how our serverless platform is changing software development — from internal tools to external developer APIs.</p>\n<div class=\"hero-buttons pt-3\">\n<form data-claim-namespace=\"\">\n<div class=\"standard-input claim-namespace red-border white-bg\">\n<div class=\"input\">\n<h1 id=\"code-xyz\">Code.xyz</h1>\n<p><a href=\"https://code.xyz/\">Code.xyz</a> is an online code editor. It was carefully hand-crafted to power API development: specialized for webhooks, workflow automation tasks, and, of course, general API design tooling. You can think of it almost like the Google Docs for API development and publishing — our goal is to <strong>(1)</strong> significantly reduce repetitive API development work for professional engineers, as well as <strong>(2)</strong> increasingly provide less technical knowledge workers greater access to writing software and utilizing Enterprise-quality integrations.</p>\n</div>\n<p>&nbsp;</p>\n</div>\n</form>\n</div>\n",
          "slug": "new-api-development-solution",
          "featuredImage": null,
          "link": "https://emolike.net/2018/06/06/new-api-development-solution/",
          "date": "2018-06-06T00:16:29",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "javascript"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "Software Engineering"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY3MQ==",
        "node": {
          "id": "cG9zdDo2NzE=",
          "title": "Which Programming Languages Use the Least Electricity?",
          "content": "<p>Can energy usage data tell us anything about the quality of our programming languages?</p>\n<p>Last year a team of six researchers in Portugal from three different universities decided to investigate this question, ultimately releasing a paper titled “<a class=\"ext-link\" href=\"http://greenlab.di.uminho.pt/wp-content/uploads/2017/10/sleFinal.pdf\" rel=\"external \">Energy Efficiency Across Programming Languages</a>.” They ran the solutions to 10 programming problems written in 27 different languages, while carefully monitoring how much electricity each one used — as well as its speed and memory usage.</p>\n<p><img class=\"alignnone size-full wp-image-672\" src=\"https://emolike.net/wp-content/uploads/2018/06/3730357d-results-energy-time-and-memory-usage-screenshot-from-research-paper.png\" alt=\"esults - Energy, time and memory usage (screenshot from research paper)\" width=\"639\" height=\"715\" srcset=\"https://emolike.net/wp-content/uploads/2018/06/3730357d-results-energy-time-and-memory-usage-screenshot-from-research-paper.png 639w, https://emolike.net/wp-content/uploads/2018/06/3730357d-results-energy-time-and-memory-usage-screenshot-from-research-paper-268x300.png 268w, https://emolike.net/wp-content/uploads/2018/06/3730357d-results-energy-time-and-memory-usage-screenshot-from-research-paper-241x270.png 241w\" sizes=\"(max-width: 639px) 100vw, 639px\" /></p>\n<p><img class=\"alignnone size-full wp-image-673\" src=\"https://emolike.net/wp-content/uploads/2018/06/f7216fd4-dna-sequence-finding-test-results-screenshot-from-web-site.png\" alt=\"DNA sequence-finding test results (screenshot from web site\" width=\"847\" height=\"527\" srcset=\"https://emolike.net/wp-content/uploads/2018/06/f7216fd4-dna-sequence-finding-test-results-screenshot-from-web-site.png 847w, https://emolike.net/wp-content/uploads/2018/06/f7216fd4-dna-sequence-finding-test-results-screenshot-from-web-site-300x187.png 300w, https://emolike.net/wp-content/uploads/2018/06/f7216fd4-dna-sequence-finding-test-results-screenshot-from-web-site-768x478.png 768w, https://emolike.net/wp-content/uploads/2018/06/f7216fd4-dna-sequence-finding-test-results-screenshot-from-web-site-434x270.png 434w\" sizes=\"(max-width: 847px) 100vw, 847px\" /></p>\n<div id=\"at_zurlpreview\">\n<h2>Which Programming Languages Use the Least Electricity? &#8211; The New Stack</h2>\n<h3 style=\"display: none;\">Which Programming Languages Use the Least Electricity? &#8211; The New Stack</h3>\n<p class=\"imgs\">Source: <a href=\"https://thenewstack.io/which-programming-languages-use-the-least-electricity/\" target=\"_blank\" rel=\"noopener\">thenewstack.io/which-programming-languages-use-the-least-electricity/</a></p>\n</div>\n",
          "slug": "which-programming-languages-use-the-least-electricity",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/06/f7216fd4-dna-sequence-finding-test-results-screenshot-from-web-site.png"
          },
          "link": "https://emolike.net/2018/06/06/which-programming-languages-use-the-least-electricity/",
          "date": "2018-06-06T00:07:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY2OA==",
        "node": {
          "id": "cG9zdDo2Njg=",
          "title": "Yandex.Mail for a domain FREE",
          "content": "<h2 class=\"b-domain__header\">Why Yandex.Mail for a domain?</h2>\n<p>Yandex.Mail for a domain is a free email hosting service. Clean mail without spam or viruses. Any number of email accounts, unlimited storage space, anti-virus and spam protection, and accessible on the web and with email clients. Free DNS hosting.</p>\n<p>Use Yandex.Mail for your domain free of charge for effective communication between the employees of your organization.</p>\n<p>At your disposal</p>\n<ul>\n<li>Required number of mailboxes (by default 1,000, to get more, contact our Support Service)</li>\n<li>A convenient interface for managing mail accounts (blocking mailboxes of dismissed and the creation of mailboxes for new employees, changing passwords, etc.)</li>\n<li>You can use your organization&#8217;s logo in the Mail&#8217;s web interface.</li>\n<li>10 GB on Yandex.Disk</li>\n</ul>\n<p><a class=\"cut__sw\">Also</a></p>\n<ul class=\"cut\">\n<li>Unlimited-size mailbox</li>\n<li>Reliable anti-spam and virus system</li>\n<li>Access to mail through the web interface (from any computer) and mail programs using POP3/IMAP protocols</li>\n<li><a href=\"https://yandex.com/support/domain/access/mobile.xml\">Access to mail from mobile devices</a></li>\n<li>A calendar for organizing your work day, scheduling meetings, and creating a to-do list</li>\n<li>Convenient tools for working with messages in the web interface (previewing office documents, downloading all files as one archive, filters and labels for convenient sorting of correspondence, and much else).</li>\n<li>Many other capabilities (<a href=\"https://yandex.com/support/domain/domain/settings.xml#mail\">default address</a>, <a href=\"https://yandex.com/support/domain/domain/settings.xml#domain\">domain aliases</a>).</li>\n</ul>\n<div id=\"at_zurlpreview\">\n<h2>Connecting a domain — Yandex.Mail for a domain</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Add CNAME for verifcation of your account in DNS configuration \r\nThen Add MX record\r\n</pre>\n<p>&nbsp;</p>\n<h3 style=\"display: none;\">Connecting a domain — Yandex.Mail for a domain</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-669\" src=\"https://emolike.net/wp-content/uploads/2018/06/w3fZdbIEslxR_9CQRR-ezRNUZ_Q.png\" width=\"95\" height=\"37\" /></p>\n<p class=\"imgd\">\n<p class=\"imgs\">Source: <a href=\"https://domain.yandex.com/domains_add/\" target=\"_blank\" rel=\"noopener\">domain.yandex.com/domains_add/</a></p>\n</div>\n",
          "slug": "yandex-mail-for-a-domain-free",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/06/w3fZdbIEslxR_9CQRR-ezRNUZ_Q.png"
          },
          "link": "https://emolike.net/2018/06/05/yandex-mail-for-a-domain-free/",
          "date": "2018-06-05T23:58:42",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjY2MQ==",
        "node": {
          "id": "cG9zdDo2NjE=",
          "title": "AWS CLI",
          "content": "<h2 id=\"cli-quick-configuration\">Quick Configuration</h2>\n<p>For general use, the <code class=\"code\">aws configure</code> command is the fastest way to set up your AWS CLI installation.</p>\n<div class=\"code-btn-container\">\n<div class=\"btn-dark-theme\" title=\"Dark theme\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">$ aws configure\r\nAWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE\r\nAWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\r\nDefault region name [None]: us-west-2\r\nDefault output format [None]: json</pre>\n<p><iframe title=\"AWS CLI How to connect AWS via CLI (English)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/0BkX3m1yZnE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<h3>Push Files to S3 Bucket</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">aws s3 cp --recursive ./build s3://courses20010\r\n</pre>\n<p>&nbsp;</p>\n</div>\n</div>\n",
          "slug": "aws-cli",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/18/aws-cli/",
          "date": "2018-05-18T17:13:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "AWS"
              },
              {
                "name": "deployment"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU5Ng==",
        "node": {
          "id": "cG9zdDo1OTY=",
          "title": "Building a Serverless Web App on AWS Services",
          "content": "<h2 data-css-7941k5=\"\">Introduction</h2>\n<div>\n<p>In this tutorial, you&#8217;ll learn to build a simple web application using the following AWS Services:</p>\n<ul>\n<li><a href=\"https://aws.amazon.com/dynamodb/\" data-css-1skajya=\"\">AWS DynamoDB</a> as the database</li>\n<li><a href=\"https://aws.amazon.com/lambda/\" data-css-1skajya=\"\">AWS Lambda</a> to create functions that will read and write from/to the database</li>\n<li><a href=\"https://aws.amazon.com/api-gateway/\" data-css-1skajya=\"\">AWS API Gateway</a> to create the REST API that the web application will use</li>\n<li><a href=\"https://aws.amazon.com/s3/\" data-css-1skajya=\"\">AWS S3</a> to host the web application</li>\n<li><a href=\"https://aws.amazon.com/cloudfront/\" data-css-1skajya=\"\">AWS CloudFront</a> to deliver the web application from a location near to the user&#8217;s location.</li>\n</ul>\n<p>Here&#8217;s the architecture diagram:</p>\n<p><img class=\"alignnone size-full wp-image-597\" src=\"https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43.png\" alt=\"architecture diagram\" width=\"929\" height=\"519\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43.png 929w, https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43-300x168.png 300w, https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43-768x429.png 768w, https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43-483x270.png 483w\" sizes=\"(max-width: 929px) 100vw, 929px\" /></p>\n<p>For the lambda functions, we will use a Node.js runtime environment with the Javascript SDK.</p>\n<p>Everything will be made from the AWS Management Console, without external frameworks, SDK, or command-line interfaces (CLI).</p>\n<h2 data-css-7941k5=\"\">Sample WebApp and Credit</h2>\n<div>\n<p>The sample web app allows you to create/edit/delete courses. This is how it looks like:</p>\n<p style=\"text-align: center;\"><a href=\"http://courses20010.s3-website-us-east-1.amazonaws.com/\">http://courses20010.s3-website-us-east-1.amazonaws.com/</a></p>\n<p style=\"text-align: center;\"><a href=\"https://d1td28opf6foxs.cloudfront.net/\">https://d1td28opf6foxs.cloudfront.net/</a></p>\n<p><img class=\"alignnone size-full wp-image-598\" src=\"https://emolike.net/wp-content/uploads/2018/05/db216707-2ba9-4229-acb7-d2c76ed9413b.gif\" alt=\"demo\" width=\"800\" height=\"450\" /></p>\n<p>It&#8217;s a single-page application made with React and Redux. The credit for this application goes to <a href=\"https://github.com/ariesmcrae\" data-css-1skajya=\"\">Aries McRae</a>. For this guide, I just modified his <a href=\"https://github.com/ariesmcrae/reactjs-crud-boilerplate\" data-css-1skajya=\"\">React CRUD boilerplate</a>.</p>\n<p>You can clone the app from <a href=\"https://github.com/eh3rrera/react-app-frontend\" data-css-1skajya=\"\">this GitHub repository</a> and test it locally with the included Express server.</p>\n<p>This guide won&#8217;t explain how the app is made. So don&#8217;t worry if you are unfamiliar with React and Redux, as this tutorial will focus on building the API and setting up all the AWS services.</p>\n<h2 data-css-7941k5=\"\">How it works</h2>\n<div>\n<p>The API works with two data structures, <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">course</code></span> and <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">author</code></span>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">Course:\r\n{\r\n    id: \"web-components-shadow-dom\",\r\n    title: \"Web Component Fundamentals\",\r\n    watchHref: \"http://www.pluralsight.com/courses/web-components-shadow-dom\",\r\n    authorId: \"cory-house\",\r\n    length: \"5:10\",\r\n    category: \"HTML5\"\r\n}\r\n\r\nAuthor:\r\n{\r\n  id: 'cory-house',\r\n  firstName: 'Cory',\r\n  lastName: 'House'\r\n}</pre>\n<p>Of course, you&#8217;ll need an AWS account. If you don&#8217;t have one, <a href=\"https://aws.amazon.com/\" data-css-1skajya=\"\">sign up here</a>. Registration is free, and all the services used in this tutorial are within the <a href=\"https://aws.amazon.com/free/\" data-css-1skajya=\"\">AWS Free Tier</a>, but you&#8217;ll need to enter a credit card number in case you exceed that free tier.</p>\n<p>The most difficult step is verification, in which an automated system will call you, and you have to enter a PIN code. It doesn&#8217;t always work and you may have to ask the support team to call you to verify your account.</p>\n<p>Once you have created your account, you automatically sign up for all services in AWS. However, it&#8217;s a good practice to create an admin user instead of using your root account for day-to-day operations. Follow the steps in <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_create-admin-group.html\" data-css-1skajya=\"\">this guide</a> to do this.</p>\n<p>Now let&#8217;s start by creating the tables to store the app information in DynamoDB.</p>\n<h2 data-css-7941k5=\"\">Storing data in DynamoDB</h2>\n<div>\n<p><strong>DynamoDB</strong> is a fully-managed NoSQL database that stores the data in key-value pairs, like a JSON object:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"ID\": 1,\r\n  \"Title\": \"Introduction to Angular 5\",\r\n  \"Category\": \"web-dev\"\r\n}</pre>\n<p>There are no schemas so every record can have a different structure. The only restriction is that the field(s) defined as the partition key must be present in all the records.</p>\n<p>Based on this partition key, DynamoDB store data in different drives. An efficient distribution will make accessing the data as fast as possible, so it&#8217;s important to choose a good partition key.</p>\n<p>This way, the partition key can become the primary key, but you can also use a combination of a partition key and a sort key as a primary key. For example, if you have multiple records with the same course ID (the partition key), you can add a timestamp as a sort key to form a unique combination. In addition, you can also have secondary indexes for any other field (or combination of fields) to make queries more efficient.</p>\n<p>DynamoDB gives you a lot of options. You can learn more about it in the <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html\" data-css-1skajya=\"\">developer guide</a>, but for now, let&#8217;s dive into creating a database for our API.</p>\n<p>Open the <em>Services</em> menu and choose <em>DynamoDB</em>:</p>\n<p><img class=\"alignnone size-full wp-image-599\" src=\"https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c.jpg\" alt=\"choose dynamodb\" width=\"1280\" height=\"829\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-300x194.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-768x497.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-1024x663.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-417x270.jpg 417w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Make sure you&#8217;re in the correct AWS region (there&#8217;s a DynamoDB database per region) and click on <em>Create table</em>:</p>\n<p><img class=\"alignnone size-full wp-image-600\" src=\"https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f.jpg\" alt=\"create table\" width=\"1280\" height=\"652\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-300x153.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-768x391.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-1024x522.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-530x270.jpg 530w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Enter the following information, leave the default settings checked and click on <em>Create</em>:</p>\n<ul>\n<li>Table name: <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">courses</code></span></li>\n<li>Primary key: <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">id</code></span></li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-601\" src=\"https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec.png\" alt=\"course table\" width=\"812\" height=\"496\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec.png 812w, https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec-300x183.png 300w, https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec-768x469.png 768w, https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec-442x270.png 442w\" sizes=\"(max-width: 812px) 100vw, 812px\" /></p>\n<p>If you see the following message:</p>\n<p><img class=\"alignnone size-full wp-image-602\" src=\"https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6.png\" alt=\"autoscaling message\" width=\"804\" height=\"108\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6.png 804w, https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6-300x40.png 300w, https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6-768x103.png 768w, https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6-604x81.png 604w\" sizes=\"(max-width: 804px) 100vw, 804px\" /></p>\n<p>Your AWS account does not currently have the <em>DynamoDBAutoscaleRole</em>, but there&#8217;s no problem if you&#8217;re not going to use the auto-scaling service or if you&#8217;re not sure what it is. If you want to use it, follow the documentation link to add the <em>AmazonDynamoDBFullAccess</em> and a custom inline policy to create the autoscale role automatically when you create a new table with auto scaling the first time, it&#8217;s all <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.Console.html#AutoScaling.Permissions\" data-css-1skajya=\"\">in the documentation</a>.</p>\n<p>It might take a few seconds, but you should see a confirmation page like the following:</p>\n<p><img class=\"alignnone size-full wp-image-603\" src=\"https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c.png\" alt=\"table created\" width=\"1280\" height=\"608\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c.png 1280w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-300x143.png 300w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-768x365.png 768w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-1024x486.png 1024w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-568x270.png 568w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Take note of the table&#8217;s <strong>Amazon Resource Name (ARN)</strong>, you&#8217;ll need it later.</p>\n<p>In the <em>Items</em> tab you can query your table or add items:</p>\n<p><img class=\"alignnone size-full wp-image-604\" src=\"https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d.png\" alt=\"course table items\" width=\"1280\" height=\"612\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d.png 1280w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-300x143.png 300w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-768x367.png 768w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-1024x490.png 1024w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-565x270.png 565w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>I&#8217;m going to leave it empty for now, but I&#8217;ll add items to this table when the application is finished. Meanwhile, I&#8217;ll go ahead and create a new table for the authors with the following information:</p>\n<ul>\n<li>Table name: <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">authors</code></span></li>\n<li>Primary key: <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">id</code></span></li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-605\" src=\"https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c.png\" alt=\"authors table\" width=\"820\" height=\"500\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c.png 820w, https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c-300x183.png 300w, https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c-768x468.png 768w, https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c-443x270.png 443w\" sizes=\"(max-width: 820px) 100vw, 820px\" /></p>\n<p>After the table is created, take note of its ARN.</p>\n<p>Now, in the <em>Items</em> tab, create some authors, for example:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"id\": \"cory-house\",\r\n  \"firstName\": \"Cory\",\r\n  \"lastName\": \"House\"\r\n},\r\n{\r\n  \"id\": \"samer-buma\",\r\n  \"firstName\": \"Samer\",\r\n  \"lastName\": \"Buma\"\r\n},\r\n{\r\n  \"id\": \"deborah-kurata\",\r\n  \"firstName\": \"Deborah\",\r\n  \"lastName\": \"Kurata\"\r\n}</pre>\n<p><img class=\"alignnone size-full wp-image-606\" src=\"https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115.png\" alt=\"author item\" width=\"1023\" height=\"488\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115.png 1023w, https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115-300x143.png 300w, https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115-768x366.png 768w, https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115-566x270.png 566w\" sizes=\"(max-width: 1023px) 100vw, 1023px\" /></p>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-storingdataindynamodb\" class=\"jsx-360051262\" data-module-id=\"storingdataindynamodb\">\n<div>\n<p>Now let&#8217;s create the lambda functions that will use these tables.</p>\n</div>\n</div>\n</div>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-creatinglambdafunctions\" class=\"jsx-360051262\" data-module-id=\"creatinglambdafunctions\">\n<div id=\"module-creatinglambdafunctions-anchor\" class=\"jsx-360051262 anchor\">\n<h2 data-css-7941k5=\"\">Creating lambda functions</h2>\n<div>\n<p><strong>AWS Lambda</strong> is a service that allows you to run functions upon certain events, for example, when data is inserted in a DynamoDB table or when a file is uploaded to S3.</p>\n<p>In this case, a lambda function will be run whenever a request hits one of the API endpoints you&#8217;ll set up in the next section.</p>\n<p>At the time of this writing, a lambda function can be written in Node.js, Python, Java, or C#. This tutorial will use Node.js.</p>\n<p>You can learn more about AWS Lambda <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/welcome.html\" data-css-1skajya=\"\">in the developer documentation</a>.</p>\n<p>We&#8217;ll create six lambda functions:</p>\n<ul>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span> to return all the users in the database</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-courses</code></span> to return all the courses in the database</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-course</code></span> to return only one course</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">save-course</code></span> to create a new course</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">update-course</code></span> to update a course</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">delete-course</code></span> to delete a course</li>\n</ul>\n<p>Let&#8217;s start by creating the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span> function. Open the <em>Services</em> menu and choose <em>Lambda</em>:</p>\n<p><img class=\"alignnone size-full wp-image-607\" src=\"https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a.jpg\" alt=\"AWS lambda\" width=\"1280\" height=\"829\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-300x194.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-768x497.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-1024x663.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-417x270.jpg 417w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Click on :Create a function*:</p>\n<p><img class=\"alignnone size-full wp-image-608\" src=\"https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54.jpg\" alt=\"Create function\" width=\"1048\" height=\"312\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54.jpg 1048w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-300x89.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-768x229.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-1024x305.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-604x180.jpg 604w\" sizes=\"(max-width: 1048px) 100vw, 1048px\" /></p>\n<p>And then, with the <em>Author from scratch option</em> selected, enter the following:</p>\n<ul>\n<li>Name: <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span></li>\n<li>Runtime: <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Node.js 6.10</code></span> (or a superior version)</li>\n<li>Role: <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Create a custom role</code></span></li>\n</ul>\n<p>When selecting the option <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Create a custom role</code></span>, a new window will open to allow you to create a new role.</p>\n<p>Alternatively, you could choose the option <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Create a new role from a template(s)</code></span> and choose the policy template <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Simple Microservice permissions</code></span>. This template will give you permissions to read, create, update, and delete items from any table:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"dynamodb:DeleteItem\",\r\n                \"dynamodb:GetItem\",\r\n                \"dynamodb:PutItem\",\r\n                \"dynamodb:Scan\",\r\n                \"dynamodb:UpdateItem\"\r\n            ],\r\n            \"Resource\": \"arn:aws:dynamodb:region:accountId:table/*\"\r\n        }\r\n    ]\r\n}</pre>\n<p>However, this is not good practice; custom services should require as few permissions as possible to reduce overhead and maximize privacy and security.</p>\n<p>So in the window to create a new role, enter <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors-lambda-role</code></span> as the role name:</p>\n<p><img class=\"alignnone size-full wp-image-609\" src=\"https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734.png\" alt=\"create custom role\" width=\"1244\" height=\"552\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734.png 1244w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-300x133.png 300w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-768x341.png 768w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-1024x454.png 1024w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-604x268.png 604w\" sizes=\"(max-width: 1244px) 100vw, 1244px\" /></p>\n<p>At this point, it will only give you permissions to write to the CloudWatch logs, so click on the <em>Edit</em> link and modify the policy document so it looks like this:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:Scan\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_AUTHORS_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</pre>\n<p>Just replace the DynamoDB Scan <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Resource</code></span> field with the ARN of your author&#8217;s table. This will give you permissions to perform a scan operation to read all the items of the author&#8217;s table only.</p>\n<p>Finally, click on the <em>Allow</em> button.</p>\n<p>Back to the window to create the lambda function, choose the role <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors-lambda-role</code></span> in the <em>Existing role</em> option and click on <em>Create function</em>:</p>\n<p><img class=\"alignnone size-full wp-image-610\" src=\"https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2.png\" alt=\"create get all authors function\" width=\"1142\" height=\"516\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2.png 1142w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-598x270.png 598w\" sizes=\"(max-width: 1142px) 100vw, 1142px\" /></p>\n<p>After the lambda function is created, scroll down to the <em>Function code</em>section:</p>\n<p><img class=\"alignnone size-full wp-image-611\" src=\"https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509.png\" alt=\"function code\" width=\"1140\" height=\"572\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509.png 1140w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-300x151.png 300w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-768x385.png 768w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-1024x514.png 1024w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-538x270.png 538w\" sizes=\"(max-width: 1140px) 100vw, 1140px\" /></p>\n<p>Enter the following code:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    TableName: \"authors\"\r\n  };\r\n  dynamodb.scan(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, data);\r\n    }\r\n  });\r\n};</pre>\n<p>First, you require the AWS SDK and create a DynamoDB instance passing the code of the region where the database is located, for example <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">us-east-2</code></span> for Ohio (find out your region code <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\" data-css-1skajya=\"\">here</a>), and the API version (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">2012-08-10</code></span> is the latest at the time of writing this tutorial).</p>\n<p>The exported function receives three parameters:</p>\n<ul>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">event</code></span> — an object that is used to pass data to the handler.</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">context</code></span>— an object that provides runtime information about the Lambda function being executed.</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">callback</code></span>— a function to return information to the caller (if it&#8217;s called, otherwise the return value is <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">null</code></span>). The callback takes two parameters:\n<ul>\n<li>error — an object that provides the result of a failed execution. When a Lambda function succeeds, you can pass null as the first parameter.</li>\n<li>result — an object that provides the result of a successful execution. The result provided must be <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">JSON.stringify</code></span>-compatible. If an error is provided, this parameter is ignored.</li>\n</ul>\n</li>\n</ul>\n<p>Inside the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">handler</code></span> function, you execute a <a href=\"http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB.html#scan-property\" data-css-1skajya=\"\">scan</a> operation to get all the items of the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">authors</code></span> table.</p>\n<p>Any error that occurs is passed to the callback function. Otherwise, the callback is executed passing the data returned.</p>\n<p>Keep in mind that the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">scan</code></span> operation will return up to one MB of data. If there is more data available, a <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">LastEvaluatedKey</code></span> value is included in the results along with the number of items exceeding the limit to continue the scan in a subsequent operation.</p>\n<p>You can know more about the available methods of the AWS Javascript SDK for DynamoDB in the <a href=\"http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB.html\" data-css-1skajya=\"\">API documentation</a>.</p>\n<p>Now click <em>Save</em>. Then, if you click on the <em>Test</em> button, a window to configure some input properties will open:</p>\n<p><img class=\"alignnone size-full wp-image-612\" src=\"https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca.png\" alt=\"test event\" width=\"806\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca.png 806w, https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca-300x215.png 300w, https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca-768x551.png 768w, https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca-377x270.png 377w\" sizes=\"(max-width: 806px) 100vw, 806px\" /></p>\n<p>This function does not take any parameters so give it a name and just click on <em>Create</em> and then on <em>Test</em> one more time.</p>\n<p>You can check the execution results at the top of the page:</p>\n<p><img class=\"alignnone size-full wp-image-613\" src=\"https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6.png\" alt=\"test results\" width=\"1122\" height=\"510\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6.png 1122w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-768x349.png 768w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-1024x465.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-594x270.png 594w\" sizes=\"(max-width: 1122px) 100vw, 1122px\" /></p>\n<p>Or in the <em>Execution Results</em> tab below the code editor:</p>\n<p><img class=\"alignnone size-full wp-image-614\" src=\"https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f.png\" alt=\"test results\" width=\"1150\" height=\"642\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f.png 1150w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-300x167.png 300w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-768x429.png 768w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-1024x572.png 1024w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-484x270.png 484w\" sizes=\"(max-width: 1150px) 100vw, 1150px\" /></p>\n<p>This is a sample output:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"Items\": [\r\n    {\r\n      \"id\": {\r\n        \"S\": \"cory-house\"\r\n      },\r\n      \"firstName\": {\r\n        \"S\": \"Cory\"\r\n      },\r\n      \"lastName\": {\r\n        \"S\": \"House\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": {\r\n        \"S\": \"samer-buma\"\r\n      },\r\n      \"firstName\": {\r\n        \"S\": \"Samer\"\r\n      },\r\n      \"lastName\": {\r\n        \"S\": \"Buma\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": {\r\n        \"S\": \"deborah-kurata\"\r\n      },\r\n      \"firstName\": {\r\n        \"S\": \"Deborah\"\r\n      },\r\n      \"lastName\": {\r\n        \"S\": \"Kurata\"\r\n      }\r\n    }\r\n  ],\r\n  \"Count\": 3,\r\n  \"ScannedCount\": 3\r\n}</pre>\n<p>As you can see, every key/value pair inside <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Items</code></span> also contains the type (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">S</code></span> for <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">String</code></span>), so let&#8217;s modify the format with a <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">map</code></span> function to only return the key and the value for each item.</p>\n<p>Replace the code of the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">else</code></span> block inside the callback function of <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">scan</code></span> with the following:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// ...\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n    ...\r\n    dynamodb.scan(params, (err, data) =&gt; {\r\n      if(err) {\r\n        ...\r\n      } else {\r\n        const authors = data.Items.map(item =&gt; {\r\n          return { id: item.id.S, firstName: item.firstName.S, lastName: item.lastName.S };\r\n        });\r\n        callback(null, authors);\r\n      }\r\n    });\r\n};</pre>\n<p>If you save and then test the function once again, you&#8217;ll get as result a much cleaner object:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">[\r\n  {\r\n    id: \"cory-house\",\r\n    firstName: \"Cory\",\r\n    lastName: \"House\"\r\n  },\r\n  {\r\n    id: \"samer-buma\",\r\n    firstName: \"Samer\",\r\n    lastName: \"Buma\"\r\n  },\r\n  {\r\n    id: \"deborah-kurata\",\r\n    firstName: \"Deborah\",\r\n    lastName: \"Kurata\"\r\n  }\r\n];</pre>\n<p>Now follow the <em>Functions</em> link at the top of the page. Your function should appear on the dashboard:</p>\n<p><img class=\"alignnone size-full wp-image-615\" src=\"https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a.png\" alt=\"functions dashboard\" width=\"1152\" height=\"264\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a.png 1152w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-300x69.png 300w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-768x176.png 768w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-1024x235.png 1024w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-604x138.png 604w\" sizes=\"(max-width: 1152px) 100vw, 1152px\" /></p>\n<p>Next, we need to create the rest of the functions with their corresponding roles and policies. Of course, you can create one role with a full access policy and use it for all your functions, but remember, that is not the recommended approach. Custom roles that minimize the number of permissions are better in the long run.</p>\n<p>You can also create the policies and roles from the Identity and Access Management (IAM) console with the visual editor, first creating a policy with required permission and then creating the role that will contain that policy.</p>\n<p>But probably it&#8217;s faster to enter the policy manually and have AWS create both the policy and the role for you. So here are the policies and the code for each function.</p>\n<p>The policy to create a new course:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:PutItem\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">save-course</code></span>):</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nconst replaceAll = (str, find, replace) =&gt; {\r\n  return str.replace(new RegExp(find, \"g\"), replace);\r\n};\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const id = replaceAll(event.title, \" \", \"-\").toLowerCase();\r\n  const params = {\r\n    Item: {\r\n      id: {\r\n        S: id\r\n      },\r\n      title: {\r\n        S: event.title\r\n      },\r\n      watchHref: {\r\n        S: `http://www.pluralsight.com/courses/${id}`\r\n      },\r\n      authorId: {\r\n        S: event.authorId\r\n      },\r\n      length: {\r\n        S: event.length\r\n      },\r\n      category: {\r\n        S: event.category\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.putItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, {\r\n        id: params.Item.id.S,\r\n        title: params.Item.title.S,\r\n        watchHref: params.Item.watchHref.S,\r\n        authorId: params.Item.authorId.S,\r\n        length: params.Item.length.S,\r\n        category: params.Item.category.S\r\n      });\r\n    }\r\n  });\r\n};</pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:10\",\r\n  \"category\": \"HTML5\"\r\n}</pre>\n<p>To update a course we&#8217;re also going to use the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">putItem</code></span> operation so the policy is the same and you can reuse the role of the previous function.</p>\n<p>The code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">update-course</code></span>) is also similar, with the only difference being that the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">id</code></span> and <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">watchHref</code></span> fields are not generated:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    Item: {\r\n      id: {\r\n        S: event.id\r\n      },\r\n      title: {\r\n        S: event.title\r\n      },\r\n      watchHref: {\r\n        S: event.watchHref\r\n      },\r\n      authorId: {\r\n        S: event.authorId\r\n      },\r\n      length: {\r\n        S: event.length\r\n      },\r\n      category: {\r\n        S: event.category\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.putItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, {\r\n        id: params.Item.id.S,\r\n        title: params.Item.title.S,\r\n        watchHref: params.Item.watchHref.S,\r\n        authorId: params.Item.authorId.S,\r\n        length: params.Item.length.S,\r\n        category: params.Item.category.S\r\n      });\r\n    }\r\n  });\r\n};\r\n</pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"id\": \"web-component-fundamentals\",\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:03\",\r\n  \"category\": \"HTML5\",\r\n  \"watchHref\": \"http://www.pluralsight.com/courses/web-components-shadow-dom\"\r\n}</pre>\n<p>The policy to get all the courses:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:Scan\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-courses</code></span>):</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.scan(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      const courses = data.Items.map(item =&gt; {\r\n        return {\r\n          id: item.id.S,\r\n          title: item.title.S,\r\n          watchHref: item.watchHref.S,\r\n          authorId: item.authorId.S,\r\n          length: item.length.S,\r\n          category: item.category.S\r\n        };\r\n      });\r\n      callback(null, courses);\r\n    }\r\n  });\r\n};</pre>\n<p>The policy to get one course:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:GetItem\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-course</code></span>):</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    Key: {\r\n      id: {\r\n        S: event.id\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.getItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, {\r\n        id: data.Item.id.S,\r\n        title: data.Item.title.S,\r\n        watchHref: data.Item.watchHref.S,\r\n        authorId: data.Item.authorId.S,\r\n        length: data.Item.length.S,\r\n        category: data.Item.category.S\r\n      });\r\n    }\r\n  });\r\n};</pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"id\": \"web-component-fundamentals\"\r\n}</pre>\n<p>The policy to delete a course:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:DeleteItem\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">delete-course</code></span>):</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    Key: {\r\n      id: {\r\n        S: event.id\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.deleteItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, data);\r\n    }\r\n  });\r\n};</pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"id\": \"web-component-fundamentals\"\r\n}</pre>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-creatinglambdafunctions\" class=\"jsx-360051262\" data-module-id=\"creatinglambdafunctions\">\n<div>\n<p>And these are all the functions you&#8217;ll need. Now let&#8217;s expose them to the world via a REST API.</p>\n</div>\n</div>\n</div>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-settingupapigateway\" class=\"jsx-360051262\" data-module-id=\"settingupapigateway\">\n<div id=\"module-settingupapigateway-anchor\" class=\"jsx-360051262 anchor\">\n<h2 data-css-7941k5=\"\">Setting up API Gateway</h2>\n<div>\n<p><strong>API Gateway</strong> is a service that allows creating a REST API fully managed by AWS that acts as the front-end for other services.</p>\n<p>Open the <em>Services</em> menu and choose <em>API Gateway</em>:</p>\n<p><img class=\"alignnone size-full wp-image-616\" src=\"https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47.png\" alt=\"choose API Gateway\" width=\"1216\" height=\"896\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47.png 1216w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-300x221.png 300w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-768x566.png 768w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-1024x755.png 1024w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-366x270.png 366w\" sizes=\"(max-width: 1216px) 100vw, 1216px\" /></p>\n<p>Press <em>Get started</em>:</p>\n<p><img class=\"alignnone size-full wp-image-617\" src=\"https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85.jpg\" alt=\"API Gateway\" width=\"1280\" height=\"612\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-300x143.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-768x367.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-1024x490.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-565x270.jpg 565w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>You can create an API with a <a href=\"https://swagger.io/\" data-css-1skajya=\"\">Swagger</a> file here we&#8217;re going to create the API manually, so choose to create a <em>New API</em> and give it a name:</p>\n<p><img class=\"alignnone size-full wp-image-618\" src=\"https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a.png\" alt=\"create new API\" width=\"1274\" height=\"508\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a.png 1274w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-768x306.png 768w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-1024x408.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-604x241.png 604w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>This will create a new API and you&#8217;ll be ready to start adding resources (URL paths) and methods (GET, POST, etc.):</p>\n<p><img class=\"alignnone size-full wp-image-619\" src=\"https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b.png\" alt=\"API created\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b.png 1276w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Now open the <em>Actions</em> menu and choose <em>Create Resource</em>. Enter a resource name and check the option <em>Enable API Gateway CORS</em>:</p>\n<p><img class=\"alignnone size-full wp-image-620\" src=\"https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb.png\" alt=\"create resource\" width=\"1276\" height=\"533\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb.png 1276w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-300x125.png 300w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-768x321.png 768w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-1024x428.png 1024w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-604x252.png 604w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>By default, the URL path will be created from the resource name. <a href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" data-css-1skajya=\"\">Cross-origin resource sharing</a> (CORS) is a mechanism that allows a web page to request resources hosted in another domain (which is going to be our case here). With this mechanism, the server sends some headers to tell the application that is OK to access the resources on that different server.</p>\n<p>Next, click on <em>Create Resource</em>:</p>\n<p><img class=\"alignnone size-full wp-image-621\" src=\"https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7.png\" alt=\"resource created\" width=\"1274\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7.png 1274w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-597x270.png 597w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>An <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Options</code></span> endpoint is created because the client sends a preflight request to see if the resource is available and if it contains the CORS headers:</p>\n<p><img class=\"alignnone size-full wp-image-622\" src=\"https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d.png\" alt=\"CORS created\" width=\"1274\" height=\"638\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d.png 1274w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-768x385.png 768w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-1024x513.png 1024w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-539x270.png 539w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Now to start adding methods to the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses</code></span> endpoint, select it (don&#8217;t select the root <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/</code></span> endpoint), open the <em>Actions</em> menu and click on <em>Create Method</em> option:</p>\n<p><img class=\"alignnone size-full wp-image-623\" src=\"https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac.png\" alt=\"create method\" width=\"1274\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac.png 1274w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-1024x465.png 1024w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-595x270.png 595w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>We&#8217;re going to start with the POST method, so select this option and click on the check icon next to the menu to set up the method:</p>\n<p><img class=\"alignnone size-full wp-image-624\" src=\"https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09.png\" alt=\"create POST\" width=\"1276\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09.png 1276w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-1024x464.png 1024w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-596x270.png 596w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>As the <em>Integration type</em> choose <em>Lambda Function</em>, then the region where you created your lambda functions, and enter the name of the function that will be associated to this method (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">save-course</code></span>):</p>\n<p><img class=\"alignnone size-full wp-image-625\" src=\"https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8.png\" alt=\"set up POST\" width=\"1274\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8.png 1274w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-597x270.png 597w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Confirm the permission to invoke the lambda function:</p>\n<p><img class=\"alignnone size-full wp-image-626\" src=\"https://emolike.net/wp-content/uploads/2018/05/e3cbaf9c-f34e-464b-a500-df33908e97ba.png\" alt=\"give permissions\" width=\"590\" height=\"232\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/e3cbaf9c-f34e-464b-a500-df33908e97ba.png 590w, https://emolike.net/wp-content/uploads/2018/05/e3cbaf9c-f34e-464b-a500-df33908e97ba-300x118.png 300w\" sizes=\"(max-width: 590px) 100vw, 590px\" /></p>\n<p>By default, API Gateway will pass the request body to the lambda function and return to the client the object returned by the lambda function. Since the client is going to send exactly what the lambda function expects and the lambda function is going to do the same, there&#8217;s no need to configure any request or response <a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-mappings\" data-css-1skajya=\"\">body mapping templates</a>.</p>\n<p>However, probably it&#8217;s a good idea to use a <a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-models\" data-css-1skajya=\"\"><strong>model</strong></a> to validate the request.</p>\n<p>So go to the <em>Models</em> section and click on <em>Create</em>:</p>\n<p><img class=\"alignnone size-full wp-image-627\" src=\"https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9.png\" alt=\"create model\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9.png 1276w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Give it a name, enter <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">application/json</code></span> as the <em>Content type</em>, and as the model schema, enter the following:</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"$schema\": \"http://json-schema.org/schema#\",\r\n  \"title\": \"CourseInputModel\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"title\": {\"type\": \"string\"},\r\n    \"authorId\": {\"type\": \"string\"},\r\n    \"length\": {\"type\": \"string\"},\r\n    \"category\": {\"type\": \"string\"}\r\n  },\r\n  \"required\": [\"title\", \"authorId\", \"length\", \"category\"]\r\n}</pre>\n<p>Models use the <a href=\"http://json-schema.org/\" data-css-1skajya=\"\">JSON Schema specification</a>. You can learn more about it <a href=\"https://spacetelescope.github.io/understanding-json-schema/\" data-css-1skajya=\"\">here</a>.</p>\n<p>Click on <em>Create model</em> and back to the POST method click on <em>Method Request</em>:</p>\n<p><img class=\"alignnone size-full wp-image-628\" src=\"https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0.png\" alt=\"Method Request\" width=\"1244\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0.png 1244w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-300x139.png 300w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-768x357.png 768w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-1024x476.png 1024w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-581x270.png 581w\" sizes=\"(max-width: 1244px) 100vw, 1244px\" /></p>\n<p>In <em>Request Validator</em> choose the option <em>Validate body</em>, in the <em>Request Body</em> section add the model for the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">application/json</code></span> content type and confirm all these choices:</p>\n<p><img class=\"alignnone size-full wp-image-629\" src=\"https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5.png\" alt=\"add model\" width=\"1276\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5.png 1276w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-1024x464.png 1024w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-596x270.png 596w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Now if you click on <em>TEST</em>:</p>\n<p><img class=\"alignnone size-full wp-image-630\" src=\"https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9.png\" alt=\"test\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9.png 1276w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>You can test the POST endpoint by entering a request body like:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:03\",\r\n  \"category\": \"HTML5\"\r\n}</pre>\n<p>&nbsp;</p>\n<p>Everything should work correctly:</p>\n<p><img class=\"alignnone size-full wp-image-631\" src=\"https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797.png\" alt=\"test result\" width=\"1272\" height=\"644\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797.png 1272w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-300x152.png 300w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-768x389.png 768w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-1024x518.png 1024w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-533x270.png 533w\" sizes=\"(max-width: 1272px) 100vw, 1272px\" /></p>\n<p>If you remove one or more attributes of the request, an error should be returned:</p>\n<p><img class=\"alignnone size-full wp-image-632\" src=\"https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d.png\" alt=\"test result error\" width=\"1276\" height=\"638\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d.png 1276w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-768x384.png 768w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-1024x512.png 1024w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-540x270.png 540w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Moving on, we are also going to need a path like <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">courses/web-component-fundamentals</code></span>, where <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">web-component-fundamentals</code></span> corresponds to the ID of the course we want to update, delete or select one course.</p>\n<p>Select the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">course</code></span> resource and from the <em>Actions</em> menu, create another resource, this time just adding a path variable using brackets (and enabling CORS):</p>\n<p><img class=\"alignnone size-full wp-image-633\" src=\"https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4.png\" alt=\"ID path\" width=\"1274\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4.png 1274w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-597x270.png 597w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Click on <em>Create resource</em> to create it:</p>\n<p><img class=\"alignnone size-full wp-image-634\" src=\"https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57.png\" alt=\"ID path created\" width=\"1276\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57.png 1276w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-1024x464.png 1024w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-596x270.png 596w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Next, create a PUT method and link it to the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">update-course</code></span> lambda function:</p>\n<p><img class=\"alignnone size-full wp-image-635\" src=\"https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2.png\" alt=\"update method\" width=\"1274\" height=\"574\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2.png 1274w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-768x346.png 768w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-1024x461.png 1024w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-599x270.png 599w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Now the thing with this operation is that the ID of the course is in the URL, and the rest of the attributes are in the request body.</p>\n<p>In this case, we&#8217;ll have to use a <strong>body mapping template</strong> to send all the information as the lambda function requires it.</p>\n<p>So select the PUT method and click on <em>Integration Request</em>:</p>\n<p><img class=\"alignnone size-full wp-image-636\" src=\"https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48.png\" alt=\"Integration Request\" width=\"1274\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48.png 1274w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-1024x465.png 1024w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-595x270.png 595w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Then, in the <em>Body Mapping Templates</em> section, choose the option <em>When there are no templates defined</em>, add a mapping template for the content-type <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">application/json</code></span>, click on the check icon next to it, and enter the following template:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"id\": $input.params('id'),\r\n  \"title\" : $input.json('$.title'),\r\n  \"authorId\" : $input.json('$.authorId'),\r\n  \"length\" : $input.json('$.length'),\r\n  \"category\" : $input.json('$.category'),\r\n  \"watchHref\" : $input.json('$.watchHref')\r\n}</pre>\n<p>The mapping template uses the <a href=\"http://velocity.apache.org/engine/devel/vtl-reference-guide.html\" data-css-1skajya=\"\">Velocity Template Language</a> (VTL). <a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html\" data-css-1skajya=\"\">Here&#8217;s the link</a> to the relevant section in the AWS documentation.</p>\n<p>The <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input</code></span> variable gives you access to all the request data, while <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input.params()</code></span> to the request parameters from the path, query string, or headers (in that order) and <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input.json()</code></span> returns a JSON string from the request body. You can know more about the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input</code></span>variable and their functions <a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#input-variable-reference\" data-css-1skajya=\"\">here</a>.</p>\n<p>Also, notice that the ID has to be &#8220;converted&#8221; to a string by enclosing it in quotation marks, while the rest of the data since it&#8217;s already sent as a string, don&#8217;t have to be converted.</p>\n<p>Click <em>Save</em> and test it with the path variable <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">web-component-fundamentals</code></span> (assuming the record exists in your database) and the following request body:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:03\",\r\n  \"category\": \"HTML5\",\r\n  \"watchHref\": \"http://www.pluralsight.com/courses/web-components-shadow-dom\"\r\n}</pre>\n<p>Everything should work correctly:</p>\n<p><img class=\"alignnone size-full wp-image-637\" src=\"https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a.png\" alt=\"test result\" width=\"1274\" height=\"644\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a.png 1274w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-300x152.png 300w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-768x388.png 768w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-1024x518.png 1024w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-534x270.png 534w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>If you like, add a model to validate the request, just like in the case of the POST method.</p>\n<p>Now, applying what you have learned, create a DELETE and GET method on the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses/{id}</code></span> resource, linking them to the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">delete-course</code></span> and <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-course</code></span> functions and passing only the ID with the following template:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"id\": \"$input.params('id')\"\r\n}</pre>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-settingupapigateway\" class=\"jsx-360051262\" data-module-id=\"settingupapigateway\">\n<div>\n<p>Don&#8217;t forget to add a GET method on the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses</code></span> resource for the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-courses</code></span> function.</p>\n<p>And another resource, <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/authors</code></span>, for the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span> function.</p>\n<p>When you&#8217;re done, you should have something like this:</p>\n<p><img class=\"alignnone size-full wp-image-638\" src=\"https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293.png\" alt=\"final API\" width=\"1044\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293.png 1044w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-300x166.png 300w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-768x424.png 768w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-1024x565.png 1024w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-489x270.png 489w\" sizes=\"(max-width: 1044px) 100vw, 1044px\" /></p>\n</div>\n</div>\n</div>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-crossoriginresourcesharingcors\" class=\"jsx-360051262\" data-module-id=\"crossoriginresourcesharingcors\">\n<div id=\"module-crossoriginresourcesharingcors-anchor\" class=\"jsx-360051262 anchor\"></div>\n<h2 data-css-7941k5=\"\">Cross Origin Resource Sharing (CORS)</h2>\n<div>\n<p>Now, we need to add the CORS header to all the methods (the CORS option you chose when creating a resource only adds the CORS headers for the preflight request).</p>\n<p>Select the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/authors</code></span> endpoint, click on <em>Actions</em> and choose <em>Enable CORS</em>:</p>\n<p><img class=\"alignnone size-full wp-image-639\" src=\"https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721.png\" alt=\"Enable CORS\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721.png 1276w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Deselect the OPTIONS method, click on <em>Enable CORS and replace existing CORS headers</em>:</p>\n<p><img class=\"alignnone size-full wp-image-640\" src=\"https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125.png\" alt=\"Enable CORS\" width=\"1274\" height=\"574\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125.png 1274w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-768x346.png 768w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-1024x461.png 1024w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-599x270.png 599w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>And confirm to add the CORS headers to the GET method:</p>\n<p><img class=\"alignnone size-full wp-image-641\" src=\"https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9.png\" alt=\"Confirm CORS\" width=\"886\" height=\"256\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9.png 886w, https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9-300x87.png 300w, https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9-768x222.png 768w, https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9-604x175.png 604w\" sizes=\"(max-width: 886px) 100vw, 886px\" /></p>\n<p>Do the same for all the methods of the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses</code></span> and <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses/{id}</code></span>resources (except for the OPTIONS method).</p>\n<p>Finally, to deploy the API, go to the <em>Actions</em> menu and choose <em>Deploy API</em>:</p>\n<p><img class=\"alignnone size-full wp-image-642\" src=\"https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789.png\" alt=\"Deploy options\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789.png 1276w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Then, create a new stage, give it a name, optionally a description and click on <em>Deploy</em>:</p>\n<p><img class=\"alignnone size-full wp-image-643\" src=\"https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e.png\" alt=\"create new stage\" width=\"590\" height=\"392\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e.png 590w, https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e-300x199.png 300w, https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e-406x270.png 406w\" sizes=\"(max-width: 590px) 100vw, 590px\" /></p>\n<p>After the API is deployed, you&#8217;ll get the URL to invoke it:</p>\n<p><img class=\"alignnone size-full wp-image-644\" src=\"https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc.png\" alt=\"API deployed\" width=\"1274\" height=\"556\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc.png 1274w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-300x131.png 300w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-768x335.png 768w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-1024x447.png 1024w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-604x264.png 604w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>For example, in my case, the root URL of my API is <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">https://hcqxdqvii3.execute-api.us-east-2.amazonaws.com/v1</code></span>and to get the course with ID <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">web-component-fundamentals</code></span>, I&#8217;ll have to use the URL <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">https://hcqxdqvii3.execute-api.us-east-2.amazonaws.com/v1/courses/web-component-fundamentals</code></span>.</p>\n<p>At this point, you can use <a href=\"https://curl.haxx.se/\" data-css-1skajya=\"\">curl</a> or <a href=\"https://www.getpostman.com/\" data-css-1skajya=\"\">Postman</a> to test the API:</p>\n<p><img class=\"alignnone size-full wp-image-645\" src=\"https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38.png\" alt=\"Postman\" width=\"1280\" height=\"720\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38.png 1280w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-768x432.png 768w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-1024x576.png 1024w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-480x270.png 480w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Now, the only step missing is uploading a client app for our API to S3.</p>\n<h2 data-css-7941k5=\"\">Hosting the app in S3</h2>\n<div>\n<p>Clone the app from <a href=\"https://github.com/eh3rrera/react-app-frontend\" data-css-1skajya=\"\">this GitHub repository</a>.</p>\n<p>In a terminal window, go to the app directory and execute <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">npm install</code></span> to install the dependencies.</p>\n<p>Next, go to <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">src/api/serverUrl.js</code></span>, and replace the exported value with the URL of your API.</p>\n<p>If you want to test it locally, execute <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">npm start</code></span> on the terminal.</p>\n<p>Then, execute <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">npm run build</code></span> to build a version of the app ready for production. You can find the output files in the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">build</code></span> folder.</p>\n<p>Now, let&#8217;s use Amazon S3 to host the app and go completely serverless.</p>\n<p>Amazon S3 is a storage service that can also function as a web server.</p>\n<p>In S3, you put your files in buckets. You can know more about S3 in <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/Welcome.html\" data-css-1skajya=\"\">this developer guide</a>, for now, let&#8217;s create a bucket.</p>\n<p>Open the <em>Services</em> menu and choose <em>S3</em>:</p>\n<p><img class=\"alignnone size-full wp-image-646\" src=\"https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709.png\" alt=\"Choose S3\" width=\"1194\" height=\"886\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709.png 1194w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-300x223.png 300w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-768x570.png 768w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-1024x760.png 1024w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-364x270.png 364w\" sizes=\"(max-width: 1194px) 100vw, 1194px\" /></p>\n<p>Click on the <em>Create bucket</em> button and enter a name and the region where your bucket will be created:</p>\n<p><img class=\"alignnone size-full wp-image-647\" src=\"https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1.png\" alt=\"Create bucket\" width=\"686\" height=\"580\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1.png 686w, https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1-300x254.png 300w, https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1-319x270.png 319w\" sizes=\"(max-width: 686px) 100vw, 686px\" /></p>\n<p>Make sure you don&#8217;t put any spaces in the name. Also, the name has to be unique across all existing names in S3, so use your domain name or something unique.</p>\n<p>Next, click on the <em>Create</em> button, we&#8217;ll take the default values for the properties and permissions tabs.</p>\n<p>Once the bucket is created, click on it, and go to the <em>Properties</em> tab:</p>\n<p><img class=\"alignnone size-full wp-image-648\" src=\"https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f.png\" alt=\"Properties tab\" width=\"1116\" height=\"596\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f.png 1116w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-300x160.png 300w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-768x410.png 768w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-1024x547.png 1024w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-506x270.png 506w\" sizes=\"(max-width: 1116px) 100vw, 1116px\" /></p>\n<p>Click on the <em>Static website hosting</em> option and select <em>Use this bucket to host a website</em>:</p>\n<p><img class=\"alignnone size-full wp-image-649\" src=\"https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e.png\" alt=\"set up web server\" width=\"564\" height=\"622\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e.png 564w, https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e-272x300.png 272w, https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e-245x270.png 245w\" sizes=\"(max-width: 564px) 100vw, 564px\" /></p>\n<p>Since this is a single-page application, enter <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">index.html</code></span> as the <em>Index</em>and <em>Error</em> documents. Copy the URL that S3 gives you and click <em>Save</em>.</p>\n<p>Next, in the <em>Permissions</em> tab, select <em>Bucket Policy</em>:</p>\n<p><img class=\"alignnone size-full wp-image-650\" src=\"https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641.png\" alt=\"Edit policy\" width=\"1118\" height=\"596\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641.png 1118w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-300x160.png 300w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-768x409.png 768w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-1024x546.png 1024w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-506x270.png 506w\" sizes=\"(max-width: 1118px) 100vw, 1118px\" /></p>\n<p>Enter the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2\" data-css-1skajya=\"\">following policy</a> to grant read-only permissions to your bucket, just change <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">examplebucket</code></span> by your bucket name (in my case <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">net.eherrera.serverless-demo</code></span>):</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{\r\n  \"Version\":\"2012-10-17\",\r\n  \"Statement\":[\r\n    {\r\n      \"Sid\":\"AddPerm\",\r\n      \"Effect\":\"Allow\",\r\n      \"Principal\": \"*\",\r\n      \"Action\":[\"s3:GetObject\"],\r\n      \"Resource\":[\"arn:aws:s3:::examplebucket/*\"]\r\n    }\r\n  ]\r\n}</pre>\n<p>Click on <em>Save</em> to apply the policy:</p>\n<p><img class=\"alignnone size-full wp-image-651\" src=\"https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506.png\" alt=\"Save policy\" width=\"1168\" height=\"594\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506.png 1168w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-300x153.png 300w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-768x391.png 768w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-1024x521.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-531x270.png 531w\" sizes=\"(max-width: 1168px) 100vw, 1168px\" /></p>\n<p>Now go to the <em>Overview</em> tab, click on the <em>Upload</em> button, drag the content of the <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">build</code></span> directory and click on <em>Upload</em>:</p>\n<p><img class=\"alignnone size-full wp-image-652\" src=\"https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4.png\" alt=\"Upload file\" width=\"692\" height=\"574\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4.png 692w, https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4-300x249.png 300w, https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4-326x270.png 326w\" sizes=\"(max-width: 692px) 100vw, 692px\" /></p>\n<p>Once the upload has finished, go to your app using the URL you copied (or go back to the <em>Static website hosting</em> option in the <em>Properties</em> tab to get it):</p>\n<p><img class=\"alignnone size-full wp-image-653\" src=\"https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab.png\" alt=\"App\" width=\"1280\" height=\"324\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab.png 1280w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-300x76.png 300w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-768x194.png 768w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-1024x259.png 1024w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-604x153.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Optionally, you can create another bucket to store the logs of the web server, you just have to enable the <em>Server access logging</em> option in the <em>Properties</em> tab.</p>\n<p>However, I would highly recommend using <strong>CloudFront</strong>.</p>\n<p>CloudFront is a Content Delivery Network (CDN) service that will copy your app to edge locations around the world to improve the speed in which your app is served to your users. You can learn more about it in <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html\" data-css-1skajya=\"\">this developer guide</a>.</p>\n<p>Open the <em>Services</em> menu and choose <em>CloudFront</em>:</p>\n<p><img class=\"alignnone size-full wp-image-654\" src=\"https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3.png\" alt=\"choose cloudfront\" width=\"1212\" height=\"878\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3.png 1212w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-300x217.png 300w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-768x556.png 768w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-1024x742.png 1024w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-373x270.png 373w\" sizes=\"(max-width: 1212px) 100vw, 1212px\" /></p>\n<p>Click on <em>Create Distribution</em> and under the <em>Web</em> section click on <em>Get Started</em>:</p>\n<p><img class=\"alignnone size-full wp-image-655\" src=\"https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592.png\" alt=\"create web distribution\" width=\"1268\" height=\"534\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592.png 1268w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-300x126.png 300w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-768x323.png 768w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-1024x431.png 1024w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-604x254.png 604w\" sizes=\"(max-width: 1268px) 100vw, 1268px\" /></p>\n<p>In the <em>Origin Domain Name</em> select the bucket that contains your app, <em>Origin ID</em> will be populated:</p>\n<p><img class=\"alignnone size-full wp-image-656\" src=\"https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1.png\" alt=\"origin domain name\" width=\"1222\" height=\"364\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1.png 1222w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-300x89.png 300w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-768x229.png 768w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-1024x305.png 1024w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-604x180.png 604w\" sizes=\"(max-width: 1222px) 100vw, 1222px\" /></p>\n<p>Scroll down and under <em>Distribution Settings</em>, set the <em>Default Root Object</em> value to <span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">index.html</code></span> and click on <em>Create Distribution</em> at the bottom of the page.</p>\n<p>Wait a few minutes until the deployment has finished, and then click on the ID of your distribution:</p>\n<p><img class=\"alignnone size-full wp-image-657\" src=\"https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd.png\" alt=\"distribution ID\" width=\"1068\" height=\"270\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd.png 1068w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-300x76.png 300w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-768x194.png 768w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-1024x259.png 1024w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-604x153.png 604w\" sizes=\"(max-width: 1068px) 100vw, 1068px\" /></p>\n<p>In the <em>General</em> tab, you&#8217;ll find the new URL of your app in the <em>Domain Name</em> row. (You can use the HTTPS protocol for your URL if you prefer):</p>\n<p><img class=\"alignnone size-full wp-image-658\" src=\"https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4.png\" alt=\"domain name\" width=\"1068\" height=\"560\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4.png 1068w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-300x157.png 300w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-768x403.png 768w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-1024x537.png 1024w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-515x270.png 515w\" sizes=\"(max-width: 1068px) 100vw, 1068px\" /></p>\n<p>And that&#8217;s it!</p>\n<h2 data-css-7941k5=\"\">Conclusion</h2>\n<div>\n<p>The idea of a serverless application is interesting:</p>\n<ul>\n<li>There&#8217;s no need to manage any servers.</li>\n<li>The application can be scaled automatically and highly available.</li>\n<li>You pay only for the resources used and for the time the application is used.</li>\n</ul>\n<p>In this tutorial, you have learned how to use AWS&#8217;s API Gateway and Lambda functions to build a REST API that performs CRUD operations on a database built on the AWS DynamoDB database framework. This guide also covered how to host this API on S3 in a single-page application that can be distributed worldwide using CloudFront.</p>\n<p>This was just a cursory look at each of these technologies; there is a lot more to learn about each technology and about other AWS components as well!</p>\n<p>In case AWS excites you, some interesting projects would include authenticating users with <a href=\"https://aws.amazon.com/cognito/\" data-css-1skajya=\"\">Amazon Cognito</a> or using a framework like <a href=\"https://serverless.com/\" data-css-1skajya=\"\">Serveless</a> or a service like <a href=\"https://aws.amazon.com/cloudformation/\" data-css-1skajya=\"\">AWS CloudFormation</a> to simplify the managing and deploying of serverless applications.</p>\n<hr />\n<p>Thanks for reading. I hope you found this guide informative and engaging.</p>\n<div id=\"at_zurlpreview\">\n<h2>Building a Serverless Web App on AWS Services | Pluralsight</h2>\n<h3 style=\"display: none;\">Building a Serverless Web App on AWS Services | PluralsightPluralsight Guides</h3>\n<p class=\"imgs\">Source: <a href=\"https://www.pluralsight.com/guides/building-a-serverless-web-app-on-aws-services\" target=\"_blank\" rel=\"noopener\">www.pluralsight.com/guides/building-a-serverless-web-app-on-aws-services</a></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n",
          "slug": "building-a-serverless-web-app-on-aws-services",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43.png"
          },
          "link": "https://emolike.net/2018/05/18/building-a-serverless-web-app-on-aws-services/",
          "date": "2018-05-18T17:06:20",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "AWS"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "javascript"
              },
              {
                "name": "NoSQL"
              },
              {
                "name": "React"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU5Mg==",
        "node": {
          "id": "cG9zdDo1OTI=",
          "title": "Install Quick Centmin Mod Install + Nginx Vhost Site + MySQL Database Setup",
          "content": "<p>Centmin Mod has a lot of documentation on official centminmod.com site and forums which is highly suggested reading if you want to learn about and use Centmin Mod LEMP stacks. But here&#8217;s a quick guide to installing Centmin Mod 123.09beta01 on recommended CentOS 7.x 64bit fresh virgin OS.</p>\n<h2 class=\"messageh2\">Quick Install &amp; Setup</h2>\n<p>Install Centmin Mod latest beta + set nginx vhost domain = domain.com with letsencrypt ssl certificate and http/2 https default (with http to https redirect can be done in a few SSH commands.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">yum -y update; curl -O https://centminmod.com/betainstaller.sh &amp;&amp; chmod 0700 betainstaller.sh &amp;&amp; bash betainstaller.sh\r\n</pre>\n<p>Enable Letsencrypt integration by setting LETSENCRYPT_DETECT=&#8217;y&#8217; variable in Centmin Mod persistent config file at /etc/centminmod/custom_config.inc. The persistent config file allows you to customise and override Centmin Mod default settings/variables set it centmin.sh without actually modifying centmin.sh so your custom settings persist when Centmin Mod local code is updated at /usr/local/src/centminmod (from 123.09beta01 and higher that install directory is git backed as outlined <a class=\"externalLink\" href=\"https://centminmod.com/upgrade.html\" target=\"_blank\" rel=\"noopener\">here</a>.)</p>\n<div class=\"bbCodeBlock bbCodeCode bbCodebBlock\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">touch /etc/centminmod/custom_config.inc\r\necho \"LETSENCRYPT_DETECT='y'\" &gt;&gt; /etc/centminmod/custom_config.inc</pre>\n<p>Create a new Nginx vhost site with letsencrypt free ssl certificate where domain.com and <a class=\"externalLink\" href=\"http://www.domain.com/\" target=\"_blank\" rel=\"noopener\">www.domain.com</a> DNS A record point to server IP using either addons/acmetool.sh outlined at <a class=\"externalLink\" href=\"https://centminmod.com/acmetool\" target=\"_blank\" rel=\"noopener\">https://centminmod.com/acmetool</a></p>\n<h4>via centmin.sh shell menu option 2</h4>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">--------------------------------------------------------\r\n     Centmin Mod Menu 123.09beta01 centminmod.com\r\n--------------------------------------------------------\r\n1).  Centmin Install\r\n2).  Add Nginx vhost domain\r\n3).  NSD setup domain name DNS\r\n4).  Nginx Upgrade / Downgrade\r\n5).  PHP Upgrade / Downgrade\r\n6).  XCache Re-install\r\n7).  APC Cache Re-install\r\n8).  XCache Install\r\n9).  APC Cache Install\r\n10). Memcached Server Re-install\r\n11). MariaDB MySQL Upgrade &amp; Management\r\n12). Zend OpCache Install/Re-install\r\n13). Install/Reinstall Redis PHP Extension\r\n14). SELinux disable\r\n15). Install/Reinstall ImagicK PHP Extension\r\n16). Change SSHD Port Number\r\n17). Multi-thread compression: pigz,pbzip2,lbzip2...\r\n18). Suhosin PHP Extension install\r\n19). Install FFMPEG and FFMPEG PHP Extension\r\n20). NSD Install/Re-Install\r\n21). Update - Nginx + PHP-FPM + Siege\r\n22). Add WordPress Nginx vhost + Cache Plugin\r\n23). Update Centmin Mod Code Base\r\n24). Exit\r\n--------------------------------------------------------\r\nEnter option [ 1 - 24 ] 2\r\n--------------------------------------------------------</pre>\n<div id=\"at_zurlpreview\">\n<h2>centminmod/centminmod</h2>\n<h3 style=\"display: none;\">centminmod/centminmod</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-594\" src=\"https://emolike.net/wp-content/uploads/2018/05/ebd45970955f5a008dcb41202b05aa75.png\" width=\"120\" height=\"120\" /></p>\n<p class=\"imgd\">centminmod &#8211; CentOS Shell menu based Nginx LEMP web stack auto installer (GPLv3 licensed)</p>\n<p class=\"imgs\">Source: <a href=\"https://github.com/centminmod/centminmod\" target=\"_blank\" rel=\"noopener\">github.com/centminmod/centminmod</a></p>\n</div>\n<p>Source: <a href=\"https://community.centminmod.com/threads/quick-centmin-mod-install-nginx-vhost-site-mysql-database-setup.12904/\">https://community.centminmod.com/threads/quick-centmin-mod-install-nginx-vhost-site-mysql-database-setup.12904/</a></p>\n<p>&nbsp;</p>\n</div>\n",
          "slug": "install-quick-centmin-mod-install-nginx-vhost-site-mysql-database-setup",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/ebd45970955f5a008dcb41202b05aa75.png"
          },
          "link": "https://emolike.net/2018/05/17/install-quick-centmin-mod-install-nginx-vhost-site-mysql-database-setup/",
          "date": "2018-05-17T16:14:26",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU4OQ==",
        "node": {
          "id": "cG9zdDo1ODk=",
          "title": "aapanel",
          "content": "<div class=\"intro-txt\">aaPanel, a simple but powerful control panel, can manage the web server through web-based GUI(Graphical User Interface).<br />\naaPanel provides the one-click function such as one-click install LNMP/LAMP developing environment and software.<br />\nOur main goal is helping users to save the time of deploying, thus users just focus on their own project that is fine.</div>\n<div><img class=\"alignnone size-full wp-image-590\" src=\"https://emolike.net/wp-content/uploads/2018/05/linux-pc.png\" width=\"1143\" height=\"627\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/linux-pc.png 1143w, https://emolike.net/wp-content/uploads/2018/05/linux-pc-300x165.png 300w, https://emolike.net/wp-content/uploads/2018/05/linux-pc-768x421.png 768w, https://emolike.net/wp-content/uploads/2018/05/linux-pc-1024x562.png 1024w, https://emolike.net/wp-content/uploads/2018/05/linux-pc-492x270.png 492w\" sizes=\"(max-width: 1143px) 100vw, 1143px\" /></div>\n<h3>Installation</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Centos/Debian/Fedora:\r\nwget -O install.sh http://www.aapanel.com/script/install-en.sh &amp;&amp; bash install.sh\r\nUbuntu：\r\nwget -O install.sh http://www.aapanel.com/script/install-ubuntu-en.sh &amp;&amp; sudo bash install.sh</pre>\n<div id=\"at_zurlpreview\">\n<h3 style=\"display: none;\">aaPanel</h3>\n<p class=\"imgd\">aaPanel is a simple but powerful control panel for linux server.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.aapanel.com/index.html\" target=\"_blank\" rel=\"noopener\">www.aapanel.com/index.html</a></p>\n</div>\n",
          "slug": "aapanel",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/linux-pc.png"
          },
          "link": "https://emolike.net/2018/05/17/aapanel/",
          "date": "2018-05-17T00:58:42",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU4Ng==",
        "node": {
          "id": "cG9zdDo1ODY=",
          "title": "Load Testing with RedLine13",
          "content": "<p>Pricing for RedLine13 is fairly simple and straightforward. As our tagline implies, we’re all about (almost) free load testing. Here at RedLine13 we provide a central service that allows our users the ability to freely <a href=\"https://www.redline13.com/Service\" target=\"_blank\" rel=\"noopener\">create an account</a>, setup connections to your <a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"noopener\">AWS account</a>, configure and run load tests, view real time graphics and reports, and to see how much money was spent on your Amazon account for the test. Additionally users can opt for a range of paid, subscription-based accounts that grant them even more features. For your convenience we have outlined our various subscriptions, their costs, and the features that you get with each.</p>\n<table border=\"3\" width=\"1215\">\n<tbody>\n<tr>\n<td><strong>Features</strong></td>\n<td><strong>Free Subscription</strong></td>\n<td><strong>Basic Subscription</strong></td>\n<td><strong>Pro Subscription</strong></td>\n<td><strong>Enterprise Subscription</strong></td>\n</tr>\n<tr>\n<td><strong>Supported Test Types<br />\n</strong>(JMeter, Gatling, Custom, LogFile, URL)</td>\n<td>All</td>\n<td>All</td>\n<td>All</td>\n<td>All</td>\n</tr>\n<tr>\n<td><strong>Number of Tests</strong></td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n</tr>\n<tr>\n<td><strong>Test Duration</strong></td>\n<td>1 Day</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n</tr>\n<tr>\n<td><strong>Virtual Users</strong></td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n</tr>\n<tr>\n<td><strong>Users for JMeter-Selenium</strong></td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n<td>Unlimited</td>\n</tr>\n<tr>\n<td><strong>Data Retention</strong></td>\n<td>30 days</td>\n<td>1 Year</td>\n<td>2 Years</td>\n<td>2 Years</td>\n</tr>\n<tr>\n<td><strong>Number of Team Members</strong></td>\n<td>1</td>\n<td>1</td>\n<td>5</td>\n<td>5</td>\n</tr>\n<tr>\n<td><strong>Number of AWS Keys</strong></td>\n<td>1</td>\n<td>1</td>\n<td>2</td>\n<td>5</td>\n</tr>\n<tr>\n<td><strong>Number of Concurrent Tests</strong></td>\n<td>1</td>\n<td>1</td>\n<td>5</td>\n<td>5</td>\n</tr>\n<tr>\n<td><strong>URLs Graphed per Test</strong></td>\n<td>100</td>\n<td>100</td>\n<td>300</td>\n<td>300</td>\n</tr>\n<tr>\n<td><b>Jenkins Continuous Integration</b></td>\n<td></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><strong>Test Replay</strong></td>\n<td></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><strong>Team &amp; Server Management</strong></td>\n<td></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><strong>Reporting Features</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><strong>Merged Results</strong></td>\n<td></td>\n<td></td>\n<td> <strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><strong>Percentile Results</strong></td>\n<td></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><strong>API Access</strong></td>\n<td></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><b>AWS Controls</b></td>\n<td></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><strong>Firefox Add-On For Selenium + JMeter </strong></td>\n<td></td>\n<td><strong>✓</strong></td>\n<td> <strong>✓</strong></td>\n<td><strong>✓</strong></td>\n</tr>\n<tr>\n<td><b>Cost*</b></td>\n<td><strong>Free</strong></td>\n<td> <strong>$50/Month or $500/Year</strong></td>\n<td> <strong>$120/Month or $1,000/Year</strong></td>\n<td><strong> $2,500/Year</strong></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td><a href=\"https://redline13.com/Plans\"><strong>Purchase</strong></a></td>\n<td><a href=\"https://redline13.com/Plans\"><strong>Purchase</strong></a></td>\n<td><a href=\"https://redline13.com/Plans\"><strong>Purchase</strong></a></td>\n</tr>\n</tbody>\n</table>\n<p><em>* cost of each plan does not include the cost of the AWS spot instances (spot or on-demand)</em></p>\n<div id=\"at_zurlpreview\">\n<p class=\"imgp\">\n<p class=\"imgs\">Source: <a href=\"https://www.redline13.com/blog/2016/04/pricing-and-features/\" target=\"_blank\" rel=\"noopener\">www.redline13.com/blog/2016/04/pricing-and-features/</a></p>\n</div>\n<p>&nbsp;</p>\n",
          "slug": "load-testing-with-redline13",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/16/load-testing-with-redline13/",
          "date": "2018-05-16T18:23:28",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "testing"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU4NA==",
        "node": {
          "id": "cG9zdDo1ODQ=",
          "title": "Keynote (Google I/O &#8217;18)",
          "content": "<p>\n<!-- YouTube Embed v5.1 -->\n<div class=\"youtube-embed\" itemprop=\"video\" itemscope itemtype=\"https://schema.org/VideoObject\">\n\t<meta itemprop=\"url\" content=\"https://www.youtube.com/v/ogfYd705cRs\" />\n\t<meta itemprop=\"name\" content=\"Keynote (Google I/O &#8217;18)\" />\n\t<meta itemprop=\"description\" content=\"Keynote (Google I/O &#8217;18)\" />\n\t<meta itemprop=\"uploadDate\" content=\"2018-05-16T16:12:51+03:00\" />\n\t<meta itemprop=\"thumbnailUrl\" content=\"https://i.ytimg.com/vi/ogfYd705cRs/default.jpg\" />\n\t<meta itemprop=\"embedUrl\" content=\"https://www.youtube.com/embed/ogfYd705cRs\" />\n\t<meta itemprop=\"height\" content=\"340\" />\n\t<meta itemprop=\"width\" content=\"560\" />\n\t<iframe style=\"border: 0;\" class=\"youtube-player\" width=\"560\" height=\"340\" src=\"https://www.youtube.com/embed/ogfYd705cRs\" allowfullscreen ></iframe>\n</div>\n<!-- End of YouTube Embed code. Generated in 0.00241 seconds -->\n</p>\n",
          "slug": "keynote-google-i-o-18",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/16/keynote-google-i-o-18/",
          "date": "2018-05-16T16:12:51",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Technology"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU4Mg==",
        "node": {
          "id": "cG9zdDo1ODI=",
          "title": "Getting Started with AWS | Amazon Web Services BASICS",
          "content": "<p>Let&#8217;s dive right into the basics of AWS so that you get a quick overview over what AWS actually is,</p>\n<p><iframe title=\"Getting Started with AWS | Amazon Web Services BASICS\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/ubCNZRNjhyo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "getting-started-with-aws-amazon-web-services-basics",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/11/getting-started-with-aws-amazon-web-services-basics/",
          "date": "2018-05-11T13:51:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "AWS"
              },
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Serverless"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU3OQ==",
        "node": {
          "id": "cG9zdDo1Nzk=",
          "title": "Install the AWS CLI on Linux, Mac or Unix Operating System",
          "content": "<p class=\"selectionShareable\"><em>Prerequisites </em></p>\n<div class=\"section\">\n<div class=\"titlepage\">\n<div class=\"section\">\n<div class=\"itemizedlist\">\n<ul class=\"itemizedlist\" type=\"disc\">\n<li class=\"listitem\">Linux, OS X, or Unix</li>\n<li class=\"listitem\">Python 2.6.3 or later</li>\n</ul>\n</div>\n<p class=\"selectionShareable\">Check your <span class=\"application\">Python</span> installation:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ python --version</pre>\n<div class=\"section\">\n<p class=\"selectionShareable\">If your computer doesn’t already have Python installed, or you would like to install a different version of Python, follow the procedure in <a class=\"link\" title=\"Install Python\" href=\"http://docs.aws.amazon.com/cli/latest/userguide/installing.html#install-python\">Install Python</a>.</p>\n</div>\n<div class=\"section\">\n<div class=\"titlepage\">\n<h3 id=\"install-bundle-other\" class=\"title\">Follow these steps from the command line to install the AWS CLI</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ curl \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -o \"awscli-bundle.zip\"\r\n$ unzip awscli-bundle.zip\r\n$ sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws</pre>\n<p class=\"selectionShareable\">Add your Access Key ID and Secret Access Key to ~/<code>.aws/config</code> using this format:</p>\n<div id=\"crayon-5af48c0f969a5670014743\" class=\"crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[default]\r\naws_access_key_id = &lt;access key id&gt;\r\naws_secret_access_key = &lt;secret access key&gt;\r\nregion = us-east-1</pre>\n<p class=\"selectionShareable\">Protect the config file:</p>\n<div id=\"crayon-5af48c0f969a7033468860\" class=\"crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">chmod 600 ~/.aws/config</pre>\n<p>Optionally, you can set an environment variable pointing to the config file. This is especially important if you want to keep it in a non-standard location. For future convenience, also add this line to your ~/.bashrc file:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">export AWS_CONFIG_FILE=$HOME/.aws/config</pre>\n<p class=\"selectionShareable\">That should be it. Try out the following from your command prompt and if you have any s3 buckets you should see them listed:</p>\n<div id=\"crayon-5af48c0f969ab899389264\" class=\"crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">aws s3 ls</pre>\n<p class=\"selectionShareable\">Here is the basic AWS CLI command structure. Keep in mind that any commands you enter in the CLI will have this standard format:</p>\n<div id=\"crayon-5af48c0f969ad250013053\" class=\"crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">aws &lt;command&gt; &lt;subcommand&gt; [options and parameters*]</pre>\n<p class=\"selectionShareable\">*Parameters can take various types of input values, such as numbers, strings, lists, maps, and JSON structures.</p>\n<h3><strong>Now what?</strong></h3>\n<p class=\"selectionShareable\">So, hopefully, you now have the AWS CLI installed on your PC. What next? Maybe the first thing would be to get a CLI-driven feel for what you have on your S3 account. Here are some suggestions:</p>\n<p class=\"selectionShareable\"><em>List all your users and display the output in a table:</em></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">aws iam list-users --output table</pre>\n<p class=\"selectionShareable\"><em>List all your EC2 tags:</em></p>\n<div id=\"crayon-5af48c0f969b1463119666\" class=\"crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">aws ec2 describe-tags --output table</pre>\n<p class=\"selectionShareable\"><em>Play around with outputs, help, or whatever:</em></p>\n<div id=\"crayon-5af48c0f969b3592540649\" class=\"crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">aws ec2 describe-spot-price-history help\r\naws ec2 describe-instances</pre>\n<p>&nbsp;</p>\n<div id=\"at_zurlpreview\">\n<h2>AWS CLI: A beginners guide &#8211; Cloud Academy Blog</h2>\n<h3 style=\"display: none;\">AWS CLI: A beginners guide &#8211; Cloud Academy Blog</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-580\" src=\"https://emolike.net/wp-content/uploads/2018/05/aws-cli1.png\" width=\"230\" height=\"230\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/aws-cli1.png 230w, https://emolike.net/wp-content/uploads/2018/05/aws-cli1-150x150.png 150w\" sizes=\"(max-width: 230px) 100vw, 230px\" /></p>\n<p class=\"imgd\">The AWS CLI is for managing your AWS services from a terminal session on your own PC, allowing you to control and script multiple AWS services.</p>\n<p class=\"imgs\">Source: <a href=\"https://cloudacademy.com/blog/aws-cli-a-beginners-guide/\" target=\"_blank\" rel=\"noopener\">cloudacademy.com/blog/aws-cli-a-beginners-guide/</a></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n",
          "slug": "install-the-aws-cli-on-linux-mac-or-unix-operating-system",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/aws-cli1.png"
          },
          "link": "https://emolike.net/2018/05/10/install-the-aws-cli-on-linux-mac-or-unix-operating-system/",
          "date": "2018-05-10T22:22:23",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU2NQ==",
        "node": {
          "id": "cG9zdDo1NjU=",
          "title": "Deploying a React App with AWS S3",
          "content": "<p>In this video we deploy a React frontend with AWS S3 (at almost no cost!!!!!) made form create-react-app</p>\n\n<!-- YouTube Embed v5.1 -->\n<div class=\"youtube-embed\" itemprop=\"video\" itemscope itemtype=\"https://schema.org/VideoObject\">\n\t<meta itemprop=\"url\" content=\"https://www.youtube.com/v/rVj3zc30-8E\" />\n\t<meta itemprop=\"name\" content=\"Deploying a React App with AWS S3\" />\n\t<meta itemprop=\"description\" content=\"Deploying a React App with AWS S3\" />\n\t<meta itemprop=\"uploadDate\" content=\"2018-05-10T22:03:48+03:00\" />\n\t<meta itemprop=\"thumbnailUrl\" content=\"https://i.ytimg.com/vi/rVj3zc30-8E/default.jpg\" />\n\t<meta itemprop=\"embedUrl\" content=\"https://www.youtube.com/embed/rVj3zc30-8E\" />\n\t<meta itemprop=\"height\" content=\"340\" />\n\t<meta itemprop=\"width\" content=\"560\" />\n\t<iframe style=\"border: 0;\" class=\"youtube-player\" width=\"560\" height=\"340\" src=\"https://www.youtube.com/embed/rVj3zc30-8E\" allowfullscreen ></iframe>\n</div>\n<!-- End of YouTube Embed code. Generated in 0.00309 seconds -->\n\n",
          "slug": "deploying-a-react-app-with-aws-s3",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/10/deploying-a-react-app-with-aws-s3/",
          "date": "2018-05-10T22:03:48",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "React"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU2MQ==",
        "node": {
          "id": "cG9zdDo1NjE=",
          "title": "Dependency injection for beginners",
          "content": "<p>You&#8217;re in the car business, your job is to make cars on-demand. The object-oriented programmer in you says: &#8220;no problem, I&#8217;ll make a blueprint that I can use to make as much cars as I want!&#8221;.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">class Car\r\n{\r\n    public function drive()\r\n    {\r\n        // ...\r\n    }\r\n}</pre>\n<p>For this car to work, it needs an engine and wheels. Now, there are several approaches to achieve that goal. You could, for example, do the following:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">class Car\r\n{\r\n    public function __construct()\r\n    {\r\n        $this-&gt;engine = new Engine();\r\n\r\n        $this-&gt;wheels = [\r\n            new Wheel(), new Wheel(), \r\n            new Wheel(), new Wheel(),\r\n        ];\r\n    }\r\n\r\n    public function drive() { ... }\r\n}</pre>\n<p>There&#8217;s the blueprint for every car you&#8217;ll make! Next up, your boss comes to you and says there&#8217;s a new client and he wants an electrical car.</p>\n<p>So you end up doing this.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">class ElectricalCar extends Car\r\n{\r\n    public function __construct()\r\n    {\r\n        parent::__construct();\r\n\r\n        $this-&gt;engine = new ElectricalEngine();\r\n    }\r\n}</pre>\n<p>&#8220;Beautifully solved&#8221;—you think. There&#8217;s of course that redundant normal engine that&#8217;s created when calling <code>parent::__construct()</code>, but at least you could re-use the wheels!</p>\n<p>I think you can see where this is going. The next client wants a car with some fancy wheel covers, another one would like a diesel engine with those same wheel covers, another one requests a race car, and the last one wants a self driving car.<br />\nOh—there also was a client who wanted to buy an engine to build a boat with himself, but you told your boss that wouldn&#8217;t be possible.</p>\n<p>After a while, there&#8217;s a ton of blueprints in your office, each describing a very specific variation of a car. You started with a neatly ordered pile of blueprints. But after a while you had to group them in different folders and boxes, because it was taking too long to find the blueprint you&#8217;re looking for.</p>\n<p>Object oriented programmers often fall into this trap of inheritance, ending in a completely messed up codebase. So let&#8217;s look at a better approach. Maybe you&#8217;ve heard about &#8220;composition over inheritance&#8221; before?</p>\n<blockquote><p>Composition over inheritance is the principle that classes should achieve polymorphic behavior and code reuse by their composition rather than inheritance from a base or parent class—<a href=\"https://en.wikipedia.org/wiki/Composition_over_inheritance\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a></p></blockquote>\n<p>That&#8217;s a lot of buzzwords. Let&#8217;s just look at our car example. The principle states that <code>Car</code> should achieve its polymorphic behaviour by being composed of other classes.</p>\n<p>The word <em>polymorphic</em> literally means &#8220;many shapes&#8221; and implies that <code>Car</code> should be able to do <code>drive</code> in many different ways, depending on the context it&#8217;s used in.</p>\n<p>With <em>code reuse</em>, we&#8217;re trying to make code reusable; so that we don&#8217;t end up with tens of classes doing almost exectly the same.</p>\n<h2>What does this have to do with dependency injection?</h2>\n<p>Instead of making a unique blueprint that describes every single possible variation of a car, we&#8217;d rather have <code>Car</code> do one thing, and do it good: drive.</p>\n<p>This means it shouldn&#8217;t be the car&#8217;s concern how its engine is built, what wheels it has attached. It should only know the follwing thing:</p>\n<blockquote><p>Given a working engine and four wheels, I&#8217;m able to drive!</p></blockquote>\n<p>We could say that in order for <code>Car</code> to work, it <em>needs</em> an engine and wheels. In other words: <code>Car</code> depends on <code>Engine</code> and a collection of <code>Wheels</code>.</p>\n<p>Those dependencies should be <em>given</em> to the car. Or, said otherwise: injected.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">class Car\r\n{\r\n    public function __construct(\r\n        Engine $engine, \r\n        array $wheels\r\n    ) {\r\n        $this-&gt;engine = $engine;\r\n        $this-&gt;wheels = $wheels;\r\n    }\r\n\r\n    public function drive()\r\n    {\r\n        $this-&gt;engine-&gt;connectTo($this-&gt;wheels);\r\n\r\n        $this-&gt;engine-&gt;start();\r\n\r\n        $this-&gt;engine-&gt;accelerate();\r\n    }\r\n}</pre>\n<p>Would you like a race car? No problem!</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$raceCar = new Car(new TurboEngine(), [\r\n    new RacingWheel(), new RacingWheel(),\r\n    new RacingWheel(), new RacingWheel(),\r\n]);</pre>\n<p>That client who wanted special wheel covers? You&#8217;ve got that covered!</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$smugCar = new Car(new Engine(), [\r\n    new FancyWheel(), new FancyWheel(),\r\n    new FancyWheel(), new FancyWheel(),\r\n]);</pre>\n<p>You&#8217;ve got <em>a lot</em> more flexibility now!</p>\n<p>Dependency injection is the idea of giving a class its requirements from the outside, instead of having that class being responsible for them itself.</p>\n<h2>What dependency injection is not</h2>\n<p>Built upon this simple principle, there are frameworks and tools that take it to the next level. You might, for example, have heard about the following things before.</p>\n<h3>Shared dependencies</h3>\n<p>One of the most beneficial side effects of injecting dependencies, is that the outside context can control them. This means that you can give the same instance of a class to several others that have a dependency on that class.</p>\n<p>Shared- or reusable dependencies are the ones most often getting the label &#8220;dependency injection&#8221;. Though it&#8217;s certainly a very good practice, sharing a dependency is not actually the core meaning of dependency injection.</p>\n<h3>The dependency container</h3>\n<p>Sometimes it&#8217;s also called &#8220;inversion of control&#8221; container, though that&#8217;s not an accurate name.</p>\n<p>Whatever the exact name, the container is a set of class definitions. It&#8217;s a big box that knows how objects in your application can be constructed with other dependencies. While such a container definitely has a lot of use cases, it&#8217;s not necessary to do dependency injection.</p>\n<h3>Auto wiring</h3>\n<p>To give developers even more flexibility, some containers allow for smart, automatically determined, class definitions. This means you don&#8217;t have to manually describe how every class should be constructed. These containers will scan your code, and determine which dependencies are needed by looking at type hints and doc blocks.</p>\n<p>A lot of magic happens here, but auto wiring can be a useful tool for rapid application development.</p>\n<h3>Service location</h3>\n<p>Instead of injecting dependencies into a class, there are some tools and frameworks that allow a class to ask the container to &#8220;give it an instance of another class&#8221;.</p>\n<p>This might seem beneficial at first, because our class doesn&#8217;t need to know how to construct a certain dependency anymore. However: by allowing a class to ask for dependencies on its own account, we&#8217;re back to square one.</p>\n<p>For service location to work, our class needs to know about the systems on the outside. It doesn&#8217;t differ a lot from calling <code>new</code>in the class itself. This idea is actually the opposite of what dependency injection tries to achieve. It&#8217;s a misuse of what the container is meant to do.</p>\n<h3>Inject everything</h3>\n<p>As it goes in real-life projects, you&#8217;ll notice that dependency injection in not <em>always</em> the solution for your problem.</p>\n<p>It&#8217;s important to realise that there&#8217;s limits to the benefits of everything. You should always be alert that you&#8217;re not taking this to the extreme, as there are valid cases in which a pragmatic approach <em>is</em> the better solution.</p>\n<h2>In closing</h2>\n<p>The core idea behind dependency injection is very simple, yet allows for better maintainable, testable and decoupled code to be written.</p>\n<p>Because it&#8217;s such a powerful pattern, it&#8217;s only natural that lots of tools emerge around it. I believe it&#8217;s a good thing to first understand the underlying principle, before using the tools built upon it. And I hope this blog post has helped with that.</p>\n<p>If there are any thoughts coming to your mind that you want to share, feel free to reach out to me on via <a href=\"https://twitter.com/brendt_gd\" target=\"_blank\" rel=\"noreferrer noopener\">Twitter</a> or <a href=\"mailto:brendt@stitcher.io\">e-mail</a>.</p>\n<p>Also special thanks to <a href=\"https://www.reddit.com/user/ImSuperObjective2\" target=\"_blank\" rel=\"noreferrer noopener\">/u/ImSuperObjective2</a> on Reddit and my colleague <a href=\"https://twitter.com/sebdedeyne\" target=\"_blank\" rel=\"noreferrer noopener\">Sebastian</a> for proof reading this post.</p>\n<div id=\"at_zurlpreview\">\n<h2>Dependency injection for beginners &#8211; stitcher.io</h2>\n<h3 style=\"display: none;\">Dependency injection for beginners &#8211; stitcher.io</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-562\" src=\"https://emolike.net/wp-content/uploads/2018/05/dependency-injection-for-beginners.png\" width=\"1280\" height=\"800\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/dependency-injection-for-beginners.png 1280w, https://emolike.net/wp-content/uploads/2018/05/dependency-injection-for-beginners-300x188.png 300w, https://emolike.net/wp-content/uploads/2018/05/dependency-injection-for-beginners-768x480.png 768w, https://emolike.net/wp-content/uploads/2018/05/dependency-injection-for-beginners-1024x640.png 1024w, https://emolike.net/wp-content/uploads/2018/05/dependency-injection-for-beginners-432x270.png 432w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"imgd\">A close look at what dependency injection is about—and what not.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.stitcher.io/blog/dependency-injection-for-beginners\" target=\"_blank\" rel=\"noopener\">www.stitcher.io/blog/dependency-injection-for-beginners</a></p>\n</div>\n",
          "slug": "dependency-injection-for-beginners",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/dependency-injection-for-beginners.png"
          },
          "link": "https://emolike.net/2018/05/08/dependency-injection-for-beginners/",
          "date": "2018-05-08T19:13:00",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "Software Engineering"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU1Nw==",
        "node": {
          "id": "cG9zdDo1NTc=",
          "title": "Install AWX on CentOS 7",
          "content": "<p>AWX is the upstream project from which the Red Hat Ansible Tower offering is ultimately derived.<br />\nRead more: <a href=\"https://www.ansible.com/awx-project-faq\">AWX project FAQ</a></p>\n<p>Install steps below on CentOS 7.3 minimal.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># Insall EPEL repository\r\nyum -y install epel-release\r\n\r\n# Disable firewall and SELinux\r\nsystemctl disable firewalld\r\nsystemctl stop firewalld\r\nsed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\r\nsetenforce 0\r\nreboot\r\n\r\n# Enable continuous release (CR) repository if some paskage from EPEL are dependant on newer release\r\nyum -y install git gettext ansible docker nodejs npm gcc-c++ bzip2\r\nyum -y install python-docker-py\r\n\r\n#  Start and enable docker service\r\nsystemctl start docker\r\nsystemctl enable docker\r\n\r\n# Clone repository and deploy (it will take about 20 minutes)\r\ngit clone https://github.com/ansible/awx.git\r\ncd awx/installer/\r\nansible-playbook -i inventory install.yml\r\n\r\n# Monitor migrations status (it will take about 10 minutes)\r\ndocker logs -f awx_task</pre>\n<p>Now you can access AWX web server http://my-awx.example.com.</p>\n<p>The default administrator username is admin, and the password is password.</p>\n",
          "slug": "install-awx-on-centos-7",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/07/install-awx-on-centos-7/",
          "date": "2018-05-07T23:33:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Docker"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU1NA==",
        "node": {
          "id": "cG9zdDo1NTQ=",
          "title": "Intro to GraphQL",
          "content": "<p>Welcome to MERN full-stack tutorial series with GraphQL! By the end of this course, we&#8217;re going to build a chat SPA with a Node.js server using Express.js, MongoDB database engine, React.js front-end, and GraphQL API back-end. We will also architecture our GraphQL web service with Apollo Server and Apollo Client v2, and will implement routing with React Router v4.</p>\n<p>Developed by Facebook in 2012, GraphQL is a query language and a server runtime for APIs. It is backed up by a spec and comes with official integration libraries for many languages, including JS, and frameworks, such as Express. With its vast open-source ecosystem, GraphQL offers an easily-implementable approach for orchestrating multitier apps with complex API communications.</p>\n<p>Instead of querying resources with multiple roundtrips in a RESTful API, in GraphQL, you send off queries to a single URL to get back a particular data structure that you need. Forget about under and over-fetching of data. Using a strongly-typed schema, you map out your query requests to any data source that your app has in place, be it a database or a 3rd-party API. With full control over queries, your clients, mobile or web, now exchange data more efficiently, incurring a lesser load on your infrastructure, and tolerating poor network signals.</p>\n<p>&nbsp;</p>\n<p><iframe title=\"MERN Stack &amp; GraphQL - #1 Intro to GraphQL\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/HKqbBrl_fKc?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "intro-to-graphql",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/07/intro-to-graphql/",
          "date": "2018-05-07T22:31:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "GraphQL"
              },
              {
                "name": "javascript"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU0OQ==",
        "node": {
          "id": "cG9zdDo1NDk=",
          "title": "Migrating WordPress to Ghost using Docker",
          "content": "<p><em>Note: This post has been written for WordPress v. 4.3.9 and Ghost v. 0.11.7</em></p>\n<p>For the last year, my blog was hosted in a WordPress Docker container. I&#8217;ve now migrated my blog to <a href=\"https://ghost.org/\">Ghost</a>, still using Docker.</p>\n<p>This post explains the reasons that got me to move to Ghost and how I did it.</p>\n<h2 id=\"whydidimovetoghost\">Why did I move to Ghost?</h2>\n<h3 id=\"acomplexwritingworkflow\">A complex writing workflow</h3>\n<p>Writing my posts using plain text then formatting it (using integrated WYSIWYG/html editor) was really painful.</p>\n<p>My workflow was the following:<br />\n1. Writing draft in Evernote<br />\n2. Formatting post in WordPress WYSIWYG editor<br />\n3. Formatting code using a plugin<br />\n4. Fixing it using HTML editor</p>\n<p>I really wanted to keep a version of my posts in Evernote or another note tool. Since Evernote didn&#8217;t recognize either HTML or Markdown syntax, I also switched to <a href=\"http://www.inkdrop.info/\">Inkdrop</a>. This combination of tools allows me to really simplify my workflow:<br />\n1. Writing &amp; formatting my post using Markdown (code included)<br />\n2. Importing my post to Ghost</p>\n<p>&nbsp;</p>\n<div id=\"at_zurlpreview\">\n<h2>From WordPress to Ghost using Docker</h2>\n<h3 style=\"display: none;\">From WordPress to Ghost using Docker</h3>\n<p class=\"imgd\">Discover posts about Java, Spring, and Docker.</p>\n<p class=\"imgs\">Source: <a href=\"https://blog.florianlopes.io/docker-move-from-wordpress-to-ghost/\" target=\"_blank\" rel=\"noopener\">blog.florianlopes.io/docker-move-from-wordpress-to-ghost/</a></p>\n</div>\n",
          "slug": "migrating-wordpress-to-ghost-using-docker",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/wordpress-to-ghost-1.jpg"
          },
          "link": "https://emolike.net/2018/05/07/migrating-wordpress-to-ghost-using-docker/",
          "date": "2018-05-07T22:03:19",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Docker"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU0Nw==",
        "node": {
          "id": "cG9zdDo1NDc=",
          "title": "Free, robust and collaborative create-react-app deployments on Netlify",
          "content": "<section class=\"section section--body section--first\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"b04a\" class=\"graf graf--p graf-after--figure\">We needed to take this stack to the next level, and enable something like a delivery pipeline for individual features. I’m going to cover a few things we did to make development and release environments more robust and reliable in this post:</p>\n<ol class=\"postList\">\n<li id=\"cd14\" class=\"graf graf--li graf-after--p\">Tagging deploys with build variables for better observability and error tracing</li>\n<li id=\"21e1\" class=\"graf graf--li graf-after--li\">Enabling preview deployments on pull requests, and dealing with complexities introduced by having multiple deployments</li>\n<li id=\"4310\" class=\"graf graf--li graf-after--li\">Leveraging Netlify’s Continuous Delivery platform as Continuous Integration</li>\n</ol>\n<p id=\"1fe8\" class=\"graf graf--p graf-after--li graf--trailing\">Finally, this led to the creation of <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.npmjs.com/package/build-create-react-app-netlify\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.npmjs.com/package/build-create-react-app-netlify\">https://www.npmjs.com/package/build-create-react-app-netlify</a> to help others benefit from this setup!</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\"> Free, robust and collaborative create-react-app deployments on Netlify</div>\n</div>\n</section>\n<div id=\"at_zurlpreview\">\n<h3 style=\"display: none;\">Free, robust and collaborative create-react-app deployments on Netlify</h3>\n<p class=\"imgd\">I’ve been helping a startup bootstrap their frontend application infrastructure, and deployment has been swell with create-react-app and…</p>\n<p class=\"imgs\">Source: <a href=\"https://medium.com/netlify/free-robust-and-collaborative-create-react-app-deployments-on-netlify-59a3f5feda9e\" target=\"_blank\" rel=\"noopener\">medium.com/netlify/free-robust-and-collaborative-create-react-app-deployments-on-netlify-59a3f5feda9e</a></p>\n</div>\n<p>&nbsp;</p>\n",
          "slug": "free-robust-and-collaborative-create-react-app-deployments-on-netlify",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/05/free-robust-and-collaborative-create-react-app-deployments-on-netlify/",
          "date": "2018-05-05T14:33:18",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU0NA==",
        "node": {
          "id": "cG9zdDo1NDQ=",
          "title": "The largest database of free icons available in PNG, SVG, EPS, PSD and BASE 64 formats.",
          "content": "<div id=\"at_zurlpreview\">\n<h2>Flaticon, the largest database of free vector icons</h2>\n<h3 style=\"display: none;\">Flaticon, the largest database of free vector icons</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-545\" src=\"https://emolike.net/wp-content/uploads/2018/05/flaticon-generic.jpg\" width=\"1280\" height=\"669\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/flaticon-generic.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/flaticon-generic-300x157.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/flaticon-generic-768x401.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/flaticon-generic-1024x535.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/flaticon-generic-517x270.jpg 517w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"imgd\">Download all icons in SVG, PSD, PNG, EPS format or as webfonts</p>\n<p class=\"imgs\">Source: <a href=\"https://www.flaticon.com/\" target=\"_blank\" rel=\"noopener\">www.flaticon.com/</a></p>\n</div>\n",
          "slug": "the-largest-database-of-free-icons-available-in-png-svg-eps-psd-and-base-64-formats",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/flaticon-generic.jpg"
          },
          "link": "https://emolike.net/2018/05/05/the-largest-database-of-free-icons-available-in-png-svg-eps-psd-and-base-64-formats/",
          "date": "2018-05-05T14:16:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUzOA==",
        "node": {
          "id": "cG9zdDo1Mzg=",
          "title": "CSS Grid — Responsive layouts and components",
          "content": "<div class=\"section-inner sectionLayout--insetColumn\"></div>\n<div class=\"section-inner sectionLayout--outsetColumn\"></div>\n<p class=\"graf graf--p graf-after--figure\">\n<p>CSS Grid Layout is the most powerful layout system available in CSS. It is a 2-dimensional system, meaning it can handle both columns and rows, unlike <a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">flexbox</a> which is largely a 1-dimensional system. You work with Grid Layout by applying CSS rules both to a parent element (which becomes the Grid Container) and to that elements children (which become Grid Items).</p>\n<p class=\"codepen\" data-height=\"546\" data-theme-id=\"0\" data-slug-hash=\"yjzJGV\" data-default-tab=\"css,result\" data-user=\"eramax\" data-embed-version=\"2\" data-pen-title=\" .header { grid-area: hd; } .footer { grid-area: ft; } .content { grid-area: main; } .sidebar { grid-area: sd; } Having defined these names I then create my layout. This time, instead of placing my items using line numbers speci\">See the Pen <a href=\"https://codepen.io/eramax/pen/yjzJGV/\"><br />\n.header {<br />\ngrid-area: hd;<br />\n}<br />\n.footer {<br />\ngrid-area: ft;<br />\n}<br />\n.content {<br />\ngrid-area: main;<br />\n}<br />\n.sidebar {<br />\ngrid-area: sd;<br />\n}</a></p>\n<p>Having defined these names I then create my layout. This time, instead of placing my items using line numbers speci by Ahmed Essam (<a href=\"https://codepen.io/eramax\">@eramax</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<p><script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script></p>\n<div id=\"at_zurlpreview\">\n<h2></h2>\n<h2>CSS Grid — Responsive layouts and components – Deemaze Writing Wall – Medium</h2>\n<h3 style=\"display: none;\">CSS Grid — Responsive layouts and components – Deemaze Writing Wall – Medium</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-539\" src=\"https://emolike.net/wp-content/uploads/2018/05/1zEQtOUbiI00eXJ-iz5LuHQ.png\" width=\"1200\" height=\"658\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/1zEQtOUbiI00eXJ-iz5LuHQ.png 1200w, https://emolike.net/wp-content/uploads/2018/05/1zEQtOUbiI00eXJ-iz5LuHQ-300x165.png 300w, https://emolike.net/wp-content/uploads/2018/05/1zEQtOUbiI00eXJ-iz5LuHQ-768x421.png 768w, https://emolike.net/wp-content/uploads/2018/05/1zEQtOUbiI00eXJ-iz5LuHQ-1024x561.png 1024w, https://emolike.net/wp-content/uploads/2018/05/1zEQtOUbiI00eXJ-iz5LuHQ-492x270.png 492w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p class=\"imgd\">Let’s make a photo gallery responsive quickly and using very few lines of CSS.</p>\n<p class=\"imgs\">Source: <a href=\"https://medium.com/deemaze-software/css-grid-responsive-layouts-and-components-eee1badd5a2f\" target=\"_blank\" rel=\"noopener\">medium.com/deemaze-software/css-grid-responsive-layouts-and-components-eee1badd5a2f</a></p>\n</div>\n<p>&nbsp;</p>\n",
          "slug": "css-grid%e2%80%8a-%e2%80%8aresponsive-layouts-and-components",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/1zEQtOUbiI00eXJ-iz5LuHQ.png"
          },
          "link": "https://emolike.net/2018/05/05/css-grid%e2%80%8a-%e2%80%8aresponsive-layouts-and-components/",
          "date": "2018-05-05T14:08:42",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUyNA==",
        "node": {
          "id": "cG9zdDo1MjQ=",
          "title": "10 Material Design Web Frameworks Worth Considering",
          "content": "<p>What happens when you combine the principles of great design with the innovations of technology and science? Well, that is just what Google did, and created the concept of <a href=\"https://material.io/guidelines/#introduction-principles\" target=\"_blank\" rel=\"noopener\">Material Design</a>.</p>\n<p>Simply put, Material Design is a <a href=\"https://speckyboy.com/beginners-guide-material-design/\">visual design concept</a> that brings together the principles and rules of classic design and the probabilities and norms of science or technology. Since Material Design is hugely popular, so are the tools and resources related to it.</p>\n<p>In this post, we have put together some of the best web frameworks for your next Material Design styled web ad mobile projects.</p>\n<p>We have also pubished a collection of <a href=\"https://speckyboy.com/free-material-design-gui-templates-icon-sets/\">Material Design UI kits</a> and another that takes a look at <a href=\"https://speckyboy.com/html-css-examples-of-material-design-in-action/\">live examples</a> of Material Design in action.</p>\n<h2>Propeller</h2>\n<p><a href=\"https://propeller.in/\" target=\"_blank\" rel=\"noopener\">Propeller</a> is a front-end responsive framework based on Google’s Material Design Standards &amp; Bootstrap.</p>\n<p><img class=\"alignnone size-full wp-image-525\" src=\"https://emolike.net/wp-content/uploads/2018/05/weekly-news-for-designers-february-19-01.jpg\" width=\"750\" height=\"350\" alt=\"Propeller\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/weekly-news-for-designers-february-19-01.jpg 750w, https://emolike.net/wp-content/uploads/2018/05/weekly-news-for-designers-february-19-01-300x140.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/weekly-news-for-designers-february-19-01-579x270.jpg 579w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>Materialize</h2>\n<p><a href=\"http://materializecss.com/\" target=\"_blank\" rel=\"noopener\"><strong>Materialize</strong></a> is a responsive front-end framework with a focus on user experience.</p>\n<p><img class=\"alignnone size-full wp-image-526\" src=\"https://emolike.net/wp-content/uploads/2018/05/materialize.png\" width=\"750\" height=\"300\" alt=\"Materialize\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/materialize.png 750w, https://emolike.net/wp-content/uploads/2018/05/materialize-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/materialize-604x242.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>Material UI</h2>\n<p><a href=\"http://www.material-ui.com/#/\" target=\"_blank\" rel=\"noopener\"><strong>Material UI</strong></a> is a framework and a set of React components that puts the emphasis on user interface design.</p>\n<p><img class=\"alignnone size-full wp-image-527\" src=\"https://emolike.net/wp-content/uploads/2018/05/material-ui.png\" width=\"750\" height=\"300\" alt=\"Material UI\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/material-ui.png 750w, https://emolike.net/wp-content/uploads/2018/05/material-ui-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/material-ui-604x242.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>MUI</h2>\n<p><a href=\"https://www.muicss.com/\" target=\"_blank\" rel=\"noopener\"><strong>MUI</strong></a> is a lightweight and agile Material Design framework that can be loaded asynchronously to speed up development time and is fully cross-platform.</p>\n<p><img class=\"alignnone size-full wp-image-528\" src=\"https://emolike.net/wp-content/uploads/2018/05/mui.png\" width=\"750\" height=\"300\" alt=\"MUI\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/mui.png 750w, https://emolike.net/wp-content/uploads/2018/05/mui-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/mui-604x242.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>daemonite</h2>\n<p><a href=\"https://github.com/daemonite/material\" target=\"_blank\" rel=\"noopener\"><strong>daemonite</strong></a> is a simple HTML5 Material Design framework.</p>\n<p><img class=\"alignnone size-full wp-image-529\" src=\"https://emolike.net/wp-content/uploads/2018/05/daemonite.png\" width=\"750\" height=\"300\" alt=\"daemonite\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/daemonite.png 750w, https://emolike.net/wp-content/uploads/2018/05/daemonite-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/daemonite-604x242.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>LumX</h2>\n<p><a href=\"http://ui.lumapps.com/\" target=\"_blank\" rel=\"noopener\"><strong>LumX</strong></a> is a responsive front-end framework based on AngularJS and Material Design specifications.</p>\n<p><img class=\"alignnone size-full wp-image-530\" src=\"https://emolike.net/wp-content/uploads/2018/05/lumx.png\" width=\"750\" height=\"286\" alt=\"LumX\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/lumx.png 750w, https://emolike.net/wp-content/uploads/2018/05/lumx-300x114.png 300w, https://emolike.net/wp-content/uploads/2018/05/lumx-604x230.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>Framaterial</h2>\n<p><a href=\"http://framaterial.github.io/framaterial/\" target=\"_blank\" rel=\"noopener\"><strong>Framaterial</strong></a> is a simple framework that can be used out of the box without the help of any external libraries or plugins.</p>\n<p><img class=\"alignnone size-full wp-image-531\" src=\"https://emolike.net/wp-content/uploads/2018/05/framaterial.png\" width=\"750\" height=\"300\" alt=\"Framaterial\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/framaterial.png 750w, https://emolike.net/wp-content/uploads/2018/05/framaterial-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/framaterial-604x242.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h3>Materialize Meteor</h3>\n<p><del><strong>Materialize Meteor</strong></del> is a responsive front-end framework based on Material Design packaged for Meteor.</p>\n<h2>Material Framework</h2>\n<p><a href=\"http://nt1m.github.io/material-framework/#introduction\" target=\"_blank\" rel=\"noopener\"><strong>Material Framework</strong></a> is a responsive framework that can implement Material Design concepts in any web page or web app.</p>\n<p><img class=\"alignnone size-full wp-image-532\" src=\"https://emolike.net/wp-content/uploads/2018/05/material-framework.png\" width=\"750\" height=\"300\" alt=\"Material Framework\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/material-framework.png 750w, https://emolike.net/wp-content/uploads/2018/05/material-framework-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/material-framework-604x242.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>Material Foundation</h2>\n<p><strong>Material Foundation</strong> is the Material Design version of the Foundation framework by ZURB.</p>\n<p><img class=\"alignnone size-full wp-image-533\" src=\"https://emolike.net/wp-content/uploads/2018/05/material-foundation.png\" width=\"750\" height=\"300\" alt=\"Material Foundation\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/material-foundation.png 750w, https://emolike.net/wp-content/uploads/2018/05/material-foundation-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/material-foundation-604x242.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<h2>Material Design for Bootstrap</h2>\n<p><a href=\"https://fezvrasta.github.io/bootstrap-material-design/\" target=\"_blank\" rel=\"noopener\"><strong>Material Design for Bootstrap</strong></a> is a theme for <a href=\"https://speckyboy.com/free-bootstrap-framework-templates/\">Bootstrap</a> that lets you use Material Design concepts on the front-end.</p>\n<p><img class=\"alignnone size-full wp-image-534\" src=\"https://emolike.net/wp-content/uploads/2018/05/material-bootstrap.png\" width=\"750\" height=\"334\" alt=\"Material Design for Bootstrap\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/material-bootstrap.png 750w, https://emolike.net/wp-content/uploads/2018/05/material-bootstrap-300x134.png 300w, https://emolike.net/wp-content/uploads/2018/05/material-bootstrap-604x270.png 604w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<p>Have you ever worked with Material Design? Got a framework that I missed? Share it in the comments below!</p>\n<div id=\"at_zurlpreview\">\n<h2>10 Material Design Web Frameworks Worth Considering</h2>\n<h3 style=\"display: none;\">10 Material Design Web Frameworks Worth Considering</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-535\" src=\"https://emolike.net/wp-content/uploads/2018/05/md_thumb.png\" width=\"400\" height=\"300\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/md_thumb.png 400w, https://emolike.net/wp-content/uploads/2018/05/md_thumb-300x225.png 300w, https://emolike.net/wp-content/uploads/2018/05/md_thumb-360x270.png 360w\" sizes=\"(max-width: 400px) 100vw, 400px\" /></p>\n<p class=\"imgd\">What happens when you combine the principles of great design with the innovations of technology and science? Well, that is just what Google did, and created the concept of Material&#8230;</p>\n<p class=\"imgs\">Source: <a href=\"https://speckyboy.com/material-design-web-frameworks/\" target=\"_blank\" rel=\"noopener\">speckyboy.com/material-design-web-frameworks/</a></p>\n</div>\n",
          "slug": "10-material-design-web-frameworks-worth-considering",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/weekly-news-for-designers-february-19-01.jpg"
          },
          "link": "https://emolike.net/2018/05/04/10-material-design-web-frameworks-worth-considering/",
          "date": "2018-05-04T15:43:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUxOA==",
        "node": {
          "id": "cG9zdDo1MTg=",
          "title": "The Best JS Frameworks for Front End",
          "content": "<div id=\"at_zurlpreview\">\n<p>You might know this game already: you say a word and google a JavaScript framework with that name. If there’s no relevant framework, you lose and drink a shot.</p>\n<p>As practice shows, you can easily win this game because there are so many JavaScript app frameworks. For frontend developers, it’s increasingly challenging to make up their minds about which JavaScript application framework to choose, especially when they need to build a single-page application.</p>\n<figure><img class=\"alignnone size-full wp-image-519\" title=\"Popular JS Frameworks and Libraries\" src=\"https://emolike.net/wp-content/uploads/2018/05/js-frameworks.jpg\" alt=\"\" width=\"700\" height=\"258\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/js-frameworks.jpg 700w, https://emolike.net/wp-content/uploads/2018/05/js-frameworks-300x111.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/js-frameworks-604x223.jpg 604w\" sizes=\"(max-width: 700px) 100vw, 700px\" /><figcaption>Popular JavaScript frameworks and libraries</figcaption></figure>\n<p>Since developers are often the ones deciding which JS framework will do the job, they face a tough challenge because <em>they have to choose</em>.</p>\n<p>To simplify this choice of a JS framework for client-side development, we should reduce our options to several top solutions. For client-side development, our list of JavaScript frameworks includes React, Angular (Angular 2 or higher), Vue, Backbone, and Ember.</p>\n<p>Let’s take a look at JavaScript frameworks comparison in the following table:</p>\n<table width=\"100%\">\n<tbody>\n<tr>\n<td><strong>Name</strong></td>\n<td><strong>Type</strong></td>\n<td><strong>Shadow DOM<br />\nEcmasScript 6+</strong></td>\n<td><strong>Relative<br />\nPopularity</strong></td>\n<td><strong>Difficulty of<br />\nLearning</strong></td>\n</tr>\n<tr>\n<td>React</td>\n<td>Library</td>\n<td>Supported</td>\n<td>*****</td>\n<td>*****</td>\n</tr>\n<tr>\n<td>Angular</td>\n<td>Framework</td>\n<td>Supported</td>\n<td>***</td>\n<td>*****</td>\n</tr>\n<tr>\n<td>Ember</td>\n<td>Framework</td>\n<td>Supported</td>\n<td>*</td>\n<td>*****</td>\n</tr>\n<tr>\n<td>Vue</td>\n<td>Library</td>\n<td>Supported</td>\n<td>**</td>\n<td>***</td>\n</tr>\n<tr>\n<td>Backbone</td>\n<td>Framework</td>\n<td>Supported</td>\n<td>*</td>\n<td>***</td>\n</tr>\n</tbody>\n</table>\n<p>Not every JavaScript-based “framework” we’ve just mentioned is an actual framework. But we can throw in several libraries to the pack and make those not-quite-frameworks feel like actual ones. We’re talking about React and Vue, which are both JS libraries for the view layer; and Backbone, which also only partially implements the Model-View-Controller (MVC) architecture. For the purposes of this overview, however, we’ll use the term “framework” loosely to refer to all five of these JavaScript solutions.</p>\n<h2>The Best JS Frameworks for Front End</h2>\n<h3 style=\"display: none;\">The Best JS Frameworks for Front End</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-520\" src=\"https://emolike.net/wp-content/uploads/2018/05/The-Top-JS-Frameworks-for-Building-SPAs.png\" width=\"1280\" height=\"316\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/The-Top-JS-Frameworks-for-Building-SPAs.png 1280w, https://emolike.net/wp-content/uploads/2018/05/The-Top-JS-Frameworks-for-Building-SPAs-300x74.png 300w, https://emolike.net/wp-content/uploads/2018/05/The-Top-JS-Frameworks-for-Building-SPAs-768x190.png 768w, https://emolike.net/wp-content/uploads/2018/05/The-Top-JS-Frameworks-for-Building-SPAs-1024x253.png 1024w, https://emolike.net/wp-content/uploads/2018/05/The-Top-JS-Frameworks-for-Building-SPAs-604x149.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"imgd\">Choosing a JavaScript framework for frontend web development is very difficult given how many JavaScript frameworks exist. The following article will reduce your choice to five JS frameworks.</p>\n<p class=\"imgs\">Source: <a href=\"https://rubygarage.org/blog/best-javascript-frameworks-for-front-end\" target=\"_blank\" rel=\"noopener\">rubygarage.org/blog/best-javascript-frameworks-for-front-end</a></p>\n</div>\n",
          "slug": "the-best-js-frameworks-for-front-end",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/04/the-best-js-frameworks-for-front-end/",
          "date": "2018-05-04T10:24:28",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "React"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUxMQ==",
        "node": {
          "id": "cG9zdDo1MTE=",
          "title": "Going Serverless? Compare Your FaaS Options",
          "content": "<p>As is typical with new concepts and technologies, the absolute definition of “serverless” or FaaS (Functions as a Service) is broad and undefined. In essence, it is a concept that takes cloud computing and “convenience as a service” to the extreme, spinning up processing power when your application needs it and responding with data.</p>\n<p>Serverless is perfect for IoT devices, microservice architectures, or any other application that needs to be efficient. In this article, I will look beyond the major players (AWS, Azure, Google) to highlight lesser-known contenders for you to consider for your next project.</p>\n<p>Many share similarities and features, some are container-based, some open source (requiring setup on your part), and some don’t describe themselves as “serverless” but share enough conceptual similarities I included them anyway.</p>\n<h3>Google App Engine</h3>\n<p>I haven’t included the better-known <a href=\"https://cloud.google.com/functions/\">Google Cloud Functions</a> on this list, but long before “serverless” existed as a word, and even before Lambda, there was <a href=\"https://cloud.google.com/appengine/\">Google’s App Engine</a>.</p>\n<p>It supports Node.js, Java, Ruby, C#, Go, Python, and PHP, adds features such as routing traffic to different versions and applications, security, and access to Google’s other cloud services. I wonder if App Engine and Cloud Functions will ever merge, but for now, it’s a reliable option with ten years of development and usage.</p>\n<div id=\"attachment_5830\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-512\" src=\"https://emolike.net/wp-content/uploads/2018/05/faas-gcp.png\" width=\"1280\" height=\"932\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/faas-gcp.png 1280w, https://emolike.net/wp-content/uploads/2018/05/faas-gcp-300x218.png 300w, https://emolike.net/wp-content/uploads/2018/05/faas-gcp-768x559.png 768w, https://emolike.net/wp-content/uploads/2018/05/faas-gcp-1024x746.png 1024w, https://emolike.net/wp-content/uploads/2018/05/faas-gcp-371x270.png 371w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Google App Engine</p>\n</div>\n<h3>Webtask</h3>\n<p>From the team behind Auth0, <a href=\"https://webtask.io/\">Webtask</a> is a free serverless platform for undemanding projects written in JavaScript.</p>\n<p>Despite this (lack of) cost, it has a decent CLI tool and support for secrets, NPM modules, logs, cron tasks, custom domains, and a whole lot of other features. Webtask requires familiarity with the concepts of serverless, but for anyone with that knowledge looking for a service to experiment with, then it’s perfect.</p>\n<div id=\"attachment_5831\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-513\" src=\"https://emolike.net/wp-content/uploads/2018/05/fass-webtask.png\" width=\"1280\" height=\"693\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/fass-webtask.png 1280w, https://emolike.net/wp-content/uploads/2018/05/fass-webtask-300x162.png 300w, https://emolike.net/wp-content/uploads/2018/05/fass-webtask-768x416.png 768w, https://emolike.net/wp-content/uploads/2018/05/fass-webtask-1024x554.png 1024w, https://emolike.net/wp-content/uploads/2018/05/fass-webtask-499x270.png 499w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"wp-caption-text\">Webtask</p>\n</div>\n<h3>Apex</h3>\n<p>Using a Node.js shim, <a href=\"http://apex.run/\">Apex</a> lets you use AWS Lambda with languages that it doesn’t support. As Lambda adds more language support, Apex may become less useful, but for now, it still plugs a couple of useful holes.</p>\n<p>As an open-source project, it does leave me wondering how quick it is at supporting new features as they emerge. But currently, it supports a wide range of Lambda functionality.</p>\n<h3>PythonAnywhere</h3>\n<p>As the name suggests, <a href=\"https://www.pythonanywhere.com/\">PythonAnywhere</a> only supports Python and is aimed at the education market.</p>\n<p>It’s more of a fully featured online IDE and hosting environment than pure serverless, but it does mean that smaller internet-connected devices can access the power of Python, so it shares some similarities. And for devices that have no screen, the platform can accept code pushes from any public repository.</p>\n<h3>Apache OpenWhisk</h3>\n<p><a href=\"http://openwhisk.incubator.apache.org/\">Apache OpenWhisk</a> is a promising open-source option for anyone who prefers complete control of their applications.</p>\n<p>Figuring out how to get started is a little confusing, a common problem with open-source projects. I followed a Getting Started guide that took about 30 seconds before I received an error message and got stuck.</p>\n<p>If you’re less concerned about the self-hosting aspect, then IBM’s cloud functions use OpenWhisk under the hood. A quick search will find you dozens of resources to help get started, but most are written by IBM employees, so they still push you down the IBM Cloud platform.</p>\n<p>The biggest stumbling block I hit was how to use OpenWhisk without IBM Cloud. I finally hit upon <a href=\"https://thenewstack.io/hands-guide-creating-first-serverless-application-apache-openwhisk/\">this guide from The New Stack</a> that suggests using Vagrant for local testing. This caused me to dig into <a href=\"https://github.com/apache/incubator-openwhisk\">the codebase for OpenWhisk</a> and discover that while it’s possible to install and run on most platforms and start accepting requests, it’s complex.</p>\n<h3>IBM Cloud Functions</h3>\n<p>As <a href=\"https://console.bluemix.net/openwhisk/\">IBM Cloud Functions</a> is hosted Openwhisk, I’ll focus on what the service adds on top. Openwhisk has one of the better selections of runtimes and includes languages that better represent IBM’s priorities such as Swift, PHP, and Java.</p>\n<p>Recently IBM added a composer tool that lets you combine different services programmatically. They’re pushing hard to show users what pieces of their cloud puzzle fit together to meet certain use cases. One of the biggest advantages of Openwhisk is its integrated access to IBM’s Watson service, plugging your small internet-connected devices into a powerful artificial intelligence.</p>\n<h3>Spotinst</h3>\n<p>You have possibly never heard of Spotinst as a cloud provider, but it also has <a href=\"https://spotinst.com/products/spotinst-functions/\">a serverless offering</a> that supports JavaScript, Ruby, Python and Java 8 and has a reasonable <a href=\"https://spotinst.com/products/spotinst-functions/pricing/\">free tier</a>.</p>\n<p>Spotinst is pretty much a host for the <a href=\"https://serverless.com/\">Serverless Framework</a>, so its documentation is a little thin, and you’ll have to jump between the two.</p>\n<h3>Weblab</h3>\n<p>Currently in private beta, their website is a little lacking in information, but <a href=\"https://weblab.io/\">Weblab</a>(will) offer JavaScript-based microservice hosting. <a href=\"https://weblab.io/#pricing\">Pricing</a> is average, and more of a Heroku-style model — based on the number of processes you have running than compute time.</p>\n<h3>Hook.io</h3>\n<p>While it doesn’t claim to be serverless, <a href=\"http://hook.io/\">Hook.io</a> offers microservices and webhook hosting that are close enough to the concept for me to include here. The platform supports a large range of programming and scripting languages, and anything that has an HTTP or cURL client can request a response.</p>\n<div id=\"attachment_5832\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-514\" src=\"https://emolike.net/wp-content/uploads/2018/05/faas-hookio.jpg\" width=\"993\" height=\"655\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/faas-hookio.jpg 993w, https://emolike.net/wp-content/uploads/2018/05/faas-hookio-300x198.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/faas-hookio-768x507.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/faas-hookio-409x270.jpg 409w\" sizes=\"(max-width: 993px) 100vw, 993px\" /></p>\n<p class=\"wp-caption-text\">Hook.io</p>\n</div>\n<h3>Kubeless</h3>\n<p>If you are already using Kubernetes for other aspects of your infrastructure, then <a href=\"http://kubeless.io/\">Kubeless</a> adds a “ThirdPartyResource” function definition that allows you to deploy small code units to your cluster without the need for building container images each time.</p>\n<p>It supports Python, Node.js, and Ruby, and also integrates with Kafka and Prometheus, again bringing serverless concepts to preexisting infrastructures.</p>\n<h3>OpenFaas</h3>\n<p>In a similar vein to Kubeless, <a href=\"https://github.com/openfaas/faas\">OpenFaas</a> is a framework for building serverless functions with Docker and Kubernetes.</p>\n<p>In theory, it supports any language supported by Linux and Windows containers, has its own web UI, and leverages a lot of the scaling and metrics features of Kubernetes, Docker, and Prometheus. This involves a modicum of initial setup on your part, and as a new project, <a href=\"https://github.com/openfaas/faas/tree/master/guide\">the current documentation</a> is lacking. However, once <a href=\"https://github.com/openfaas/faas/tree/master/guide#deployment-guides-start-here\">you’re set up</a>, I recommend <a href=\"https://blog.alexellis.io/quickstart-openfaas-cli/\">this blog post</a> that shows you how to use the OpenFaas CLI to create and deploy functions.</p>\n<div id=\"attachment_5833\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-515\" src=\"https://emolike.net/wp-content/uploads/2018/05/faas-openfass.jpg\" width=\"962\" height=\"615\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/faas-openfass.jpg 962w, https://emolike.net/wp-content/uploads/2018/05/faas-openfass-300x192.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/faas-openfass-768x491.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/faas-openfass-422x270.jpg 422w\" sizes=\"(max-width: 962px) 100vw, 962px\" /></p>\n<p class=\"wp-caption-text\">OpenFaaS</p>\n</div>\n<h3>IronFunctions</h3>\n<p>Another solution that leverages a container-based infrastructure, <a href=\"http://open.iron.io/\">IronFunctions</a> is an open-source serverless framework that you can self-host or use Iron’s FaaS offering.</p>\n<p>As it runs in containers, you can use any language supported by Linux and Windows. IronFunctions supports AWS Lambda format and the ability to import existing Lambda functions, and a CLI tool for easy creation and deployment of functions.</p>\n<p>The project is less than a year old, but with backing from a well-established cloud-native provider, it shows promise and looks well designed.</p>\n<h3>Serverless Framework</h3>\n<p>As the name implies, <a href=\"https://serverless.com/framework/docs/\">the Serverless Framework</a> is not so much a platform but a framework that helps you create serverless applications on top of other platforms.</p>\n<p>The intention is that you can write your code once and deploy to whichever platform you prefer. In reality, the experience varies depending on the languages and features each platform supports. You might it find it best to start developing from a “minimum shared feature set,” separating out platform-specific features into supplemental functions.</p>\n<p>&nbsp;</p>\n<div id=\"at_zurlpreview\">\n<h2>Going Serverless? Compare Your FaaS Options &#8211; via @codeship</h2>\n<h3 style=\"display: none;\">Going Serverless? Compare Your FaaS Options &#8211; via @codeship</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-516\" src=\"https://emolike.net/wp-content/uploads/2018/05/Codeship_Going-Serverless_Compare-Your-FaaS-Options.jpg\" width=\"1200\" height=\"630\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/Codeship_Going-Serverless_Compare-Your-FaaS-Options.jpg 1200w, https://emolike.net/wp-content/uploads/2018/05/Codeship_Going-Serverless_Compare-Your-FaaS-Options-300x158.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/Codeship_Going-Serverless_Compare-Your-FaaS-Options-768x403.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/Codeship_Going-Serverless_Compare-Your-FaaS-Options-1024x538.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/Codeship_Going-Serverless_Compare-Your-FaaS-Options-514x270.jpg 514w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p class=\"imgd\">Let&#8217;s take a look beyond the major serverless players (AWS, Azure, Google) and highlight lesser-known contenders for you to consider for your next project.</p>\n<p class=\"imgs\">Source: <a href=\"https://blog.codeship.com/going-serverless-compare-your-faas-options/\" target=\"_blank\" rel=\"noopener\">blog.codeship.com/going-serverless-compare-your-faas-options/</a></p>\n</div>\n",
          "slug": "going-serverless-compare-your-faas-options",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/05/faas-gcp.png"
          },
          "link": "https://emolike.net/2018/05/04/going-serverless-compare-your-faas-options/",
          "date": "2018-05-04T09:37:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Serverless"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUwNw==",
        "node": {
          "id": "cG9zdDo1MDc=",
          "title": "How to Deploy a React Application (with Netlify)",
          "content": "<p><iframe title=\"How to Deploy a React Application (with Netlify)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/lCcBEDPTk4o?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "858-how-to-create-react-app-and-deploy-or-go-live-supritkumar-shah-1k-views-2018-deploying-a-react-app-with-aws-s3-code-with-nate-3-1k-views-2951-jamstack-tutorial-full-site-using-netlify-h",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/03/858-how-to-create-react-app-and-deploy-or-go-live-supritkumar-shah-1k-views-2018-deploying-a-react-app-with-aws-s3-code-with-nate-3-1k-views-2951-jamstack-tutorial-full-site-using-netlify-h/",
          "date": "2018-05-03T20:12:31",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "React"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUwNA==",
        "node": {
          "id": "cG9zdDo1MDQ=",
          "title": "Netlify CMS | Open-Source Content Management System",
          "content": "<h1 class=\"headline\">Open source content management for your Git workflow</h1>\n<p><span class=\"subhead\">Use Netlify CMS with any static site generator for a faster and more flexible web project</span></p>\n<div class=\"feature\">\n<h3>Static + content management = ♥</h3>\n<p>Get the speed, security, and scalability of a static site, while still providing a convenient editing interface for content.</p>\n</div>\n<div class=\"feature\">\n<h3>An integrated part of your Git workflow</h3>\n<p>Content is stored in your Git repository alongside your code for easier versioning, multi-channel publishing, and the option to handle content updates directly in Git.</p>\n</div>\n<div class=\"feature\">\n<h3>An extensible CMS built on React</h3>\n<p>Netlify CMS is built as a single-page React app. Create custom-styled previews, UI widgets, and editor plugins or add backends to support different Git platform APIs.</p>\n<p><iframe title=\"Netlify CMS – One Click CMS\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/p6h-rYSVX90?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<div id=\"at_zurlpreview\">\n<h2>Netlify CMS | Open-Source Content Management System</h2>\n<h3 style=\"display: none;\">Netlify CMS | Open-Source Content Management System</h3>\n<p class=\"imgp\">\n<p class=\"imgd\">Get the speed, security, and scalability of a static site, while still providing a convenient editing interface for content.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.netlifycms.org/\" target=\"_blank\" rel=\"noopener\">www.netlifycms.org/</a></p>\n</div>\n</div>\n",
          "slug": "netlify-cms-open-source-content-management-system",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/03/netlify-cms-open-source-content-management-system/",
          "date": "2018-05-03T20:07:28",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUwMQ==",
        "node": {
          "id": "cG9zdDo1MDE=",
          "title": "Learn React &#038; Material UI &#8211; youtube course",
          "content": "<p><iframe title=\"Learn React &amp; Material UI - #1 Intro\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/videoseries?list=PLcCp4mjO-z98WAu4sd0eVha1g-NMfzHZk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "learn-react-material-ui-youtube-course",
          "featuredImage": null,
          "link": "https://emolike.net/2018/05/03/learn-react-material-ui-youtube-course/",
          "date": "2018-05-03T20:03:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "React"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQ4Ng==",
        "node": {
          "id": "cG9zdDo0ODY=",
          "title": "10 TIPS TO HOST YOUR WEB APPS FOR FREE",
          "content": "<section class=\"post-content\">\n<div class=\"kg-card-markdown\">\n<h4 id=\"aguidetonavigatingofthecompetitivemarketplaceofcloudserviceproviders\">A guide to navigating of the competitive marketplace of cloud service providers.</h4>\n<p>2017 is a great year to deploy a web app.</p>\n<p>The landscape of web service providers is incredibly competitive right now, and almost all of them offer generous free plans as an attempt to acquire long-term customers.</p>\n<p><img class=\"alignnone size-full wp-image-487\" src=\"https://emolike.net/wp-content/uploads/2018/04/free-hosting-meme.jpg\" width=\"565\" height=\"313\" alt=\"Free Hosting Meme\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/free-hosting-meme.jpg 565w, https://emolike.net/wp-content/uploads/2018/04/free-hosting-meme-300x166.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/free-hosting-meme-487x270.jpg 487w\" sizes=\"(max-width: 565px) 100vw, 565px\" /></p>\n<p>This article is a collection of tips, from my own experience, on hosting high-performance web apps for free. If you are experienced in deploying web apps, then you are probably already familiar with many of the services and techniques that we will cover, but I hope that you will still learn something new. If you are a newcomer to web application deployment, I hope that this article will help to guide you to the best services and to avoid some of the potential pitfalls.</p>\n<p><em>Note &#8211; I am not being paid or sponsored by any of these services. This is just advice based on my experience at various organizations, and on how I host my own web applications.</em></p>\n<blockquote>\n<h4 id=\"staticfrontendwebsites\">Static Front-End Websites</h4>\n<p>The first 5 tips are for static websites. These are self-contained websites, consisting of HTML, CSS, and Javascript files, that do not rely on custom server-side APIs or databases to function.</p></blockquote>\n<h4 id=\"1avoidwebsitehostingcompanies\">1. Avoid &#8220;Website Hosting&#8221; companies</h4>\n<p>Thousands of website hosting companies compete to provide web services to non-technical customers and small businesses. These companies often place a priority on advertising/marketing over actually providing a great service; some examples include Bluehost, GoDaddy, HostGator, and iPage.</p>\n<p><img class=\"alignnone size-full wp-image-488\" src=\"https://emolike.net/wp-content/uploads/2018/04/webhosting.png\" width=\"1024\" height=\"679\" alt=\"Web Hosting = Bad Deal\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/webhosting.png 1024w, https://emolike.net/wp-content/uploads/2018/04/webhosting-300x199.png 300w, https://emolike.net/wp-content/uploads/2018/04/webhosting-768x509.png 768w, https://emolike.net/wp-content/uploads/2018/04/webhosting-407x270.png 407w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p>Almost all of these companies offer sub-par shared-hosting deals with deceptive pricing models. The pricing plans are usually not a good value, and you can achieve better results for free (or for very, very cheap) by using the tools described later in this post.</p>\n<p>These services are only good options for people who want the least-technical experience possible, and who are willing to pay 10-1000x as much per month in exchange for a marginally simpler setup experience.</p>\n<p>Many of these companies have highly-polished homepages offering aggressively-discounted &#8220;80% off for the first 12 Months&#8221; types of deals. They will then make it difficult to remove payment methods and/or cancel the plan, and will automatically charge you $200-$400 dollars for an automatic upgrade to 12-24 months of the &#8220;premium plan&#8221; a year later. This is how these companies make their money, don&#8217;t fall for it.</p>\n<h4 id=\"2donthostonyourownhardwareunlessyoureallyknowwhatyouredoing\">2. Don&#8217;t host on your own hardware (unless you really know what you&#8217;re doing)</h4>\n<p>Another option is to host the website on your personal computer. This is a really a <em>Very Bad Idea</em>. Your computer will be slow, your website will be unreliable, and your personal computer (and entire home network) will probably get hacked. Not good.</p>\n<p><img class=\"alignnone size-full wp-image-489\" src=\"https://emolike.net/wp-content/uploads/2018/04/gatsby-hacked.jpg\" width=\"600\" height=\"400\" alt=\"You've been hacked\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/gatsby-hacked.jpg 600w, https://emolike.net/wp-content/uploads/2018/04/gatsby-hacked-300x200.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/gatsby-hacked-405x270.jpg 405w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></p>\n<p>You could also buy your own server hardware dedicated to hosting the website. In order to do this, however, you&#8217;ll need a solid understanding of network hardware and software, a blazing-fast internet connection, and a reliable power supply. Even then, you still might be opening up your home network to security risks, the upfront costs could be significant, and the site will still likely never be as fast as it would be if hosted in an enterprise data center.</p>\n<h4 id=\"3usegithubpagesforstaticwebsitehosting\">3. Use GitHub pages for static website hosting</h4>\n<p>Front-end project code on GitHub can be hosted using <a href=\"https://pages.github.com/\">GitHub Pages</a>. The biggest advantage here is that the hosting is 100% free, which is pretty sweet. They also provide a GitHub pages subdomain (<code>yoursite.github.io</code>) hosted over HTTPS.</p>\n<p><img class=\"alignnone size-full wp-image-490\" src=\"https://emolike.net/wp-content/uploads/2018/04/gh-pages.png\" width=\"720\" height=\"328\" alt=\"Github Pages\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/gh-pages.png 720w, https://emolike.net/wp-content/uploads/2018/04/gh-pages-300x137.png 300w, https://emolike.net/wp-content/uploads/2018/04/gh-pages-593x270.png 593w\" sizes=\"(max-width: 720px) 100vw, 720px\" /></p>\n<p>The main disadvantage of this offering is in flexibility, or the lack thereof.</p>\n<p>For an ultra-basic website, with an <code>index.html</code> file at the root of the project, a handful JS/CSS/image resources, and no build system, GitHub Pages works very well.</p>\n<p>Larger projects, however, often have more complex directory layouts, such as a pre-built <code>src</code> directory containing the source code modules, a <code>node_modules</code> directory containing external dependencies, and a separate <code>public</code> directory containing the built website files. These projects can be difficult to configure in order to work correctly with GitHub Pages since it is configured to serve from the root of the repository.</p>\n<p>It is possible to have a GH pages site only serve from, say, the project&#8217;s <code>public</code> or <code>dist</code>subdirectory, but it requires setting up a git subtree for that directory prefix, which can be a bit complex. For more advanced projects, I&#8217;ve found that using a cloud storage service is generally simpler and provides greater flexibility.</p>\n<h4 id=\"4usecloudstorageservicesforstaticwebsitehosting\">4. Use cloud storage services for static website hosting</h4>\n<p><a href=\"https://aws.amazon.com/s3/pricing/\">AWS S3</a>, <a href=\"https://azure.microsoft.com/en-us/services/storage/\">Microsoft Azure Storage</a>, and <a href=\"https://cloud.google.com/storage/\">Google Cloud Storage</a> are ultra-cheap, ultra-fast, ultra-reliable file storage services. These products are commonly used by corporations to archive massive collections of data and media, but you can also host a website on them for very, very cheap.</p>\n<p><strong>These are the best options for hosting a static website, in my opinion.</strong></p>\n<p><img class=\"alignnone size-full wp-image-491\" src=\"https://emolike.net/wp-content/uploads/2018/04/cloudhosting.png\" width=\"1280\" height=\"462\" alt=\"AWS, Azure, and GCP\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/cloudhosting.png 1280w, https://emolike.net/wp-content/uploads/2018/04/cloudhosting-300x108.png 300w, https://emolike.net/wp-content/uploads/2018/04/cloudhosting-768x277.png 768w, https://emolike.net/wp-content/uploads/2018/04/cloudhosting-1024x370.png 1024w, https://emolike.net/wp-content/uploads/2018/04/cloudhosting-604x218.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>These services allow you to upload files to &#8220;storage buckets&#8221; (think enterprise-friendly Dropbox). You can then to make the bucket contents publicly available (for read access) to the rest of the internet, allowing you to serve the bucket contents as a website.</p>\n<p>Here are tutorials for how to do this with each service &#8211;</p>\n<ul>\n<li><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Hosting a Static Website on Amazon S3</a></li>\n<li><a href=\"https://cloud.google.com/storage/docs/hosting-static-website\">Hosting a Static Website on Google Cloud Storage</a></li>\n<li><a href=\"https://buildazure.com/2016/11/30/static-website-hosting-in-azure-storage/\">Hosting a Static Website on Microsoft Azure</a></li>\n</ul>\n<p>The great thing about this setup (unlike the pricing models of &#8220;web hosting&#8221; companies such as Bluehost and Godaddy) is that <strong>you only pay for the storage and bandwidth that you use</strong>.</p>\n<p>The resulting website will be <em>very</em> fast, scalable, and reliable, since it will be served from the same infrastructure that companies such as Netflix, Spotify, and Pinterest use for their own resources.</p>\n<p>Here is a pricing breakdown <sup class=\"footnote-ref\"><a id=\"fnref1\" href=\"https://blog.patricktriest.com/host-webapps-free/#fn1\">[1]</a></sup><sup class=\"footnote-ref\"><a id=\"fnref2\" href=\"https://blog.patricktriest.com/host-webapps-free/#fn2\">[2]</a></sup><sup class=\"footnote-ref\"><a id=\"fnref3\" href=\"https://blog.patricktriest.com/host-webapps-free/#fn3\">[3]</a></sup> &#8211;</p>\n<table>\n<tbody>\n<tr>\n<th></th>\n<th>AWS S3</th>\n<th>Google Cloud Storage</th>\n<th>Azure Storage</th>\n</tr>\n<tr>\n<td>File Storage per GB per month</td>\n<td>$0.023</td>\n<td>$0.026</td>\n<td>$0.024</td>\n</tr>\n<tr>\n<td>Data Transfer per GB</td>\n<td>$0.09</td>\n<td>$0.11</td>\n<td>$0.087</td>\n</tr>\n</tbody>\n</table>\n<p><em>Note that pricing can vary by region. Also, some of these services charge additional fees, such as for each HTTP GET request; see the official pricing pages in the footnotes for more details.</em></p>\n<p>For most websites, these costs will come out to almost nothing, regardless of which service you choose. The data storage costs will be totally negligible for any website, and the data transfer costs can be all-but-eliminated by serving the site from behind a CDN (see <a href=\"https://blog.patricktriest.com/host-webapps-free/#tip-10\">tip #10</a>). Furthermore, you can leverage the free credits available for these services in order to host your static websites without paying a single dime (skip to <a href=\"https://blog.patricktriest.com/host-webapps-free/#tip-5\">tip #5</a> for more details).</p>\n<p>If you need to host a site with lots of hi-res photo/video content, I would recommend storing your photos separately on a service such as <a href=\"https://imgur.com/\">Imgur</a>, and embedding your videos from <a href=\"https://www.youtube.com/\">Youtube</a> or <a href=\"https://vimeo.com/\">Vimeo</a>. This tactic will allow you to host lots of media without footing the bill for associated data transfer costs.</p>\n<blockquote>\n<h4 id=\"dynamicwebapps\">Dynamic Web Apps</h4>\n<p>Now for the trickier part &#8211; cheaply hosting a web app that relies on a backend and/or database to function. This includes most blogs (unless you use a <a href=\"https://davidwalsh.name/introduction-static-site-generators\">static site generator</a>), as well as any website that requires users to log in and to submit/edit content. Generally, it would cost at least $5 per month to rent a cloud compute instance for this purpose, but there are a few good ways to circumvent these fees.</p></blockquote>\n<h4 id=\"5leveragecloudhostingproviderfreeplans\">5. Leverage cloud hosting provider free plans</h4>\n<p>The most popular option for server-based apps are cloud hosting services, such as <a href=\"https://cloud.google.com/\">Google Cloud Platform</a> (GCP), <a href=\"https://aws.amazon.com/\">Amazon Web Services</a> (AWS), and <a href=\"https://azure.microsoft.com/\">Microsoft Azure</a>. These services are in fierce competition with each other, and have so much capital and infrastructure available that they are willing to give away money and compute power in order to get users hooked on their respective platforms.</p>\n<p><img class=\"alignnone size-full wp-image-492\" src=\"https://emolike.net/wp-content/uploads/2018/04/freemoney.gif\" width=\"500\" height=\"369\" alt=\"Free Money\" /></p>\n<p>Google Cloud Platform automatically provides $300 worth of credit to anyone who joins and allows you to run a small (f1-micro) server at no cost, indefinitely, along with providing a variety of other free-tier usage limits. See here for more info &#8211; <a href=\"https://cloud.google.com/free/\">https://cloud.google.com/free/</a></p>\n<p>AWS offers very similar free-tier limits to GCP, allowing you to run 1 small compute instance (t2-micro) for free each month. See here &#8211; <a href=\"https://aws.amazon.com/free/\">https://aws.amazon.com/free/</a></p>\n<p>Microsoft Azure offers $200 in free credit when you join, but this free credit expires after one month. They also provide a free tier on their &#8220;App Service&#8221; offering, although this free tier is more limited than the equivalent offerings from AWS and GCP. See here &#8211; <a href=\"https://azure.microsoft.com/en-us/free\">https://azure.microsoft.com/en-us/free</a></p>\n<p>Personally, <strong>I would recommend GCP</strong> since their free plan is the most robust, and their web admin interface is the most polished and pleasant to work with.</p>\n<blockquote><p>Note &#8211; If you are a student, Github offers a really fantastic pack of free stuff, <a href=\"https://education.github.com/pack\">https://education.github.com/pack</a>, including $110 in AWS credits, $50 in <a href=\"https://www.digitalocean.com/\">DigitalOcean</a> credits, and much more.</p></blockquote>\n<h4 id=\"6useherokuforfreebackendapphosting\">6. Use Heroku for free backend app hosting</h4>\n<p><a href=\"https://www.heroku.com/\">Heroku</a> also offers a free tier. The difference with Heroku is that you can indefinitely <strong>run up to 100 backend apps at the same time for free</strong>. Not only will they provide a server for your application code to run on, but there are also lots of free plugins to add databases and other external services to your application cluster. It&#8217;s worth noting that Heroku has a wonderful, developer focused user-experience compared to its competitors.</p>\n<p><img class=\"alignnone size-full wp-image-493\" src=\"https://emolike.net/wp-content/uploads/2018/04/heroku.png\" width=\"1280\" height=\"540\" alt=\"Heroku\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/heroku.png 1280w, https://emolike.net/wp-content/uploads/2018/04/heroku-300x127.png 300w, https://emolike.net/wp-content/uploads/2018/04/heroku-768x324.png 768w, https://emolike.net/wp-content/uploads/2018/04/heroku-1024x432.png 1024w, https://emolike.net/wp-content/uploads/2018/04/heroku-604x255.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" />There is, of course, a catch &#8211; <strong>you are limited to 1000 free app-hours per month</strong>. This means that you&#8217;ll only be able to run 1 app full-time for the entire month (730 hours). Additionally, Heroku&#8217;s free servers will &#8220;sleep&#8221; after 30 minutes of inactivity; the next time someone makes a request to the server it will take around 15-20 seconds to respond at first while it &#8220;wakes up&#8221;. The good news is that when servers are asleep, they don&#8217;t count towards to monthly limit, so you could theoretically host 100 low-traffic apps on Heroku completely for free, and just let them wake up for the occasional visitor.</p>\n<p>The <a href=\"https://www.heroku.com/pricing\">Heroku free plan</a> is a great option for casual side projects, test environments, and low-traffic, non-critical applications.</p>\n<blockquote><p><a href=\"https://zeit.co/now\">Now</a>, from Zeit, is a similar service to Heroku, with a more minimalist focus. It offers near-unlimited free hosting for Node.js and Docker based applications, along with a simple, developer-focused CLI tool. You might want to check this out if you like Heroku, but don&#8217;t need all of the Github integrations, CI tools, and plugin support.</p></blockquote>\n<h4 id=\"7usefirebaseforappswithstraightforwardbackendrequirements\">7. Use Firebase for apps with straightforward backend requirements</h4>\n<p><a href=\"https://firebase.google.com/\">Firebase</a> is Google&#8217;s backend-as-a-service, and is the dominant entrant in this field at the moment. Firebase provides a suite of backend services, such as database-storage, user authentication, client-side SDKs, and in-depth analytics and monitoring. Firebase offers an unlimited-duration <a href=\"https://firebase.google.com/pricing/\">free plan</a>, with usage limits on some of the features. Additionally, you can host your frontend website on Firebase for free, with up to 1GB of file storage and 10GB of data transfer per month.</p>\n<p><img class=\"alignnone size-full wp-image-494\" src=\"https://emolike.net/wp-content/uploads/2018/04/firebase.png\" width=\"1280\" height=\"656\" alt=\"Firebase\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/firebase.png 1280w, https://emolike.net/wp-content/uploads/2018/04/firebase-300x154.png 300w, https://emolike.net/wp-content/uploads/2018/04/firebase-768x394.png 768w, https://emolike.net/wp-content/uploads/2018/04/firebase-1024x525.png 1024w, https://emolike.net/wp-content/uploads/2018/04/firebase-527x270.png 527w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" />For applications that just allow users to log in and store/share data (such as a social networking app), Firebase can be a great choice. For applications with more advanced backend requirements, such as complex database schemas or high-security user/organization authorization handling, writing a custom backend might be a simpler, more scalable solution than Firebase in the long-run.</p>\n<p>Firebase offers &#8220;Cloud Functions&#8221; to write specific app logic and run custom jobs, but these functions are more limited in capability than running your own backend server (they can only be written using Node.js, for instance). You can also use a &#8220;Cloud Function&#8221; style architecture without specifically using Firebase, as we&#8217;ll see in the next section.</p>\n<h4 id=\"8useaserverlessarchitecture\">8. Use a serverless architecture</h4>\n<p>Serverless architecture is an emerging paradigm for backed infrastructure design where instead of managing a full server to run your API code, you can run individual functions on-demand using services such as <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a>, <a href=\"https://cloud.google.com/functions/docs/\">Google Cloud Functions</a>, or <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview\">Azure Functions</a>.</p>\n<blockquote><p>Note &#8211; &#8220;Serverless&#8221; is a buzzy, somewhat misleading term; <strong>your application code still runs on servers</strong>, you just don&#8217;t have to manage them. Also, note that while the core application logic can be &#8220;serverless&#8221;, you&#8217;ll probably still need to have a persistent server somewhere in order to host your application database.</p></blockquote>\n<p><img class=\"alignnone size-full wp-image-495\" src=\"https://emolike.net/wp-content/uploads/2018/04/serverless-2.png\" width=\"1000\" height=\"301\" alt=\"Serverless\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/serverless-2.png 1000w, https://emolike.net/wp-content/uploads/2018/04/serverless-2-300x90.png 300w, https://emolike.net/wp-content/uploads/2018/04/serverless-2-768x231.png 768w, https://emolike.net/wp-content/uploads/2018/04/serverless-2-604x182.png 604w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n<p>The advantage of these services is that instead of paying a fixed monthly fee for renting a compute instance in a datacenter (typically between $5 and $50 per month), you can &#8220;pay-as-you-go&#8221; based on the number of function calls that your application receives.</p>\n<p>These services are priced by the number of function call requests per month &#8211;</p>\n<table>\n<tbody>\n<tr>\n<th></th>\n<th>AWS Lambda</th>\n<th>Google Cloud Functions</th>\n<th>Azure Functions</th>\n</tr>\n<tr>\n<td>Free Requests Per Month</td>\n<td>1 million</td>\n<td>2 million</td>\n<td>1 million</td>\n</tr>\n<tr>\n<td>Price Per Million Requests</td>\n<td>$0.20</td>\n<td>$0.40</td>\n<td>$0.20</td>\n</tr>\n</tbody>\n</table>\n<p>Each service also charges for the precise amount of CPU time used (rounded up to the nearest 100ms), but this pricing is a bit more complicated, so I&#8217;ll just refer you their respective pricing pages.</p>\n<ul>\n<li><a href=\"https://aws.amazon.com/lambda/pricing/\">AWS Lambda Pricing</a></li>\n<li><a href=\"https://cloud.google.com/functions/\">Google Cloud Compute Pricing</a></li>\n<li><a href=\"https://azure.microsoft.com/en-us/pricing/details/functions/\">Microsoft Azure Functions</a></li>\n</ul>\n<p>The quickest way to get started is to use the open-source <a href=\"https://github.com/serverless/serverless\">Serverless Framework</a>, which provides an easy way to deploy Node.js, Python, Java, and Scala functions on either of the three services.</p>\n<p>Serverless architecture has a lot of buzz right now, but <strong>I cannot personally vouch for how well it works in a production environment</strong>, so <em>caveat emptor</em>.</p>\n<h4 id=\"9usedockertohostmultiplelowtrafficappsonasinglemachine\">9. Use Docker to host multiple low-traffic apps on a single machine</h4>\n<p>Sometimes you might have multiple backend applications to run, but each without a very demanding CPU or memory footprint. In this situation, it can be an advantageous cost-cutting move to run all of the applications on the same machine instead of running each on a separate instance. This can be difficult, however, if the projects have differing dependencies (say, one requires Node v6.9 and another requires Node v8.4), or need to be run on different operating system distributions.</p>\n<p><img class=\"alignnone size-full wp-image-496\" src=\"https://emolike.net/wp-content/uploads/2018/04/docker.png\" width=\"1280\" height=\"1141\" alt=\"Docker\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/docker.png 1280w, https://emolike.net/wp-content/uploads/2018/04/docker-300x267.png 300w, https://emolike.net/wp-content/uploads/2018/04/docker-768x685.png 768w, https://emolike.net/wp-content/uploads/2018/04/docker-1024x913.png 1024w, https://emolike.net/wp-content/uploads/2018/04/docker-303x270.png 303w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><a href=\"https://www.docker.com/\">Docker</a> is a containerization engine that provides an elegant solution to these issues. To make an application work with Docker, you can write a Dockerfile to include with the source code, specifying the base operating system and providing instructions to set up the project and dependencies. The resulting Docker container can be run on any operating system, making it very easy to consistently manage development/production environments and to avoid conflicting dependencies.</p>\n<p><a href=\"https://docs.docker.com/compose/\">Docker-Compose</a> is a tool that allows you write a configuration file to run multiple Docker containers at once. This makes it easy to run multiple lightweight applications, services, and database containers, all on the same system without needing to worry about conflicts.</p>\n<p>Ports inside each container can be forwarded to ports on the host machine, so a simple reverse-proxy configuration (<a href=\"https://www.nginx.com/resources/wiki/\">Nginx</a> is a dependable, well-tested option) is all that is required to mount each application port behind a specific subdomain or URL route in order to make them all accessible via HTTPS on the host machine.</p>\n<p>I have personally used this setup for a few of my personal projects in the past (and the present); it can save a lot of time and money if you are willing to take the time to get familiar the tools (which can, admittedly, have a steep learning curve at first).</p>\n<h4 id=\"10usecloudflarefordnsmanagementandssl\">10. Use Cloudflare for DNS management and SSL</h4>\n<p>Once you have your website/server hosted, you&#8217;ll need a way to point your domain name to your content and to serve your domain over HTTPS.</p>\n<p><img class=\"alignnone size-full wp-image-497\" src=\"https://emolike.net/wp-content/uploads/2018/04/cloudflare.png\" width=\"1280\" height=\"567\" alt=\"Cloudflare\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/cloudflare.png 1280w, https://emolike.net/wp-content/uploads/2018/04/cloudflare-300x133.png 300w, https://emolike.net/wp-content/uploads/2018/04/cloudflare-768x340.png 768w, https://emolike.net/wp-content/uploads/2018/04/cloudflare-1024x454.png 1024w, https://emolike.net/wp-content/uploads/2018/04/cloudflare-604x268.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p><a href=\"https://www.cloudflare.com/\">Cloudflare</a> is a domain management service backed by the likes of Google and Microsoft. At its core, Cloudflare allows you to point your domain name (and subdomains) to your website server(s). Beyond this basic functionality, however, it offers lots of free features that are hugely beneficial for anyone hosting a web app or API.</p>\n<h6 id=\"benefit1security\">Benefit 1 &#8211; Security</h6>\n<p>Cloudflare will automatically protect your website from malicious traffic. Their massive infrastructure provides protection from DDoS (Distributed Denial of Service) attacks, and their firewall will protect your site from a continuously updated list of threats that are detected throughout their network.</p>\n<h5 id=\"benefit2speed\">Benefit 2 &#8211; Speed</h5>\n<p>Cloudflare will distribute your content quickly by sending it through a global CDN (content delivery network). The benefit of a CDN is that when someone visits the site, the data will be sent to them from a data center in their geographic region instead of from halfway around the world, allowing the page to load quicker.</p>\n<h5 id=\"benefit3datatransfercostsavings\">Benefit 3 &#8211; Data Transfer Cost Savings</h5>\n<p>An added benefit to using a CDN is that by sending the cached content from Cloudflare&#8217;s servers, you can reduce the bandwidth (and therefore the costs) from wherever your website is being hosted from. Cloudflare offers unlimited free bandwidth through their CDN.</p>\n<h6 id=\"benefit4freessl\">Benefit 4 &#8211; Free SSL</h6>\n<p>Best of all, Cloudflare provides a free SSL certificate and automatically serves your website over HTTPS. This is very important for security (seriously, don&#8217;t deploy a website without HTTPS), and would usually require server-side technical setup and annual fees; I&#8217;ve never seen another company (besides <a href=\"https://letsencrypt.org/\">Let&#8217;s Encrypt</a>) offer it for free.</p>\n<p>Cloudflare offers a somewhat absurd <a href=\"https://www.cloudflare.com/plans/\">free plan</a>, with which you can apply all of these benefits to any number of domain names.</p>\n<blockquote><p>A note on domain names &#8211; I don&#8217;t know of any way to score a free domain name, so you might have to pay a registration fee and an annual fee. It&#8217;s usually around $10/year, but you can get the first year for $1 or even for free if you shop around for deals. As an alternative, services like Heroku and GitHub can host your site behind their own custom subdomains for free, but you&#8217;ll lose some brand flexibility with this option. I recommend buying a single domain (such as <a href=\"http://patricktriest.com/\">patricktriest.com</a>) and deploying your apps for free on subdomains (such as <a href=\"https://blog.patricktriest.com/\">blog.patricktriest.com</a>) using Cloudflare.</p></blockquote>\n<h3 id=\"wantmorefreestuff\">Want more free stuff?</h3>\n<p>In my workflow, I also use <a href=\"https://github.com/\">Github</a> to store source code and <a href=\"https://circleci.com/\">CircleCI</a> to automate my application build/test/deployment processes. Both are completely free, of course, until you need more advanced, enterprise friendly capabilities.</p>\n<p><img class=\"alignnone size-full wp-image-498\" src=\"https://emolike.net/wp-content/uploads/2018/04/free-stuff.jpg\" width=\"500\" height=\"333\" alt=\"Free Stuff\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/free-stuff.jpg 500w, https://emolike.net/wp-content/uploads/2018/04/free-stuff-300x200.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/free-stuff-405x270.jpg 405w\" sizes=\"(max-width: 500px) 100vw, 500px\" /></p>\n<p>If you need some beautiful free images check out <a href=\"https://www.pexels.com/\">Pexels</a> and <a href=\"https://unsplash.com/\">Unsplash</a>, and for great icons, I would recommend <a href=\"http://fontawesome.io/\">Font Awesome</a> and <a href=\"https://thenounproject.com/\">The Noun Project</a>.</p>\n<p>2017 is a great year to deploy a web app. If your app is a huge success, you can expect the costs to go up proportionally with the amount of traffic it receives, but with a well-optimized codebase and a scalable deployment setup, these costs can still be bounded within a very manageable range.</p>\n<p>I hope that this post has been useful! Feel free to comment below with any other techniques and tactics for obtaining cheap web application hosting.</p>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><a href=\"https://cloud.google.com/storage/pricing#transfer-service-pricing\">https://cloud.google.com/storage/pricing#transfer-service-pricing</a> <a class=\"footnote-backref\" href=\"https://blog.patricktriest.com/host-webapps-free/#fnref1\">↩︎</a></li>\n<li id=\"fn2\" class=\"footnote-item\"><a href=\"https://aws.amazon.com/s3/pricing/\">https://aws.amazon.com/s3/pricing/</a> <a class=\"footnote-backref\" href=\"https://blog.patricktriest.com/host-webapps-free/#fnref2\">↩︎</a></li>\n<li id=\"fn3\" class=\"footnote-item\"><a href=\"https://azure.microsoft.com/en-us/pricing/details/storage/blobs-general/\">https://azure.microsoft.com/en-us/pricing/details/storage/blobs-general/</a> <a class=\"footnote-backref\" href=\"https://blog.patricktriest.com/host-webapps-free/#fnref3\">↩︎</a></li>\n</ol>\n<div id=\"at_zurlpreview\">\n<h2>10 Tips To Host Your Web Apps For Free</h2>\n<h3 style=\"display: none;\">10 Tips To Host Your Web Apps For Free</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-499\" src=\"https://emolike.net/wp-content/uploads/2018/04/webhosting-header.jpg\" width=\"1280\" height=\"448\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/webhosting-header.jpg 1280w, https://emolike.net/wp-content/uploads/2018/04/webhosting-header-300x105.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/webhosting-header-768x269.jpg 768w, https://emolike.net/wp-content/uploads/2018/04/webhosting-header-1024x358.jpg 1024w, https://emolike.net/wp-content/uploads/2018/04/webhosting-header-604x211.jpg 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"imgd\">A guide to navigating of the competitive marketplace of web hosting companies and cloud service providers.</p>\n<p class=\"imgs\">Source: <a href=\"https://blog.patricktriest.com/host-webapps-free/\" target=\"_blank\" rel=\"noopener\">blog.patricktriest.com/host-webapps-free/</a></p>\n</div>\n</section>\n</div>\n</section>\n",
          "slug": "10-tips-to-host-your-web-apps-for-free",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/free-hosting-meme.jpg"
          },
          "link": "https://emolike.net/2018/04/29/10-tips-to-host-your-web-apps-for-free/",
          "date": "2018-04-29T17:26:45",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQ4Mg==",
        "node": {
          "id": "cG9zdDo0ODI=",
          "title": "MongoDB Atlas and free tier from amazon",
          "content": "<p><strong>MongoDB</strong> Atlas is a cloud-hosted MongoDB service engineered and run by the same team that builds the database. It incorporates operational best practices we’ve learned from optimizing thousands of deployments across startups and the Fortune 100. Build on MongoDB Atlas with confidence, knowing you no longer need to worry about database management, setup and configuration, software patching, monitoring, backups, or operating a reliable, distributed database cluster.</p>\n<p><img class=\"alignnone size-full wp-image-483\" src=\"https://emolike.net/wp-content/uploads/2018/04/download-3.png\" alt=\"\" width=\"917\" height=\"678\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/download-3.png 917w, https://emolike.net/wp-content/uploads/2018/04/download-3-300x222.png 300w, https://emolike.net/wp-content/uploads/2018/04/download-3-768x568.png 768w, https://emolike.net/wp-content/uploads/2018/04/download-3-365x270.png 365w\" sizes=\"(max-width: 917px) 100vw, 917px\" /></p>\n<div id=\"at_zurlpreview\">\n<h2>MongoDB Atlas Pricing</h2>\n<h3 style=\"display: none;\">MongoDB Atlas Pricing</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-484\" src=\"https://emolike.net/wp-content/uploads/2018/04/mongodb-for-giant-ideas-bbab5c3cf8.png\" width=\"1024\" height=\"512\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/mongodb-for-giant-ideas-bbab5c3cf8.png 1024w, https://emolike.net/wp-content/uploads/2018/04/mongodb-for-giant-ideas-bbab5c3cf8-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/04/mongodb-for-giant-ideas-bbab5c3cf8-768x384.png 768w, https://emolike.net/wp-content/uploads/2018/04/mongodb-for-giant-ideas-bbab5c3cf8-540x270.png 540w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p class=\"imgd\">With MongoDB Atlas, straightforward hourly pricing ensures that you only pay for the resources you need. There are no upfront costs or termination fees. You can cancel at any time.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.mongodb.com/cloud/atlas/pricing\" target=\"_blank\" rel=\"noopener\">www.mongodb.com/cloud/atlas/pricing</a></p>\n</div>\n",
          "slug": "mongodb-atlas-and-free-tier-from-amazon",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/mongodb-for-giant-ideas-bbab5c3cf8.png"
          },
          "link": "https://emolike.net/2018/04/29/mongodb-atlas-and-free-tier-from-amazon/",
          "date": "2018-04-29T15:40:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Database"
              },
              {
                "name": "deployment"
              },
              {
                "name": "NoSQL"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQ2Mg==",
        "node": {
          "id": "cG9zdDo0NjI=",
          "title": "How to Build a Serverless Blog on CodePen",
          "content": "<h2><strong>Serverless</strong>.</h2>\n<p>It&#8217;s kind of a phenomenon. All sorts of web developers can make use of it, including front-end developers! Here&#8217;s one way to think about it: they allow you to take your front-end skills and do things that typically only a back-end can do. Depending on what you all make use of, serverless is possibly more accurately referred to as <em>Cloud Functions</em> or <em>Functions as a Service</em>.</p>\n<p>Here&#8217;s a rather remarkable thing serverless can make possible on the client: saving and reading things from a database. That&#8217;s right! It&#8217;s possible to have a database and deal with it entirely through front-end code. Technically, the database still exists on a server, so the word <em>serverless</em> can feel a little disingenuous, but it&#8217;s not a server that you need to buy and build and maintain and deal with directly.</p>\n<p>Why bother with doing a database this way? For one thing, it means you can host the rest of your site much more easily. Wanna build a React-powered blog on <a href=\"https://pages.github.com/\">GitHub pages</a>? You totally can! Wanna use the super fast static file host <a href=\"https://www.netlify.com/\">Netlify</a> to build a Vue-based community-driven recipe site? Do it.</p>\n<p>I bet where you can see this is going: serverless opens up tons of possibilities for what you can build right here on CodePen! Let&#8217;s dig into this and build ourselves a fully functional blog.</p>\n<figure id=\"post-9129 media-9129\" class=\"align-none\"><img class=\"alignnone size-full wp-image-465\" src=\"https://emolike.net/wp-content/uploads/2018/04/serverless.png\" alt=\"\" width=\"1067\" height=\"562\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/serverless.png 1067w, https://emolike.net/wp-content/uploads/2018/04/serverless-300x158.png 300w, https://emolike.net/wp-content/uploads/2018/04/serverless-768x405.png 768w, https://emolike.net/wp-content/uploads/2018/04/serverless-1024x539.png 1024w, https://emolike.net/wp-content/uploads/2018/04/serverless-513x270.png 513w\" sizes=\"(max-width: 1067px) 100vw, 1067px\" /></figure>\n<p>&nbsp;</p>\n<p>That&#8217;s right, even though CodePen itself doesn&#8217;t have data storage, you could use serverless technology to handle all that.</p>\n<p>COOL RIGHT?! I sure think so. Let&#8217;s do this.</p>\n<p>Just looking for the final product and code?</p>\n<ul>\n<li><a href=\"https://github.com/CodePen/serverless-demos\">GitHub Repo</a>: For the cloud functions, sample data, and code snippets.</li>\n<li><a href=\"https://995efd87afaf43daaf9b410660395732.codepen.website/\">Final Demo</a></li>\n<li><a href=\"https://codepen.io/team/codepen/project/editor/DWQRjB\">CodePen Project</a></li>\n</ul>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p data-height=\"647\" data-theme-id=\"0\" data-slug-hash=\"MGJyJm\" data-default-tab=\"js,result\" data-user=\"eramax\" data-embed-version=\"2\" data-pen-title=\"A Serverless Blog\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/eramax/pen/MGJyJm/\">A Serverless Blog</a> by Ahmed Essam (<a href=\"https://codepen.io/eramax\">@eramax</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<p><script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script></p>\n<h3 id=\"toc-tools\">Tools of the Trade</h3>\n<p>From here on out, we&#8217;re going to assume you know <a href=\"https://abookapart.com/products/working-the-command-line\">the basics of the command line</a>and <a href=\"http://blog.npmjs.org/post/85484771375/how-to-install-npm\">have npm installed</a> on your machine.</p>\n<p>There are lots of possible tools in the world of serverless, but for this demo, in addition to building the front end on CodePen, we&#8217;ll be doing the serverless stuff on <a href=\"https://firebase.google.com/\">Firebase</a>, so you&#8217;ll need a Google account.</p>\n<h3 id=\"toc-setup\"><a id=\"step-1-set-up-a-firebase-project-2\" class=\"article-headline-link\" href=\"https://blog.codepen.io/2018/01/15/build-serverless-blog-codepen/#step-1-set-up-a-firebase-project-2\">#</a>Step 1) Set up a Firebase project</h3>\n<p>Let&#8217;s create a project and then import some placeholder data (literally: some fake blog posts) that we can use initially as we develop our API.</p>\n<ol>\n<li>Login to your Google account and navigate to <a href=\"https://console.firebase.google.com/\">your Firebase console</a></li>\n<li>Select the big <b>Add Project</b><br />\n<figure id=\"post-9055 media-9055\" class=\"align-none\"><img class=\"alignnone size-full wp-image-466\" src=\"https://emolike.net/wp-content/uploads/2018/04/add-project.png\" alt=\"\" width=\"674\" height=\"546\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/add-project.png 674w, https://emolike.net/wp-content/uploads/2018/04/add-project-300x243.png 300w, https://emolike.net/wp-content/uploads/2018/04/add-project-333x270.png 333w\" sizes=\"(max-width: 674px) 100vw, 674px\" /></figure>\n</li>\n<li>Create the project by providing a project name. The project ID is provided for you, but you can edit it, if you&#8217;d like. The <b>name</b> is just for finding your project again in your list of projects, but the ID is used in your actual code.</li>\n</ol>\n<figure id=\"post-9056 media-9056\" class=\"align-none\"><img class=\"alignnone size-full wp-image-467\" src=\"https://emolike.net/wp-content/uploads/2018/04/adding-a-project.png\" alt=\"\" width=\"1098\" height=\"1038\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/adding-a-project.png 1098w, https://emolike.net/wp-content/uploads/2018/04/adding-a-project-300x284.png 300w, https://emolike.net/wp-content/uploads/2018/04/adding-a-project-768x726.png 768w, https://emolike.net/wp-content/uploads/2018/04/adding-a-project-1024x968.png 1024w, https://emolike.net/wp-content/uploads/2018/04/adding-a-project-286x270.png 286w\" sizes=\"(max-width: 1098px) 100vw, 1098px\" /></figure>\n<p>We&#8217;re just working on the web here, but note that your Firebase projects can be used on both iOS and Android apps as well (like, simultaneously).</p>\n<h4><a id=\"lets-consider-the-data-for-a-blog-post-3\" class=\"article-headline-link\" href=\"https://blog.codepen.io/2018/01/15/build-serverless-blog-codepen/#lets-consider-the-data-for-a-blog-post-3\">#</a>Let&#8217;s consider the data for a blog post.</h4>\n<p>We have to put our content hats on for a minute and consider the bits of data that a blog post might have. Let&#8217;s keep it real simple and go with <code>title</code> , <code>content</code> , <code>posted date</code> , and <code>author</code>. I&#8217;m sure you can imagine a more elaborate data structure, but this&#8217;ll do for now. You aren&#8217;t locked to this, it can always be changed later.</p>\n<p>Given these, we can structure our first implementation data like this, with the <code>created</code> field being a <a href=\"https://www.unixtimestamp.com/\" target=\"_blank\" rel=\"noopener\">Unix timestamp</a>:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\">{ \r\n  \"posts\": {\r\n    \"101\": {\r\n      \"title\": \"Introduction to the Thesis of Theseus\",\r\n      \"content\": \"Lorem ipsum dolor sit amet, ...\",\r\n      \"created\": 1483355533000,\r\n      \"author\": \"Duncan\"\r\n    },\r\n    \"102\": {\r\n      ...\r\n    }\r\n  }\r\n}</pre>\n<h4>Let&#8217;s import some fake data.</h4>\n<p>This will be easier for us to play around with some data in Firebase we can get our hands on.</p>\n<ol>\n<li>Download the <code>posts.json</code> file as raw from <a href=\"https://github.com/CodePen/serverless-demos/blob/master/blog-project/step_00_setup_list_posts/data/posts.json\">here</a>, Or create your own JSON file with the fields you can see in that example.</li>\n<li>To initialize the data storage with our posts, select <b>Database</b> from the left side menu under the <b>DEVELOP</b> section.<br />\n<figure id=\"post-9063 media-9063\" class=\"align-none\"><img class=\"alignnone size-full wp-image-468\" src=\"https://emolike.net/wp-content/uploads/2018/04/firebase-menu.png\" alt=\"\" width=\"532\" height=\"828\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/firebase-menu.png 532w, https://emolike.net/wp-content/uploads/2018/04/firebase-menu-193x300.png 193w, https://emolike.net/wp-content/uploads/2018/04/firebase-menu-173x270.png 173w\" sizes=\"(max-width: 532px) 100vw, 532px\" /></figure>\n</li>\n<li>Click the &#8220;Get Started&#8221; button.<br />\n<figure id=\"post-9064 media-9064\" class=\"align-none\"><img class=\"alignnone size-full wp-image-469\" src=\"https://emolike.net/wp-content/uploads/2018/04/get-started-with-database.png\" alt=\"\" width=\"588\" height=\"682\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/get-started-with-database.png 588w, https://emolike.net/wp-content/uploads/2018/04/get-started-with-database-259x300.png 259w, https://emolike.net/wp-content/uploads/2018/04/get-started-with-database-233x270.png 233w\" sizes=\"(max-width: 588px) 100vw, 588px\" /></figure>\n</li>\n<li>Open up the <b>&#8230;</b> menu on the right side of the menus, above the dismiss button, for access to the import/export menus<br />\n<figure id=\"post-9065 media-9065\" class=\"align-none\"><img class=\"alignnone size-full wp-image-470\" src=\"https://emolike.net/wp-content/uploads/2018/04/open-import-export-window.png\" alt=\"\" width=\"914\" height=\"504\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/open-import-export-window.png 914w, https://emolike.net/wp-content/uploads/2018/04/open-import-export-window-300x165.png 300w, https://emolike.net/wp-content/uploads/2018/04/open-import-export-window-768x423.png 768w, https://emolike.net/wp-content/uploads/2018/04/open-import-export-window-490x270.png 490w\" sizes=\"(max-width: 914px) 100vw, 914px\" /></figure>\n</li>\n<li>Select <b>Import JSON</b> menu item and the <b>Browse</b> button, selecting the <code>posts.json</code> file downloaded to import.If you have an existing project you&#8217;re reusing, this action will overwrite any data you currently have stored in your project, making a new project recommended for this tutorial.<br />\n<figure id=\"post-9066 media-9066\" class=\"align-none\"><img class=\"alignnone size-full wp-image-471\" src=\"https://emolike.net/wp-content/uploads/2018/04/import-json.png\" alt=\"\" width=\"1028\" height=\"706\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/import-json.png 1028w, https://emolike.net/wp-content/uploads/2018/04/import-json-300x206.png 300w, https://emolike.net/wp-content/uploads/2018/04/import-json-768x527.png 768w, https://emolike.net/wp-content/uploads/2018/04/import-json-1024x703.png 1024w, https://emolike.net/wp-content/uploads/2018/04/import-json-393x270.png 393w\" sizes=\"(max-width: 1028px) 100vw, 1028px\" /></figure>\n</li>\n<li>Select &#8220;Import&#8221; to save the initial data.</li>\n</ol>\n<p>We now have our Firebase project created, development data in our data storage, and are ready to start developing in earnest!</p>\n<h3 id=\"toc-cloud\"><a id=\"step-2-set-up-cloud-functions-5\" class=\"article-headline-link\" href=\"https://blog.codepen.io/2018/01/15/build-serverless-blog-codepen/#step-2-set-up-cloud-functions-5\">#</a>Step 2) Set Up Cloud Functions</h3>\n<p><strong>First, let&#8217;s make something clear:</strong> You don&#8217;t <em>need</em> to work with Cloud Functions use Firebase realtime databases. We could make this project entirely through client-side JavaScript. We went the route of Cloud Functions because they are powerful and a big part of understanding the possibilities of **serverless*. Now let&#8217;s get into what they are.</p>\n<p>Firebase Cloud Functions are (nominally) small pieces of code that run on discrete data. In our case, we want to start with a function that will provide a list of all posts.</p>\n<p>While the setup is slightly different for Cloud Functions than for many front-end libraries, developers comfortable with JavaScript on the front-end will feel at home with the Firebase Cloud Functions.</p>\n<p>On the command line, install the firebase tools globally:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">npm install -g firebase-tools\r\n</pre>\n<p>Once installed, create and/or navigate to your project directory. This is where the back-end, serverless code resides locally. We&#8217;ll develop, test, and deploy from this project directory.</p>\n<p>In the project directory, run:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">firebase login\r\n</pre>\n<p>The login command will provide a URL and open your default browser, where you can log in to your google account, and grant access to the firebase command line tools.</p>\n<p>Of note, I find that the authentication process happens entirely in the browser particularly awesome. That the process can be done from other devices if you&#8217;re on a headless server, say, is even more spectacular. You can, for example, confirm the tools in your phone&#8217;s browser. Totally awesome.</p>\n<p>In the project directory, run:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">firebase init functions\r\n</pre>\n<p>Then:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">cd serverless-demos/blog-project/step_04_clean_input/firebase/functions\r\nnpm install\r\ncd ..\r\nfirebase use --add\r\nfirebase serve --only functions\r\nfirebase deploy --only functions\r\n\r\n#testing \r\ncurl -X POST -H \"Content-Type:application/json\" -d '{ \"title\" : \"this is the post title\", \"content\" : \"this is the development post content\"}' http://localhost:5000/PROJECT/REGION/posts\r\n</pre>\n<p>When everything is working, do the ol&#8217; <code>firebase deploy --only functions</code> to deploy.</p>\n<p>With these changes, we&#8217;ve done several things with our data:</p>\n<ol>\n<li>we&#8217;ve ignored the <code>author</code> field</li>\n<li>we&#8217;ve just opened up our application to a huge security hole.</li>\n</ol>\n<p>The former is part of the development iteration process, which test cases will help find. The last is a huge concern. We don&#8217;t check or clean the incoming data for hacks, we don&#8217;t check or clean the data we send back out, and we currently allow anyone to post to the URL, as we don&#8217;t have any authentication on the POST endpoint.</p>\n<p>Let&#8217;s fix that last one by adding authentication. The first thing we want to do is lock down the API by limiting access. Navigate to the project&#8217;s Firebase console:</p>\n<figure id=\"post-9108 media-9108\" class=\"align-none\"><img class=\"alignnone size-full wp-image-472\" src=\"https://emolike.net/wp-content/uploads/2018/04/add-firebase.png\" alt=\"\" width=\"623\" height=\"395\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/add-firebase.png 623w, https://emolike.net/wp-content/uploads/2018/04/add-firebase-300x190.png 300w, https://emolike.net/wp-content/uploads/2018/04/add-firebase-426x270.png 426w\" sizes=\"(max-width: 623px) 100vw, 623px\" /></figure>\n<p>Selecting the <b>Add Firebase to your web app</b> will trigger a popup, with code that will handle authentication in the blog app.</p>\n<figure id=\"post-9109 media-9109\" class=\"align-none\"><img class=\"alignnone size-full wp-image-473\" src=\"https://emolike.net/wp-content/uploads/2018/04/firebase-snippet.png\" alt=\"\" width=\"1280\" height=\"867\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/firebase-snippet.png 1280w, https://emolike.net/wp-content/uploads/2018/04/firebase-snippet-300x203.png 300w, https://emolike.net/wp-content/uploads/2018/04/firebase-snippet-768x520.png 768w, https://emolike.net/wp-content/uploads/2018/04/firebase-snippet-1024x694.png 1024w, https://emolike.net/wp-content/uploads/2018/04/firebase-snippet-399x270.png 399w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></figure>\n<p>Copy these values, and paste them at the bottom of the HTML in the Pen.</p>\n<p>Next, we&#8217;ll select the sign-in methods allowed for the blog. In the Firebase console, under the Development tab on the left, select the <b>Authentication</b> menu.</p>\n<p>Select the big <b>Set Up Sign-In Method</b> button for a list of providers.</p>\n<figure id=\"post-9110 media-9110\" class=\"align-none\"><img class=\"alignnone size-full wp-image-474\" src=\"https://emolike.net/wp-content/uploads/2018/04/authenticate.png\" alt=\"\" width=\"1262\" height=\"472\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/authenticate.png 1262w, https://emolike.net/wp-content/uploads/2018/04/authenticate-300x112.png 300w, https://emolike.net/wp-content/uploads/2018/04/authenticate-768x287.png 768w, https://emolike.net/wp-content/uploads/2018/04/authenticate-1024x383.png 1024w, https://emolike.net/wp-content/uploads/2018/04/authenticate-604x226.png 604w\" sizes=\"(max-width: 1262px) 100vw, 1262px\" /></figure>\n<p>In the list, select the providers you&#8217;d like to support. Firebase provides a fantastic list of providers.</p>\n<figure id=\"post-9111 media-9111\" class=\"align-none\"><img class=\"alignnone size-full wp-image-475\" src=\"https://emolike.net/wp-content/uploads/2018/04/list-of-auth-providers.png\" alt=\"\" width=\"709\" height=\"434\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/list-of-auth-providers.png 709w, https://emolike.net/wp-content/uploads/2018/04/list-of-auth-providers-300x184.png 300w, https://emolike.net/wp-content/uploads/2018/04/list-of-auth-providers-441x270.png 441w\" sizes=\"(max-width: 709px) 100vw, 709px\" /></figure>\n<p>Select at least one.</p>\n<p>Next, add &#8220;codepen.io&#8221; to the list of authorized domains on the sign-in method page. If you&#8217;re using Projects, add &#8220;codepen.plumbing&#8221; and &#8220;codepen.website&#8221; as well.</p>\n<figure id=\"post-9112 media-9112\" class=\"align-none\"><img class=\"alignnone size-full wp-image-476\" src=\"https://emolike.net/wp-content/uploads/2018/04/authorized-domains.png\" alt=\"\" width=\"716\" height=\"307\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/authorized-domains.png 716w, https://emolike.net/wp-content/uploads/2018/04/authorized-domains-300x129.png 300w, https://emolike.net/wp-content/uploads/2018/04/authorized-domains-604x259.png 604w\" sizes=\"(max-width: 716px) 100vw, 716px\" /></figure>\n<p>&nbsp;</p>\n<p>In a Pen here on CodePen, the preview displays in an iframe, which hides the URL. If we switch to a <a href=\"https://codepen.io/team/codepen/project/editor/DWQRjB\">CodePen Project</a> we can <a href=\"https://995efd87afaf43daaf9b410660395732.codepen.website/\">deploy it</a> to see the URL changes with the <code>pushState</code> and <code>popState</code> events.</p>\n<p>We&#8217;re here!</p>\n<p>&nbsp;</p>\n<p>Lastly, we want to limit who can write data to our blog. Currently, the demo permissions are open: anyone authenticated with a Google account can read and write posts. We can change these access rules in the Firebase Console.</p>\n<p>Navigate to <a href=\"https://console.firebase.google.com/\">your Firebase console</a></p>\n<p>Select the Database Tab under the Develop menu on the left side, then select the Rules tab in the main window.</p>\n<figure id=\"post-9200 media-9200\" class=\"align-none\"><img class=\"alignnone size-full wp-image-477\" src=\"https://emolike.net/wp-content/uploads/2018/04/firebase-rules.png\" alt=\"Show Database Rules location in Firebase Console\" width=\"764\" height=\"342\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/firebase-rules.png 764w, https://emolike.net/wp-content/uploads/2018/04/firebase-rules-300x134.png 300w, https://emolike.net/wp-content/uploads/2018/04/firebase-rules-604x270.png 604w\" sizes=\"(max-width: 764px) 100vw, 764px\" /></figure>\n<p>We can see the default rules are &#8220;Site visitors are authenticated.&#8221; We can update our rules so that anyone can access the API by changing the <code>.read</code> value:</p>\n<pre data-lang=\"JavaScript\"></pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">{\r\n  \"rules\": {\r\n    \".read\": true,\r\n    \".write\": \"auth != null\"\r\n  }\r\n}</pre>\n<p>If we have different API endpoints, more than just our <code>posts</code> endpoint, we could limit who can read the endpoints, by specifying the endpoints in our rules:</p>\n<pre data-lang=\"JavaScript\"></pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">{\r\n  \"rules\": {\r\n    \"posts\": {\r\n      \".read\": true,\r\n      \".write\": \"auth != null\"\r\n    },\r\n    \"admin\": {\r\n      \".read\": \"auth.uid === 'abcdef'\",\r\n      \".write\": \"auth.uid === 'abcdef'\"\r\n    }\r\n  }\r\n}</pre>\n<p>An easy example for a single user blog is to limit the write access to a single user:</p>\n<pre data-lang=\"JavaScript\"></pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">{\r\n  \"rules\": {\r\n    \"posts\": {\r\n      \".read\": true,\r\n      \".write\": \"auth.uid === 'abcdef'\"\r\n    }\r\n  }\r\n}</pre>\n<p>A user&#8217;s UID (<code>abcdef</code> is an invalid UID) can be found in the Authentication section of the Develop menu, in the Users tab in the main window:</p>\n<figure id=\"post-9201 media-9201\" class=\"align-none\"><img class=\"alignnone size-full wp-image-478\" src=\"https://emolike.net/wp-content/uploads/2018/04/firebase-console-user-id.png\" alt=\"Copy User uid from the Firebase Console Develop Authentication pane\" width=\"1209\" height=\"377\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/firebase-console-user-id.png 1209w, https://emolike.net/wp-content/uploads/2018/04/firebase-console-user-id-300x94.png 300w, https://emolike.net/wp-content/uploads/2018/04/firebase-console-user-id-768x239.png 768w, https://emolike.net/wp-content/uploads/2018/04/firebase-console-user-id-1024x319.png 1024w, https://emolike.net/wp-content/uploads/2018/04/firebase-console-user-id-604x188.png 604w\" sizes=\"(max-width: 1209px) 100vw, 1209px\" /></figure>\n<p>This limits who can create a post to only a single authenticated account, which wraps up this serverless tutorial. We can view all our posts, view a single post, submit a new post, use the browser history, and authenticate users, all without spinning up a single server.</p>\n<h3 id=\"toc-end\">Keep on going!</h3>\n<p>While we now have the basics of a blog hosted on CodePen using Firebase, all serverless, in a production scenario, we would set up development, staging, and production versions, then keep iterating: improving the design and adding features. Here are some ideas:</p>\n<ul>\n<li>Loading icons indicating API calls are happening</li>\n<li>A Markdown editor for styling</li>\n<li>Comments on posts from authenticated guest users</li>\n<li>Voting or favoriting posts</li>\n<li>Editing of posts by implementing the PUT action in our API</li>\n<li>Communal blogs with multiple authors, including filtering by author</li>\n<li>Refactor the author field with unique IDs provided by Firebase authentication, along with their displayed name</li>\n<li>Pagination</li>\n<li>Use something like Angular, Vue, or React</li>\n</ul>\n<p>Again, we do all of this without having to spin up a traditional server. Awesome!</p>\n<div id=\"at_zurlpreview\">\n<h2>How to Build a Serverless Blog on CodePen &#8211; CodePen Blog</h2>\n<h3 style=\"display: none;\">How to Build a Serverless Blog on CodePen &#8211; CodePen Blog</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-465\" src=\"https://emolike.net/wp-content/uploads/2018/04/serverless.png\" alt=\"\" width=\"1067\" height=\"562\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/serverless.png 1067w, https://emolike.net/wp-content/uploads/2018/04/serverless-300x158.png 300w, https://emolike.net/wp-content/uploads/2018/04/serverless-768x405.png 768w, https://emolike.net/wp-content/uploads/2018/04/serverless-1024x539.png 1024w, https://emolike.net/wp-content/uploads/2018/04/serverless-513x270.png 513w\" sizes=\"(max-width: 1067px) 100vw, 1067px\" /></p>\n<p class=\"imgd\">Serverless. It&#8217;s kind of a phenomenon. All sorts of web developers can make use of it, including front-end developers! Here&#8217;s one way to think about it: they allow you to take your front-end skills and do things that typically only a back-end can do. Depending on what you all make use of, serverless is possibly …</p>\n<p class=\"imgs\">Source: <a href=\"https://blog.codepen.io/2018/01/15/build-serverless-blog-codepen/\" target=\"_blank\" rel=\"noopener\">blog.codepen.io/2018/01/15/build-serverless-blog-codepen/</a></p>\n</div>\n",
          "slug": "how-to-build-a-serverless-blog-on-codepen",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/serverless.png"
          },
          "link": "https://emolike.net/2018/04/28/how-to-build-a-serverless-blog-on-codepen/",
          "date": "2018-04-28T21:21:03",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "Uncategorized"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQ1OQ==",
        "node": {
          "id": "cG9zdDo0NTk=",
          "title": "Linux chown command",
          "content": "<h2 id=\"about\">About chown</h2>\n<p class=\"tab intro\">The <b>chown</b> command changes <a href=\"https://www.computerhope.com/jargon/o/owner.htm\">ownership</a> of files and directories in a Linux <a href=\"https://www.computerhope.com/jargon/f/filesyst.htm\">filesystem</a>.</p>\n<h2 id=\"file-ownership-explained\">What is file &#8220;ownership&#8221;?</h2>\n<p class=\"tab\"><a href=\"https://www.computerhope.com/jargon/l/linux.htm\">Linux</a> is designed to support a large number of <a href=\"https://www.computerhope.com/jargon/u/user.htm\">users</a>. Because of this, it needs to keep careful track of who is allowed to access a file, and how they can access it. These access rules are called <a href=\"https://www.computerhope.com/jargon/p/permissi.htm\">permissions</a>.</p>\n<p class=\"tab\">There are three major types of file permissions:</p>\n<ul>\n<li><b>User</b> permissions. These permissions apply to a single user who has special access to the file. This user is called the <b>owner</b>.</li>\n<li><b>Group</b> permissions. These apply to a single group of users who have access to the file. This group is the <b>owning group</b>.</li>\n<li><b>Other</b> permissions. These apply to every other user on the system. These users are known as <b>others</b>, or <b>the world</b>.</li>\n</ul>\n<p class=\"tab\">When a file is created, its owner is the user who created it, and the owning group is the user&#8217;s current group.</p>\n<p class=\"tab\"><b>chown</b> can change these values to something else.</p>\n<h2 id=\"syntax\">Syntax</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">chown [-c|--changes] [-v|--verbose] [-f|--silent|--quiet] [--dereference]\r\n      [-h|--no-dereference] [--preserve-root]\r\n      [--from=currentowner:currentgroup] [--no-preserve-root]\r\n      [-R|--recursive] [--preserve-root] [-H] [-L] [-P]\r\n      {new-owner|--reference=ref-file} file ...</pre>\n<h2>Examples</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">sudo chown -R $USER /usr/lib/node_modules/\r\n</pre>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo chown myuser myfile.txt\r\nsudo chown -R myuser:mygroup otherfiles\r\n</pre>\n<div id=\"at_zurlpreview\">\n<h2>Linux chown command help and examples</h2>\n<h3 style=\"display: none;\">Linux chown command help and examples</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-460\" src=\"https://emolike.net/wp-content/uploads/2018/04/chown.gif\" width=\"300\" height=\"300\" /></p>\n<p class=\"imgd\">Linux chown command help and information with chown examples, syntax, related commands, and steps on how to use chown from the command line.</p>\n<p class=\"imgs\">Source: <a href=\"https://www.computerhope.com/unix/uchown.htm\" target=\"_blank\" rel=\"noopener\">www.computerhope.com/unix/uchown.htm</a></p>\n</div>\n",
          "slug": "linux-chown-command",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/chown.gif"
          },
          "link": "https://emolike.net/2018/04/28/linux-chown-command/",
          "date": "2018-04-28T15:01:13",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQ0NQ==",
        "node": {
          "id": "cG9zdDo0NDU=",
          "title": "How to display network traffic in the terminal?",
          "content": "<p><strong>bmon</strong> &#8211; shows multiple interfaces at once</p>\n<p><img class=\"alignnone size-full wp-image-446\" src=\"https://emolike.net/wp-content/uploads/2018/04/WqOh6.png\" alt=\"enter image description here\" width=\"564\" height=\"391\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/WqOh6.png 564w, https://emolike.net/wp-content/uploads/2018/04/WqOh6-300x208.png 300w, https://emolike.net/wp-content/uploads/2018/04/WqOh6-389x270.png 389w\" sizes=\"(max-width: 564px) 100vw, 564px\" /></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">yum install bmon htop\r\n</pre>\n<p>&nbsp;</p>\n",
          "slug": "how-to-display-network-traffic-in-the-terminal",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/27/how-to-display-network-traffic-in-the-terminal/",
          "date": "2018-04-27T14:12:38",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQzNQ==",
        "node": {
          "id": "cG9zdDo0MzU=",
          "title": "AWS Lambda Go vs. Node.js performance benchmark",
          "content": "<div id=\"at_zurlpreview\">\n<h2>AWS Lambda Go vs. Node.js performance benchmark: updated 🔥</h2>\n<h3 style=\"display: none;\">AWS Lambda Go vs. Node.js performance benchmark: updated 🔥</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-453\" src=\"https://emolike.net/wp-content/uploads/2018/04/1dW_FBqoUjyIWkOhDcvl9nA-2.png\" width=\"1200\" height=\"745\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/1dW_FBqoUjyIWkOhDcvl9nA-2.png 1200w, https://emolike.net/wp-content/uploads/2018/04/1dW_FBqoUjyIWkOhDcvl9nA-2-300x186.png 300w, https://emolike.net/wp-content/uploads/2018/04/1dW_FBqoUjyIWkOhDcvl9nA-2-768x477.png 768w, https://emolike.net/wp-content/uploads/2018/04/1dW_FBqoUjyIWkOhDcvl9nA-2-1024x636.png 1024w, https://emolike.net/wp-content/uploads/2018/04/1dW_FBqoUjyIWkOhDcvl9nA-2-435x270.png 435w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p class=\"imgd\">Just this week AWS announced the release of Go for their Lambda service.</p>\n<p class=\"imgs\">Source: <a href=\"https://hackernoon.com/aws-lambda-go-vs-node-js-performance-benchmark-1c8898341982\" target=\"_blank\" rel=\"noopener\">hackernoon.com/aws-lambda-go-vs-node-js-performance-benchmark-1c8898341982</a></p>\n</div>\n<h3 id=\"3527\" class=\"graf graf--h3 graf-after--figure\">Test Code: S3 and Dynamo interaction</h3>\n<p id=\"b916\" class=\"graf graf--p graf-after--h3\">As mentioned in the comments, the Fibonacci sequence is nice as a starter but doesn’t really represent a real world scenario. So I whipped up an extra example. This Lambda function</p>\n<ol class=\"postList\">\n<li id=\"a34f\" class=\"graf graf--li graf-after--p\">Grabs a ~50kb image from S3.</li>\n<li id=\"c9d5\" class=\"graf graf--li graf-after--li\">Writes its LastModified timestamp to a DynamoDB table.</li>\n</ol>\n<p id=\"91ea\" class=\"graf graf--p graf-after--li\">This mimics a typical scenario for upload sites or general file processing. The test setup is exactly the same as the Fibonacci test, with just an added S3 bucket and Dynamo table. Both versions use the standard AWS SDK for each language respectively. The Dynamo table has its write capacity pumped up to 1000 units to allow for enough throughput.</p>\n<p id=\"d508\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Node.js</strong></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">const AWS = require('aws-sdk')\r\nconst s3 = new AWS.S3()\r\nconst dynamodb = new AWS.DynamoDB()\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  fetchS3()\r\n    .then(data =&gt; {\r\n      console.log(data)\r\n      return putDynamoDB(data.LastModified.toString())\r\n    })\r\n    .then(data =&gt; {\r\n      console.log(data)\r\n\r\n      const result = {\r\n        \"isBase64Encoded\": false,\r\n        \"statusCode\": 200,\r\n        \"headers\": {},\r\n        \"body\": \"done\"\r\n      }\r\n\r\n      callback(null, result);\r\n    })\r\n};\r\n\r\n\r\nfunction fetchS3 (cb) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    const params = {\r\n      Bucket: 'staging.vamp.io',\r\n      Key: 'img/006-mock-ups/VAMP-light-laptop-v091-hero.png'\r\n    }\r\n    s3.getObject(params, (err, data) =&gt;{\r\n      if (err) return reject(err)\r\n      resolve(data)  \r\n    })\r\n  })\r\n}\r\n\r\nfunction putDynamoDB (msg) {\r\n  return new Promise((resolve, reject) =&gt; {\r\n    const params = {\r\n      Item: {\r\n       \"message\": {\r\n         S: msg\r\n        }\r\n      }, \r\n      TableName: \"loadtestlambda\"\r\n     };\r\n\r\n     dynamodb.putItem(params, (err, data) =&gt; {\r\n      if (err) return reject(err)\r\n      resolve(data)  \r\n     })\r\n  })\r\n}</pre>\n<p id=\"ba75\" class=\"graf graf--p graf-after--figure\">The <strong class=\"markup--strong markup--p-strong\">Go</strong> code:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">package main\r\n\r\nimport (\r\n  \"fmt\"\r\n  \"github.com/aws/aws-lambda-go/events\"\r\n  \"github.com/aws/aws-lambda-go/lambda\"\r\n  \"github.com/aws/aws-sdk-go/aws\"\r\n  \"github.com/aws/aws-sdk-go/aws/session\"\r\n  \"github.com/aws/aws-sdk-go/service/dynamodb\"\r\n  \"github.com/aws/aws-sdk-go/service/s3\"\r\n  \"io/ioutil\"\r\n)\r\n\r\nfunc Handler() (events.APIGatewayProxyResponse, error) {\r\n  resultS3, err := fetchS3()\r\n  if err != nil {\r\n    fmt.Println(err)\r\n  }\r\n  fmt.Println(resultS3)\r\n\r\n  _, err = ioutil.ReadAll(resultS3.Body)\r\n  if err != nil {\r\n    fmt.Println(err)\r\n  }\r\n\r\n  resultDD, err := putDynamoDB(resultS3.LastModified.String())\r\n  if err != nil {\r\n    fmt.Println(err)\r\n  }\r\n  fmt.Println(resultDD)\r\n\r\n  return events.APIGatewayProxyResponse{\r\n    Body:       \"done\",\r\n    StatusCode: 200,\r\n  }, nil\r\n}\r\n\r\nfunc main() {\r\n  lambda.Start(Handler)\r\n}\r\n\r\nfunc fetchS3() (*s3.GetObjectOutput, error) {\r\n  svcS3 := s3.New(session.New())\r\n  input := &amp;s3.GetObjectInput{\r\n    Bucket: aws.String(\"staging.vamp.io\"),\r\n    Key:    aws.String(\"img/006-mock-ups/VAMP-light-laptop-v091-hero.png\"),\r\n  }\r\n\r\n  return svcS3.GetObject(input)\r\n}\r\n\r\nfunc putDynamoDB(msg string) (*dynamodb.PutItemOutput, error) {\r\n  svcDynamo := dynamodb.New(session.New())\r\n  input := &amp;dynamodb.PutItemInput{\r\n    Item: map[string]*dynamodb.AttributeValue{\r\n      \"message\": {\r\n        S: aws.String(msg),\r\n      },\r\n    },\r\n    TableName: aws.String(\"loadtestlambda\"),\r\n  }\r\n\r\n  return svcDynamo.PutItem(input)\r\n}</pre>\n<h3 id=\"6fe1\" class=\"graf graf--h3 graf-after--figure\">Test Results: S3 &amp; Dynamo interaction</h3>\n<p><img class=\"alignnone wp-image-457 size-full\" src=\"https://emolike.net/wp-content/uploads/2018/04/download-2.png\" alt=\"\" width=\"881\" height=\"403\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/download-2.png 881w, https://emolike.net/wp-content/uploads/2018/04/download-2-300x137.png 300w, https://emolike.net/wp-content/uploads/2018/04/download-2-768x351.png 768w, https://emolike.net/wp-content/uploads/2018/04/download-2-590x270.png 590w\" sizes=\"(max-width: 881px) 100vw, 881px\" /></p>\n<p id=\"0c6d\" class=\"graf graf--p graf-after--h3\">This is a much clearer result than the former test, it is only in the 99% percentile that both tests are somewhat equal but still far apart. All values below this threshold are all in favour of Go. This is where users that have high volume AWS functions could really save money when switching to Go, as their bill could effectively be cut by up to ~40%.</p>\n<section class=\"section section--body section--first\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"37cc\" class=\"graf graf--p graf-after--pre\"><em class=\"markup--em markup--p-em\">NOTE: Updated after adding a reader to the io.Reader body in the Go code as per a remark in the comment</em><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"2e0ed32cac6\"><em class=\"markup--em markup--p-em\"> </em></span><em class=\"markup--em markup--p-em\">section. This had virtually no impact on the results, probably due to excessive S3 caching. Not expect, but hey, what is?</em></p>\n<h3 id=\"8bcd\" class=\"graf graf--h3 graf-after--p\">Dynamic vs. Compiled</h3>\n<p id=\"9ec2\" class=\"graf graf--p graf-after--h3\">What’s not really apparent in any of the AWS marketing blurb is that you actually provide AWS Lambda with a precompiled Go binary. AWS does not compile the Go source files for you and this has a couple of consequences.</p>\n<p id=\"b432\" class=\"graf graf--p graf-after--p\">Firstly, AWS Lambda is actually not “really” running Go code. Instead it’s running a binary that listens on a specific port and is passed a message in a specific wire format. This is actually pretty good as it opens up the possibility for AWS adding other compiled languages like Rust or C++ later down the road, building on their current Go engine.</p>\n<p id=\"a90b\" class=\"graf graf--p graf-after--p\">Secondly, on a less positive note, having pre-compiled binaries means you cannot use the rather excellent built in code editor. This mini IDE courtesy of AWS’s recent Cloud9 acquisition is top of the class and really makes the Lambda service page feel a bit like JsFiddle or CodePen, but for backend code that could run in production at the touch of a button. I’m a big IntelliJ / WebStorm user, but Cloud9’s stuff is really, really good. 👍</p>\n<figure id=\"01c6\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*zOAp2PdIpsnesG__ogvKvg.png\" data-width=\"1502\" data-height=\"1077\" data-action=\"zoom\" data-action-value=\"1*zOAp2PdIpsnesG__ogvKvg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"53\"></canvas><img class=\"alignnone size-full wp-image-455\" src=\"https://emolike.net/wp-content/uploads/2018/04/1zOAp2PdIpsnesG__ogvKvg-3.png\" width=\"1000\" height=\"717\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/1zOAp2PdIpsnesG__ogvKvg-3.png 1000w, https://emolike.net/wp-content/uploads/2018/04/1zOAp2PdIpsnesG__ogvKvg-3-300x215.png 300w, https://emolike.net/wp-content/uploads/2018/04/1zOAp2PdIpsnesG__ogvKvg-3-768x551.png 768w, https://emolike.net/wp-content/uploads/2018/04/1zOAp2PdIpsnesG__ogvKvg-3-377x270.png 377w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></div>\n</div><figcaption class=\"imageCaption\">AWS Lambda built in code editor</figcaption></figure>\n<h3 id=\"e30b\" class=\"graf graf--h3 graf-after--figure\">Conclusion</h3>\n<p id=\"367f\" class=\"graf graf--p graf-after--h3 graf--trailing\">Go support for AWS Lambda opens up a pretty significant cost saving and performance benefit for those running workloads on Lambda. Exciting stuff will be happening!</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body section--last\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"334a\" class=\"graf graf--p graf--leading\">If you liked this article, please show your appreciation by <strong class=\"markup--strong markup--p-strong\">clapping </strong>👏 below!</p>\n<p id=\"9527\" class=\"graf graf--p graf-after--p\">Tim is a product advocate for <a class=\"markup--anchor markup--p-anchor\" href=\"https://vamp.io/?utm_campaign=govsnode&amp;utm_source=Hackernoon\" target=\"_blank\" rel=\"noopener\" data-href=\"https://vamp.io?utm_campaign=govsnode&amp;utm_source=Hackernoon\">https://vamp.io</a>, the smart &amp; stress free application releasing for modern cloud platforms.</p>\n</div>\n</div>\n</section>\n",
          "slug": "aws-lambda-go-vs-node-js-performance-benchmark",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/27/aws-lambda-go-vs-node-js-performance-benchmark/",
          "date": "2018-04-27T13:58:03",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "javascript"
              },
              {
                "name": "Serverless"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQzMQ==",
        "node": {
          "id": "cG9zdDo0MzE=",
          "title": "Simple OpenVPN Client",
          "content": "<div id=\"at_zurlpreview\">\n<h2>Open Source OpenVPN Client</h2>\n<h3 style=\"display: none;\">Open Source OpenVPN Client</h3>\n<p class=\"imgp\"><img class=\"alignnone size-full wp-image-433\" src=\"https://emolike.net/wp-content/uploads/2018/04/logo.png\" width=\"512\" height=\"512\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/logo.png 512w, https://emolike.net/wp-content/uploads/2018/04/logo-150x150.png 150w, https://emolike.net/wp-content/uploads/2018/04/logo-300x300.png 300w, https://emolike.net/wp-content/uploads/2018/04/logo-270x270.png 270w\" sizes=\"(max-width: 512px) 100vw, 512px\" /></p>\n<p class=\"imgd\">Free open source cross platform OpenVPN client.</p>\n<p class=\"imgs\">Source: <a href=\"https://client.pritunl.com/\" target=\"_blank\" rel=\"noopener\">client.pritunl.com/</a></p>\n<h3>Arch install:</h3>\n</div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo tee -a /etc/pacman.conf &lt;&lt; EOF\r\n[pritunl]\r\nServer = https://repo.pritunl.com/stable/pacman\r\nEOF\r\n\r\nsudo pacman-key --keyserver hkp://keyserver.ubuntu.com -r 7568D9BB55FF9E5287D586017AE645C0CF8E292A\r\nsudo pacman-key --lsign-key 7568D9BB55FF9E5287D586017AE645C0CF8E292A\r\nsudo pacman -Sy\r\nsudo pacman -S pritunl-client-gtk</pre>\n<p>&nbsp;</p>\n",
          "slug": "simple-openvpn-client",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/logo.png"
          },
          "link": "https://emolike.net/2018/04/27/simple-openvpn-client/",
          "date": "2018-04-27T12:29:47",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQyNw==",
        "node": {
          "id": "cG9zdDo0Mjc=",
          "title": "DDOS tool (hammer)",
          "content": "<div class=\"github-embed github-embed-repository github-logo-mark\">\n<p>        <a href=\"https://github.com/cyweb/hammer\" target=\"_blank\">\t\t\t<strong>\t\t\t\tHammer DDos Script &#8211; Python 3\t\t\t</strong>\t\t</a>\t\t<br />        <a href=\"https://github.com/cyweb/hammer\" target=\"_blank\">https://github.com/cyweb/hammer</a><br />        <a href=\"https://github.com/cyweb/hammer/network\" target=\"_blank\">581</a> forks.<br />        <a href=\"https://github.com/cyweb/hammer/stargazers\" target=\"_blank\">540</a> stars.<br />        <a href=\"https://github.com/cyweb/hammer/issues\" target=\"_blank\">21</a> open issues.<br />        Recent commits:        </p>\n<ul class=\"github_commits\">\n<li class=\"github_commit\">                    <a href=\"https://github.com/cyweb/hammer/commit/261b739d2d9c88a1978a9d82463b5de345fd4ec4\" target=\"_blank\">Merge pull request #2 from kostefan/masterfix user agent typo</a>, Can Yalçın                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/cyweb/hammer/commit/193a8a6e6d9dc6909b015150780555d4167a9e4c\" target=\"_blank\">fix user agent typo</a>, Stefan Körner                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/cyweb/hammer/commit/1717b196628b26beb7d34b407ae0d636f9cb27ca\" target=\"_blank\">Update hammer.py</a>, Can Yalçın                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/cyweb/hammer/commit/31185cf4c3b8895c2e2744d366be12610a2e682d\" target=\"_blank\">Update headers</a>, Can Yalçın                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/cyweb/hammer/commit/5912689ba12a57ed7de99a1a348f40345fe8a44f\" target=\"_blank\">Update headers.txt</a>, Can Yalçın                </li>\n</ul>\n</div>\n",
          "slug": "ddos-tool-hammer",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/27/ddos-tool-hammer/",
          "date": "2018-04-27T12:06:58",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQyMw==",
        "node": {
          "id": "cG9zdDo0MjM=",
          "title": "OpenVPN-install",
          "content": "<p>OpenVPN installer for Debian, Ubuntu, Fedora, CentOS and Arch Linux.</p>\n<p>This script will let you setup your own secure VPN server in just a few minutes.</p>\n<p>Here is a preview of the installer :</p>\n<p><img class=\"alignnone size-full wp-image-424\" src=\"https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f497a6a467266684d31382f4459384b4439315730754d6845674c702e706e67.png\" width=\"992\" height=\"433\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f497a6a467266684d31382f4459384b4439315730754d6845674c702e706e67.png 992w, https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f497a6a467266684d31382f4459384b4439315730754d6845674c702e706e67-300x131.png 300w, https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f497a6a467266684d31382f4459384b4439315730754d6845674c702e706e67-768x335.png 768w, https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f497a6a467266684d31382f4459384b4439315730754d6845674c702e706e67-604x264.png 604w\" sizes=\"(max-width: 992px) 100vw, 992px\" /><img class=\"alignnone size-full wp-image-425\" src=\"https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f654f44546e38536139792f657543716830777a58776c7a33554e732e706e67.png\" width=\"992\" height=\"582\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f654f44546e38536139792f657543716830777a58776c7a33554e732e706e67.png 992w, https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f654f44546e38536139792f657543716830777a58776c7a33554e732e706e67-300x176.png 300w, https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f654f44546e38536139792f657543716830777a58776c7a33554e732e706e67-768x451.png 768w, https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f654f44546e38536139792f657543716830777a58776c7a33554e732e706e67-460x270.png 460w\" sizes=\"(max-width: 992px) 100vw, 992px\" /></p>\n<h2> https://github.com/Angristan/OpenVPN-install</h2>\n<h3>First, get the script and make it executable :</h3>\n<div class=\"highlight highlight-source-shell\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">wget https://raw.githubusercontent.com/Angristan/OpenVPN-install/master/openvpn-install.sh\r\nchmod +x openvpn-install.sh</pre>\n<h3>Then run it :</h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">./openvpn-install.sh</pre>\n<p>&nbsp;</p>\n</div>\n",
          "slug": "openvpn-install",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/68747470733a2f2f6c75742e696d2f497a6a467266684d31382f4459384b4439315730754d6845674c702e706e67.png"
          },
          "link": "https://emolike.net/2018/04/26/openvpn-install/",
          "date": "2018-04-26T19:36:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "network"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQyMA==",
        "node": {
          "id": "cG9zdDo0MjA=",
          "title": "Free Kubernetes cluster with Google Cloud",
          "content": "<p><iframe title=\"Hands-on : Free Kubernetes cluster with Google Cloud\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/pmA1NYqqpOs?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">•\tAccess google cloud console to enable your 300$ free trial https://cloud.google.com/free/ , and install gloud SDK https://cloud.google.com/sdk/ \r\n\r\n•\tAlso enable Compute Engine and Container Engine API from https://console.cloud.google.com/apis/library\r\n\r\n• Install Kubectl CLI\thttps://kubernetes.io/docs/tasks/tools/install-kubectl/\r\n\r\n•\tgcloud components install kubectl\r\n\r\n•\tgcloud auth login \r\n\r\n•\tgcloud container clusters create gke --zone=us-east1-b --scopes “cloud-platform,storage-ro,service-control,service-management,https://www.googleapis.com/auth/ndev.clouddns.readwrite”\r\n\r\n•\tgcloud config set container/use_client_certificate True\r\n\r\n•\texport CLOUDSDK_CONTAINER_USE_CLIENT_CERTIFICATE=True\r\n\r\n•\tgcloud container clusters get-credentials gke --zone us-east1-b --project inner-magpie-170513 Note : that project ID should be tour appropriate project ID\r\n\r\n•\tkubectl config view\r\n\r\n•\tkubectl proxy -p 8081 &amp;</pre>\n<p>&nbsp;</p>\n",
          "slug": "free-kubernetes-cluster-with-google-cloud",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/24/free-kubernetes-cluster-with-google-cloud/",
          "date": "2018-04-24T19:12:07",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQxNg==",
        "node": {
          "id": "cG9zdDo0MTY=",
          "title": "Gitlab Working with non-default SSH key pair paths ",
          "content": "<h2 id=\"working-with-non-default-ssh-key-pair-paths\">Working with non-default SSH key pair paths</h2>\n<p>If you used a non-default file path for your GitLab SSH key pair, you must configure your SSH client to find your GitLab private SSH key for connections to your GitLab server (perhaps <code>gitlab.com</code>).</p>\n<p>For your current terminal session you can do so using the following commands (replacing <code>other_id_rsa</code> with your private SSH key):</p>\n<p><strong>Git Bash on Windows / GNU/Linux / macOS:</strong></p>\n<div class=\"highlight\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">eval $(ssh-agent -s)\r\nssh-add ~/.ssh/other_id_rsa</pre>\n<p>&nbsp;</p>\n</div>\n",
          "slug": "gitlab-working-with-non-default-ssh-key-pair-paths",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/23/gitlab-working-with-non-default-ssh-key-pair-paths/",
          "date": "2018-04-23T17:17:45",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Git"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQxMw==",
        "node": {
          "id": "cG9zdDo0MTM=",
          "title": "GitHub vs. Bitbucket vs. GitLab vs. Coding",
          "content": "<p><img class=\"alignnone size-full wp-image-414\" src=\"https://emolike.net/wp-content/uploads/2018/04/1ZRiHG2TDKOyJj7NoyEOQbQ.png\" width=\"1200\" height=\"535\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/1ZRiHG2TDKOyJj7NoyEOQbQ.png 1200w, https://emolike.net/wp-content/uploads/2018/04/1ZRiHG2TDKOyJj7NoyEOQbQ-300x134.png 300w, https://emolike.net/wp-content/uploads/2018/04/1ZRiHG2TDKOyJj7NoyEOQbQ-768x342.png 768w, https://emolike.net/wp-content/uploads/2018/04/1ZRiHG2TDKOyJj7NoyEOQbQ-1024x457.png 1024w, https://emolike.net/wp-content/uploads/2018/04/1ZRiHG2TDKOyJj7NoyEOQbQ-604x270.png 604w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p><a href=\"https://medium.com/flow-ci/github-vs-bitbucket-vs-gitlab-vs-coding-7cf2b43888a1\">https://medium.com/flow-ci/github-vs-bitbucket-vs-gitlab-vs-coding-7cf2b43888a1</a></p>\n",
          "slug": "github-vs-bitbucket-vs-gitlab-vs-coding",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/1ZRiHG2TDKOyJj7NoyEOQbQ.png"
          },
          "link": "https://emolike.net/2018/04/23/github-vs-bitbucket-vs-gitlab-vs-coding/",
          "date": "2018-04-23T16:54:42",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQwNw==",
        "node": {
          "id": "cG9zdDo0MDc=",
          "title": "7 Great Apps to View Disk Usage in Linux",
          "content": "<h2>1. Native Command Line Tools</h2>\n<p>The first place to check is the command line. Several tools are available here, and are already bundled with Linux.</p>\n<p>The first command you should try is <strong>df</strong>. This will report the amount of disk space in use. It can be used alone, to display a full total for all mounted file systems, or with a filename.</p>\n<p><img class=\"alignnone size-full wp-image-408\" src=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal2.png\" width=\"606\" height=\"89\" alt=\"7 Great Apps to View Disk Usage in Linux muo linux diskusagetools terminal2\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal2.png 606w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal2-300x44.png 300w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal2-604x89.png 604w\" sizes=\"(max-width: 606px) 100vw, 606px\" /></p>\n<p>When used with a filename, df will output the remaining space on the specific partition where the file is stored.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">df etc\r\n</pre>\n<p>The above command would show how much free space is available in the /etc/ directory. Meanwhile,</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">df -h\r\n</pre>\n<p>employs the -h switch, which means “human readable.” This basically displays the file and folder sizes in a format you can read. Use this to interpret how much disk space is being used by a particular file or directory.</p>\n<p>Meanwhile, <strong>du</strong> is also available. Differing slightly to df, du displays an estimate of disk space used by files. For example,</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">du -shc *.txt\r\n</pre>\n<p>displays the size of each TXT file in the current directory in human-readable format.</p>\n<div id=\"div-gpt-ad-1510565681811\" class=\"adslot mobile-only aligncenter\" data-dfp=\"/1065821/in-content_2\" data-sizes=\"[[336, 280], [300, 250]]\"></div>\n<p>You can also use the <strong>ls</strong> (list) command to output a list of a directory’s contents, and the file size.</p>\n<p><img class=\"alignnone size-full wp-image-409\" src=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal.png\" width=\"670\" height=\"307\" alt=\"7 Great Apps to View Disk Usage in Linux muo linux diskusagetools terminal\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal.png 670w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal-300x137.png 300w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal-589x270.png 589w\" sizes=\"(max-width: 670px) 100vw, 670px\" /></p>\n<p>This is done in any directory with</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">ls -l -h\r\n</pre>\n<h2>2. <a href=\"https://dev.yorhel.nl/ncdu\" target=\"_blank\" rel=\"noopener\">Ncurses Disk Usage</a> (ncdu)</h2>\n<p>If you prefer to get the disk usage information you’re looking for from a dedicated utility, then try ncdu. Potentially the simplest method in this list, ncdu scans your system as soon as the tool is launched. By default, the contents and usage of the Home directory are displayed, but this can be changed by specifying a different directory as a parameter.</p>\n<p>You can install ncdu on Debian-based systems via the command line:</p>\n<pre class=\"  language-bash\"><code class=\"  language-bash\">&lt;span class=\"token function\"&gt;sudo&lt;/span&gt; apt &lt;span class=\"token function\"&gt;install&lt;/span&gt; ncdu</code></pre>\n<p><img class=\"alignnone size-full wp-image-410\" src=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-ncdu.png\" width=\"670\" height=\"440\" alt=\"7 Great Apps to View Disk Usage in Linux muo linux diskusagetools ncdu\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-ncdu.png 670w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-ncdu-300x197.png 300w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-ncdu-411x270.png 411w\" sizes=\"(max-width: 670px) 100vw, 670px\" /></p>\n<p>Using ncdu is simple. In the command line, enter:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">ncdu</pre>\n<h2>3. QDirStat</h2>\n<p class=\"linked-out\">The first visual disk usage tool to look at is QDirStat, available across Linux desktop environments, <a href=\"https://www.makeuseof.com/tag/linux-vs-bsd-which-should-you-use/\">as well as BSD</a>.</p>\n<p>Visual tools give a great insight into just what is going on with your PC’s hard disk drive that a list of numbers simply cannot relate. One of the most popular options for this on <a href=\"https://www.makeuseof.com/tag/visualize-your-hard-drive-with-windirstat/\">Windows is WinDirStat</a>, which is a clone of the KDirStat utility, upon which QDirStat is based.</p>\n<p>With QDirStat, your HDD usage is represented by rectangles and squares, each of a different size. The bigger the square, the more HDD space is being used by that particular directory. Right-clicking on the rectangle in question will give you the option to visit the folder location.</p>\n<p><img class=\"alignnone size-full wp-image-411\" src=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-qdirstat.png\" width=\"670\" height=\"439\" alt=\"7 Great Apps to View Disk Usage in Linux muo linux diskusagetools qdirstat\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-qdirstat.png 670w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-qdirstat-300x197.png 300w, https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-qdirstat-412x270.png 412w\" sizes=\"(max-width: 670px) 100vw, 670px\" /></p>\n<p>This is a great way to find “secret” data that has been downloaded to your computer. Things like missing download locations and your internet cache can all be traced with these tools. And if you don’t like the “blocky” view, usage data can also be viewed as a histogram.</p>\n<p>You can <a href=\"https://github.com/shundhammer/qdirstat\" target=\"_blank\" rel=\"noopener\">get QDirStat via GitHub</a>, but packages are available for openSUSE, SLE, and Ubuntu.</p>\n<p>For the latter, first add the PPA (remember to remove it later):</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo add-apt-repository ppa:nathan-renniewaldock/qdirstat\r\n\r\nsudo apt-get update</pre>\n<p>Once this is done, install with</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo apt install qdirstat\r\n</pre>\n<p>You can then launch the software from the desktop, or from the terminal with the qdirstat command. Follow the prompt to select the directory to scan, then wait until the data is collated and presented.</p>\n<p>A KDE version, <a href=\"https://bitbucket.org/jeromerobert/k4dirstat/wiki/Home\" target=\"_blank\" rel=\"noopener\">K4DirStat</a>, is also available.</p>\n<blockquote><p>source : <a href=\"https://www.makeuseof.com/tag/how-to-analyze-your-disk-usage-pattern-in-linux/\">https://www.makeuseof.com/tag/how-to-analyze-your-disk-usage-pattern-in-linux/</a></p></blockquote>\n",
          "slug": "7-great-apps-to-view-disk-usage-in-linux",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/muo-linux-diskusagetools-terminal2.png"
          },
          "link": "https://emolike.net/2018/04/21/7-great-apps-to-view-disk-usage-in-linux/",
          "date": "2018-04-21T00:24:39",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQwMw==",
        "node": {
          "id": "cG9zdDo0MDM=",
          "title": "Announcing General Availability of MySQL 8.0",
          "content": "<p><a href=\"https://blogs.oracle.com/mysql/announcing-general-availability-of-mysql-80\">https://blogs.oracle.com/mysql/announcing-general-availability-of-mysql-80</a></p>\n<h2><strong>Performance</strong></h2>\n<p>MySQL 8.0 is up to 2x faster than MySQL 5.7.  MySQL 8.0 comes with better performance for Read/Write workloads, IO bound workloads, and high contention “hot spot” workloads.</p>\n<p><img class=\"alignnone size-full wp-image-405\" src=\"https://emolike.net/wp-content/uploads/2018/04/performance_80.png\" width=\"1280\" height=\"652\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/performance_80.png 1280w, https://emolike.net/wp-content/uploads/2018/04/performance_80-300x153.png 300w, https://emolike.net/wp-content/uploads/2018/04/performance_80-768x391.png 768w, https://emolike.net/wp-content/uploads/2018/04/performance_80-1024x522.png 1024w, https://emolike.net/wp-content/uploads/2018/04/performance_80-530x270.png 530w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n",
          "slug": "announcing-general-availability-of-mysql-8-0",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/performance_80.png"
          },
          "link": "https://emolike.net/2018/04/20/announcing-general-availability-of-mysql-8-0/",
          "date": "2018-04-20T13:34:33",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Database"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjQwMA==",
        "node": {
          "id": "cG9zdDo0MDA=",
          "title": "How Modern SQL Databases Come up with Algorithms that You Would Have Never Dreamed Of",
          "content": "<p><iframe title=\"How Modern SQL Databases Come up with Algorithms that You Would Have Never Dreamed Of by Lukas Eder\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/wTPGW1PNy_Y?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "how-modern-sql-databases-come-up-with-algorithms-that-you-would-have-never-dreamed-of",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/20/how-modern-sql-databases-come-up-with-algorithms-that-you-would-have-never-dreamed-of/",
          "date": "2018-04-20T13:23:58",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Database"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjM5Ng==",
        "node": {
          "id": "cG9zdDozOTY=",
          "title": "Single Page Application Within 2 Minutes(ASP.NET MVC)",
          "content": "<p><iframe title=\"Single Page Application Within 2 Minutes(ASP.NET MVC)[Real World]\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/btl-Q_1bFLw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "single-page-application-within-2-minutesasp-net-mvc",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/17/single-page-application-within-2-minutesasp-net-mvc/",
          "date": "2018-04-17T10:40:46",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjM5Mw==",
        "node": {
          "id": "cG9zdDozOTM=",
          "title": "Cmder: Portable console emulator for Windows",
          "content": "<p><img class=\"alignnone size-full wp-image-394\" src=\"https://emolike.net/wp-content/uploads/2018/04/main.jpg\" width=\"1280\" height=\"685\" alt=\"Mmmm Monokai.\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/main.jpg 1280w, https://emolike.net/wp-content/uploads/2018/04/main-300x161.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/main-768x411.jpg 768w, https://emolike.net/wp-content/uploads/2018/04/main-1024x548.jpg 1024w, https://emolike.net/wp-content/uploads/2018/04/main-505x270.jpg 505w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p class=\"bit-1 copy\">Cmder is a software package created out of pure frustration over the absence of nice console emulators on Windows. It is based on amazing software, and spiced up with the Monokai color scheme and a custom prompt layout, looking sexy from the start.</p>\n<section class=\"container information\">\n<div class=\"bit-3\"> <a href=\"http://cmder.net/\">http://cmder.net/</a></div>\n</section>\n",
          "slug": "cmder-portable-console-emulator-for-windows",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/main.jpg"
          },
          "link": "https://emolike.net/2018/04/16/cmder-portable-console-emulator-for-windows/",
          "date": "2018-04-16T16:50:59",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjM5MQ==",
        "node": {
          "id": "cG9zdDozOTE=",
          "title": "VirtualBox Resize Disk",
          "content": "<h2>Create New Disk</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">VBoxManage createhd --filename Newhardisk4.vdi --size  32000</pre>\n<h2>Clone the Data from the old one to the new one</h2>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">VBoxManage clonemedium testvv.vmdk Newhardisk4.vdi --existing</pre>\n<p>&nbsp;</p>\n",
          "slug": "virtualbox-resize-disk",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/16/virtualbox-resize-disk/",
          "date": "2018-04-16T01:25:12",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjM4OQ==",
        "node": {
          "id": "cG9zdDozODk=",
          "title": "Cast a Chrome tab on your TV",
          "content": "<p>To show Chrome on your TV, you’ll need:</p>\n<ul>\n<li>A Chromecast, Chromecast Ultra, or TV with Chromecast built-in.</li>\n<li>A computer and Wi-Fi network with the <a href=\"https://support.google.com/chromecast/answer/3209990\">minimum system requirements</a>.</li>\n<li>On your computer, you need the Chrome browser. If you haven&#8217;t yet, <a href=\"http://www.google.com/chrome\" target=\"_blank\" rel=\"noopener\">download</a> or <a href=\"https://support.google.com/chrome/answer/95414\">update</a> Chrome.</li>\n<li>To connect your computer and Chromecast device to the same Wi-Fi network. Learn how to <a href=\"https://support.google.com/chromecast/answer/7331010\">check the Wi-Fi network of your Chromecast device</a>.</li>\n</ul>\n<h2><a name=\"chromecasting\"></a>Cast a tab from Chrome</h2>\n<ol>\n<li>On your computer, open Chrome.</li>\n<li>At the top right, click More <img title=\"More\" src=\"https://storage.googleapis.com/support-kms-prod/ArAlBcUAe8h1l5m69uxnwElxkqwW0QdtIc3F\" alt=\"More\" width=\"18\" height=\"18\" /> <img title=\"and then\" src=\"https://lh3.googleusercontent.com/nHFGZ_9xjCh-mP83zMzXQVJF5VYf2n6kwoBIxB2zv3V4VPT4gNTtBye8lYznogLqLPY=w13-h18\" alt=\"and then\" width=\"13\" height=\"18\" /> <strong>Cast</strong>.</li>\n<li>Choose your Chromecast device where you want to watch the content.\n<ul>\n<li>If you&#8217;re already using the Chromecast, your content will replace what&#8217;s on your TV.</li>\n</ul>\n</li>\n<li>When you&#8217;re done, to the right of the address bar, click Cast <img title=\"Cast\" src=\"https://storage.cloud.google.com/support-kms-prod/PGKQhcLEezLXLTbD1yZp3Mj0oir4q0a3U8go\" alt=\"Cast\" width=\"18\" height=\"18\" /> <img title=\"and then\" src=\"https://lh3.googleusercontent.com/nHFGZ_9xjCh-mP83zMzXQVJF5VYf2n6kwoBIxB2zv3V4VPT4gNTtBye8lYznogLqLPY=w13-h18\" alt=\"and then\" width=\"13\" height=\"18\" /> <strong>Stop</strong>.</li>\n</ol>\n<h3>What you&#8217;ll see in Chrome</h3>\n<ul>\n<li>When your tab is being shown on a TV, you&#8217;ll see Display <img title=\"Display\" src=\"https://lh3.googleusercontent.com/YfVK5Ju9wphKKa7URFRpxuuhjVJ2nUM8CvBxYSS-6F9r7jVQb0-zq9a7NPOcsPtC70V7=w18\" alt=\"Display\" width=\"18\" />.</li>\n<li>To the right of the address bar, next to your extensions, you&#8217;ll see Active Cast <img title=\"Active cast extension\" src=\"https://lh3.googleusercontent.com/fllxouUEWQ0t7CknRVM7ieywsL2Al0wp29Mhlk2P9XW7jCcrjLymLaqOrc1OHPifMg=w18\" alt=\"Active cast extension\" width=\"18\" height=\"18\" />.</li>\n</ul>\n<p>To use a shortcut in Chrome, <a href=\"https://support.google.com/chromecast/answer/7249696\">add the Cast button</a>.</p>\n<h3>Cast videos and media</h3>\n<ol>\n<li>On the video or media you&#8217;re watching, click Cast <img title=\"Cast\" src=\"https://storage.cloud.google.com/support-kms-prod/PGKQhcLEezLXLTbD1yZp3Mj0oir4q0a3U8go\" alt=\"Cast\" width=\"18\" height=\"18\" />.</li>\n<li>You&#8217;ll see the video or images on your computer and TV, but you’ll only hear sound on your TV. Sounds for other tabs and apps will still play on your computer.</li>\n</ol>\n<h2>Cast your computer screen</h2>\n<p>You can display your entire computer screen using Chrome on Mac, Windows, and Chromebooks.</p>\n<p><strong>Note: </strong>To hear audio on your TV, use a Windows computer.</p>\n<ol>\n<li>On your computer, open Chrome.</li>\n<li>At the top right, click More <img title=\"More\" src=\"https://storage.googleapis.com/support-kms-prod/ArAlBcUAe8h1l5m69uxnwElxkqwW0QdtIc3F\" alt=\"More\" width=\"18\" height=\"18\" /> <img title=\"and then\" src=\"https://lh3.googleusercontent.com/nHFGZ_9xjCh-mP83zMzXQVJF5VYf2n6kwoBIxB2zv3V4VPT4gNTtBye8lYznogLqLPY=w13-h18\" alt=\"and then\" width=\"13\" height=\"18\" /> <strong>Cast</strong>.</li>\n<li>At the top, next to &#8220;Cast to,&#8221; click the Down arrow <img title=\"Down Arrow\" src=\"https://storage.googleapis.com/support-kms-prod/76B4941B08D1516AC7336D5A3C2E7914920D\" alt=\"Down Arrow\" width=\"18\" height=\"18\" />.</li>\n<li>Click <strong>Cast desktop</strong>.</li>\n<li>Choose your Chromecast device where you want to watch the content.</li>\n</ol>\n<blockquote><p>https://support.google.com/chromecast/answer/3228332?co=GENIE.Platform%3DDesktop&amp;hl=en</p></blockquote>\n",
          "slug": "cast-a-chrome-tab-on-your-tv",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/15/cast-a-chrome-tab-on-your-tv/",
          "date": "2018-04-15T00:45:39",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjM2MA==",
        "node": {
          "id": "cG9zdDozNjA=",
          "title": "How To Install WordPress On VestaCP At AWS And Digitalocean",
          "content": "<p>WordPress is definitely one of best content management system with millions of plugins and themes. If you want to use WordPress in VPS, you must go with trusted and secure control panels for proper management of storage and memory. Vesta control panel is one of them. It is user-friendly and best free alternative of cpanel. This is a VPS guide on How to install WordPress on Vestacp at Amazon Web Service and DigitalOcean.</p>\n<div id=\"toc_container\" class=\"no_bullets contracted\">\n<h3><span id=\"Features_of_Vesta_control_Panel\"><strong>Features of Vesta control Panel.</strong></span></h3>\n<p>Vestacp is a open source hosting control panel for ubuntu 16.04 server. This website control panel offers built in facilities like website, database, email, let’s encrypt encryption, backup, firewall, phpmyadmin and much more. Vesta control panel uses speed of Nignx at front end and robustness and stability of Apache at back end. As a result, sites managed by vesta are smooth and awesome performing.</p>\n<p>Instead of lots of attractive features, vesta does not offer file manager in free version. However you can use FTP clients like filezilla as filemanager. Alternatively, you can purchase file manager of vesta at $50 for life time or $3/month.</p>\n<h3><span id=\"Requirements_to_setup_WordPress_and_VestaCP_on_Ubuntu_VP\"><strong>Requirements to setup WordPress and VestaCP on Ubuntu VP</strong></span></h3>\n<p>In this tutorial we are using following tools:-</p>\n<ul>\n<li>Desktop or Laptop</li>\n<li>Chrome/Mozilla Browser</li>\n<li>Ubuntu 16.4 VPS (We are focusing only on AWS and DigitalOcean, but you can use same method on <a href=\"https://www.instatrick.com/google-cloud-platform/\">Google Cloud Platform</a> and <a href=\"https://www.instatrick.com/microsoft-azure-giveaway/\">Microsoft Azure</a> also)</li>\n<li><a href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\">Putty SSH client</a></li>\n<li><a href=\"https://filezilla-project.org/download.php\">Filezilla FTP client</a></li>\n<li>25 minutes and a cup of coffee</li>\n</ul>\n<p>&nbsp;</p>\n<h3><span id=\"1_Create_Ubuntu_VPS_and_access_using_putty\"><strong>#1 Create Ubuntu VPS and access using putty</strong></span></h3>\n<p>First of all you need to create Ubuntu VPS on your cloud platform. If you are using Amazon cloud Platform, for this step you can refer our separate tutorial on <a href=\"https://www.instatrick.com/create-linux-server-amazon-web-service/\">how to create VPS on AWS</a>. Digitalocean users can follow below steps to create and access VPS.</p>\n<ul>\n<li>Login to digitalocean and create a new droplet from dashboard. If you do not own DigitalOcean account, create new one and <a href=\"https://www.instatrick.com/digitalocean-free-hosting-coupon/\">get free $15 digitalocean credit</a>.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-361\" src=\"https://emolike.net/wp-content/uploads/2018/04/Create-droplet-300x146.jpg\" width=\"300\" height=\"146\" alt=\"Create droplet\" /></p>\n<ul>\n<li>Now, select OS image Ubuntu 16.04.3 x64 and scroll down to choose a suitable plan. Here I am selecting $5/month plan.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-362\" src=\"https://emolike.net/wp-content/uploads/2018/04/Ubuntu-16.04.3-x64-VPS-300x191.jpg\" width=\"300\" height=\"191\" alt=\"Ubuntu 16.04.3 x64 VPS\" /></p>\n<ul>\n<li>After that, choose datacenter region according to location of your targeted traffic. In next step, you have to add SSH key to enable SSH access via putty.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-363\" src=\"https://emolike.net/wp-content/uploads/2018/04/Add-SSH-key.jpg\" width=\"277\" height=\"118\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>So first of all download and install Putty SSH client. Navigate to “<em>C:\\Program Files\\PuTTY\\puttygen.exe”</em> and run puttygen.exe to create new SSH key.</p>\n<ul>\n<li>Now move mouse over blank area in key generator window to generate some randomness in key. Once generated, save both public and private keys.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-364\" src=\"https://emolike.net/wp-content/uploads/2018/04/Putty-SSH-key-generator-300x296.jpg\" width=\"300\" height=\"296\" alt=\"Putty SSH key generator\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Putty-SSH-key-generator-300x296.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/Putty-SSH-key-generator-300x296-274x270.jpg 274w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></p>\n<ul>\n<li>After that, copy SSH key from Putty Key generator. Click on new SSH key button at digitalocean and paste content there. Type name of SSH and click on blue Add SSH Key button.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-365\" src=\"https://emolike.net/wp-content/uploads/2018/04/New-SSH-key-300x246.jpg\" width=\"300\" height=\"246\" alt=\"New SSH key\" /></p>\n<p>Now give desired name to your droplet but it is optional. Then click on green Create button and wait for few seconds. Your Ubuntu VPS is ready to use.</p>\n<h3><span id=\"2_Connect_to_Ubuntu_VPS\"><strong>#2 Connect to Ubuntu VPS</strong></span></h3>\n<p>Now its time to access your VPS using Putty. You can also use terminal or any other SSH client according to your preference.</p>\n<ul>\n<li>Open Putty.exe from “<em>C:\\Program Files\\PuTTY\\putty.exe”</em> and enter IP-address of your VPS.<img class=\"alignnone size-full wp-image-366\" src=\"https://emolike.net/wp-content/uploads/2018/04/Enter-IP-address-300x294.jpg\" width=\"300\" height=\"294\" alt=\"Enter IP address\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Enter-IP-address-300x294.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/Enter-IP-address-300x294-276x270.jpg 276w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></li>\n<li>From left list box, navigate to <strong>Connection &gt;&gt; SSH &gt;&gt; Auth</strong>. Then browse and select your private key for SSH authentication.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-367\" src=\"https://emolike.net/wp-content/uploads/2018/04/Private-SSH-Key-300x288.jpg\" width=\"300\" height=\"288\" alt=\"Private SSH Key\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Private-SSH-Key-300x288.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/Private-SSH-Key-300x288-281x270.jpg 281w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></p>\n<ul>\n<li>Now go to Connection &gt;&gt; Data and enter auto-login username “root”. Amazon Web Services users enter username “ubuntu”.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-368\" src=\"https://emolike.net/wp-content/uploads/2018/04/Auto-login-username-300x205.jpg\" width=\"300\" height=\"205\" alt=\"Auto login username\" /></p>\n<p>Then hit open button to connect. You may encounter a warning, simply ignore it and proceed forward. From here VPS is created and now we will install vesta control panel.</p>\n<h3><span id=\"3_Install_VestaCP_on_Ubuntu\"><strong>#3 Install VestaCP on Ubuntu</strong></span></h3>\n<p>To install vestacp, connect to VPS using SSH. <strong>If you are using AWS instance you must gain root permissions every time you connect using SSH</strong>. However this step is optional for DigitalOcean droplets. To gain administrative power in AWS VPS run below command</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo -s\r\n</pre>\n<ul>\n<li>Now download and install vestacp by running these two commands.</li>\n</ul>\n<div class=\"su-note\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">curl -O http://vestacp.com/pub/vst-install.sh\r\nbash vst-install.sh -f</pre>\n<p>&nbsp;</p>\n<ul>\n<li>After that, press Y and enter email address. Leave FQDN hostname option empty, just press enter.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-369\" src=\"https://emolike.net/wp-content/uploads/2018/04/Vestacp-installation-300x232.jpg\" width=\"300\" height=\"232\" alt=\"Vestacp installation\" /></p>\n<ul>\n<li>Then wait for 5-10 minutes for control panel installation. At end, you will get vesta username and password, save it in safe place for future reference.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-370\" src=\"https://emolike.net/wp-content/uploads/2018/04/Vesta-Password-300x260.jpg\" width=\"300\" height=\"260\" alt=\"Vesta Password\" /></p>\n<p>&nbsp;</p>\n<h3><span id=\"4_Login_to_vesta_control_panel\"><strong>#4 Login to vesta control panel</strong></span></h3>\n<p>Now you have to open vesta control panel using login credentials provided at the end of installation. So open your web browser and type IP address of your droplet/instance/VPS with “:8083”. For example XX.XX.XX.XX:8083, it tells browser that you want to access through 8083 port.</p>\n<p><img class=\"alignnone size-full wp-image-371\" src=\"https://emolike.net/wp-content/uploads/2018/04/open-port-8083-300x96.jpg\" width=\"300\" height=\"96\" alt=\"open port 8083\" /></p>\n<p>You may encounter warning message, simply ignore it. Click on advanced option and proceed to VPS as shown in screenshot. Then login to vesta using valid credentials.</p>\n<p><img class=\"alignnone size-full wp-image-372\" src=\"https://emolike.net/wp-content/uploads/2018/04/Warning-300x251.jpg\" width=\"300\" height=\"251\" alt=\"Warning\" /></p>\n<p>&nbsp;</p>\n<h3><span id=\"5_Create_new_site_and_database\"><strong>#5 Create new site and database</strong></span></h3>\n<p>After logging in, you will see seven options. Here we are going to use only two of them, WEB and DB.</p>\n<p><img class=\"alignnone size-full wp-image-373\" src=\"https://emolike.net/wp-content/uploads/2018/04/Vesta-Options-300x36.jpg\" width=\"300\" height=\"36\" alt=\"Vesta Options\" /></p>\n<ul>\n<li>So first of all click on web option and add new web domain using yellow plus button.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-374\" src=\"https://emolike.net/wp-content/uploads/2018/04/add-web-263x300.jpg\" width=\"263\" height=\"300\" alt=\"add web\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/add-web-263x300.jpg 263w, https://emolike.net/wp-content/uploads/2018/04/add-web-263x300-237x270.jpg 237w\" sizes=\"(max-width: 263px) 100vw, 263px\" /></p>\n<ul>\n<li>Enter your domain name and ensure IP address of server. Then click add button.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-375\" src=\"https://emolike.net/wp-content/uploads/2018/04/web-details-269x300.jpg\" width=\"269\" height=\"300\" alt=\"web details\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/web-details-269x300.jpg 269w, https://emolike.net/wp-content/uploads/2018/04/web-details-269x300-242x270.jpg 242w\" sizes=\"(max-width: 269px) 100vw, 269px\" /></p>\n<ul>\n<li>Similarly go to DB option and create new database using yellow + button. Enter database name, username and password. Then save all details and hit add button.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-376\" src=\"https://emolike.net/wp-content/uploads/2018/04/Create-database-300x195.jpg\" width=\"300\" height=\"195\" alt=\"Create database\" /></p>\n<p><strong>Remember that if you entered “demodb” as database name then vesta will automatically convert it to admin_demodb. In simple words, prefix admin_ will be automatically added to database name and database user. Hence your final database name and username will be something like admin_username. For more clearance you can refer screenshot.</strong></p>\n<p>Now you had successfully added new domain and database. If you had done, we can proceed now. Point to be noted that you can delete default domain and database. It is recommended to update default password of vesta control panel from admin section.</p>\n<h3><span id=\"6_Download_and_extract_WordPress\"><strong>#6 Download and extract WordPress</strong></span></h3>\n<p>Now we are going to download and extract WordPress package. After that we will update required details to start your own WordPress blog.</p>\n<ul>\n<li>Firstly, login to VPS using SSH as described in step 2. Then navigate to folder of your domain name using below command.</li>\n</ul>\n<p><strong>As mentioned above, Amazon Web services users always run [sudo –s] after connecting via SSH. It enables you to gain power of admin.</strong></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cd /home/admin/web/example.com/public_html\r\n\r\n</pre>\n<p><strong>Don’t forget to replace example.com with your own domain name.</strong></p>\n<ul>\n<li>After that download WordPress files using wget command.</li>\n</ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">wget https://wordpress.org/latest.zip\r\n</pre>\n<ul>\n<li>Then extract latest.zip folder using unzip command.</li>\n</ul>\n<div class=\"su-note\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">unzip latest.zip\r\n</pre>\n<p>&nbsp;</p>\n<ul>\n<li>Now all files are extracted at location “<em>/home/admin/web/example.com/public_html/wordpress”</em>, but we need to move files at <em> “/home/admin/web/example.com/public_html/”</em> directory. So run command below.</li>\n</ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cd /home/admin/web/example.com/public_html/wordpress\r\nmv * .[^.]* ..</pre>\n<ul>\n<li>Your WordPress files has been moved to correct location. You can check it by running following commands.</li>\n</ul>\n<div class=\"su-note\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cd /home/admin/web/example.com/public_html/\r\nls</pre>\n<p>&nbsp;</p>\n<p>You will get output something like this.</p>\n<p><img class=\"alignnone size-full wp-image-377\" src=\"https://emolike.net/wp-content/uploads/2018/04/folder-correction-300x54.jpg\" width=\"300\" height=\"54\" alt=\"WordPress folder correction\" /></p>\n<ul>\n<li>At last, delete index.html file because it shows error page. Also delete empty WordPress folder.</li>\n</ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">cd /home/admin/web/example.com/public_html/\r\nrm index.html\r\nrmdir wordpress</pre>\n<h3><span id=\"7_Redirect_domain_to_your_VPS\"><strong>#7 Redirect domain to your VPS</strong></span></h3>\n<p>Now its time to tell your domain where your VPS is. So login to domain name control panel or cloudflare control panel and add two A records. For more details see image below.</p>\n<p><img class=\"alignnone size-full wp-image-378\" src=\"https://emolike.net/wp-content/uploads/2018/04/A-records-300x81.jpg\" width=\"300\" height=\"81\" alt=\"A records\" /><br />\nYour domain will start redirecting to VPS within few hours.</p>\n<h3><span id=\"8_Update_wp-config_file\"><strong>#8 Update wp-config file</strong></span></h3>\n<p>Though there are many methods to update wp-config file, but I found it easiest of all. This method is suitable for newcomers. Once your domain name starts working, open it in your web browser. You will see a message something like this, simply hit let’s go button.</p>\n<p><img class=\"alignnone size-full wp-image-379\" src=\"https://emolike.net/wp-content/uploads/2018/04/Wordpress-VPS-configuratuon-error-300x189.jpg\" width=\"300\" height=\"189\" alt=\"WordPress VPS configuratuon error\" /></p>\n<p>In next step, paste required details in their respective fields. Enter Database Name, Username, Password and leave other fields as it is.</p>\n<p><img class=\"alignnone size-full wp-image-380\" src=\"https://emolike.net/wp-content/uploads/2018/04/Edit-wp-config-easiest-method-300x287.jpg\" width=\"300\" height=\"287\" alt=\"Edit wp-config easiest method\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Edit-wp-config-easiest-method-300x287.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/Edit-wp-config-easiest-method-300x287-282x270.jpg 282w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></p>\n<p>Then submit details and start famous five-minute WordPress installation process. Enter WordPress username, password email and install it.</p>\n<h4><span id=\"Alternative_method_to_update_wp-configphp\"><strong>Alternative method to update wp-config.php</strong></span></h4>\n<p>Connect to VPS using FTP client Filezilla. Use login details of veta control panel to access FTP.</p>\n<p><img class=\"alignnone size-full wp-image-381\" src=\"https://emolike.net/wp-content/uploads/2018/04/Filezilla-login-300x57.jpg\" width=\"300\" height=\"57\" alt=\"Filezilla login\" /><br />\nNow navigate to “web/example.com/public_html/” and locate wp-config-sample.php. Rename this file to wp-config.php and edit using notepad or notepad++.</p>\n<p><img class=\"alignnone size-full wp-image-382\" src=\"https://emolike.net/wp-content/uploads/2018/04/Wp-config-details-300x127.jpg\" width=\"300\" height=\"127\" alt=\"Wp-config details\" /><br />\nEnter required details like database name, username and password. Then hit save button and close editor. File will be uploaded automatically.</p>\n<h3><span id=\"9_Enable_HTTPS_in_VestaCP_Lets_Encrypt\"><strong>#9 Enable HTTPS in VestaCP (Lets Encrypt)</strong></span></h3>\n<p>As you know encryption is most significant SEO factor these days. Hence you must know importance and <a href=\"https://www.instatrick.com/get-trusted-free-ssl-certificate/\">procedure to enable SSL certificate</a>. Enabling HTTPS in Vestacp is built-in and straightforward process.</p>\n<ul>\n<li>Just login to vesta control panel and open WEB section. Find and hit edit option in front of your domain name.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-383\" src=\"https://emolike.net/wp-content/uploads/2018/04/edit-web-300x181.jpg\" width=\"300\" height=\"181\" alt=\"edit web\" /></p>\n<ul>\n<li>Scroll down and enable SSL support option followed by Lets encrypt support option. Then save again.</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-384\" src=\"https://emolike.net/wp-content/uploads/2018/04/Enable-SSL-300x131.jpg\" width=\"300\" height=\"131\" alt=\"Enable SSL\" /></p>\n<p>After that, visit your blog using <em>https://</em>, Surprise! SSL certificate is active now.<br />\nYour WordPress blog is now completely installed and ready to use. Now here are some common problems and troubleshooting which you may face in AWS and DigitalOcean VPS.</p>\n<p>&nbsp;</p>\n<h3><span id=\"10_Plugin_installation_problem\"><strong>#10 Plugin installation problem</strong></span></h3>\n<p>While installing plugin first time, you may encounter connection information wizard. <strong>AWS users</strong> can simply bypass it by entering VPS IP address, vestaCP username and vetacp password.</p>\n<p><img class=\"alignnone size-full wp-image-385\" src=\"https://emolike.net/wp-content/uploads/2018/04/AWS-plugin-problem-300x226.jpg\" width=\"300\" height=\"226\" alt=\"AWS plugin installation problem\" /></p>\n<p>But condition becomes complicated for <strong>digitalocean Ubuntu users</strong>. If you are using digitalocean, connect using putty SSH client by following step 2. Then run command.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo -s\r\ncd /home/admin/web/example.com/public_html\r\nchown admin -R *</pre>\n<div class=\"g1-content-narrow g1-typography-xl g1-indent\">\n<p>Do not forget to replace example.com with your own domain name. Then close SSH connection and refresh plugin installation page. Try reinstalling plugins and it must work smoothly.</p>\n<h3><span id=\"11_Theme_and_plugin_upload_problem\"><strong>#11 Theme and plugin upload problem</strong></span></h3>\n<p>In Ubuntu VPS, upload limit is limited by default. That’s why when you try to upload theme or plugin, you encounter error “<em>The uploaded file exceeds the upload_max_filesize directive in php.ini</em>”. To overcome this problem, you must increase upload file size limit in your VPS.</p>\n<p>For this, first of all connect using FTP (use vesta admin and password) and navigate to directory of PHP. It may be located on basis of your PHP version. In general it must be as follows.</p>\n<p>/etc/php/7.0/apache2/php.ini</p>\n<p>or</p>\n<p>/etc/php5/apache2/php.ini</p>\n<p>Then right click on php.ini and select edit. Now edit following details and re-upload file by clicking save button.</p>\n<ul>\n<li>Navigate to resource limits section and set max_execution_time = 180</li>\n<li>Then go to data handling section and set post_max_size = 64M</li>\n<li>Navigate to file uploads section and set upload_max_filesize = 64M</li>\n<li>After that, go to file uploads section and set max_file_upload = 64</li>\n</ul>\n<p>That’s it. After re-uploading file, try to upload theme/plugin.</p>\n<h3><span id=\"12_SSL_secure_lock_not_showing\"><strong>#12 SSL secure lock not showing</strong></span></h3>\n<p>After enabling SSL from vesta control panel, everything must work fine. But sometimes secure lock does not appear and design issues occur. You can eliminate this issue in seconds, just login to wordpress and install “Really Simple SSL plugin”. Then go to Settings&gt;&gt;General and set your site URL as https://www.example.com, save and check site again.</p>\n<p>&nbsp;</p>\n<p>So this was tutorial to install WordPress on vestaCP at AWS and DigitalOcean. Please comment your problems and do not forget to hit share button.</p>\n<div class=\"snax snax-post-container\"></div>\n</div>\n<div class=\"snax snax-post-container\">\n<blockquote>\n<div class=\"snax-voting-container\"> https://www.instatrick.com/install-wordpress-vestacp-aws-digitalocean/</div>\n</blockquote>\n</div>\n</div>\n</div>\n</div>\n</div>\n",
          "slug": "how-to-install-wordpress-on-vestacp-at-aws-and-digitalocean",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/Create-droplet-300x146.jpg"
          },
          "link": "https://emolike.net/2018/04/12/how-to-install-wordpress-on-vestacp-at-aws-and-digitalocean/",
          "date": "2018-04-12T15:14:41",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjM1OA==",
        "node": {
          "id": "cG9zdDozNTg=",
          "title": "How to backup and restore/rollback/repair Linux",
          "content": "<p><iframe title=\"How to backup and restore/rollback/repair Linux\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/ShW7NcmhqAE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>https://itsfoss.com/backup-restore-linux-timeshift/</p>\n",
          "slug": "how-to-backup-and-restore-rollback-repair-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/11/how-to-backup-and-restore-rollback-repair-linux/",
          "date": "2018-04-11T19:19:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjMzMQ==",
        "node": {
          "id": "cG9zdDozMzE=",
          "title": "Tabler TML Dashboard",
          "content": "<p>Tabler is free and open-source HTML Dashboard UI Kit built on Bootstrap 4</p>\n<p><a href=\"https://tabler.github.io/tabler/docs/index.html\">https://tabler.github.io/tabler/docs/index.html</a></p>\n<div class=\"github-embed github-embed-repository github-logo-mark\">\n<p>        <a href=\"https://github.com/tabler/tabler\" target=\"_blank\">\t\t\t<strong>\t\t\t\tTabler is free and open-source HTML Dashboard UI Kit built on Bootstrap\t\t\t</strong>\t\t</a>\t\t<br />        <a href=\"https://github.com/tabler/tabler\" target=\"_blank\">https://github.com/tabler/tabler</a><br />        <a href=\"https://github.com/tabler/tabler/network\" target=\"_blank\">2,232</a> forks.<br />        <a href=\"https://github.com/tabler/tabler/stargazers\" target=\"_blank\">20,917</a> stars.<br />        <a href=\"https://github.com/tabler/tabler/issues\" target=\"_blank\">78</a> open issues.<br />        Recent commits:        </p>\n<ul class=\"github_commits\">\n<li class=\"github_commit\">                    <a href=\"https://github.com/tabler/tabler/commit/bbfeefe61f7f02e69fadb1d7e0054a715911d140\" target=\"_blank\">Merge pull request #577 from ollym/fix-selectizeFixed selectize wrap</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/tabler/tabler/commit/38901eb721511294306ff8d450e55dc208e2ed0b\" target=\"_blank\">Fixed selectize wrap</a>, Oliver Morgan                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/tabler/tabler/commit/dbdb81acd9519eb3bc23acdeed319bd15e39e9f6\" target=\"_blank\">input-group-prepend/append fix</a>, codecalm                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/tabler/tabler/commit/4a3a2fa7febbf78ab157b69f9bf28136f7948c3d\" target=\"_blank\">#576 form-selectgroup-box -&gt; form-selectgroup-label</a>, codecalm                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/tabler/tabler/commit/4dfcb1c03c8582e2011781811ee8738e847c9d1e\" target=\"_blank\">#576 margin fix</a>, codecalm                </li>\n</ul>\n</div>\n",
          "slug": "tabler-tml-dashboard",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/10/tabler-tml-dashboard/",
          "date": "2018-04-10T18:31:27",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "DESIGN"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjMyOQ==",
        "node": {
          "id": "cG9zdDozMjk=",
          "title": "HTTP(S) benchmark tools, testing/debugging, &#038; restAPI (RESTful)",
          "content": "<div class=\"github-embed github-embed-repository github-logo-mark\">\n<p>        <a href=\"https://github.com/denji/awesome-http-benchmark\" target=\"_blank\">\t\t\t<strong>\t\t\t\tHTTP(S) benchmark tools, testing/debugging, &amp; restAPI (RESTful)\t\t\t</strong>\t\t</a>\t\t<br />        <a href=\"https://github.com/denji/awesome-http-benchmark\" target=\"_blank\">https://github.com/denji/awesome-http-benchmark</a><br />        <a href=\"https://github.com/denji/awesome-http-benchmark/network\" target=\"_blank\">92</a> forks.<br />        <a href=\"https://github.com/denji/awesome-http-benchmark/stargazers\" target=\"_blank\">1,206</a> stars.<br />        <a href=\"https://github.com/denji/awesome-http-benchmark/issues\" target=\"_blank\">6</a> open issues.<br />        Recent commits:        </p>\n<ul class=\"github_commits\">\n<li class=\"github_commit\">                    <a href=\"https://github.com/denji/awesome-http-benchmark/commit/426c53f4ba01bc0ac82ed3c12432b16d38010edb\" target=\"_blank\">cassowaryCassowary is a modern HTTP/S, intuitive &amp; cross-platform load testing tool built in Go for developers, testers and sysadmins. Cassowary draws inspiration from awesome projects like k6, ab &amp; httpstat.* 2 Load Testing modes: one standard and one spread mode where URL Paths can be specified from a file (ideal if you want to hit several underlying microservices)* CI Friendly: Well-suited to be part of a CI pipeline step* Flexible metrics: Prometheus metrics (pushing metrics to Prometheus PushGateway), JSON file* Configurable: Able to pass in arbitrary HTTP headers* Cross Platform: One single pre-built binary for Linux, Mac OSX and Windows</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/denji/awesome-http-benchmark/commit/2daadebabc1ef78a7f0e424798faa0c37d09340e\" target=\"_blank\">Deleted finshirResolved #10</a>, GitHub                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/denji/awesome-http-benchmark/commit/de12ecc41c888044651289181c44b894c720965a\" target=\"_blank\">Add autocannon (#9)</a>, Denis Denisov                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/denji/awesome-http-benchmark/commit/00677638844dbf9692fc3fbe53572636f302e2c3\" target=\"_blank\">Add httping: (#8)https://github.com/flok99/httpingPing with HTTP requests, see http://www.vanheusden.com/httping/</a>, Denis Denisov                </li>\n<li class=\"github_commit\">                    <a href=\"https://github.com/denji/awesome-http-benchmark/commit/c20f42899dd49400e34c7171d8f0be93764660e4\" target=\"_blank\">Add description of h1load</a>, Denis Denisov                </li>\n</ul>\n</div>\n",
          "slug": "https-benchmark-tools-testing-debugging-restapi-restful",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/10/https-benchmark-tools-testing-debugging-restapi-restful/",
          "date": "2018-04-10T15:14:01",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "programming"
              },
              {
                "name": "testing"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjMxOA==",
        "node": {
          "id": "cG9zdDozMTg=",
          "title": "NGINX vs. Apache",
          "content": "<p>The Apache HTTP server and NGINX are the two <a href=\"http://w3techs.com/technologies/cross/web_server/ranking\" target=\"_blank\" rel=\"noopener\">most popular open source web servers</a> powering the Internet today. When Igor Sysoev began working on <a href=\"http://nginx.org/en\" target=\"_blank\" rel=\"noopener\">NGINX</a> over 10 years ago, no one expected that the project he created for the purpose of accelerating a large Apache‑based service would grow to have the influence it has now.</p>\n<p><a href=\"http://httpd.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache HTTP server</a> is a solid platform for almost any web technology developed over the last 20 years, but time is showing that the architectural decisions made when the code was first laid down are becoming limiting factors in its suitability for modern web demands.</p>\n<p>In this article, I’ll share my perspective on these changes and limitations, and explain how a modern web developer can respond. I write this as a very early user of Apache (and of NCSA’s <code>httpd</code> before that), as someone who wrote CGI scripts in <code>bash</code> and Perl before PHP was anywhere near mainstream, and as a one‑time software engineer at Zeus, one of the very first event‑driven web servers to challenge the Apache model of doing things. My belief is absolutely not that Apache is unfit for purpose, but that in the face of modern web applications, it is now dated and needs support in order to function effectively.</p>\n<h2>The Key to Apache’s Early Success</h2>\n<p>Apache was the backbone of the first generation of the World Wide Web, becoming the industry standard for web serving almost as soon as it <a href=\"http://httpd.apache.org/ABOUT_APACHE.html\" target=\"_blank\" rel=\"noopener\">debuted in 1995</a>. It was created at a time when the World Wide Web was still a novelty. Traffic levels were low, web pages were simple, bandwidth was constrained and expensive, and CPU was relatively cheap. There was a huge thirst in the early community to innovate with new technologies, and Apache was the platform of choice.</p>\n<h3>Architectural Simplicity</h3>\n<p>The simplicity of Apache’s architectural model was key to its early success. At that time, many network services were triggered from a master service called <code>inetd</code>; when a new network (TCP) connection was received, <code>inetd</code> would <code>fork</code>( ) and <code>exec</code>( ) a Unix process of the correct type to handle the connection. The process read the request on the connection, calculated the response and wrote it back down the connection, and then exited.</p>\n<p>Apache took this model and ran with it. The biggest downside was the cost of forking a new <code>httpd</code>worker process for each new connection, and Apache developers quickly adopted a <em><a href=\"http://httpd.apache.org/docs/2.4/mod/prefork.html\" target=\"_blank\" rel=\"noopener\">prefork</a></em> model in which a pool of worker processes was created in advance, each ready and willing to accept one new HTTP connection.</p>\n<p>When a prefork Apache web server received an HTTP connection, one of the <code>httpd</code> worker processes grabbed and handled it. Each process handled one connection at a time, and if all of the processes were busy, Apache created more worker processes to be ready for a further spike in traffic.</p>\n<h3>Easy to Develop, Easy to Innovate</h3>\n<p>The isolation and protection afforded by the one‑connection‑per‑process model made it very easy to insert additional code (in the form of modules) at any point in Apache’s web‑serving logic. Developers could add code secure in the knowledge that if it blocked, ran slowly, leaked resources, or even crashed, only the worker process running the code would be affected. Processing of all other connections would continue undisturbed.</p>\n<p>Apache quickly became the dominant web server on the early World Wide Web. Its adoption at websites grew steadily, peaking at over 70% market share at the end of 2005.</p>\n<figure id=\"attachment_15562\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-319\" src=\"https://emolike.net/wp-content/uploads/2018/04/apache-market-share-1995-2005.png\" width=\"937\" height=\"589\" alt=\"Netcraft November 2005 Web Server Survey\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/apache-market-share-1995-2005.png 937w, https://emolike.net/wp-content/uploads/2018/04/apache-market-share-1995-2005-300x189.png 300w, https://emolike.net/wp-content/uploads/2018/04/apache-market-share-1995-2005-768x483.png 768w, https://emolike.net/wp-content/uploads/2018/04/apache-market-share-1995-2005-200x126.png 200w\" sizes=\"(max-width: 937px) 100vw, 937px\" /><figcaption class=\"wp-caption-text\">Source: Netcraft <a href=\"http://news.netcraft.com/archives/2005/11/07/november_2005_web_server_survey.html\" target=\"_blank\" rel=\"noopener\">November 2005 Web Server Survey</a></figcaption></figure>\n<h2>Challenged by the Growth of the World Wide Web</h2>\n<p>Over the past 20 years, there has been explosive growth in the volume of traffic and the number of users on the World Wide Web.</p>\n<p><img class=\"alignnone size-full wp-image-320\" src=\"https://emolike.net/wp-content/uploads/2018/04/webgrowth-traffic-users-e1444416038844.png\" width=\"1280\" height=\"362\" alt=\"webgrowth-traffic-users\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/webgrowth-traffic-users-e1444416038844.png 1280w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-traffic-users-e1444416038844-300x85.png 300w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-traffic-users-e1444416038844-768x217.png 768w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-traffic-users-e1444416038844-1024x290.png 1024w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-traffic-users-e1444416038844-200x57.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>At the same time, the weight of web pages (the size and number of components the web browser has to fetch to render a page) has grown steadily, and users have become less and less patient about waiting for web pages to load.</p>\n<p><img class=\"alignnone size-full wp-image-321\" src=\"https://emolike.net/wp-content/uploads/2018/04/webgrowth-weight-wait1.png\" width=\"1280\" height=\"382\" alt=\"webgrowth-weight-wait\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/webgrowth-weight-wait1.png 1280w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-weight-wait1-300x90.png 300w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-weight-wait1-768x229.png 768w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-weight-wait1-1024x306.png 1024w, https://emolike.net/wp-content/uploads/2018/04/webgrowth-weight-wait1-200x60.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>(For more details about these changes, check out the list of resources for <a href=\"https://www.nginx.com/blog/nginx-vs-apache-our-view/#resources-stats\">Internet statistics</a> at the end of this post.)</p>\n<p>All of these changes presented a real challenge to Apache’s process‑per‑connection model, which did not scale well in the face of high traffic volume and heavy pages (more embedded resources requiring more HTTP requests).</p>\n<h3>Web Clients Greedily Use Resources</h3>\n<p>To decrease page‑rendering time, web browsers routinely open <a href=\"http://sgdev-blog.blogspot.sg/2014/01/maximum-concurrent-connection-to-same.html\" target=\"_blank\" rel=\"noopener\">six or more TCP connections</a> to a web server for each user session so that resources can download in parallel. Browsers hold these connections open (a practice called <em><a href=\"https://www.nginx.com/blog/http-keepalives-and-web-performance/\">HTTP keepalive</a></em>) for a period of time to reduce delay for future requests the user might make during the session. Each open connection exclusively reserves an <code>httpd</code>process, meaning that at busy times, Apache needs to create a large number of processes.</p>\n<p><img class=\"alignnone size-full wp-image-322\" src=\"https://emolike.net/wp-content/uploads/2018/04/multiprocess.png\" width=\"1050\" height=\"398\" alt=\"multiprocess\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/multiprocess.png 1050w, https://emolike.net/wp-content/uploads/2018/04/multiprocess-300x114.png 300w, https://emolike.net/wp-content/uploads/2018/04/multiprocess-768x291.png 768w, https://emolike.net/wp-content/uploads/2018/04/multiprocess-1024x388.png 1024w, https://emolike.net/wp-content/uploads/2018/04/multiprocess-200x76.png 200w\" sizes=\"(max-width: 1050px) 100vw, 1050px\" /></p>\n<p>Running lots of processes consumes lots of memory. <a href=\"http://serverfault.com/questions/254436/apache-memory-usage-optimization\" target=\"_blank\" rel=\"noopener\">Excessive consumption</a> results in thrashing and large numbers of context switches, which can slow the web server to a crawl.</p>\n<h3>Admins Fought Against Clients to Recover Resources</h3>\n<p>To mitigate the performance problems of the prefork Apache server, admins were encouraged to adopt two measures. They limited the maximum number of <code>httpd</code> processes (typically to 256) to avoid exhausting server resources; as a result, when the number of concurrent TCP connections exceeds the number of processes, new connections are stalled indefinitely. Admins also disabled keepalive connections or reduced their duration, in order to free up <code>httpd</code> processes more quickly.</p>\n<p>Both of these measures have a detrimental effect on the user experience, causing web pages to load more slowly and less reliably.</p>\n<h3>The Apache Team Implemented Alternative MPMs</h3>\n<p>To improve portability and scalability on some platforms, Apache’s core developers created two additional processing models (called <em>multi‑processing modules</em>, or <em>MPMs</em>).</p>\n<p>The <em><a href=\"http://httpd.apache.org/docs/2.4/mod/worker.html\" target=\"_blank\" rel=\"noopener\">worker</a></em> MPM replaced separate <code>httpd</code> processes with a small number of child processes that ran multiple worker threads and assigned one thread per connection. This was helpful on many commercial versions of Unix (such as IBM’s AIX) where threads are much lighter weight than processes, but is less effective on Linux where threads and processes are just different incarnations of the <a href=\"http://stackoverflow.com/questions/807506/threads-vs-processes-in-linux\" target=\"_blank\" rel=\"noopener\">same operating system entity</a>.</p>\n<p>Apache later added the <em><a href=\"http://httpd.apache.org/docs/2.4/mod/event.html\" target=\"_blank\" rel=\"noopener\">event</a></em> MPM (not to be confused with NGINX’s event‑driven architecture), which extends the worker MPM by adding a separate listening thread that manages idle keepalive connections once the HTTP request has completed.</p>\n<h3>Apache’s Heavyweight, Monolithic Model Has Its Limits</h3>\n<p>These measures go some way to improving performance, but the monolithic one‑server‑does‑all model that was key to the early success of Apache has continued to struggle as traffic levels increase and web pages become richer and richer. Performance in lab benchmarks is often not replicated in live production deployments at busy websites, and tuning Apache to cope with real‑world traffic is a complex art. Somewhat unfairly, Apache has gained a reputation as a bloated, overly complex, and performance‑limited web server that can be exploited by slow denial‑of‑service (DoS) attacks.</p>\n<h2>Introducing NGINX – Designed for High Concurrency</h2>\n<p>NGINX was written specifically to address the performance limitations of Apache web servers. It was created in 2002 by Igor Sysoev, a system administrator for a popular Russian portal site (Rambler.ru), as a scaling solution to help the site manage greater and greater volumes of traffic. It was open sourced in October 2004, on the 47th anniversary of the <a href=\"http://mailman.nginx.org/pipermail/nginx/2008-May/004816.html\" target=\"_blank\" rel=\"noopener\">launch of Sputnik</a>.</p>\n<p>NGINX can be deployed as a standalone web server, and as a frontend proxy for Apache and other web servers. This drop‑in solution acts as a network offload device in front of Apache servers, translating slow Internet‑side connections into fast and reliable server‑side connections, and completely <a href=\"https://www.nginx.com/blog/http-keepalives-and-web-performance/\">offloading keepalive connections</a> from Apache servers. The net effect is to restore the performance of Apache to near the levels that administrators see in a local benchmark.</p>\n<p>NGINX also acts as a <a href=\"https://www.nginx.com/blog/facing-hordes-black-friday-cyber-monday/\">shock absorber</a>, protecting vulnerable Apache servers from spikes in traffic and from slow‑connection attacks such as <a href=\"https://en.wikipedia.org/wiki/Slowloris_(software)\" target=\"_blank\" rel=\"noopener\">Slowloris</a> and <a href=\"https://github.com/shekyan/slowhttptest\" target=\"_blank\" rel=\"noopener\">slowhttprequest</a>.</p>\n<h3>The Secret’s in the Architecture</h3>\n<p>The performance and scalability of NGINX arise from its <a href=\"https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/\">event‑driven architecture</a>. It differs significantly from Apache’s process‑or‑thread‑per‑connection approach – in NGINX, each worker process can handle thousands of HTTP connections simultaneously. This results in a highly regarded implementation that is lightweight, scalable, and high performance.</p>\n<p><img class=\"alignnone size-full wp-image-323\" src=\"https://emolike.net/wp-content/uploads/2018/04/associated-words-nginx-survey-2015.png\" width=\"845\" height=\"609\" alt=\"associated-words-nginx-survey-2015\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/associated-words-nginx-survey-2015.png 845w, https://emolike.net/wp-content/uploads/2018/04/associated-words-nginx-survey-2015-300x216.png 300w, https://emolike.net/wp-content/uploads/2018/04/associated-words-nginx-survey-2015-768x554.png 768w, https://emolike.net/wp-content/uploads/2018/04/associated-words-nginx-survey-2015-200x144.png 200w\" sizes=\"(max-width: 845px) 100vw, 845px\" /></p>\n<p>A downside of NGINX’s sophisticated architecture is that developing modules for it isn’t as simple and easy as with Apache. NGINX module developers need to be very careful to create efficient and accurate code, without any resource leakage, and to interact appropriately with the complex event‑driven kernel to avoid blocking operations. As a result, the success of the NGINX project has rested heavily on the core development team employed by NGINX, Inc., the company founded by Igor Sysoev in 2011 to ensure the future of the open source NGINX software.</p>\n<p>The <a href=\"https://youtu.be/KinJfCQ-WzY\" target=\"_blank\" rel=\"noopener\">announcement at nginx.conf 2015</a> of future support for dynamic modules marks the next stage of a third‑party developer ecosystem, with fewer barriers to entry than the earlier compile‑in architecture.</p>\n<p><em>Editor – NGINX Plus Release 11 (R11) and open source NGINX 1.11.5 introduce <a href=\"https://www.nginx.com/blog/nginx-plus-r11-released/#r11-dynamic-modules\">binary compatibility for dynamic modules</a>, including support for <a href=\"https://www.nginx.com/blog/compiling-dynamic-modules-nginx-plus/\">compiling custom and third‑party modules</a>.</em></p>\n<h2>NGINX and Apache – A Good Starting Point</h2>\n<p>For many application types, NGINX and Apache complement each other well, so it’s often more apt to talk about “NGINX and Apache” instead of “NGINX vs. Apache”. A very common starting pattern is to deploy the open source NGINX software as a proxy (or <a href=\"http://nginx.com/products\">NGINX Plus</a> as the application delivery platform) in front of an Apache‑based web application. NGINX performs the HTTP‑related heavy lifting – serving static files, caching content, and offloading slow HTTP connections – so that the Apache server can run the application code in a safe and secure environment.</p>\n<p>NGINX provides all of the core features of a web server, without sacrificing the lightweight and high‑performance qualities that have made it successful, and can also serve as a proxy that forwards HTTP requests to upstream web servers (such as an Apache backend) and FastCGI, memcached, SCGI, and uWSGI servers. NGINX does not seek to implement the huge range of functionality necessary to run an application, instead relying on specialized third‑party servers such as PHP‑FPM, Node.js, and even Apache.</p>\n<p><center><br />\n“<em>Apache is like Microsoft Word. It has a million options but you only need six. NGINX does those six things, and it does five of them 50 times faster than Apache.</em>”</center>— <a href=\"http://maisonbisson.com/post/12249/chris-lea-on-nginx-and-wordpress/\" target=\"_blank\" rel=\"noopener\">Chris Lea</a></p>\n<p>For this reason, the market share of NGINX has grown steadily over recent years, as reported in surveys from Netcraft and W3Techs.</p>\n<figure id=\"attachment_15622\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-324\" src=\"https://emolike.net/wp-content/uploads/2018/04/netcraft-top-1m-sept-2015.png\" width=\"1062\" height=\"599\" alt=\"Netcraft September 2015 Web Server Survey\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/netcraft-top-1m-sept-2015.png 1062w, https://emolike.net/wp-content/uploads/2018/04/netcraft-top-1m-sept-2015-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/04/netcraft-top-1m-sept-2015-768x433.png 768w, https://emolike.net/wp-content/uploads/2018/04/netcraft-top-1m-sept-2015-1024x578.png 1024w, https://emolike.net/wp-content/uploads/2018/04/netcraft-top-1m-sept-2015-200x113.png 200w\" sizes=\"(max-width: 1062px) 100vw, 1062px\" /><figcaption class=\"wp-caption-text\">Source: Netcraft <a href=\"http://news.netcraft.com/archives/2015/09/16/september-2015-web-server-survey.html\" target=\"_blank\" rel=\"noopener\">September 2015 Web Server Survey</a></figcaption></figure>\n<p><img class=\"alignnone size-full wp-image-325\" src=\"https://emolike.net/wp-content/uploads/2018/04/top-sites-w3techs.png\" width=\"962\" height=\"434\" alt=\"top-sites-w3techs\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/top-sites-w3techs.png 962w, https://emolike.net/wp-content/uploads/2018/04/top-sites-w3techs-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/04/top-sites-w3techs-768x346.png 768w, https://emolike.net/wp-content/uploads/2018/04/top-sites-w3techs-200x90.png 200w\" sizes=\"(max-width: 962px) 100vw, 962px\" /></p>\n<p>(Note that these surveys just detect the software that handles incoming Internet traffic and stamps outgoing responses with an identifying <code>Server</code> header. They don’t offer much insight into what software and platforms lie within an application.)</p>\n<p>And so emerged the architectural pattern of running NGINX at the frontend to act as the <a href=\"https://www.nginx.com/blog/building-great-app-just-beginning-deliver-scale/\">accelerator and shock absorber</a>, and whatever technology is most appropriate for running applications at the backend.</p>\n<h2>Modern Web Applications are Very Different From the LAMP Stacks of the Past</h2>\n<p>You might have heard the buzz around containers, <a href=\"https://www.nginx.com/blog/introduction-to-microservices/\">microservices</a>, and lightweight application frameworks such as Node.js and Python/uWSGI.</p>\n<p>We are seeing significant changes in the ways that modern web applications are built:</p>\n<p><img class=\"alignnone size-full wp-image-326\" src=\"https://emolike.net/wp-content/uploads/2018/04/monolithic-to-dynamic.png\" width=\"1040\" height=\"327\" alt=\"monolithic-to-dynamic\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/monolithic-to-dynamic.png 1040w, https://emolike.net/wp-content/uploads/2018/04/monolithic-to-dynamic-300x94.png 300w, https://emolike.net/wp-content/uploads/2018/04/monolithic-to-dynamic-768x241.png 768w, https://emolike.net/wp-content/uploads/2018/04/monolithic-to-dynamic-1024x322.png 1024w, https://emolike.net/wp-content/uploads/2018/04/monolithic-to-dynamic-200x63.png 200w\" sizes=\"(max-width: 1040px) 100vw, 1040px\" /></p>\n<p>Underlying these changes is a desire to achieve faster time‑to‑market for new web applications and features, by moving away from heavy, monolithic architectures to more loosely coupled, distributed architectures. Continuous delivery is the fundamental driving force behind this shift.</p>\n<h3>NGINX Delivers Microservices Applications</h3>\n<p>Containerized and microservices applications require a stable and reliable frontend that conceals the complexity and ever‑changing nature of the application behind it.</p>\n<p>To forward HTTP requests to upstream application components, the frontend needs to provide termination of HTTP, HTTPS, and HTTP/2 connections, along with “shock‑absorber” protection and routing. It also needs to offer basic logging and first‑line access control, implement global security rules, and offload HTTP heavy lifting (caching, compression) to optimize the performance of the upstream application.</p>\n<p>This is where NGINX and NGINX Plus come into their element, providing these <a href=\"https://www.nginx.com/blog/12-reasons-why-nginx-is-the-standard-for-containerized-applications-and-deploying-microservices/\">twelve features</a> (among others) that make them ideal for microservices and containers:</p>\n<div>\n<div id=\"column1\">\n<ul>\n<li>Single, reliable entry point</li>\n<li>Serve static content</li>\n<li>Consolidated logging</li>\n<li>SSL/TLS and HTTP/2 termination</li>\n</ul>\n</div>\n<div id=\"column2\">\n<ul>\n<li>Support multiple backend apps</li>\n<li>Easy A/B testing</li>\n<li>Scalability and fault tolerance</li>\n<li>Caching (for offload and acceleration)</li>\n</ul>\n</div>\n<div id=\"column3\">\n<ul>\n<li>GZIP compression</li>\n<li>Zero downtime</li>\n<li>Simpler security requirements</li>\n<li>Mitigate security and DDoS attacks</li>\n</ul>\n</div>\n</div>\n<h3>Use NGINX to Give Consistency Within Each Containerized Service</h3>\n<p>Modern, distributed web applications can use a mix of diverse application components, and it’s not uncommon for them to combine a number of <a href=\"http://martinfowler.com/articles/microservice-trade-offs.html#diversity\" target=\"_blank\" rel=\"noopener\">different technologies and platforms</a>. The common requirement is that each component be lightweight and scalable, suitable for deploying in containers on a resource‑constrained multitenant server.</p>\n<p>Many containers don’t need an embedded web server. They deliver their service using the framework’s own simple HTTP frontend, or using protocols such as FastCGI or uWSGI. In some cases, however, a robust and lightweight web server is required – for example, for efficiency, logging, security, monitoring, or additional functionality. The lightweight nature of NGINX makes it a much better choice to insert in a container than the Apache monolith.</p>\n<figure id=\"attachment_15781\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-327\" src=\"https://emolike.net/wp-content/uploads/2018/04/nginx-microservices.png\" width=\"812\" height=\"720\" alt=\"NGINX serves as gateway and embedded web server in a microservices application architecture\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/nginx-microservices.png 812w, https://emolike.net/wp-content/uploads/2018/04/nginx-microservices-300x266.png 300w, https://emolike.net/wp-content/uploads/2018/04/nginx-microservices-768x681.png 768w, https://emolike.net/wp-content/uploads/2018/04/nginx-microservices-200x177.png 200w\" sizes=\"(max-width: 812px) 100vw, 812px\" /><figcaption class=\"wp-caption-text\">NGINX as gateway and embedded web server in a microservices application architecture</figcaption></figure>\n<h2>Conclusion</h2>\n<p>Apache and NGINX both have their place, and NGINX is clearly in the ascendency. Your requirements and experience might lead you to chose one or both, or even a different path.</p>\n<p>A monolithic architectural framework was sound practice when Apache was new and fresh, but app developers are finding that such an approach is no longer up to the task of delivering complex applications at the speed their businesses require. Microservice architecture is emerging as the wave of the future for web apps and sites, and NGINX is perfectly poised to assume its place in that architecture as the ideal application delivery platform for the modern Web.</p>\n<blockquote><p><a href=\"https://www.nginx.com/blog/nginx-vs-apache-our-view/\">https://www.nginx.com/blog/nginx-vs-apache-our-view/</a></p></blockquote>\n",
          "slug": "nginx-vs-apache",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/apache-market-share-1995-2005.png"
          },
          "link": "https://emolike.net/2018/04/10/nginx-vs-apache/",
          "date": "2018-04-10T14:54:24",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjMxNA==",
        "node": {
          "id": "cG9zdDozMTQ=",
          "title": "SoundCloud client for your desktop Linux &#038; windows",
          "content": "<p>A SoundCloud client for your desktop</p>\n<div class=\"col-12 col-lg-5 p-3 p-lg-0 mb-3 mb-lg-0 mt-0 mt-lg-5\">\n<p>Listen to SoundCloud® from the comfort of your desktop. Use keyboard shortcuts to navigate through your music. Be more productive.</p>\n<div class=\"py-2 text-center text-lg-left\"><a class=\"btn btn-primary btn-lg\" href=\"http://auryo.com/#downloads\">Download</a></div>\n</div>\n<div class=\"col-12 col-lg-7\">\n<div id=\"img_wrap\"><img class=\"alignnone size-full wp-image-315\" src=\"https://emolike.net/wp-content/uploads/2018/04/stream.png\" alt=\"stream view screenshot auryo (soundcloud desktop app)\" width=\"1190\" height=\"728\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/stream.png 1190w, https://emolike.net/wp-content/uploads/2018/04/stream-300x184.png 300w, https://emolike.net/wp-content/uploads/2018/04/stream-768x470.png 768w, https://emolike.net/wp-content/uploads/2018/04/stream-1024x626.png 1024w, https://emolike.net/wp-content/uploads/2018/04/stream-200x122.png 200w\" sizes=\"(max-width: 1190px) 100vw, 1190px\" /></div>\n</div>\n<p><a href=\"http://auryo.com/\">http://auryo.com/</a></p>\n",
          "slug": "soundcloud-client-for-your-desktop-linux-windows",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/08/soundcloud-client-for-your-desktop-linux-windows/",
          "date": "2018-04-08T20:44:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjMwOQ==",
        "node": {
          "id": "cG9zdDozMDk=",
          "title": "Manjaro System boot logs",
          "content": "<p>You can reach system boot logs with</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">journalctl -b\r\n</pre>\n<p>&nbsp;</p>\n",
          "slug": "manjaro-system-boot-logs",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/08/manjaro-system-boot-logs/",
          "date": "2018-04-08T19:11:13",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI5OA==",
        "node": {
          "id": "cG9zdDoyOTg=",
          "title": "Deployment Management Tools: Chef vs. Puppet vs. Ansible vs. SaltStack vs. Fabric",
          "content": "<p><strong>What are the pros and cons of Chef, Puppet, Ansible, SaltStack and Fabric? <em>(Updated: 13/8/17)</em></strong></p>\n<p>Working in production today often means continuous deployments and an environment distributed all over the world. When your infrastructure is decentralized and cloud-based and you’re dealing with frequent deployments of largely identical services across largely identical servers, having a way to automate the configuration and maintenance of everything is a large boon. Deployment management tools and configuration management tools are designed for this purpose. They enable you to use recipes, playbooks, templates, or whatever terminology to simplify automation and orchestration across your environment to provide a standard, consistent deployment.</p>\n<p>There are several considerations to keep in mind when choosing a tool in this space. One is the model for the tool. Some require a master-client model, which uses a centralized control point to communicate to distributed machines, while others can or do operate on a more local level. Another consideration is the makeup of your environment. Some tools are written in different languages and support for particular OSs or setups can vary. Making sure your tool of choice will mesh well with your environment and the particular skills of your team can save you a lot of headaches here.</p>\n<h2>1. Ansible</h2>\n<p><img class=\"alignnone size-full wp-image-299\" src=\"https://emolike.net/wp-content/uploads/2018/04/ansible.jpg\" width=\"125\" height=\"125\" alt=\"1\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/ansible.jpg 125w, https://emolike.net/wp-content/uploads/2018/04/ansible-80x80.jpg 80w\" sizes=\"(max-width: 125px) 100vw, 125px\" /><br />\n<a href=\"http://www.ansible.com/\" target=\"_blank\" rel=\"noopener\">Ansible</a> is an open source tool used to deploy applications to remote nodes and provision servers in a repeatable way. It gives you a common framework for pushing multi-tier applications and application artifacts using a push model setup, although you can set it up as master-client if you’d like. Ansible is built on playbooks that you can apply to an extensive variety of systems for deploying your app.</p>\n<figure id=\"attachment_2541\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-300\" src=\"https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x.png\" width=\"598\" height=\"422\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x.png 598w, https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x-300x212.png 300w, https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x-200x141.png 200w\" sizes=\"(max-width: 598px) 100vw, 598px\" /><figcaption class=\"wp-caption-text\"><em>The Ansible Tower dashboard</em></figcaption></figure>\n<p>&nbsp;</p>\n<p><strong>When to use it:</strong> If getting up and running quickly and easily is important to you and you don’t want to install agents on remote nodes or managed servers, consider Ansible. It’s good if your need or focus is more on the system administrator side. Ansible is focused on being streamlined and fast, so if those are key concerns for you, give it a shot.</p>\n<p><strong>Price:</strong> Free open source version, with paid plans for Ansible Tower starting at $5,000 per year (which gives you up to 100 nodes).</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>SSH-based, so it doesn’t require installing any agents on remote nodes.</li>\n<li>Easy learning curve thanks to the use of YAML.</li>\n<li>Playbook structure is simple and clearly structured.</li>\n<li>Has a variable registration feature that enables tasks to register variables for later tasks</li>\n<li>Much more streamlined code base than some other tools</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>Less powerful than tools based in other programming languages.</li>\n<li>Does its logic through its DSL, which means checking in on the documentation frequently until you learn it</li>\n<li>Variable registration is required for even basic functionality, which can make easier tasks more complicated</li>\n<li>Introspection is poor. Difficult to see the values of variables within the playbooks</li>\n<li>No consistency between formats of input, output, and config files</li>\n<li>Struggles with performance speed at times.</li>\n</ul>\n<p><a href=\"https://www.ansible.com/quick-start-video\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>2. Chef</h2>\n<p><img class=\"alignnone size-full wp-image-301\" src=\"https://emolike.net/wp-content/uploads/2018/04/chef-logo.jpg\" width=\"113\" height=\"111\" alt=\"2\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/chef-logo.jpg 113w, https://emolike.net/wp-content/uploads/2018/04/chef-logo-80x80.jpg 80w\" sizes=\"(max-width: 113px) 100vw, 113px\" /><br />\n<a href=\"https://www.chef.io/\" target=\"_blank\" rel=\"noopener\">Chef</a> is an open source tool for configuration management, focused on the developer side for its user base. Chef operates as a master-client model, with a separate workstation needed to control the master. It’s based in Ruby, with pure Ruby used for most elements you write. The Chef design is transparent and based on following the instructions it’s given, which means that you’ll have to make sure your instructions are clear.</p>\n<figure id=\"attachment_2542\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-302\" src=\"https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node.png\" width=\"1280\" height=\"719\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node.png 1280w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-768x431.png 768w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-1024x575.png 1024w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-200x112.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><figcaption class=\"wp-caption-text\"><em>The Chef dashboard</em></figcaption></figure>\n<p><strong>When to use it:</strong> Before considering Chef, make sure you’re familiar with Git, as it’s required for configuration, and Ruby, as you’ll have to be writing in it. Chef is good for development-focused teams and environments. It’s good for enterprises looking for a more mature solution for a heterogeneous environment.</p>\n<p><strong>Price:</strong> Free open source version, standard and premium plans priced on a per node annual basis. The prices start at $137/node/annual for Chef Automate, or $72/node/annual for Hosted Chef.</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Rich collection of modules and configuration recipes.</li>\n<li>Code-driven approach gives you more control and flexibility over your configurations.</li>\n<li>Being centered around Git gives it strong version control capabilities.</li>\n<li>‘Knife’ tool (which uses SSH for deploying agents from workstation) eases installation burdens.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>The learning curve is steep if you’re not already familiar with Ruby and procedural coding.</li>\n<li>It’s not a simple tool, which can lead to large code bases and complicated environments.</li>\n<li>Doesn’t support push functionality.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=kDeRHgnuDzc\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>3. Fabric</h2>\n<p><img class=\"alignnone size-full wp-image-303\" src=\"https://emolike.net/wp-content/uploads/2018/04/fabric-logo.jpg\" width=\"150\" height=\"117\" alt=\"3\" /><br />\n<a href=\"http://www.fabfile.org/\" target=\"_blank\" rel=\"noopener\">Fabric</a> is a Python-based tool for streamlining SSH in application deployments. Its primary usage is for running tasks across multiple remote systems, but it can also be extended with plugins to provide more advanced functionality. Fabric will configure your system, do system/server administration, and automate the deployment of your app.</p>\n<figure id=\"attachment_2543\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-304\" src=\"https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard.png\" width=\"1280\" height=\"1029\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard.png 1280w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-300x241.png 300w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-768x617.png 768w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-1024x823.png 1024w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-200x161.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><figcaption class=\"wp-caption-text\"><em>The Fabric dashboard</em></figcaption></figure>\n<p><strong>When to use it:</strong> If you’re just starting out in the deployment automation space, Fabric is a good beginning point. It helps if your environment involves at least a little bit of Python.</p>\n<p><strong>Price:</strong> Free</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Good at deploying apps written in any language. It doesn’t depend on system architecture, but rather OS and package manager.</li>\n<li>Simpler and easier to deploy than some other tools in this space</li>\n<li>Extensively integrated with SSH for script-based streamlining</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>Fabric is a single point of failure set up (generally the machine you’re running the deploy on)</li>\n<li>Uses a push model, so not as well suited for a continuous deployment model as some other tools in this space</li>\n<li>While it’s a great tool for deploying apps in most languages, it does require Python to run, so you must have at least a little Python in your environment for Fabric.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=VmcGuKPpWH8\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>4. Puppet</h2>\n<p><img class=\"alignnone size-full wp-image-305\" src=\"https://emolike.net/wp-content/uploads/2018/04/puppetlogo.png\" width=\"532\" height=\"187\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/puppetlogo.png 532w, https://emolike.net/wp-content/uploads/2018/04/puppetlogo-300x105.png 300w, https://emolike.net/wp-content/uploads/2018/04/puppetlogo-200x70.png 200w\" sizes=\"(max-width: 532px) 100vw, 532px\" /></p>\n<p><a href=\"https://puppet.com/\" target=\"_blank\" rel=\"noopener\">Puppet</a> is one of the long standing tools in the full-fledged configuration management space. It’s an open source tool, but given how long it’s been around, it has been well vetted and deployed in some of the biggest and most demanding environments. Puppet is based on Ruby, but uses a customized Domain Scripting Language (DSL) closer to JSON for working within it. It runs as a master-client setup and uses a model-driven approach. The Puppet code design works as a list of dependencies, which can make things easier or more confusing, depending on your setup.</p>\n<figure id=\"attachment_2545\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-306\" src=\"https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard.png\" width=\"623\" height=\"402\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard.png 623w, https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard-300x194.png 300w, https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard-200x129.png 200w\" sizes=\"(max-width: 623px) 100vw, 623px\" /><figcaption class=\"wp-caption-text\"><em>The Puppet Enterprise dashboard</em></figcaption></figure>\n<p><strong>When to use it:</strong> Puppet is a good choice if stability and maturity are key factors for you. It’s good for large enterprises with a heterogeneous environment and range of skills on the DevOps team.</p>\n<p><strong>Price:</strong> Puppet comes in a free open source version or a paid commercial enterprise version that runs $120 per node per year, with volume discounts.</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Well-established support community through Puppet Labs.</li>\n<li>It has the most mature interface and runs on nearly every OS.</li>\n<li>Simple installation and initial setup.</li>\n<li>Most complete Web UI in this space.</li>\n<li>Strong reporting capabilities.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>For more advanced tasks, you will need to use the CLI, which is Ruby-based (meaning you’ll have to understand Ruby).</li>\n<li>Support for pure-Ruby versions (rather than those using Puppet’s customized DSL) is being scaled back.</li>\n<li>Because of the DSL and a design that does not focus on simplicity, the Puppet code base can grow large, unwieldy, and hard to pick up for new people in your organization at higher scale.</li>\n<li>Model-driven approach means less control compared to code-driven approaches.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=j8ImF23jZAg\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>5. Saltstack</h2>\n<p><img class=\"alignnone size-full wp-image-307\" src=\"https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250.jpg\" width=\"800\" height=\"244\" alt=\"Saltstack\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250.jpg 800w, https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250-300x92.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250-768x234.jpg 768w, https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250-200x61.jpg 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><br />\n<a href=\"http://saltstack.com/\" target=\"_blank\" rel=\"noopener\">SaltStack</a> (or Salt) is a CLI-based tool that can be set up as a master-client model or a non-centralized model. Based in Python, Salt offers a push method and an SSH method of communication with clients. Salt allows for grouping of clients and configuration templates to simplify the control of the environment.</p>\n<p><strong>When to use it:</strong> Salt is a good choice if scalability and resiliency are a big concern. It’s good for system administrators thanks to its usability.</p>\n<p><strong>Price:</strong> Free open source version, and a SaltStack Enterprise version that is based on an annual per node subscription basis. Specific pricing is not listed on their site (just a “Contact us” link), but others have reported a $150 per node per year starting point.</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Straightforward organization and usage once you’re past the setup phase.</li>\n<li>Their DSL is feature-rich and isn’t required for logic and states.</li>\n<li>Input, output, and configs are very consistent – all YAML.</li>\n<li>Introspection is very good. It’s easy to see what’s happening within Salt.</li>\n<li>Strong community.</li>\n<li>High scalability and resiliency in the master model with minions and hierarchical tiers.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>Difficult to set up and to pick up for new users.</li>\n<li>Documentation is challenging to understand at the introductory level.</li>\n<li>Web UI is newer and less complete than other tool’s Web UIs in the space.</li>\n<li>Not great support for non-Linux OSs.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=TQjE2I8CrzQ\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack</h2>\n<p>Which configuration management or deployment automation tool you use will depend on your needs and preferences for your environment. Chef and Puppet are some of the older, more established options, making them good for larger enterprises and environments that value maturity and stability over simplicity. Ansible and SaltStack are good options for those looking for fast and simple solutions while working in environments that don’t need support for quirky features or lots of OSs. Fabric is a good tool for smaller environments and those looking for a more low lift and entry level solution.</p>\n<p>&nbsp;</p>\n",
          "slug": "deployment-management-tools-chef-vs-puppet-vs-ansible-vs-saltstack-vs-fabric",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/04/ansible.jpg"
          },
          "link": "https://emolike.net/2018/04/07/deployment-management-tools-chef-vs-puppet-vs-ansible-vs-saltstack-vs-fabric/",
          "date": "2018-04-07T14:06:46",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI5NQ==",
        "node": {
          "id": "cG9zdDoyOTU=",
          "title": "Chef vs Puppet vs Ansible vs SaltStack Configuration Management Tools Comparison Edureka",
          "content": "<p><iframe title=\"Chef vs Puppet vs Ansible vs SaltStack   Configuration Management Tools Comparison   Edureka\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/h4hWzlSqF18?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "chef-vs-puppet-vs-ansible-vs-saltstack-configuration-management-tools-comparison-edureka",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/07/chef-vs-puppet-vs-ansible-vs-saltstack-configuration-management-tools-comparison-edureka/",
          "date": "2018-04-07T13:29:07",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI5Mw==",
        "node": {
          "id": "cG9zdDoyOTM=",
          "title": "Container OS Comparisons",
          "content": "<p>https://www.youtube.com/watch?v=sHFQbA7GWMc&#038;t=13s</p>\n",
          "slug": "container-os-comparisons",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/04/container-os-comparisons/",
          "date": "2018-04-04T15:55:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "linux"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI4Ng==",
        "node": {
          "id": "cG9zdDoyODY=",
          "title": "How to Run Multiple WordPress Websites on Digital Ocean",
          "content": "<p><iframe title=\"How to Run Multiple WordPress Websites on Digital Ocean\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/KSXkAZRdGh4?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "how-to-run-multiple-wordpress-websites-on-digital-ocean",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/04/how-to-run-multiple-wordpress-websites-on-digital-ocean/",
          "date": "2018-04-04T13:16:14",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              },
              {
                "name": "VM"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI4NA==",
        "node": {
          "id": "cG9zdDoyODQ=",
          "title": "Fast VPS Setup: DigitalOcean Droplet + ServerPilot + WordPress (Step by Step Guide)",
          "content": "<p><iframe title=\"Fast VPS Setup: DigitalOcean Droplet + ServerPilot + WordPress (Step by Step Guide)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/igkkP2c_nsM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "fast-vps-setup-digitalocean-droplet-serverpilot-wordpress-step-by-step-guide",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/04/fast-vps-setup-digitalocean-droplet-serverpilot-wordpress-step-by-step-guide/",
          "date": "2018-04-04T13:09:09",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "deployment"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              },
              {
                "name": "VM"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI4Mg==",
        "node": {
          "id": "cG9zdDoyODI=",
          "title": "Docker All the Things &#8211; .NET 4.6 apps and Windows Containers",
          "content": "<p><iframe title=\"Docker All the Things - .NET 4.6 apps and Windows Containers\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/9JsPr-inew8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "docker-all-the-things-net-4-6-apps-and-windows-containers",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/04/docker-all-the-things-net-4-6-apps-and-windows-containers/",
          "date": "2018-04-04T12:58:10",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "Hosting"
              },
              {
                "name": "web development"
              },
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI4MA==",
        "node": {
          "id": "cG9zdDoyODA=",
          "title": "VULTR How To Install Windows Server 2012 r2 Wirth Custom ISO ViVuOnline",
          "content": "<p>https://www.youtube.com/watch?v=4J2Ia0xX0J8</p>\n",
          "slug": "vultr-how-to-install-windows-server-2012-r2-wirth-custom-iso-vivuonline",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/03/vultr-how-to-install-windows-server-2012-r2-wirth-custom-iso-vivuonline/",
          "date": "2018-04-03T18:49:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI3Ng==",
        "node": {
          "id": "cG9zdDoyNzY=",
          "title": "Announcing 1.1.1.1: the fastest, privacy-first consumer DNS service",
          "content": "<h3 id=\"tyingitalltogether\">Tying It All Together</h3>\n<p><img class=\"alignnone size-full wp-image-277\" src=\"https://emolike.net/wp-content/uploads/2018/04/1.1.1.1-dns-resolver-performance.png\" alt=\"DNSPerf\" width=\"1280\" height=\"654\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/1.1.1.1-dns-resolver-performance.png 1280w, https://emolike.net/wp-content/uploads/2018/04/1.1.1.1-dns-resolver-performance-300x153.png 300w, https://emolike.net/wp-content/uploads/2018/04/1.1.1.1-dns-resolver-performance-768x392.png 768w, https://emolike.net/wp-content/uploads/2018/04/1.1.1.1-dns-resolver-performance-1024x523.png 1024w, https://emolike.net/wp-content/uploads/2018/04/1.1.1.1-dns-resolver-performance-200x102.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>While <a href=\"https://www.dnsperf.com/#!dns-resolvers\" target=\"_blank\" rel=\"noopener\">DNSPerf</a> now ranks <a href=\"https://1.1.1.1/\" target=\"_blank\" rel=\"noopener\">1.1.1.1</a> as the fastest DNS resolver when querying non-Cloudflare customers (averaging around 14ms globally), there&#8217;s an added benefit if you&#8217;re a Cloudflare customer using our Authoritative DNS. Because the resolver and the recursor are now on the same network, running on the same hardware, we can answer queries for Cloudflare&#8217;s customers incredibly quickly. We can also support immediate updates, without having to wait for TTLs to expire.</p>\n<p>In other words, every new user of <a href=\"https://1.1.1.1/\" target=\"_blank\" rel=\"noopener\">1.1.1.1</a> makes Cloudflare&#8217;s Authoritative DNS service a bit better. And, vice versa, every new user of Cloudflare&#8217;s Authoritative DNS service makes <a href=\"https://1.1.1.1/\" target=\"_blank\" rel=\"noopener\">1.1.1.1</a> a bit better. So, if you&#8217;re an existing Cloudflare customer, encourage your users to try <a href=\"https://1.1.1.1/\" target=\"_blank\" rel=\"noopener\">1.1.1.1</a> and you&#8217;ll see performance benefits from all those who do.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">1.1.1.1\r\n1.0.0.1\r\n</pre>\n<blockquote><p>https://blog.cloudflare.com/announcing-1111/</p></blockquote>\n",
          "slug": "announcing-1-1-1-1-the-fastest-privacy-first-consumer-dns-service",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/03/announcing-1-1-1-1-the-fastest-privacy-first-consumer-dns-service/",
          "date": "2018-04-03T15:06:48",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "network"
              },
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI3NA==",
        "node": {
          "id": "cG9zdDoyNzQ=",
          "title": "Arch Linux Post Installation (30 Things to do after Installing Arch Linux)",
          "content": "<p>we have already covered in our previous article, <a href=\"https://www.2daygeek.com/arch-linux-installation-steps-screen-shots/\" target=\"_blank\" rel=\"noopener\">How to Install Arch Linux</a> and also covered <a href=\"https://www.2daygeek.com/install-xfce-mate-kde-gnome-cinnamon-lxqt-lxde-budgie-deepin-enlightenment-desktop-environment-on-arch-linux/\" target=\"_blank\" rel=\"noopener\">Desktop Environment</a>installation &amp; configuration on Arch Linux system. It’s not enough to make your Desktop as user friendly. We know Arch Linux Comes without GUI &amp; No additional software’s so we have to install everything manually also We have to tweak &amp; adjust some settings to make your Desktop easier as well as better performance for more user friendly. Newbies whoever want to taste Arch Linux, i advise you to try with <a href=\"https://www.2daygeek.com/install-custom-arch-linux-system-easily-through-arch-anywhere/\" target=\"_blank\" rel=\"noopener\">Arch Anywhere</a>.</p>\n<h4>1) Check for updates</h4>\n<p>Make sure your system upto date. How to check and do ? It’s very simply, you can do by hitting below command on your terminal. It will ask you to enter the sudo password to perform the update, here you can see how much MB/KB going to upgrade, its purely depends on your system packages which you have installed.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># pacman -Syu\r\n</pre>\n<h4>2) Add New User and assign sudo privilege</h4>\n<p>By default Arch Linux Wont have any user. To perform all the tasks from <code>root</code> user will lead to cause potential damage on system when we doing mistakes. I would advise you to create separate user to manage the systems with <code>sudo</code> privilege under <code>wheel</code> group.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Add new user]\r\n# useradd -m -G wheel -s /bin/bash daygeek\r\n# passwd daygeek\r\n\r\n[uncomment wheel group]\r\n# visudo\r\n%wheel ALL=(ALL) ALL\r\n\r\n[Install sudo package]\r\n# pacman -S sudo</pre>\n<h4>3) Enable Multilib repository</h4>\n<p>If you want to run <code>32-bit</code> application on your <code>64-bit</code> systems, uncomment/enable the <code>multilib</code> repository to achieve it.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># nano /etc/pacman.conf\r\n[multilib]\r\ninclude = /etc/pacman.d/mirrorlis</pre>\n<h4>4) Enable Yaourt Package Tool</h4>\n<p>Yaourt stands for <code>Yet Another User Repository Tool</code> is a package wrapper which is used to install packages from <code>AUR</code> repository. AUR stands for <code>Arch User Repository</code>, it’s big community-driven repository and contains <code>44,000+</code> packages.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># nano /etc/pacman.conf\r\n[archlinuxfr]\r\nSigLevel = Never\r\nServer = http://repo.archlinux.fr/$arch\r\n\r\n[Install Yaourt]\r\n# pacman -Syu yaourt\r\n\r\n[Use Yaourt]\r\n# yaourt -Syu</pre>\n<h4>5) Enable packer Package Tool</h4>\n<p><code>packer</code> is a package wrapper which is used to install packages from <code>AUR &amp;amp; Pacman</code> repository. It similar to <code>Yaourt</code>and reduce manually effort to compiling and installing the packages available on AUR. <code>AUR</code> stands for <code>Arch User Repository</code>, it’s big community-driven repository and contains <code>44,000+</code> packages.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ sudo pacman -S base-devel fakeroot jshon expac git wget\r\n$ wget https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=packer\r\n$ mv PKGBUILD\\?h\\=packer PKGBUILD\r\n$ makepkg\r\n$ sudo pacman -U packer-*.pkg.tar.xz\r\n\r\n[Use Packer]\r\n$ packer -Syu</pre>\n<h4>6) Install Desktop Environment</h4>\n<p>We know, <code>Arch Linux</code> comes without GUI and we can install easily by following below article. We have covered almost all the major Desktop environment such GNOME, Mate, XFCE, KDE, Cinnamon &amp; Deepin installation &amp; configuration procedure.</p>\n<div> <a href=\"https://www.2daygeek.com/install-xfce-mate-kde-gnome-cinnamon-lxqt-lxde-budgie-deepin-enlightenment-desktop-environment-on-arch-linux/\" target=\"_blank\" rel=\"noopener\">Install Desktop Environment on Arch Linux</a></div>\n<h4>7) Install Web Browsers</h4>\n<p>Web browser is important one for computer, we can’t do anything without web browser such as browsing, checking mails, accessing bank account, etc.,. We have punch of <strong><a href=\"https://www.2daygeek.com/top-best-web-browser-for-linux/\" target=\"_blank\" rel=\"noopener\">browsers support for Linux</a></strong> and we can install any browser as per our requirement.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Graphical Web Browser]\r\n$ sudo pacman -S firefox\r\n$ sudo pacman -S seamonkey\r\n$ yaourt -S palemoon-bin\r\n$ sudo pacman -S chromium\r\n$ yaourt -S google-chrome\r\n$ sudo pacman -S opera\r\n$ yaourt -S vivaldi\r\n$ sudo pacman -S qupzilla\r\n$ yaourt -S otter-browser\r\n$ sudo pacman -S midori</pre>\n<p>Also have a look at <a href=\"https://www.2daygeek.com/best-text-based-command-line-web-browser-for-linux/\" target=\"_blank\" rel=\"noopener\">Text based Web Browser</a>.</p>\n<h4>8) Update Latest &amp; Nearest Mirror</h4>\n<p>Visit Arch Linux <a href=\"https://www.archlinux.org/mirrorlist/\" target=\"_blank\" rel=\"noopener\">Mirrorlist</a> page which generates the most up-to-date mirrorlist possible for Arch Linux and choose your country then add top of the <code>/etc/pacman.d/mirrorlist</code>.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\"># nano /etc/pacman.d/mirrolist\r\n## India\r\nServer = http://mirror.cse.iitk.ac.in/archlinux/$repo/os/$arch\r\nServer = http://ftp.iitm.ac.in/archlinux/$repo/os/$arch</pre>\n<h4>9) Learn about pacman</h4>\n<p>Pacman is the package manager of Arch Linux. I advise all users to learn about pacman to become familiar with it by navigating below link.</p>\n<ul>\n<li><a href=\"https://www.2daygeek.com/pacman-command-examples/\" target=\"_blank\" rel=\"noopener\">pacman command example</a></li>\n</ul>\n<h4>10) Install Flash player</h4>\n<p>Flash plugin mandatory to run/view flash media in web browser. There are two types of browser plugins, based on the plugin API they use.</p>\n<ul>\n<li>Netscape plugin API (NPAPI) work in Firefox and most other browsers (not in Chromium and Opera)</li>\n<li>Pepper plugin API (PPAPI) work only in Chromium (and Chrome) and Opera</li>\n</ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[For Firefox]\r\n$ sudo pacman -S flashplugin\r\n\r\n[For Chromium &amp; Opera]\r\n$ yaourt -S chromium-pepper-flash</pre>\n<h4>11) Install Media Codecs</h4>\n<p>Entertainment is one of the important things for everybody now a days. codecs are utilized by multimedia applications to encode or decode audio or video streams. In order to play encoded streams, users must ensure an appropriate codec is installed.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Media Codecs]\r\n$ sudo pacman -S exfat-utils fuse-exfat a52dec faac faad2 flac jasper lame libdca libdv gst-libav libmad libmpeg2 libtheora libvorbis libxv wavpack x264 xvidcore gstreamer0.10-plugins flashplugin libdvdcss libdvdread libdvdnav gecko-mediaplayer dvd+rw-tools dvdauthor dvgrab</pre>\n<h4>12) Install Pamac Manager</h4>\n<p>If you are not familiar in command line, i will advise you to install <code>Pamac Manager</code> which will help you to install, remove, update packages with GUI.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install GUI Package Manager]\r\n$ yaourt -S pamac-aur</pre>\n<h4>13) Install archive formats</h4>\n<p>Daily we will use archives for routine work, so install the archive utility which will work with all kind of archive formats.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Archive Formats]\r\n$ sudo pacman -S p7zip p7zip-plugins unrar tar rsync</pre>\n<h4>14) Install Oracle JAVA &amp; OpenJDK</h4>\n<p>JAVA is necessary to run certain applications in Linux and windows machine. JAVA comes with two packages (JDK &amp; JRE). JDK stands for (Java Development Kit) which helps developers for developing, debugging, and monitoring Java applications. JRE stands for (Java Runtime Environment) which deploys Java applications on servers. It includes tools for JVM monitoring and tools commonly required for server applications.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Oracle JAVA &amp; OpenJDK]\r\n$ yaourt jdk</pre>\n<p>the above output shows the list of available OpenJDK &amp; Oracle JDK and JRE versions. Just type the number of your choice to get install.</p>\n<h4>15) Install Icon Theme</h4>\n<p>Verity of Icon Theme is available for Linux Desktop, Choose the desired Icon Theme from below link for your Desktop and make your Desktop more elegant.</p>\n<ul>\n<li><a href=\"https://www.2daygeek.com/category/icon-theme/\" target=\"_blank\" rel=\"noopener\">Choose Best Icon Theme</a></li>\n</ul>\n<h4>16) Install GTK Theme</h4>\n<p>Bunch of Icon Theme is available for Linux Desktop, Choose the desired GTK Theme from below link for your Desktop and make your Desktop more elegant.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ sudo pacman -S numix-themes\r\n$ yaourt -S flatplat-theme-git\r\n$ yaourt -S gtk-theme-arc\r\n$ yaourt -S vertex-themes</pre>\n<ul>\n<li><a href=\"https://www.2daygeek.com/category/gtk-theme/\" target=\"_blank\" rel=\"noopener\">Choose Best GTK Theme</a></li>\n</ul>\n<h4>17) Install VLC Media Player</h4>\n<p>VLC media player (commonly known as VLC) is a portable, modern, powerful, free and open-source, cross-platform multimedia player, framework and streaming media server developed by VideoLAN project. VLC is available for all kind of platform like desktop operating systems (Linux, Windows &amp; OS X) &amp; mobile platform (Android, iPad, iPhone, and iPod Touch). VLC media player supports many audio and video file formats &amp; compression methods including DVD-Video, video CD and streaming protocols.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install VLC Media Player]\r\n$ sudo pacman -S vlc</pre>\n<ul>\n<li>Install more <a href=\"https://www.2daygeek.com/category/video-player/\" target=\"_blank\" rel=\"noopener\">Video Players</a></li>\n</ul>\n<h4>18) Install Clementine Audio Player</h4>\n<p>Clementine is a cross-platform free and open source modern music player and library organizer. It is inspired by Amarok 1.4 to the Qt 4 framework and focusing on a fast and easy-to-use interface for searching and playing your music.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Clementine Audio Player]\r\n$ sudo pacman -S clementine\r\n</pre>\n<ul>\n<li>Install more <a href=\"https://www.2daygeek.com/category/audio-player/\" target=\"_blank\" rel=\"noopener\">Audio Players</a></li>\n</ul>\n<h4>19) Install Inkscape Image Editor</h4>\n<p>Inkscape is a drawing and painting tool similar to Illustrator, CorelDraw, Xara X &amp; Photoshop. Inkscape is 100% open source and available to everyone in the world. Inkscape is multi-platform available for Linux, Windows &amp; Mac.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Inkscape Image Editor]\r\n$ sudo pacman -S inkscape</pre>\n<ul>\n<li>Install more <a href=\"https://www.2daygeek.com/category/image-editor/\" target=\"_blank\" rel=\"noopener\">Image Editor</a></li>\n</ul>\n<h4>20) Install VirtualBox</h4>\n<p>VirtualBox is an open source cross-platform virtualization software for x86 architecture, Which was developed by Oracle. VirtualBox is an amazing software which have lot of features compare with other virtualization software such as VMware,etc.., and still development team hardly working on virtualbox to improve the stability.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Virtualbox]\r\n$ sudo pacman -S virtualbox</pre>\n<h4>21) Install QBittorrent Client</h4>\n<p>qBittorrent is free and open source cross platform bittorrent client which is alternative for µtorrent, Which will support all the major Operating Systems (Linux, windows &amp; Mac).</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install QBittorrent Client]\r\n$ sudo pacman -S qbittorrent</pre>\n<ul>\n<li>Install more <a href=\"https://www.2daygeek.com/category/bittorrent-client/\" target=\"_blank\" rel=\"noopener\">Bittorrent Client</a></li>\n</ul>\n<h4>22) Install Aria2 Download Manager</h4>\n<p>aria2 is a Free, open source, lightweight multi-protocol &amp; multi-source command-line download utility. It supports HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink. aria2 can be manipulated via built-in JSON-RPC and XML-RPC interfaces. aria2 automatically validates chunks of data while downloading a file. It can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. By default all the Linux Distribution included aria2, so we can install easily from official repository.</p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Aria2 Download Manager]\r\n$ sudo pacman -S aria2</pre>\n<ul>\n<li>Install more <a href=\"https://www.2daygeek.com/category/download-manager/\" target=\"_blank\" rel=\"noopener\">Download Manager</a></li>\n</ul>\n<h4>23) Install Mozilla Thunderbird</h4>\n<p>Mozilla Thunderbird is a free, open source, cross-platform feature rich and modern email &amp; Chat client developed by the Mozilla Foundation. As per Wikipedia page info, Thunderbird 1.0 get downloaded 1,000,000 times within 10 days. Thunderbird is a free email application that’s easy to set up and customize – and it’s loaded with great features also you can add more features via add-on. Thunderbird makes email better for you, bringing together speed, privacy and the latest technologies.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Mozilla Thunderbird]\r\n$ sudo pacman -S thunderbird</pre>\n<ul>\n<li>Install more <a href=\"https://www.2daygeek.com/category/email-client/\" target=\"_blank\" rel=\"noopener\">Email Client</a></li>\n</ul>\n<h4>24) Install Skype</h4>\n<p>skype is most popular application which is used to make a call over the Internet as FREE of cost. Skype to Skype calls &amp; message completely FREE and Skype to Landline and phone low calling rate compare with mobile phones. Skype Technologies S.A (Microsoft Corporation) announced the new release of Skype 4.3 for Linux on June 18th 2014.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Skype]\r\n$ sudo pacman -S skype</pre>\n<h4>25) Install Dropbox</h4>\n<p>Dropbox is a file hosting service, that offers cloud storage and real-time file synchronization. Dropbox automatically creates a folder on your computer under (/home/username/Dropbox) while installing, After that it will synchronize your data from local PC to your Dropbox &amp; Dropbox to your local PC. So, you can access your content (Images, documents, etc..,) remotely using your Dropbox account. You can install Dropbox Desktop client to more than one PC.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Dropbox]\r\n$ sudo pacman -S dropbox</pre>\n<h4>26) Install ownCloud</h4>\n<p>Owncloud is an cloud based storage which was designed especially for privacy &amp; security, How ? We can install in our organization and maintain ourself so, nobody can read ours. Say for example if you stored your content to third party such as (free cloud storage) we don’t know its safe and secure. owncloud allow user’s to sync and share the files like dropbox and google drive. Its a open-source software, you can install and create your own owncloud storage system using owncloud software and manage all your company data in cloud and access anywhere. Its nice user interface and everybody love owncloud.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install ownCloud]\r\n$ sudo pacman -S owncloud</pre>\n<ul>\n<li>Install <a href=\"https://www.2daygeek.com/category/owncloud/\" target=\"_blank\" rel=\"noopener\">ownCloud</a></li>\n</ul>\n<h4>27) Install Pidgin</h4>\n<p>Pidgin is an easy to use and free IM chat client used by millions with support 83 languages. It support wide range of chat networks such as AIM, Bonjour, Gadu-Gadu, Google Talk, Groupwise, ICQ, IRC, MSN, MXit, SILC, SIMPLE, Sametime, XMPP, Yahoo! &amp; Zephyr. we can login to more than one account at a same time and possible to chat with different network simultaneously which was amazing feature also support more plugins.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Pidgin]\r\n$ sudo pacman -S pidgin</pre>\n<h4>28) Install LibreOffice</h4>\n<p>Libreoffice is a powerful open source office suite. LibreOffice embeds several applications that makes it the most powerful Free &amp; Open Source Office suite on the market like Writer, the word processor, Calc, the spreadsheet application, Impress, the presentation engine, Draw, our drawing and flowchart application, Base, our database and database front end, and Math for editing mathematics.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install LibreOffice]\r\n$ sudo pacman -S libreoffice</pre>\n<h4>29) Install Wine</h4>\n<p>Winehq is an amazing Free, open source software which helps Linux, Mac, FreeBSD, and Solaris users to run Windows applications without Microsoft Windows. Wine stands for Wine Is Not an Emulator instead of Windows emulator which has been revised the acronym.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Wine]\r\n$ sudo pacman -S wine</pre>\n<ul>\n<li><a href=\"https://www.2daygeek.com/install-wine-stable-development-on-ubuntu-centos-debian-fedora-mint-rhel-opensuse/\" target=\"_blank\" rel=\"noopener\">More Details</a></li>\n</ul>\n<h4>30) Install Bleach Bit (System Cleaner)</h4>\n<p>Bleach Bit is a free, open-source and easy to use disk space cleaner &amp; privacy manager, not only clearing disk space apart from that it will Free cache, delete cookies, clear Internet history, shred temporary files, delete logs, and discard junk you didn’t know was there. Designed to work with Linux and Windows systems also clean a thousand applications such as Firefox, Internet Explorer, Adobe Flash, Google Chrome, Opera, Safari, and more.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">[Install Bleach Bit (System Cleaner)]\r\n$ sudo pacman -S bleachbit</pre>\n<p><strong>References :</strong></p>\n<ul>\n<li>Arch Linux <a href=\"https://wiki.archlinux.org/index.php/General_recommendations\" target=\"_blank\" rel=\"noopener\">General recommendations</a></li>\n<li>Arch Linux <a href=\"https://wiki.archlinux.org/index.php/List_of_applications\" target=\"_blank\" rel=\"noopener\">List of applications</a></li>\n</ul>\n<p>Now, you will feel, your Arch Linux box become user friendly. What you are thinking ? Share your valuable commands in our comment section to improve our website quality…Stay tune with 2daygeek for latest LINUX GEEKS..)</p>\n<blockquote><p>https://www.2daygeek.com/arch-linux-post-installation-30-things-to-do-after-installing-arch-linux/</p></blockquote>\n</div>\n",
          "slug": "arch-linux-post-installation-30-things-to-do-after-installing-arch-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2018/04/01/arch-linux-post-installation-30-things-to-do-after-installing-arch-linux/",
          "date": "2018-04-01T16:22:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI2NA==",
        "node": {
          "id": "cG9zdDoyNjQ=",
          "title": "5 Most Beautiful Linux Desktop Environments",
          "content": "<div class=\"paragraph\">When it comes to choosing a <a href=\"http://www.linuxandubuntu.com/home/category/distro\" target=\"_blank\" rel=\"noopener\">Linux distro</a>, one thing that influences the choices of many is the <strong>desktop environment</strong> that comes with the distros. As such, many distros provide variants with different desktop environments to cater for the specific needs of users. Some desktop environments are preferred because of their stability, or their familiarity and many others are popular because of their aesthetics. So today I present some <strong>5 very beautiful desktop environments</strong> that you can choose from. So let’s take a look.</div>\n<div></div>\n<div>\n<div id=\"544132502888428317\" class=\"wcustomhtml\" align=\"left\">\n<h3 class=\"theadings\">Budgie</h3>\n</div>\n</div>\n<div>\n<div class=\"wsite-image wsite-image-border-none\">\n<p><img class=\"alignnone size-full wp-image-265\" src=\"https://emolike.net/wp-content/uploads/2018/03/budgie_orig.png\" alt=\"budgie desktop environments\" width=\"1100\" height=\"619\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/budgie_orig.png 1100w, https://emolike.net/wp-content/uploads/2018/03/budgie_orig-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/03/budgie_orig-768x432.png 768w, https://emolike.net/wp-content/uploads/2018/03/budgie_orig-1024x576.png 1024w, https://emolike.net/wp-content/uploads/2018/03/budgie_orig-200x113.png 200w\" sizes=\"(max-width: 1100px) 100vw, 1100px\" /></p>\n<div></div>\n</div>\n</div>\n<div class=\"paragraph\"><a href=\"https://budgie-desktop.org/\" target=\"_blank\" rel=\"noopener\">​Budgie Desktop</a> is a desktop environment which was first started working on in 2013. The aim of Budgie is to provide a familiar, modern and functional experience whilst getting out of the user’s way. Budgie focuses on simplicity and elegance and it is designed with the modern user in mind. A feature-rich, luxurious desktop using the most modern technologies. Since its inception, the project has seen many enhancements and evolutions, as the developers seek to continuously enhance the experience to better suit the growing needs of users. If you are interested in Budgie, check out Solus desktop operating system on which Budgie is the default desktop. Budgie is also available on Ubuntu as a flavor with the Ubuntu-Budgie edition.</div>\n<div class=\"wsite-spacer\"></div>\n<div>\n<div id=\"262414297427115020\" class=\"wcustomhtml\" align=\"left\">\n<h3 class=\"theadings\">Deepin Desktop Environment</h3>\n</div>\n</div>\n<div>\n<div class=\"wsite-image wsite-image-border-none\">\n<p><img class=\"alignnone size-full wp-image-266\" src=\"https://emolike.net/wp-content/uploads/2018/03/deepin_1_orig.png\" alt=\"deepin desktop environment\" width=\"1100\" height=\"688\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/deepin_1_orig.png 1100w, https://emolike.net/wp-content/uploads/2018/03/deepin_1_orig-300x188.png 300w, https://emolike.net/wp-content/uploads/2018/03/deepin_1_orig-768x480.png 768w, https://emolike.net/wp-content/uploads/2018/03/deepin_1_orig-1024x640.png 1024w, https://emolike.net/wp-content/uploads/2018/03/deepin_1_orig-200x125.png 200w\" sizes=\"(max-width: 1100px) 100vw, 1100px\" /></p>\n<div></div>\n</div>\n</div>\n<div class=\"paragraph\">​<a href=\"https://www.deepin.org/en/dde/\">DDE</a> (Deepin Desktop Environment) is the <strong>default desktop environment</strong> created for the Linux <a href=\"http://www.linuxandubuntu.com/home/linuxandubuntu-distro-review-of-the-week-deepin-os\" target=\"_blank\" rel=\"noopener\">Deepin distribution</a>. deepin is an elegant, polished and easy to use. It is now available on some other Linux distros such as Ubuntu, Manjaro and Arch. With a pop-out side panel that allows you to configure all your system settings and personalization, a bottom dock and some other enhancements Deepin desktop environment provides something different and refreshing that most users will enjoy.</div>\n<div class=\"wsite-spacer\"></div>\n<div>\n<div id=\"182841703154521764\" class=\"wcustomhtml\" align=\"left\">\n<h3 class=\"theadings\">Gnome 3</h3>\n</div>\n</div>\n<div>\n<div class=\"wsite-image wsite-image-border-none\">\n<p><img class=\"alignnone size-full wp-image-267\" src=\"https://emolike.net/wp-content/uploads/2018/03/gnome-3_2_orig.png\" alt=\"gnome 3 desktop environment\" width=\"1100\" height=\"619\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/gnome-3_2_orig.png 1100w, https://emolike.net/wp-content/uploads/2018/03/gnome-3_2_orig-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/03/gnome-3_2_orig-768x432.png 768w, https://emolike.net/wp-content/uploads/2018/03/gnome-3_2_orig-1024x576.png 1024w, https://emolike.net/wp-content/uploads/2018/03/gnome-3_2_orig-200x113.png 200w\" sizes=\"(max-width: 1100px) 100vw, 1100px\" /></p>\n<div></div>\n</div>\n</div>\n<div class=\"paragraph\">​An easy and elegant way to use your computer, GNOME 3 is designed to put you in control and get things done. GNOME 3 has been created to make it easy to use. The Overview is an easy way to access all basic tasks. A powerful search feature lets you access all your work from one place. Gnome 3 is the default on most Linux distros including <a href=\"http://www.linuxandubuntu.com/home/10-major-updates-in-ubuntu-1710-artful-aardvark\" target=\"_blank\" rel=\"noopener\">Ubuntu</a>, <a href=\"http://www.linuxandubuntu.com/home/whats-new-going-to-be-in-fedora-27\" target=\"_blank\" rel=\"noopener\">Fedora</a>, and <a href=\"http://www.linuxandubuntu.com/home/linuxandubuntu-distro-review-of-the-week-debian-linux-87-jessie\" target=\"_blank\" rel=\"noopener\">Debian</a> and many others.</div>\n<div class=\"wsite-spacer\"></div>\n<div>\n<div id=\"534496075525951339\" class=\"wcustomhtml\" align=\"left\">\n<h3 class=\"theadings\">KDE Plasma 5</h3>\n</div>\n</div>\n<div>\n<div class=\"wsite-image wsite-image-border-none\">\n<p><img class=\"alignnone size-full wp-image-268\" src=\"https://emolike.net/wp-content/uploads/2018/03/kde-plasma-5_1_orig.png\" alt=\"kde plasma 5 desktop environment\" width=\"1100\" height=\"619\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/kde-plasma-5_1_orig.png 1100w, https://emolike.net/wp-content/uploads/2018/03/kde-plasma-5_1_orig-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/03/kde-plasma-5_1_orig-768x432.png 768w, https://emolike.net/wp-content/uploads/2018/03/kde-plasma-5_1_orig-1024x576.png 1024w, https://emolike.net/wp-content/uploads/2018/03/kde-plasma-5_1_orig-200x113.png 200w\" sizes=\"(max-width: 1100px) 100vw, 1100px\" /></p>\n<div></div>\n</div>\n</div>\n<div class=\"paragraph\">​Before all the other <strong>desktop environments</strong> on this list were, <a href=\"http://www.linuxandubuntu.com/home/plasma-56-makes-kde-plasma-desktop-environment-more-powerful-beautiful-and-useful\" target=\"_blank\" rel=\"noopener\">KDE</a> (Plasma) was the de-facto choice when it came to beautiful Linux desktop environments. With a look and feel that is more or less very traditional, KDE’s Plasma 5 manages to feel as modern and beautiful looking desktop environment. <a href=\"http://www.linuxandubuntu.com/home/how-to-install-upgrade-to-kde-plasma-5-3-1-in-kubuntu-15-04-or-ubuntu-15-04-and-derivatives\" target=\"_blank\" rel=\"noopener\">KDE Plasma 5</a>provides an advanced graphical desktop with a user-friendly desktop experience, along with a variety of applications that fit in quite seamlessly. KDE&#8217;s Plasma 5 is not only beautiful but has been around for a long time so you get the added bonus of stability and support.</div>\n<div class=\"wsite-spacer\"></div>\n<div>\n<div id=\"384699779102612532\" class=\"wcustomhtml\" align=\"left\">\n<h3 class=\"theadings\">Pantheon</h3>\n</div>\n</div>\n<div>\n<div class=\"wsite-image wsite-image-border-none\">\n<p><img class=\"alignnone size-full wp-image-269\" src=\"https://emolike.net/wp-content/uploads/2018/03/pantheon_orig.png\" alt=\"pantheon desktop environment\" width=\"1280\" height=\"719\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/pantheon_orig.png 1280w, https://emolike.net/wp-content/uploads/2018/03/pantheon_orig-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/03/pantheon_orig-768x431.png 768w, https://emolike.net/wp-content/uploads/2018/03/pantheon_orig-1024x575.png 1024w, https://emolike.net/wp-content/uploads/2018/03/pantheon_orig-200x112.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<div></div>\n</div>\n</div>\n<div class=\"paragraph\"><a href=\"http://www.linuxandubuntu.com/linux-themes/elementary-mod-gnome-theme-install-in-fedora\" target=\"_blank\" rel=\"noopener\">Elementary OS</a> shot to prominence right from release because of its beauty and aesthetics, and all this was from the Pantheon desktop that it shipped with. With a focus on simplicity and beauty, Pantheon resembles Apple’s <a href=\"http://www.linuxandubuntu.com/home/macbuntu-transform-ubuntu-1604-to-mac-os-x\" target=\"_blank\" rel=\"noopener\">MacOS</a> X desktop in terms of appearance and user experience. Pantheon is designed with a dock at the bottom of the desktop and a panel at the top. Along with the Slingshot application launcher and its own Gala window manager, everything fits in perfectly with <a href=\"http://www.linuxandubuntu.com/home/linuxandubuntu-review-of-pantheon-desktop-environment\" target=\"_blank\" rel=\"noopener\">Pantheon</a> making one beautiful experience. Even though Pantheon is available on a few other distros, go with elementary OS if you are interested in checking out this desktop environment.</div>\n<div class=\"wsite-spacer\"></div>\n<div>\n<div id=\"651610029944975974\" class=\"wcustomhtml\" align=\"left\">\n<h3 class=\"theadings\">Conclusion</h3>\n</div>\n</div>\n<div class=\"paragraph\">​So there you have it, 5 awesome looking and <strong>beautifully designed desktop environments</strong>. KDE has been around for a long time so you can expect stability and support. The others while new also focus on simplicity and getting out of the way so you can focus on your work. All the same, these are some of the most gorgeous desktop environments around. Thanks for reading and kindly share your thoughts with us in the comments section below.</div>\n<div></div>\n<blockquote>\n<div><a href=\"http://www.linuxandubuntu.com/home/5-most-beautiful-linux-desktop-environments\">http://www.linuxandubuntu.com/home/5-most-beautiful-linux-desktop-environments</a></div>\n</blockquote>\n",
          "slug": "5-most-beautiful-linux-desktop-environments",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/5-most-beautiful-linux-desktop-environments/",
          "date": "2018-03-31T19:05:25",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI2Mg==",
        "node": {
          "id": "cG9zdDoyNjI=",
          "title": "Install Deepin Desktop Environment In Arch or Manjaro",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">pacman -Syu\r\nreboot -h now\r\n\r\npacman -S xorg xorg-server deepin deepin-extra\r\n\r\nnano /etc/lightdm/lightdm.conf\r\n\r\nUncomment/alter this line:\r\ngreeter-session=lightdm-deepin-greeter\r\n\r\nsystemctl enable lightdm.service\r\nreboot -h now</pre>\n<blockquote><p><a href=\"https://gist.github.com/dantheman213/0c2cf26592799e1982c48101c4871f15\">https://gist.github.com/dantheman213/0c2cf26592799e1982c48101c4871f15</a></p></blockquote>\n",
          "slug": "install-deepin-desktop-environment-in-arch-or-manjaro",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/install-deepin-desktop-environment-in-arch-or-manjaro/",
          "date": "2018-03-31T19:03:43",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI2MA==",
        "node": {
          "id": "cG9zdDoyNjA=",
          "title": "Schedule Email Through ASP.NET or Schedule Tasks Using ASP.NET",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\">// Inside Global.ascx\r\nvoid Application_Start(object sender, EventArgs e)\r\n{\r\n    // Code that runs on application startup\r\n    System.Timers.Timer myTimer = new System.Timers.Timer();\r\n    // Set the Interval to 5 seconds (5000 milliseconds).\r\n    myTimer.Interval = 5000;\r\n    myTimer.AutoReset = true;\r\n    myTimer.Elapsed += new ElapsedEventHandler(myTimer_Elapsed);\r\n    myTimer.Enabled = true;\r\n}\r\n\r\npublic void myTimer_Elapsed(object source, System.Timers.ElapsedEventArgs e)\r\n{\r\n    // use your mailer code\r\n    clsScheduleMail objScheduleMail = new clsScheduleMail();\r\n    objScheduleMail.SendScheduleMail();\r\n}</pre>\n<blockquote><p><a href=\"https://www.codeproject.com/Articles/49996/Schedule-Email-Through-ASP-NET-or-Schedule-Tasks-U\">https://www.codeproject.com/Articles/49996/Schedule-Email-Through-ASP-NET-or-Schedule-Tasks-U</a></p></blockquote>\n",
          "slug": "schedule-email-through-asp-net-or-schedule-tasks-using-asp-net",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/schedule-email-through-asp-net-or-schedule-tasks-using-asp-net/",
          "date": "2018-03-31T19:01:02",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI1OA==",
        "node": {
          "id": "cG9zdDoyNTg=",
          "title": "Introducing TensorFlow.js: Machine Learning in Javascript",
          "content": "<blockquote><p>https://medium.com/tensorflow/introducing-tensorflow-js-machine-learning-in-javascript-bf3eab376db</p></blockquote>\n",
          "slug": "introducing-tensorflow-js-machine-learning-in-javascript",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/introducing-tensorflow-js-machine-learning-in-javascript/",
          "date": "2018-03-31T18:57:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "AI"
              },
              {
                "name": "javascript"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI1Ng==",
        "node": {
          "id": "cG9zdDoyNTY=",
          "title": "Awesome speakers in the programming and design communities",
          "content": "<blockquote><p>https://github.com/karlhorky/awesome-speakers/blob/master/README.md</p></blockquote>\n",
          "slug": "awesome-speakers-in-the-programming-and-design-communities",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/awesome-speakers-in-the-programming-and-design-communities/",
          "date": "2018-03-31T18:55:56",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI1NA==",
        "node": {
          "id": "cG9zdDoyNTQ=",
          "title": "Packaging Node.js code into cross platform executables",
          "content": "<p>If you’re writing command line tools in Node.js, it can be hard to distribute them since users need to install Node.js in their machines before being able to use your tool. It would be a lot easier for users if we can package our app into a single executable file that they can download and run without installing anything extra.</p>\n<p>We can use <a href=\"https://github.com/zeit/pkg\" target=\"_blank\" rel=\"external noopener\">pkg</a> to compile our code into a single executable file for multiple target platforms (Windows, Linux, Mac etc).</p>\n<p>Let’s start with a simple example:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">// index.js\r\nconsole.log(\"hello world\");\r\n</pre>\n<p>This file prints “hello world” and exits. We can package this by running:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ npx pkg index.js\r\n</pre>\n<p>This by default builds executables for three platforms &#8211; Windows, Linux and Mac:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ ls -1\r\nindex-linux\r\nindex-macos\r\nindex-win.exe\r\nindex.js</pre>\n<p>The target platforms can be customized by using the <code>--targets</code> <a href=\"https://github.com/zeit/pkg#targets\" target=\"_blank\" rel=\"external noopener\">flag</a>.</p>\n<p>I was curious how much space these take up:</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">$ ls -lh\r\ntotal 183496\r\n-rwxr-xr-x  1 sheshbabu  staff    33M Mar 31 01:40 index-linux\r\n-rwxr-xr-x  1 sheshbabu  staff    34M Mar 31 01:40 index-macos\r\n-rw-r--r--  1 sheshbabu  staff    22M Mar 31 01:40 index-win.exe\r\n-rw-r--r--  1 sheshbabu  staff    28B Mar 31 00:46 index.js\r\n</pre>\n<p>22-34MB feels like a bit too much for something that just prints “hello world”.</p>\n<p>Looking around the internet, it seems we can use tools like <a href=\"https://upx.github.io/\" target=\"_blank\" rel=\"external noopener\">upx</a> to reduce the file size.</p>\n<blockquote><p>http://www.sheshbabu.com/posts/packaging-node-js-code-into-cross-platform-executables/</p></blockquote>\n",
          "slug": "packaging-node-js-code-into-cross-platform-executables",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/packaging-node-js-code-into-cross-platform-executables/",
          "date": "2018-03-31T18:54:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI1Mg==",
        "node": {
          "id": "cG9zdDoyNTI=",
          "title": "Zeal – An Offline Documentation Browser For Developers",
          "content": "<p>The other day I was searching for Vim editor cheatsheets on the web. A quick google search brought me so many links to download the cheatsheets. While going through the links one by one, a particular URL caught my attention. I Followed the link to find out what it is. Oh dear! It was a quite good tool. Say hello to <strong>Zeal</strong>, an offline documentation browser for software developers.</p>\n<div></div>\n<p>Zeal is inspired by <a href=\"https://kapeli.com/dash\" target=\"_blank\" rel=\"noopener\"><strong>Dash</strong></a>, a commercial application developed specially for Mac OS. Zeal provides documentation sets (shortly docsets) for the plenty of different programming languages and software. You can read them all in offline. Yes, you read that right! You don’t need to google or refer the official documentation page. Just download the documentation set of your desired software, Zeal will take care of everything.</p>\n<p>As of writing this guide, there are <strong>192</strong> useful docsets as given below.</p>\n<ul id=\"docset-list\" class=\"list-inline\">\n<li>ActionScript</li>\n<li>Akka</li>\n<li>Android</li>\n<li>Angular, AngularJS</li>\n<li>Ansible</li>\n<li>Apache HTTP Server</li>\n<li>Appcelerator Titanium</li>\n<li>AppleScript</li>\n<li>Arduino</li>\n<li>AWS JavaScript</li>\n<li>BackboneJS</li>\n<li>Bash</li>\n<li>Boost</li>\n<li>Bootstrap 2, 3, 4</li>\n<li>Bourbon</li>\n<li>C / C++</li>\n<li>CakePHP</li>\n<li>Cappuccino</li>\n<li>Chai</li>\n<li>Chef</li>\n<li>Clojure</li>\n<li>CMake</li>\n<li>Cocos2D</li>\n<li>Cocos2D-X</li>\n<li>Cocos3D</li>\n<li>CodeIgniter</li>\n<li>CoffeeScript</li>\n<li>ColdFusion</li>\n<li>Common Lisp</li>\n<li>Compass</li>\n<li>Cordova</li>\n<li>Corona</li>\n<li>CouchDB</li>\n<li>Craft</li>\n<li>CSS</li>\n<li>D3JS</li>\n<li>Dart</li>\n<li>Django</li>\n<li>Docker</li>\n<li>Doctrine</li>\n<li>Dojo</li>\n<li>Drupal 7, 8</li>\n<li>ElasticSearch</li>\n<li>Elixir</li>\n<li>Emacs Lisp</li>\n<li>EmberJS</li>\n<li>Emmet</li>\n<li>Erlang</li>\n<li>Express</li>\n<li>ExpressionEngine</li>\n<li>ExtJS</li>\n<li>Flask</li>\n<li>Font Awesome</li>\n<li>Foundation</li>\n<li>GLib</li>\n<li>Go</li>\n<li>Gradle DSL</li>\n<li>Gradle Java API</li>\n<li>Gradle User Guide</li>\n<li>Grails</li>\n<li>Groovy, Groovy JDK</li>\n<li>Grunt</li>\n<li>Gulp</li>\n<li>Haml</li>\n<li>Handlebars</li>\n<li>Haskell</li>\n<li>HTML</li>\n<li>Ionic</li>\n<li>Jasmine</li>\n<li>Java EE6, EE7, EE8</li>\n<li>Java SE6, SE7, SE8, SE9</li>\n<li>JavaFX</li>\n<li>JavaScript</li>\n<li>Jekyll</li>\n<li>Jinja</li>\n<li>Joomla</li>\n<li>jQuery / jQuery Mobile / jQuery UI</li>\n<li>Julia</li>\n<li>KnockoutJS</li>\n<li>Kobold2D</li>\n<li>Laravel</li>\n<li>LaTeX</li>\n<li>Less</li>\n<li>Lo-Dash</li>\n<li>Lua 5.1, 5.2, 5.3</li>\n<li>MarionetteJS</li>\n<li>Markdown</li>\n<li>MatPlotLib</li>\n<li>Meteor</li>\n<li>Mocha</li>\n<li>MomentJS</li>\n<li>MongoDB</li>\n<li>Mongoose</li>\n<li>Mono</li>\n<li>MooTools</li>\n<li>MySQL</li>\n<li>Neat</li>\n<li>NET Framework</li>\n<li>Nginx</li>\n<li>NodeJS</li>\n<li>NumPy</li>\n<li>OCaml</li>\n<li>OpenCV</li>\n<li>OpenGL 2, 3, 4</li>\n<li>Pandas</li>\n<li>Perl</li>\n<li>Phalcon</li>\n<li>PhoneGap</li>\n<li>PHP</li>\n<li>PHPUnit</li>\n<li>Play Java</li>\n<li>Play Scala</li>\n<li>Polymer.dart</li>\n<li>PostgreSQL</li>\n<li>Processing</li>\n<li>PrototypeJS</li>\n<li>Pug</li>\n<li>Puppet</li>\n<li>Python 2, 3</li>\n<li>Qt 4, 5</li>\n<li>R</li>\n<li>Racket</li>\n<li>React</li>\n<li>Redis</li>\n<li>RequireJS</li>\n<li>Ruby 2, 3, 4, 5</li>\n<li>RubyMotion</li>\n<li>Rust</li>\n<li>SailsJS</li>\n<li>SaltStack</li>\n<li>Sass</li>\n<li>Scala</li>\n<li>SciPy</li>\n<li>Semantic UI</li>\n<li>Sencha Touch</li>\n<li>Sinon</li>\n<li>Smarty</li>\n<li>Sparrow</li>\n<li>Spring Framework</li>\n<li>SQLAlchemy</li>\n<li>SQLite</li>\n<li>Statamic</li>\n<li>Stylus</li>\n<li>Susy</li>\n<li>SVG</li>\n<li>Swift</li>\n<li>Symfony</li>\n<li>Tcl</li>\n<li>Tornado</li>\n<li>Twig</li>\n<li>Twisted</li>\n<li>TypeScript</li>\n<li>TYPO3</li>\n<li>UnderscoreJS</li>\n<li>Unity 3D</li>\n<li>Vagrant</li>\n<li>Vim</li>\n<li>VMware vSphere</li>\n<li>VueJS</li>\n<li>WordPress</li>\n<li>Xamarin</li>\n<li>Xojo</li>\n<li>XSLT</li>\n<li>Yii</li>\n<li>YUI</li>\n<li>Zend Framework 1, 2,3</li>\n<li>ZeptoJS</li>\n</ul>\n<p>All of those docsets are generously provided by Dash. All docsets are up-to-date and maintained with utmost care. You can also create your own!</p>\n<p>&nbsp;</p>\n<blockquote><p>https://www.ostechnix.com/zeal-an-offline-documentation-browser-for-developers/</p></blockquote>\n",
          "slug": "zeal-an-offline-documentation-browser-for-developers",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/zeal-an-offline-documentation-browser-for-developers/",
          "date": "2018-03-31T18:52:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI1MA==",
        "node": {
          "id": "cG9zdDoyNTA=",
          "title": "Install VirtualBox on Manjaro",
          "content": "<blockquote><p><a href=\"https://wiki.manjaro.org/index.php?title=VirtualBox\">https://wiki.manjaro.org/index.php?title=VirtualBox</a></p></blockquote>\n",
          "slug": "install-virtualbox-on-manjaro",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/install-virtualbox-on-manjaro/",
          "date": "2018-03-31T16:52:48",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI0OA==",
        "node": {
          "id": "cG9zdDoyNDg=",
          "title": "Problem of  NTFS partition mount as read only in linux",
          "content": "<p>Performing a <a title=\"full shutdown of Windows\" href=\"https://blogs.technet.microsoft.com/askperf/2012/10/25/windows-8-windows-server-2012-faster-boot-process/\" rel=\"noreferrer\">full shutdown of Windows</a> will allow the drives to be fully mounted by Ubuntu. This can be accomplished by holding the SHIFT key as you press the &#8220;Shut down&#8221; button on the &#8220;Power&#8221; menu.</p>\n<blockquote><p>https://askubuntu.com/questions/70281/why-does-my-ntfs-partition-mount-as-read-only</p></blockquote>\n",
          "slug": "problem-of-ntfs-partition-mount-as-read-only-in-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/31/problem-of-ntfs-partition-mount-as-read-only-in-linux/",
          "date": "2018-03-31T14:58:55",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI0Ng==",
        "node": {
          "id": "cG9zdDoyNDY=",
          "title": "FCM (Firebase Cloud Messaging) Push Notification with Asp.Net",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"csharp\"> public class Notification\r\n{\r\n    private string serverKey = \"kkkkk\";\r\n    private string senderId = \"iiddddd\";\r\n    private string webAddr = \"https://fcm.googleapis.com/fcm/send\";\r\n\r\n    public string SendNotification(string DeviceToken, string title ,string msg )\r\n    {\r\n        var result = \"-1\";\r\n        var httpWebRequest = (HttpWebRequest)WebRequest.Create(webAddr);\r\n        httpWebRequest.ContentType = \"application/json\";\r\n        httpWebRequest.Headers.Add(string.Format(\"Authorization: key={0}\", serverKey));\r\n        httpWebRequest.Headers.Add(string.Format(\"Sender: id={0}\", senderId));\r\n        httpWebRequest.Method = \"POST\";\r\n\r\n        var payload = new\r\n        {\r\n            to = DeviceToken,\r\n            priority = \"high\",\r\n            content_available = true,\r\n            notification = new\r\n            {\r\n                body = msg,\r\n                title = title\r\n            },\r\n        };\r\n        var serializer = new JavaScriptSerializer();\r\n        using (var streamWriter = new StreamWriter(httpWebRequest.GetRequestStream()))\r\n        {\r\n            string json = serializer.Serialize(payload);\r\n            streamWriter.Write(json);\r\n            streamWriter.Flush();\r\n        }\r\n\r\n        var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();\r\n        using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))\r\n        {\r\n            result = streamReader.ReadToEnd();\r\n        }\r\n        return result;\r\n    }\r\n}</pre>\n<p>&nbsp;</p>\n",
          "slug": "fcm-firebase-cloud-messaging-push-notification-with-asp-net",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/27/fcm-firebase-cloud-messaging-push-notification-with-asp-net/",
          "date": "2018-03-27T14:44:30",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": ".Net"
              },
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIzNg==",
        "node": {
          "id": "cG9zdDoyMzY=",
          "title": "Modern Frontend Developer in 2018",
          "content": "<blockquote><p><a href=\"https://medium.com/tech-tajawal/modern-frontend-developer-in-2018-4c2072fa2b9c\">https://medium.com/tech-tajawal/modern-frontend-developer-in-2018-4c2072fa2b9c</a></p></blockquote>\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"13a3\" class=\"graf graf--p graf-after--h3\">Before we begin with this post, just to give you an idea about <a class=\"markup--anchor markup--p-anchor\" href=\"http://twitter.com/kamranahmedse\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"http://twitter.com/kamranahmedse\">me</a> and about this roadmap; I have been doing the Fullstack Development for the past 5 years and currently working as a lead engineer at <a class=\"markup--anchor markup--p-anchor\" href=\"http://tajawal.com/\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"http://tajawal.com\">tajawal</a> where I have to wear many different hats. It is not only my hobby but also one of my job responsibilities to keep an eye on the trends and to keep the other developers well trained. I see a lot of confusion among the beginners (and experienced alike) when it comes to staying up to date. I had lots of friends and emails asking me for guidance back in 2017 on what should they learn if they want to be in this career. So to save myself the hassle and to help the others, I decided to prepare these charts once and for all, so that whenever somebody would ask, I would just share the link to these charts. And this is how these charts were born.</p>\n<div id=\"f719\" class=\"graf graf--mixtapeEmbed graf-after--p\"><a class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/kamranahmedse/developer-roadmap\" href=\"https://github.com/kamranahmedse/developer-roadmap\" rel=\"nofollow\" data-href=\"https://github.com/kamranahmedse/developer-roadmap\"><strong class=\"markup--strong markup--mixtapeEmbed-strong\">kamranahmedse/developer-roadmap</strong><br />\n<em class=\"markup--em markup--mixtapeEmbed-em\">developer-roadmap &#8211; Roadmap to becoming a web developer in 2018</em>github.com</a></div>\n<blockquote id=\"64c9\" class=\"graf graf--blockquote graf-after--mixtapeEmbed\"><p>Initially they were just flat out recommendations for the tools but I decided yesterday to give them a bit more structure, add details and design them in the steps form so to give you a better idea about what to pick and in what order.</p></blockquote>\n<p id=\"ae47\" class=\"graf graf--p graf-after--blockquote\">I am still working on the <a class=\"markup--anchor markup--p-anchor\" href=\"http://github.com/kamranahmedse/developer-roadmap\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://github.com/kamranahmedse/developer-roadmap\">Backend and DevOps</a> parts but the frontend part is ready and you can have a look at it below.</p>\n<figure id=\"c269\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*U4YtkYu5jY6qh715rwDv6Q.png\" data-width=\"2000\" data-height=\"1124\" data-is-featured=\"true\" data-action=\"zoom\" data-action-value=\"1*U4YtkYu5jY6qh715rwDv6Q.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"41\"></canvas><img class=\"alignnone size-full wp-image-237\" src=\"https://emolike.net/wp-content/uploads/2018/03/1U4YtkYu5jY6qh715rwDv6Q.png\" width=\"1000\" height=\"562\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1U4YtkYu5jY6qh715rwDv6Q.png 1000w, https://emolike.net/wp-content/uploads/2018/03/1U4YtkYu5jY6qh715rwDv6Q-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/03/1U4YtkYu5jY6qh715rwDv6Q-768x432.png 768w, https://emolike.net/wp-content/uploads/2018/03/1U4YtkYu5jY6qh715rwDv6Q-200x112.png 200w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></div>\n</div><figcaption class=\"imageCaption\">Just a random image because thumbnail needs to be a part of the article 🙉</figcaption></figure>\n<p id=\"24a2\" class=\"graf graf--p graf-after--figure\">Before I go about explaining different sections in the roadmap, let me take the time to put this disclaimer here:</p>\n<blockquote id=\"1e0f\" class=\"graf graf--blockquote graf-after--p\"><p>The purpose of this roadmap is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to learn what is hip and trendy. You should <strong class=\"markup--strong markup--blockquote-strong\">grow some understanding of why one tool would be better suited for some cases than the other and remember hip and trendy never means best suited for the job</strong></p></blockquote>\n<p id=\"32a3\" class=\"graf graf--p graf-after--blockquote\">So let’s get started —you can find the detailed image below, however in this article I will explain each step in the roadmap one by one also.</p>\n</div>\n<div class=\"section-inner sectionLayout--outsetColumn\">\n<figure id=\"91f4\" class=\"graf graf--figure graf--layoutOutsetCenter graf-after--p\" data-scroll=\"native\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"> <img class=\"alignnone size-full wp-image-243\" src=\"https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1.png\" width=\"449\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1.png 449w, https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1-105x300.png 105w, https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1-359x1024.png 359w, https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1-200x570.png 200w\" sizes=\"(max-width: 449px) 100vw, 449px\" /></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*_EfUP-q18EfebxPgZ6BCbA.png\" data-width=\"1332\" data-height=\"3790\" data-action=\"zoom\" data-action-value=\"1*_EfUP-q18EfebxPgZ6BCbA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"26\" height=\"75\"><img class=\"alignnone size-full wp-image-243\" src=\"https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1.png\" width=\"449\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1.png 449w, https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1-105x300.png 105w, https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1-359x1024.png 359w, https://emolike.net/wp-content/uploads/2018/03/1_EfUP-q18EfebxPgZ6BCbA-1-200x570.png 200w\" sizes=\"(max-width: 449px) 100vw, 449px\" /></canvas></div>\n</div>\n</figure>\n</div>\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"80f2\" class=\"graf graf--p graf-after--figure\">First thing that you would want to do is learn the basics which includes learning the basics of HTML, CSS and some familiarization with JavaScript syntax.</p>\n<h3 id=\"0ae4\" class=\"graf graf--h3 graf-after--p\">Learn the basics of HTML</h3>\n<p id=\"30b3\" class=\"graf graf--p graf-after--h3\">HTML is what gives structure to your pages. Its like the human skeleton that keeps you standing. First thing that you would want to do is learn the syntax and learn everything that it has to offer. You should focus on learning the below:</p>\n<ul class=\"postList\">\n<li id=\"59d6\" class=\"graf graf--li graf-after--p\">Learn the basics and how to write semantic HTML</li>\n<li id=\"938a\" class=\"graf graf--li graf-after--li\">Understand how to divide page into sections and how to structure the DOM properly</li>\n</ul>\n<p id=\"9070\" class=\"graf graf--p graf-after--li\"><strong class=\"markup--strong markup--p-strong\">Task — </strong>Once you have learnt the basics of HTML, make at least 5 HTML pages. I would recommend you to pick any website e.g. look at any github profile page or twitter’s login page. And focus on structuring the content properly. It is going to be ugly, but don’t worry about that for now and keep your main focus on proper structure.</p>\n<h3 id=\"8ed1\" class=\"graf graf--h3 graf-after--p\">Learn some CSS</h3>\n<p id=\"9caf\" class=\"graf graf--p graf-after--h3\">Now that we have learnt how to prepare the skeleton for the page, its time to add some skin on top of it and to make it look beautiful. CSS — Cascading stylesheets are used to add beauty to your HTML pages.</p>\n<ul class=\"postList\">\n<li id=\"fd9c\" class=\"graf graf--li graf-after--p\">First thing that you will have to do is learn about the syntax and familiarize yourself with the common CSS properties.</li>\n<li id=\"1f98\" class=\"graf graf--li graf-after--li\">Learn about the box model and how to prepare layouts using Grid and Flexbox</li>\n<li id=\"d0bd\" class=\"graf graf--li graf-after--li\">Once you are done with that, learn how to make your websites responsive with media queries.</li>\n</ul>\n<p id=\"5a6c\" class=\"graf graf--p graf-after--li\"><strong class=\"markup--strong markup--p-strong\">Task –– </strong>Once you have the basics out of the way, next thing that you should do is style the HTML pages that you made in the last step. For example if you wrote the HTML page for the Github profile, its time to apply the CSS and make it actually look like the actual Github profile page. Do so with all the 5 pages that you wrote in the previous step.</p>\n<h3 id=\"a2de\" class=\"graf graf--h3 graf-after--p\">Learn the Basics of JavaScript</h3>\n<p id=\"ca01\" class=\"graf graf--p graf-after--h3\">JavaScript is what lets you make your HTML pages more interactive. For example all these sliders, popups and toast notifications that you see on websites and when it reloads certain parts of the pages without having to reload the page, it is all done with JavaScript. In this step, you are going to learn the basics of JavaScript to prepare you for the Journey –</p>\n<ul class=\"postList\">\n<li id=\"1098\" class=\"graf graf--li graf-after--p\">Learn the syntax and the basic constructs of the language.</li>\n<li id=\"83ac\" class=\"graf graf--li graf-after--li\">Learn how to manipulate DOM with JavaScript e.g. how to remove some element from the page, how to add some element, adding and removing classes, applying CSS styles etc with JavaScript.</li>\n<li id=\"472f\" class=\"graf graf--li graf-after--li\">After you are done with that learn and understand the topics such as scopes, closures, hoisting and event bubbling etc.</li>\n<li id=\"532a\" class=\"graf graf--li graf-after--li\">Learn how to make HTTP calls with XHR or Ajax. Ajax is what lets you perform certain actions without reloading the page.</li>\n<li id=\"8cf5\" class=\"graf graf--li graf-after--li\">After you have learnt that now it is time to learn about all the new features in ES6+. ES6 is just a version of JavaScript which introduced lots of interesting updates to the language e.g. classes, different ways to declare variables, added new methods to arrays, string concatenation etc. Most of the articles that you will find online, they will use <a class=\"markup--anchor markup--li-anchor\" href=\"http://babeljs.io/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://babeljs.io/\">Babel</a> to explain ES6 which is a transpiler that converts the <em class=\"markup--em markup--li-em\">new</em> JavaScript to <em class=\"markup--em markup--li-em\">old </em>JavaScript since it is not supported by the old browsers. But don’t worry about Babel for now, just get the idea about the concepts and use them in any of the latest browser which support ES6 for practicing. We will revisit ES6 later on.</li>\n</ul>\n<p id=\"78d8\" class=\"graf graf--p graf-after--li\">You should now be feeling that the things are getting real. You need a pat on the back if you have been following along. These were some of the most important things that you have just learnt 👏</p>\n<h3 id=\"adc0\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">Should I learn jQuery?</strong></h3>\n<p id=\"2b55\" class=\"graf graf--p graf-after--h3\">There was a time when every one was crazy about jQuery and for good reasons; it was a powerful library that provided a wrapper on top of JavaScript and let you perform anything in a browser compatible way. But long gone are those days now, it isn’t being used that much for the new projects but <strong class=\"markup--strong markup--p-strong\">there are still people using it</strong>. You don’t have to learn it but it is really easy and it would be beneficial for you if you want to have a look.</p>\n<h3 id=\"c0d4\" class=\"graf graf--h3 graf-after--p\">Time to Practice</h3>\n<p id=\"0cca\" class=\"graf graf--p graf-after--h3\">I say this a lot and I will say it here again, you don’t learn anything without practice. You might have a momentary feeling that you understand something but it would soon go away if you don’t practice. Make sure that you practice as much as you can, while you are following this roadmap.</p>\n<p id=\"3685\" class=\"graf graf--p graf-after--p\">Go ahead and make some responsive website and add interactivity with JavaScript. You can copy any existing webpage that you might find interesting online but <strong class=\"markup--strong markup--p-strong\">remember to use everything that you have learnt till this point</strong>.</p>\n<p id=\"3f8f\" class=\"graf graf--p graf-after--p\">Once you have made some of the websites, its time to get into the real business now. So go to <a class=\"markup--anchor markup--p-anchor\" href=\"http://github.com/\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"http://github.com\">github.com</a> and search for some projects and try to open some pull requests on some open-source projects. Some of the ideas for pull requested are listed below :</p>\n<ul class=\"postList\">\n<li id=\"d182\" class=\"graf graf--li graf-after--p\">Enhance the UI, make any demo pages responsive or improve the design</li>\n<li id=\"e376\" class=\"graf graf--li graf-after--li\">Look at any of the open issues that you can solve</li>\n<li id=\"190e\" class=\"graf graf--li graf-after--li\">Refactor any of the code that you think can be improved</li>\n</ul>\n<blockquote id=\"506a\" class=\"graf graf--blockquote graf-after--li\"><p>Link <a class=\"markup--anchor markup--blockquote-anchor\" href=\"http://github.com/kamranahmedse/developer-roadmap\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://github.com/kamranahmedse/developer-roadmap\">this repo</a>, tell them you are learning and ask for feedback on your PR and how you can improve.</p></blockquote>\n<p id=\"cf76\" class=\"graf graf--p graf-after--blockquote\">While I would recommend this Github part, it needs some knowledge of git and is optional. You don’t have to do this but if you do, you will find it really beneficial — you will be amazed that how many people are willing to help you if you just ask. You can find many free resources for git, <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.codeschool.com/courses/try-git\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.codeschool.com/courses/try-git\">try this one</a>.</p>\n<h3 id=\"c896\" class=\"graf graf--h3 graf-after--p\">Give yourself a pat on the Back</h3>\n<p id=\"ddde\" class=\"graf graf--p graf-after--h3\">You have got the basics out of the way. If you have learnt everything well, you can find yourself some freelance work or maybe a full time job. However, don’t stop here, there is still a long way to go if you want to have a better career.</p>\n<h3 id=\"3d69\" class=\"graf graf--h3 graf-after--p\">Package Managers</h3>\n<p id=\"37fd\" class=\"graf graf--p graf-after--h3\">Before this point, if you were to use some external library e.g. a plugin or any external widget, you have to download the JavaScript and CSS files manually and put them in the project, and then those libraries or plugins release new versions, you have to download the newer files and put them in your projects again, which is an extreme hassle. Package managers take this hassle away from your workflow. They help you bring external libraries and plugins into your projects, so that you don’t have to worry about copying the libraries manually or go through the hassle of updating them when they release new versions. There is <code class=\"markup--code markup--p-code\">yarn</code> and <code class=\"markup--code markup--p-code\">npm</code> available. Both are almost same, there are only implementation, you can pick any of them and once you learnt to use one the other would be just the same.</p>\n<h3 id=\"fab5\" class=\"graf graf--h3 graf-after--p\">Let’s use what we have learnt</h3>\n<p id=\"0e1d\" class=\"graf graf--p graf-after--h3\">After you have got the basic understanding of package managers, go ahead and install some external library in the webpages that you made above e.g. install some toast plugin and when user clicks a button, show him the toast message or create a login form and do the form validation using some form validation library and play with different options and see how to install different versions.</p>\n<blockquote id=\"483c\" class=\"graf graf--blockquote graf-after--p\"><p>While you are at it, make sure to read about <a class=\"markup--anchor markup--blockquote-anchor\" href=\"https://semver.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://semver.org/\">semantic versioning</a></p></blockquote>\n<h3 id=\"f60b\" class=\"graf graf--h3 graf-after--blockquote\">CSS Preprocessors</h3>\n<p id=\"e542\" class=\"graf graf--p graf-after--h3\">Preprocessors enrich CSS with the functionality that it isn’t capable of by default. There are different many options Sass, Less, Stylus etc. If I were to pick one, I would go for Sass. However, PostCSS has been gaining a lot of traction lately, it is a nice-to-have and is sort of “Babel” for CSS. You can use it stand-alone or on top of Sass also. I would recommend you to learn Sass for now and revisit PostCSS later when you have time.</p>\n<h3 id=\"6e3a\" class=\"graf graf--h3 graf-after--p\">CSS Frameworks</h3>\n<p id=\"2d89\" class=\"graf graf--p graf-after--h3\">You don’t need to learn CSS frameworks any more, however if you would want to pick any, there is one under every rock. The ones that I liked the most among the ones that I tried are Bootstrap, Materialize and Bulma. But if you look at their demand in market I would pick <strong class=\"markup--strong markup--p-strong\">Bootstrap </strong>if I was starting today<strong class=\"markup--strong markup--p-strong\">.</strong></p>\n<h3 id=\"4fdc\" class=\"graf graf--h3 graf-after--p\">CSS Organization</h3>\n<p id=\"2f0f\" class=\"graf graf--p graf-after--h3\">As your applications grow, CSS start to become messy and unmaintainable. There are multiple ways to structure your CSS better for scalability e.g. there is OOCSS, SMACSS, SUITCSS, Atomic and BEM. You should know about the differences between them but I prefer <a class=\"markup--anchor markup--p-anchor\" href=\"http://getbem.com/\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"http://getbem.com/\">BEM</a>.</p>\n<h3 id=\"7fdf\" class=\"graf graf--h3 graf-after--p\">Build Tools</h3>\n<p id=\"0a38\" class=\"graf graf--p graf-after--h3\">Tools to help you in the building/bundling and development of JavaScript applications. This category includes linters, task runners and bundlers.</p>\n<p id=\"874d\" class=\"graf graf--p graf-after--p\">For task runners, there used to be different many options including npm scripts, gulp, grunt etc. But at this time, since webpack lets you handle most of the stuff that we used to do with gulp, there is only npm scripts in the task runners now which you can use to automate the tasks that webpack might be capable of doing. You don’t need to learn Gulp, however later on if you find some time, feel free to have a look at it and see if it can help you in your application.</p>\n<p id=\"476b\" class=\"graf graf--p graf-after--p\">For the linters, again there used to be many options including ESLint, JSLint, JSHint and JSCS. But currently there is mostly ESLint so go for it.</p>\n<p id=\"b1d9\" class=\"graf graf--p graf-after--p\">For the module bundlers, again several different options including Parcel, Webpack, Rollup, Browserify etc. If you have to pick one, close your eyes and pick Webpack for now. Rollup is quite common also but it is recommended to be used mostly for the libraries; when it comes to apps, there is webpack. So teach yourself webpack for now and revisit this section for Rollup later on if you want to.</p>\n<h3 id=\"51a7\" class=\"graf graf--h3 graf-after--p\">Time to Practice — Create something</h3>\n<p id=\"2c54\" class=\"graf graf--p graf-after--h3\">Congrats! You can call yourself 75% modern JavaScript developer now. Now go ahead and create something with all that you have learnt. Maybe create some sort of library in which you have to use Sass and JavaScript. Then use Webpack to convert Sass to CSS and use babel in it to transpile ES6 code. Once you are done with, release it on Github and npm.</p>\n<h3 id=\"bf9e\" class=\"graf graf--h3 graf-after--p\">Pick a Framework</h3>\n<p id=\"8593\" class=\"graf graf--p graf-after--h3\">In the old roadmap, this section used to be next to the basics but I changed it to be after Sass, build tools and package managers because you will be using all of that in the frameworks and without the knowledge, it might seem scary to you.</p>\n<p id=\"5f20\" class=\"graf graf--p graf-after--p\">Again in frameworks, there are several options. But commonly used one these days are <strong class=\"markup--strong markup--p-strong\">React</strong>, <strong class=\"markup--strong markup--p-strong\">Vue</strong> and <strong class=\"markup--strong markup--p-strong\">Angular. </strong>There is more and more demand for React.js these days. However, you can pick any of the listed ones and you will be fine. Personally I would pick React or Angular. Just a quick note here, as a beginner you <strong class=\"markup--strong markup--p-strong\">might</strong> find Angular to be a bit easier comparatively, probably because it supports almost everything out of the box e.g. powerful router with support for lazy loading, HTTP client with support for interceptors, dependency injection, component CSS encapsulation etc without having to worry about picking external libraries. But React definitely has an upper hand looking at the community around it and the way team at facebook has been working to improve it. Just make sure to not pick anything because of the hype of it, google it, compare and see what suites you best.</p>\n<p id=\"e302\" class=\"graf graf--p graf-after--p\">I will leave the comparison and my personal experience with both for another post but since this post is about learning, here is how you might find the learning curves for Angular and React</p>\n<blockquote id=\"538e\" class=\"graf graf--blockquote graf-after--p\"><p><em class=\"markup--em markup--blockquote-em\">Learn curves in the graph below consider the fact that you already have an understanding of TypeScript and basic idea of Rx.JS. For the “why” I will cover that in some future post but mainly it is because of some of the standardization and some of the key features that angular provides out of the box. But </em><strong class=\"markup--strong markup--blockquote-strong\"><em class=\"markup--em markup--blockquote-em\">that doesn’t mean React is bad, both have their own place, I will cover that extensively in some upcoming post.</em></strong></p></blockquote>\n<blockquote id=\"8ac7\" class=\"graf graf--blockquote graf-after--blockquote\"><p><em class=\"markup--em markup--blockquote-em\">Have a look at both and see what suites you best.</em></p></blockquote>\n</div>\n<div class=\"section-inner sectionLayout--outsetColumn\">\n<figure id=\"c03d\" class=\"graf graf--figure graf--layoutOutsetCenter graf-after--blockquote\" data-scroll=\"native\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*j8mUsMxSnyJMix7aFiwLeA.png\" data-width=\"1069\" data-height=\"460\" data-action=\"zoom\" data-action-value=\"1*j8mUsMxSnyJMix7aFiwLeA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"31\"></canvas><img class=\"alignnone size-full wp-image-239\" src=\"https://emolike.net/wp-content/uploads/2018/03/1j8mUsMxSnyJMix7aFiwLeA.png\" width=\"1069\" height=\"460\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1j8mUsMxSnyJMix7aFiwLeA.png 1069w, https://emolike.net/wp-content/uploads/2018/03/1j8mUsMxSnyJMix7aFiwLeA-300x129.png 300w, https://emolike.net/wp-content/uploads/2018/03/1j8mUsMxSnyJMix7aFiwLeA-768x330.png 768w, https://emolike.net/wp-content/uploads/2018/03/1j8mUsMxSnyJMix7aFiwLeA-1024x441.png 1024w, https://emolike.net/wp-content/uploads/2018/03/1j8mUsMxSnyJMix7aFiwLeA-200x86.png 200w\" sizes=\"(max-width: 1069px) 100vw, 1069px\" /></div>\n</div>\n</figure>\n</div>\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"1957\" class=\"graf graf--p graf-after--figure\">Once you have made your choice for framework, there are certain other things that you might have to learn. For example if you decided to go with <strong class=\"markup--strong markup--p-strong\">React</strong>; you might have to learn Redux or Mobx for the state management, depending upon the size of application that you will be working. Mobx is suitable for small to mid-sized applications, Redux is more suitable for larger scale applications. And you might even not need any of them and depend upon the native state management in React if your app allows that.</p>\n<p id=\"47c5\" class=\"graf graf--p graf-after--p\">If you pick Angular, you will have to do <strong class=\"markup--strong markup--p-strong\">TypeScript </strong>(you can develop angular applications without it also but it is recommended to use it) and <strong class=\"markup--strong markup--p-strong\">Rx.js </strong>which will also benefit you out of your Angular applications. It is a really powerful library and is also suitable for functional programming.</p>\n<p id=\"b74d\" class=\"graf graf--p graf-after--p\">And if you pick <strong class=\"markup--strong markup--p-strong\">Vue.js,</strong> you might have to learn Vuex which is sort of similar to Redux but for Vue.</p>\n<blockquote id=\"a12d\" class=\"graf graf--blockquote graf-after--p\"><p>You should note that, Redux, Mobx and Rx.js are not just bound to these frameworks, you can use these out in your vanilla JavaScript apps also. Also, if you pick Angular from the list, make sure it is Angular 2+ and not Angular 1+</p></blockquote>\n<h3 id=\"fa56\" class=\"graf graf--h3 graf-after--blockquote\">Time to Practice</h3>\n<p id=\"cfaf\" class=\"graf graf--p graf-after--h3\">Now you know _everything_ that one might need to build a modern JavaScript application. Go ahead and make some application with whatever framework you picked. You can find some of the ideas in the <code class=\"markup--code markup--p-code\">ideas</code> directory in the repository; pick anything and start!</p>\n<p id=\"83d2\" class=\"graf graf--p graf-after--p\">And once you are done making, read about how to measure and improve performance. For example look at Interactivity Time, Page Speed Index, and Lighthouse Score etc</p>\n<h3 id=\"0cda\" class=\"graf graf--h3 graf-after--p\">Progressive WebApps</h3>\n<p id=\"9d8f\" class=\"graf graf--p graf-after--h3\">And once you are done with all of steps listed above, learn about service workers and how to make progress web apps.</p>\n<h3 id=\"6645\" class=\"graf graf--h3 graf-after--p\">Testing your Apps</h3>\n<p id=\"fe92\" class=\"graf graf--p graf-after--h3\">There are lots and lots of different tools for <strong class=\"markup--strong markup--p-strong\">different purposes</strong>. I mostly find myself using a combination of <strong class=\"markup--strong markup--p-strong\">Jest, Mocha, Karma and Enzyme. </strong>However, before you jump and pick any, it would be better if you first understand the different testing types, look at all the options available and use the ones most suitable for your needs.</p>\n<p id=\"740f\" class=\"graf graf--p graf-after--p\">Here is a really nice summary to get you started</p>\n<div id=\"a062\" class=\"graf graf--mixtapeEmbed graf-after--p\"><a class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2018-f68950900bc3\" href=\"https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2018-f68950900bc3\" data-href=\"https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2018-f68950900bc3\"><strong class=\"markup--strong markup--mixtapeEmbed-strong\">An Overview of JavaScript Testing in 2018</strong><br />\n<em class=\"markup--em markup--mixtapeEmbed-em\">This guide is intended to catch you up with the most important reasoning, terms, tools, and approaches to JavaScript…</em>medium.com</a></div>\n<h3 id=\"1523\" class=\"graf graf--h3 graf-after--mixtapeEmbed\">Static Type Checkers</h3>\n<p id=\"285c\" class=\"graf graf--p graf-after--h3\">Static type checkers help you to add type checking to JavaScript. You don’t need to learn these but they really give you superpowers and can be learnt in a few hours and then you can keep . There is mainly <strong class=\"markup--strong markup--p-strong\">TypeScript </strong>and<strong class=\"markup--strong markup--p-strong\"> Flow. </strong>I love TypeScript and would pick it but feel free to check both and pick one of your liking.</p>\n<h3 id=\"79ad\" class=\"graf graf--h3 graf-after--p\">Server Side Rendering</h3>\n<p id=\"4721\" class=\"graf graf--p graf-after--h3\">The skills that you have got till this point should be sufficient to get you a position for any of the “Frontend Engineering” roles. But don’t stop here!</p>\n<p id=\"c9a1\" class=\"graf graf--p graf-after--p\">Learn about server side rendering in whatever framework you picked. There are different options, depending on what framework you are using. For example if you decided to use React, most notable options are <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/zeit/next.js/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/zeit/next.js/\">Next.js</a> and <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/jaredpalmer/after.js\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/jaredpalmer/after.js\">After.js</a>. For angular, there is <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/angular/universal\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/angular/universal\">Universal</a>. And for Vue.js there is <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/nuxt/nuxt.js\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/nuxt/nuxt.js\">Nuxt.js</a>.</p>\n<p id=\"cc77\" class=\"graf graf--p graf-after--p\">There could be things still missing in the roadmap but this is <em class=\"markup--em markup--p-em\">all</em> of what you need for any “Frontend Engineering” role. And remember the key is to practicing as much as you can. It will look scarier in the beginning and you will feel like you are not grasping but that is normal and over time you will feel that you are getting better and better. And don’t remember to ask for help if you are stuck, you will be amazed by how much people are willing to help ..or at least I am 😉 Feel free to befriend me on <a class=\"markup--anchor markup--p-anchor\" href=\"http://twitter.com/kamranahmedse\" target=\"_blank\" rel=\"noopener nofollow\" data-href=\"http://twitter.com/kamranahmedse\">twitter</a> or say hi by <a class=\"markup--anchor markup--p-anchor\" href=\"mailto:kamranahmed.se@gmail.com\" target=\"_blank\" rel=\"noopener\" data-href=\"mailto:kamranahmed.se@gmail.com\">email</a></p>\n<p id=\"1ac4\" class=\"graf graf--p graf-after--p graf--trailing\">And with that this post comes to an end. Until next time, stay tuned!</p>\n</div>\n",
          "slug": "modern-frontend-developer-in-2018",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/27/modern-frontend-developer-in-2018/",
          "date": "2018-03-27T13:15:51",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIzMg==",
        "node": {
          "id": "cG9zdDoyMzI=",
          "title": "how to install Vmware workstation on manjaro",
          "content": "<p><iframe title=\"how to install Vmware workstation on manjaro\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/DlOntdKG0qE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<blockquote><p><a href=\"https://forum.manjaro.org/t/wiki-installing-vmware/19824\">https://forum.manjaro.org/t/wiki-installing-vmware/19824</a></p>\n<p><a href=\"https://wiki.archlinux.org/index.php/VMware\">https://wiki.archlinux.org/index.php/VMware</a></p>\n<p><a href=\"http://appnee.com/vmware-workstation-811-universal-license-keys-for-win-lin/\">http://appnee.com/vmware-workstation-811-universal-license-keys-for-win-lin/</a></p></blockquote>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">sudo mkdir /etc/init.d\r\nsudo pacman -S linux420-headers\r\nyay -S vmware-systemd-services\r\n\r\nchmod +x VMware-Workstation-Full-15.0.2-10952284.x86_64.bundle \r\nsudo ./VMware-Workstation-Full-15.0.2-10952284.x86_64.bundle \r\n\r\nsudo systemctl start vmware\r\nsudo systemctl enable vmware\r\nsudo vmware-modconfig --console --install-all\r\n\r\n</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n",
          "slug": "how-to-install-vmware-workstation-on-manjaro",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/25/how-to-install-vmware-workstation-on-manjaro/",
          "date": "2018-03-25T20:49:33",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              },
              {
                "name": "VM"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIzMA==",
        "node": {
          "id": "cG9zdDoyMzA=",
          "title": "Success Story &#8211; How Inoreader Migrated From Bare-metal Servers to OpenNebula + StorPool",
          "content": "<blockquote><p><a href=\"http://blog.inoreader.com/2018/03/success-story-inoreader-opennebula-storpool.html?m=1\">http://blog.inoreader.com/2018/03/success-story-inoreader-opennebula-storpool.html?m=1</a></p></blockquote>\n",
          "slug": "success-story-how-inoreader-migrated-from-bare-metal-servers-to-opennebula-storpool",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/25/success-story-how-inoreader-migrated-from-bare-metal-servers-to-opennebula-storpool/",
          "date": "2018-03-25T20:17:52",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "deployment"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIyOA==",
        "node": {
          "id": "cG9zdDoyMjg=",
          "title": "opennebula installation in ubuntu 16.04 and using KVM",
          "content": "<p><iframe title=\"opennebula installation in ubuntu 16.04 and using KVM\" width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/GGVsO613Wts?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<blockquote><p>https://opennebula.org/software/</p></blockquote>\n",
          "slug": "opennebula-installation-in-ubuntu-16-04-and-using-kvm",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/25/opennebula-installation-in-ubuntu-16-04-and-using-kvm/",
          "date": "2018-03-25T20:16:50",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIyNg==",
        "node": {
          "id": "cG9zdDoyMjY=",
          "title": "Octoroit OS 2018 Installation Guide and Review",
          "content": "<p>https://www.youtube.com/watch?v=xjo_I9mgyfs</p>\n",
          "slug": "octoroit-os-2018-installation-guide-and-review",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/25/octoroit-os-2018-installation-guide-and-review/",
          "date": "2018-03-25T16:18:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "windows"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIyMw==",
        "node": {
          "id": "cG9zdDoyMjM=",
          "title": "10 Things to do first in Arch Linux",
          "content": "<p><iframe title=\"10 Things to do first in Arch Linux\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/jW4GFGOIUjc?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>&nbsp;</p>\n<p># 1 . Install LTS kernel</p>\n<p>I also recommend to watch the detailed video &#8220;Why and How to install the LTS kernel&#8221; https://youtu.be/b-H3jURTgqk</p>\n<p>Check your current kernel:<br />\numane -r</p>\n<p>Install an LTS kernel and reconfigure grub:<br />\nsudo pacman -S linux-lts<br />\nsudo grub-mkconfig -o /boot/grub/grub.cfg</p>\n<p>You may also install linux-lts-headers.<br />\nReboot and check which kernel is in use with uname -r.</p>\n<p>Remove non-lts kernel<br />\nsudo pacman -Rs linux</p>\n<p># 2. Install Microcode</p>\n<p>For intel processors with grub boot loader:<br />\nsudo pacman -S intel-ucode<br />\nsudo grub-mkconfig -o /boot/grub/grub.cfg</p>\n<p>For AMD processors install linux-firmware package.</p>\n<p># 3. Disable GRUB delay</p>\n<p>Add the following to /etc/default/grub:<br />\n# achieve the fastest possible boot:<br />\nGRUB_FORCE_HIDDEN_MENU=&#8221;true&#8221;</p>\n<p>Then put file 31_hold_shift to /etc/grub.d/.<br />\nDownload 31_hold_shift https://goo.gl/nac6Kp</p>\n<p>Make it executable, and regenerate the grub configuration:<br />\nsudo chmod a+x /etc/grub.d/31_hold_shift<br />\nsudo grub-mkconfig -o /boot/grub/grub.cfg</p>\n<p># 4. Install some key packages</p>\n<p>sudo pacman -S adobe-source-sans-pro-fonts aspell-en enchant gst-libav gst-plugins-good hunspell-en icedtea-web jre8-openjdk languagetool libmythes mythes-en pkgstats ttf-anonymous-pro ttf-bitstream-vera ttf-dejavu ttf-droid ttf-gentium ttf-liberation ttf-ubuntu-font-family</p>\n<p># 5. Set up firewall</p>\n<p>Install ufw:<br />\nsudo pacman -S ufw</p>\n<p>Enable it.<br />\nsudo ufw enable</p>\n<p>Check its status:<br />\nsudo ufw status verbose</p>\n<p>Enable the start-up with the system:<br />\nsudo systemctl enable ufw.service</p>\n<p>Reboot and check the status again. It should be active.</p>\n<p># 6. Encrypt your home directory</p>\n<p>Logged out. Switch to a console with Ctrl+Alt+F2. Login as a root and check that your user own no processes:<br />\nps -U username</p>\n<p>Install the necessary applications:<br />\nsudo pacman -S rsync lsof ecryptfs-utils</p>\n<p>Then encrypt your home directory:<br />\nmodprobe ecryptfs<br />\necryptfs-migrate-home -u username</p>\n<p>Mount your encrypted home.<br />\necryptfs-mount-private</p>\n<p>Unwrap the passphrase and save it somewhere where only you can access it.<br />\necryptfs-unwrap-passphrase</p>\n<p>Run<br />\nls .ecryptfs</p>\n<p>Edit /etc/pam.d/system-auth:</p>\n<p>After the line &#8220;auth required pam_unix.so&#8221; add:<br />\nauth required pam_ecryptfs.so unwrap</p>\n<p>Above the line &#8220;password required pam_unix.so&#8221; insert:<br />\npassword optional pam_ecryptfs.so</p>\n<p>After the line &#8220;session required pam_unix.so&#8221; add:<br />\nsession optional pam_ecryptfs.so unwrap</p>\n<p>Reboot and make sure that you can login to your desktop</p>\n<p># 7. Remove orphans</p>\n<p>sudo pacman -Rns $(pacman -Qtdq)</p>\n<p># 8. Optimize pacman&#8217;s database access speeds</p>\n<p>sudo pacman-optimize</p>\n<p>9. Check for errors</p>\n<p>sudo systemctl &#8211;failed<br />\nsudo journalctl -p 3 -xb</p>\n<p>10. Backup the system</p>\n<p>sudo rsync -aAXvP &#8211;delete &#8211;exclude=/dev/* &#8211;exclude=/proc/* &#8211;exclude=/sys/* &#8211;exclude=/tmp/* &#8211;exclude=/run/* &#8211;exclude=/mnt/* &#8211;exclude=/media/* &#8211;exclude=/lost+found &#8211;exclude=/home/.ecryptfs / /mnt/backupDestination/</p>\n",
          "slug": "10-things-to-do-first-in-arch-linux",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/25/10-things-to-do-first-in-arch-linux/",
          "date": "2018-03-25T14:55:23",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIyMA==",
        "node": {
          "id": "cG9zdDoyMjA=",
          "title": "VMWARE Linux issues",
          "content": "<blockquote>\n<h3 class=\"post-title\">There was a problem updating a software component. Try again later&#8230;</h3>\n</blockquote>\n<div class=\"post-meta\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\">cd /usr/lib\r\nln -s libncursesw.so.6 libncursesw.so.5\r\n\r\n\r\nhttps://d0u9.win/posts/1659865178.html</pre>\n<p>&nbsp;</p>\n</div>\n<blockquote>\n<h3><a class=\"question-hyperlink\" href=\"https://askubuntu.com/questions/537787/enable-3d-hw-acceleration-on-vmware-workstation-10-on-ubuntu-14-04\">Enable 3D HW acceleration on VMWare Workstation </a></h3>\n</blockquote>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">Edit the file ~/.vmware/preferences and look for a line that starts with mks.gl.allowBlacklistedDrivers, if it is not present - you can add it into the file.\r\n\r\nThis should be changed to mks.gl.allowBlacklistedDrivers = \"TRUE\" (note the double quotes around TRUE)\r\n\r\n\r\n\r\n\r\n</pre>\n",
          "slug": "vmware-linux-issues",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/24/vmware-linux-issues/",
          "date": "2018-03-24T11:48:14",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIxNw==",
        "node": {
          "id": "cG9zdDoyMTc=",
          "title": "10 Best Linux Desktop Environments",
          "content": "<p><iframe title=\"10 Best Linux Desktop Environments\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/IIjRWlRqxQ0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "10-best-linux-desktop-environments",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/24/10-best-linux-desktop-environments/",
          "date": "2018-03-24T11:40:26",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIxNQ==",
        "node": {
          "id": "cG9zdDoyMTU=",
          "title": "Manjaro Deepin 17.0.5",
          "content": "<p><iframe title=\"Manjaro Deepin 17.0.5 - See What&#039;s new\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/cwzT6IL9320?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "manjaro-deepin-17-0-5",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/24/manjaro-deepin-17-0-5/",
          "date": "2018-03-24T10:39:05",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIxMg==",
        "node": {
          "id": "cG9zdDoyMTI=",
          "title": "Install Sublime Text on Manjaro",
          "content": "<p>https://www.youtube.com/watch?v=3QTeg1vplLY</p>\n",
          "slug": "install-sublime-text-on-manjaro",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/23/install-sublime-text-on-manjaro/",
          "date": "2018-03-23T20:46:59",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIxMA==",
        "node": {
          "id": "cG9zdDoyMTA=",
          "title": "Common ajax caller in javascript",
          "content": "<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// Common ajax caller\r\nfunction AjaxCall(url,successfunction){\r\n  var targetUrl=url;\r\n  $.ajax({\r\n    'url': targetUrl,\r\n    'type': 'GET',\r\n    'dataType': 'json',\r\n    'success': successfunction,\r\n    'error': function() {\r\n      alert(\"error\");\r\n    }\r\n  });\r\n}\r\n\r\n// Calling Ajax\r\n$(document).ready(function() {\r\n  AjaxCall(\"productData.txt\",ajaxSuccessFunction);\r\n});\r\n\r\n// Function details of success function\r\nfunction ajaxSuccessFunction(d){\r\n  alert(d.Pioneer.Product[0].category);\r\n}</pre>\n<p>&nbsp;</p>\n",
          "slug": "common-ajax-caller-in-javascript",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/23/common-ajax-caller-in-javascript/",
          "date": "2018-03-23T18:18:02",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "javascript"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIwOA==",
        "node": {
          "id": "cG9zdDoyMDg=",
          "title": "How to install MS ttf fonts",
          "content": "<p>download the font package, extract it with e.g. File Roller, and put it in your <code>$HOME/.local/share/fonts</code> directory:</p>\n<blockquote>\n<pre><code class=\"hljs nginx\">&lt;span class=\"hljs-attribute\"&gt;yaourt&lt;/span&gt; -S ttf-ms-fonts\nhttps://forum.manjaro.org/t/how-to-install-ms-ttf-fonts/22309/5\n</code></pre>\n</blockquote>\n",
          "slug": "how-to-install-ms-ttf-fonts",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/23/how-to-install-ms-ttf-fonts/",
          "date": "2018-03-23T14:41:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIwNg==",
        "node": {
          "id": "cG9zdDoyMDY=",
          "title": "inux Numlock fix! numlock always on after bootup.",
          "content": "<p><iframe title=\"Manjaro linux Numlock fix! numlock always on after bootup.\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/3mnVqvLxuUw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<blockquote><p>https://wiki.archlinux.org/index.php/Activating_Numlock_on_Bootup</p></blockquote>\n",
          "slug": "inux-numlock-fix-numlock-always-on-after-bootup",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/23/inux-numlock-fix-numlock-always-on-after-bootup/",
          "date": "2018-03-23T13:47:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE5OQ==",
        "node": {
          "id": "cG9zdDoxOTk=",
          "title": "10x Performance Increases: Optimizing a Static Site",
          "content": "<p id=\"bdbd\" class=\"graf graf--p graf-after--h3\">A couple months ago, I was traveling outside of the U.S. and wanted to show a friend a link on my personal (static) site. I tried navigating to my website, but it took much longer than I anticipated. There’s absolutely nothing dynamic about it — it has animations and some responsive design, but the content always stays the same. In Italy, at 8mb/s, it was a different picture entirely. I was pretty appalled at the results, ~6s to DOMContentLoaded, and 8.2s for a full page load. There were 50 requests for a <em class=\"markup--em markup--p-em\">static site</em>, with 2.9mb of total data transferred. I was accustomed to my 1Gb/s, low latency internet in Los Angeles connecting to my server in San Francisco.</p>\n<figure id=\"83ad\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*sxIvkkEHivt-AUTGisUgUg.png\" data-width=\"1042\" data-height=\"785\" data-action=\"zoom\" data-action-value=\"1*sxIvkkEHivt-AUTGisUgUg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"55\"></canvas><img class=\"alignnone size-full wp-image-201\" src=\"https://emolike.net/wp-content/uploads/2018/03/1sxIvkkEHivt-AUTGisUgUg.png\" width=\"1000\" height=\"753\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1sxIvkkEHivt-AUTGisUgUg.png 1000w, https://emolike.net/wp-content/uploads/2018/03/1sxIvkkEHivt-AUTGisUgUg-300x226.png 300w, https://emolike.net/wp-content/uploads/2018/03/1sxIvkkEHivt-AUTGisUgUg-768x578.png 768w, https://emolike.net/wp-content/uploads/2018/03/1sxIvkkEHivt-AUTGisUgUg-200x151.png 200w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></div>\n</div>\n</figure>\n<p id=\"1b33\" class=\"graf graf--p graf-after--figure\">This was my first foray into optimizations. Up to this point, any time I wanted to add a library or resource, I would just throw it in and point to it with <em class=\"markup--em markup--p-em\">src=”…”</em>. I had paid zero attention to any form of performance, from caching to inlining to lazy loading.</p>\n<p id=\"5c4f\" class=\"graf graf--p graf-after--p\">I started looking around for people with similar experiences. Unfortunately, a lot of the literature on static optimizations gets dated fairly quickly — recommendations from 2010 or 2011 discussed libraries or made assumptions that simply weren’t true anymore, or just repeated the same maxims over and over.</p>\n<p id=\"3b9c\" class=\"graf graf--p graf-after--p\">However, I did find two great sources of information — <a class=\"markup--anchor markup--p-anchor\" href=\"https://hpbn.co/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://hpbn.co\">High Performance Browser Networking</a> and <a class=\"markup--anchor markup--p-anchor\" href=\"https://danluu.com/octopress-speedup/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://danluu.com/octopress-speedup/\">Dan Luu’s similar experience with optimizing static sites</a>. While I didn’t go as far as Dan in stripping formatting and content, I did manage to get my page load to be roughly 10x faster, to about a fifth of a second for DOMContentLoaded and only 355ms for full page load.</p>\n<figure id=\"3ba5\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*LljXapRoovLOfns4dty-OQ.png\" data-width=\"1152\" data-height=\"806\" data-action=\"zoom\" data-action-value=\"1*LljXapRoovLOfns4dty-OQ.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"51\"></canvas><img class=\"alignnone size-full wp-image-202\" src=\"https://emolike.net/wp-content/uploads/2018/03/1LljXapRoovLOfns4dty-OQ.png\" width=\"1000\" height=\"699\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1LljXapRoovLOfns4dty-OQ.png 1000w, https://emolike.net/wp-content/uploads/2018/03/1LljXapRoovLOfns4dty-OQ-300x210.png 300w, https://emolike.net/wp-content/uploads/2018/03/1LljXapRoovLOfns4dty-OQ-768x537.png 768w, https://emolike.net/wp-content/uploads/2018/03/1LljXapRoovLOfns4dty-OQ-200x140.png 200w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></div>\n</div>\n</figure>\n<h3 id=\"ad76\" class=\"graf graf--h3 graf-after--figure\">The Process</h3>\n<p id=\"9220\" class=\"graf graf--p graf-after--h3\">The first step of the process was to profile the site. I wanted to figure out what was taking the longest, and how to best parallelize everything. I ran various tools to profile my site and test it from various locations around the world, including:</p>\n<ul class=\"postList\">\n<li id=\"980a\" class=\"graf graf--li graf-after--p\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://tools.pingdom.com/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://tools.pingdom.com/\">https://tools.pingdom.com/</a></li>\n<li id=\"b980\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"http://www.webpagetest.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://www.webpagetest.org/\">www.webpagetest.org/</a></li>\n<li id=\"9854\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://tools.keycdn.com/speed\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://tools.keycdn.com/speed\">https://tools.keycdn.com/speed</a></li>\n<li id=\"659b\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://developers.google.com/web/tools/lighthouse/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://developers.google.com/web/tools/lighthouse/\">https://developers.google.com/web/tools/lighthouse/</a></li>\n<li id=\"ba53\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://developers.google.com/speed/pagespeed/insights/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://developers.google.com/speed/pagespeed/insights/\">https://developers.google.com/speed/pagespeed/insights/</a></li>\n<li id=\"e004\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://webspeedtest.cloudinary.com/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://webspeedtest.cloudinary.com/\">https://webspeedtest.cloudinary.com/</a></li>\n</ul>\n<p id=\"ec12\" class=\"graf graf--p graf-after--li\">Some of these offered suggestions on improvements, but there’s only so much you can do when your static site has 50 requests for everything from a spacer gif left as a remnant from the 90s to assets that aren’t used (I was loading 6 fonts and only using 1)</p>\n<figure id=\"d498\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*61ngDdpQfLqBo-I8F_tuqw.png\" data-width=\"1900\" data-height=\"2052\" data-action=\"zoom\" data-action-value=\"1*61ngDdpQfLqBo-I8F_tuqw.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"69\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-203\" src=\"https://emolike.net/wp-content/uploads/2018/03/161ngDdpQfLqBo-I8F_tuqw.png\" width=\"1000\" height=\"1080\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/161ngDdpQfLqBo-I8F_tuqw.png 1000w, https://emolike.net/wp-content/uploads/2018/03/161ngDdpQfLqBo-I8F_tuqw-278x300.png 278w, https://emolike.net/wp-content/uploads/2018/03/161ngDdpQfLqBo-I8F_tuqw-768x829.png 768w, https://emolike.net/wp-content/uploads/2018/03/161ngDdpQfLqBo-I8F_tuqw-948x1024.png 948w, https://emolike.net/wp-content/uploads/2018/03/161ngDdpQfLqBo-I8F_tuqw-200x216.png 200w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></div>\n</div><figcaption class=\"imageCaption\">Timeline for my site — I tested this on the Web Archive as I didn’t screenshot the original one, but it looks similar enough to what I saw a few months ago.</figcaption></figure>\n<p id=\"8fb0\" class=\"graf graf--p graf-after--figure\">I wanted to improve everything that I had control over — from the contents and speed of the javascript to the actual web server (Nginx) and DNS settings.</p>\n<h3 id=\"c709\" class=\"graf graf--h3 graf-after--p\">Optimizations</h3>\n<h4 id=\"012a\" class=\"graf graf--h4 graf-after--h3\">Minify and Coalesce Resources</h4>\n<p id=\"a8d3\" class=\"graf graf--p graf-after--h4\">The first I noticed was that I was making a dozen requests each for CSS and JS (without any form of HTTP keepalive), and to various sites, some of which were https. This added multiple round trips to various CDNs or servers, and some JS files were requesting others, which caused the blocking cascade seen above.</p>\n<p id=\"024f\" class=\"graf graf--p graf-after--p\">I used <a class=\"markup--anchor markup--p-anchor\" href=\"https://webpack.js.org/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://webpack.js.org/\">webpack</a> to coalesce all my resources into a single js file. Any time I make a change to my content, it automatically minifies and turns all my dependencies into a single file.</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">const UglifyJsPlugin = require('uglifyjs-webpack-plugin');\r\n\r\nmodule.exports = {\r\n    entry: './js/app.js',\r\n    output: {\r\n        path: __dirname + '/dist',\r\n        filename: 'bundle.js'\r\n    },\r\n    module: {\r\n        loaders: [\r\n            {\r\n                test: /\\.css$/,\r\n                loaders: [\r\n                    'style-loader',\r\n                    'css-loader'\r\n                ]\r\n            },\r\n            {\r\n                test: /(fonts|images)/,\r\n                loaders: [\r\n                    'url-loader'\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    plugins: [\r\n        new UglifyJsPlugin({\r\n            test: /\\.js($|\\?)/i\r\n        })\r\n    ]\r\n\r\n};</pre>\n<p id=\"d4e1\" class=\"graf graf--p graf-after--figure\">I played around with different options — currently, this single bundle.js file is in the &lt;head&gt; of my site, and is blocking. It’s final size is 829kb, and that includes every single non-image asset (fonts, css, all libraries and dependencies, and js). The vast majority of this is are the font-awesome fonts, which make up 724 of the 829kb.</p>\n<p id=\"1c7b\" class=\"graf graf--p graf-after--p\">I went through the font awesome fonts and css and stripped all but the three icons I was using — fa-github, fa-envelope, and fa-code. I used a service called <a class=\"markup--anchor markup--p-anchor\" href=\"http://fontello.com/\" target=\"_blank\" rel=\"noopener\" data-href=\"http://fontello.com/\">fontello</a> to only pull the icons I needed. New size? 94kb.</p>\n<p id=\"e2ad\" class=\"graf graf--p graf-after--p\">The way the site is currently built, it won’t look correct if we only have stylesheets, so I accepted the blocking nature of a single bundle.js. Load times are ~118ms, which is more than an order of magnitude better than above.</p>\n<p id=\"2914\" class=\"graf graf--p graf-after--p\">This also had a few added benefits — I was no longer pointing to 3rd party resources or CDNs, so the user would not need to 1) perform a DNS query to that resource, 2) Perform the https handshake, and 3) actually wait for the full download from that resource.</p>\n<p id=\"6914\" class=\"graf graf--p graf-after--p\">While CDNs and distributed caching might make sense for large scale, distributed sites, it does not make sense for my small static site. The additional hundred milliseconds or so are a worthwhile tradeoff.</p>\n<h4 id=\"c14f\" class=\"graf graf--h4 graf-after--p\">Compress Resources</h4>\n<p id=\"35d5\" class=\"graf graf--p graf-after--h4\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"anon\">I was loading an 8mb sized headshot and then displaying it at 10% width/height. This wasn’t just a lack of optimization — this was <em class=\"markup--em markup--p-em\">almost negligent usage of users bandwidth</em>.</span></p>\n<figure id=\"d2b6\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*h79KSROW3oY6KWfQm6u5yA.png\" data-width=\"2490\" data-height=\"676\" data-is-featured=\"true\" data-action=\"zoom\" data-action-value=\"1*h79KSROW3oY6KWfQm6u5yA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"19\"></canvas><img class=\"alignnone size-full wp-image-204\" src=\"https://emolike.net/wp-content/uploads/2018/03/1h79KSROW3oY6KWfQm6u5yA.png\" width=\"1000\" height=\"271\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1h79KSROW3oY6KWfQm6u5yA.png 1000w, https://emolike.net/wp-content/uploads/2018/03/1h79KSROW3oY6KWfQm6u5yA-300x81.png 300w, https://emolike.net/wp-content/uploads/2018/03/1h79KSROW3oY6KWfQm6u5yA-768x208.png 768w, https://emolike.net/wp-content/uploads/2018/03/1h79KSROW3oY6KWfQm6u5yA-200x54.png 200w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></div>\n</div>\n</figure>\n<p id=\"0406\" class=\"graf graf--p graf-after--figure\">I compressed all my images using <a class=\"markup--anchor markup--p-anchor\" href=\"https://webspeedtest.cloudinary.com/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://webspeedtest.cloudinary.com/\">https://webspeedtest.cloudinary.com/</a> — it also suggested I switch to <a class=\"markup--anchor markup--p-anchor\" href=\"https://developers.google.com/speed/webp/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://developers.google.com/speed/webp/\">webp</a>, but I wanted to remain as compatible with as many browsers as possible, so I stuck to jpg.</p>\n<h4 id=\"7e73\" class=\"graf graf--h4 graf-after--p\">Improve Web Server — HTTP2, TLS, and More</h4>\n<p id=\"d180\" class=\"graf graf--p graf-after--h4\">The first thing I did was transition to https — when I started, I was running Nginx bare on port 80, just serving files from /var/www/html</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">server{\r\n    listen 80;\r\n    server_name jonlu.ca www.jonlu.ca;\r\n\r\n    root /var/www/html;\r\n    index index.html index.htm;\r\n    location ~ /.git/ {\r\n          deny all;\r\n    }\r\n    location ~ / {\r\n        allow all;\r\n    }\r\n}</pre>\n<p id=\"15d8\" class=\"graf graf--p graf-after--figure\">I started by setting up https and redirecting all http requests to https. I got my TLS certificate from <a class=\"markup--anchor markup--p-anchor\" href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://letsencrypt.org/\">Let’s Encrypt </a>(an absolutely amazing organization that just started signing <a class=\"markup--anchor markup--p-anchor\" href=\"https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579\" target=\"_blank\" rel=\"noopener\" data-href=\"https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579\">wildcard certificates</a> as well!)</p>\n<figure id=\"f5ff\" class=\"graf graf--figure graf--iframe graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">server {\r\n    listen 443 ssl http2;\r\n    listen [::]:443 ssl http2;\r\n    server_name jonlu.ca www.jonlu.ca;\r\n\r\n    root /var/www/html;\r\n    index index.html index.htm;\r\n\r\n    location ~ /.git {\r\n        deny all;\r\n    }\r\n    \r\n    location / {\r\n        allow all;\r\n    }\r\n\r\n    ssl_certificate /etc/letsencrypt/live/jonlu.ca/fullchain.pem; # managed by Certbot\r\n    ssl_certificate_key /etc/letsencrypt/live/jonlu.ca/privkey.pem; # managed by Certbot\r\n}</pre>\n<p>&nbsp;</p>\n</div>\n</figure>\n<p id=\"1947\" class=\"graf graf--p graf-after--figure\">Justy by adding the http2 directive, Nginx was able to take advantage of all the modern, baked in advantages of the newest HTTP features. Note that if you want to take advantage of HTTP2 (previously SPDY), you <em class=\"markup--em markup--p-em\">must</em> use HTTPS. Read more about it <a class=\"markup--anchor markup--p-anchor\" href=\"https://hpbn.co/http2/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://hpbn.co/http2/\">here</a>.</p>\n<h4 id=\"5a77\" class=\"graf graf--h4 graf-after--p\">Utilize Caching &amp; Compression Directives</h4>\n<p id=\"e820\" class=\"graf graf--p graf-after--h4\">What more could be accomplished through just Nginx? The first things that jump out are caching and compression directives.</p>\n<p id=\"0fb8\" class=\"graf graf--p graf-after--p\">I was sending raw, uncompressed HTML. With just a single <em class=\"markup--em markup--p-em\">gzip on; </em>line, I was able to go from 16000 bytes to 8000 bytes, a decrease of 50%.</p>\n<p id=\"4e21\" class=\"graf graf--p graf-after--p\">Additionally, my site changes fairly infrequently, so I wanted the resources to be cached for as long as possible. This would make it so that, on subsequent visits, users would not need to redownload all assets (especially bundle.js).</p>\n<p id=\"b22c\" class=\"graf graf--p graf-after--p\">My updated server config looks like this. Note that I won’t touch on all the changes I made, such as TCP settings changes, gzip directives, and file cache. If you’d like to know more about these, <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.nginx.com/blog/tuning-nginx/\" target=\"_blank\" rel=\"noopener\" data-href=\"https://www.nginx.com/blog/tuning-nginx/\">read this article on tuning Nginx.</a></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">worker_processes auto;\r\npid /run/nginx.pid;\r\nworker_rlimit_nofile 30000;\r\n\r\nevents {\r\n    worker_connections 65535;\r\n    multi_accept on;\r\n    use epoll;\r\n}\r\n\r\nhttp {\r\n\r\n    ##\r\n    # Basic Settings\r\n    ##\r\n\r\n    sendfile on;\r\n    tcp_nopush on;\r\n    tcp_nodelay on;\r\n    keepalive_timeout 65;\r\n    types_hash_max_size 2048;\r\n\r\n    # Turn of server tokens specifying nginx version\r\n    server_tokens off;\r\n\r\n    open_file_cache max=200000 inactive=20s;\r\n    open_file_cache_valid 30s;\r\n    open_file_cache_min_uses 2;\r\n    open_file_cache_errors on;\r\n\r\n    include /etc/nginx/mime.types;\r\n    default_type application/octet-stream;\r\n\r\n    add_header Referrer-Policy \"no-referrer\";\r\n\r\n    ##\r\n    # SSL Settings\r\n    ##\r\n\r\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\r\n    ssl_prefer_server_ciphers on;\r\n    ssl_dhparam /location/to/dhparam.pem;\r\n    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\r\n\r\n    ssl_session_timeout 1d;\r\n    ssl_session_cache shared:SSL:50m;\r\n    ssl_stapling on;\r\n    ssl_stapling_verify on;\r\n    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';\r\n\r\n    ssl_certificate /location/to/fullchain.pem;\r\n    ssl_certificate_key /location/to/privkey.pem;\r\n\r\n    ##\r\n    # Logging Settings\r\n    ##\r\n\r\n    access_log /var/log/nginx/access.log;\r\n    error_log /var/log/nginx/error.log;\r\n\r\n    ##\r\n    # Gzip Settings\r\n    ##\r\n\r\n    gzip on;\r\n    gzip_disable \"msie6\";\r\n\r\n    gzip_vary on;\r\n    gzip_proxied any;\r\n    gzip_comp_level 6;\r\n    gzip_buffers 16 8k;\r\n    gzip_http_version 1.1;\r\n    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;\r\n    gzip_min_length 256;\r\n\r\n    ##\r\n    # Virtual Host Configs\r\n    ##\r\n\r\n    include /etc/nginx/conf.d/*.conf;\r\n    include /etc/nginx/sites-enabled/*;\r\n}</pre>\n<p id=\"d0dc\" class=\"graf graf--p graf-after--figure\">And the corresponding server block</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"null\">server {\r\n    listen 443 ssl http2;\r\n\r\n    server_name jonlu.ca www.jonlu.ca;\r\n\r\n    root /var/www/html;\r\n    index index.html index.htm;\r\n\r\n    location ~ /.git/ {\r\n        deny all;\r\n    }\r\n\r\n    location ~* /(images|js|css|fonts|assets|dist) {\r\n        expires 15d;\r\n    }\r\n\r\n}</pre>\n<h4 id=\"6113\" class=\"graf graf--h4 graf-after--figure\">Lazy Loading</h4>\n<p id=\"9d14\" class=\"graf graf--p graf-after--h4\">Lastly there was a small change to my actual site that would improve things by a non-negligible amount. There are 5 images that aren’t seen until you press on their corresponding tabs, but that were loaded at the same time as everything else (due to their being in a &lt;img src=”…”&gt; tag.</p>\n<p id=\"35a8\" class=\"graf graf--p graf-after--p\">I wrote a short script to modify the attribute with every element with the <em class=\"markup--em markup--p-em\">lazyload class.</em></p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"enlighter\">$(document).ready(function() {\r\n    $('.lazyload').each(function() {\r\n        //* set the img src from data-src\r\n        $(this).attr('src', $(this).attr('data-src'));\r\n    });\r\n});</pre>\n<p id=\"863a\" class=\"graf graf--p graf-after--figure\">So once the document had completed loading, it would modify the &lt;img&gt; tags so that they went from &lt;img data-src=”…”&gt; to &lt;img src=”…”&gt;, and load it in the background.</p>\n<h3 id=\"d214\" class=\"graf graf--h3 graf-after--p\">Conclusion</h3>\n<p id=\"7888\" class=\"graf graf--p graf-after--h3\">This improved my page load times from more than 8 seconds to ~350ms on first page load, and an insane ~200ms on subsequent ones. I really recommend reading through all of <a class=\"markup--anchor markup--p-anchor\" href=\"https://hpbn.co/#toc\" target=\"_blank\" rel=\"noopener\" data-href=\"https://hpbn.co/#toc\">High Performance Browser Networking</a> — it’s a fairly quick read, and provides an incredibly well written overview of the modern internet, and optimizing at every layer of the modern internet model.</p>\n<p id=\"3ace\" class=\"graf graf--p graf-after--p\"><em class=\"markup--em markup--p-em\">Did I miss anything? See anything that violates best practices or that could improve my performance even more? Feel free to reach out — </em><a class=\"markup--user markup--p-user\" href=\"https://medium.com/@jonluca\" target=\"_blank\" rel=\"noopener\" data-href=\"https://medium.com/@jonluca\" data-anchor-type=\"2\" data-user-id=\"3db6a3a642ec\" data-action-value=\"3db6a3a642ec\" data-action=\"show-user-card\" data-action-type=\"hover\"><em class=\"markup--em markup--p-em\">JonLuca De Caro</em></a><em class=\"markup--em markup--p-em\">!</em></p>\n<blockquote><p>source: <a href=\"https://hackernoon.com/optimizing-a-static-site-d5ab6899f249\">https://hackernoon.com/optimizing-a-static-site-d5ab6899f249</a></p></blockquote>\n",
          "slug": "10x-performance-increases-optimizing-a-static-site",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/18/10x-performance-increases-optimizing-a-static-site/",
          "date": "2018-03-18T16:44:48",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE5Nw==",
        "node": {
          "id": "cG9zdDoxOTc=",
          "title": ".NET Core",
          "content": "<p>Today you can build .NET Core based app, shove it in a container and run natively in Docker containers deployed to Linux VMs. You can take the same code shove it in a Windows container and run it on Windows Server. All the while running same or almost same code. And oh you can run it on embedded systems like Raspberry Pi.</p>\n",
          "slug": "net-core",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/15/net-core/",
          "date": "2018-03-15T13:17:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE5Mw==",
        "node": {
          "id": "cG9zdDoxOTM=",
          "title": "Exercises in Programming Style",
          "content": "<p>In the <a href=\"https://henrikwarne.com/2016/11/08/developer-book-club/\">book club at work</a>, we recently finished reading <a href=\"https://www.amazon.com/Exercises-Programming-Style-Cristina-Videira/dp/1482227371/\">Exercises in Programming Style</a> by Cristina Videira Lopes. The book consists of a simple program implemented in 33 different programming styles. It is a great way of showing the different styles, and the book was quite popular in the book club. The book is relatively new (it was published in 2014), and I don’t think it is as well-known as it deserves to be. So here is a summary and review of it.<img class=\"size-full wp-image-194 alignright\" title=\"Exercises in Programming Style\" src=\"https://emolike.net/wp-content/uploads/2018/03/exercises-in-programming-style.jpg\" alt=\"\" width=\"332\" height=\"444\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/exercises-in-programming-style.jpg 332w, https://emolike.net/wp-content/uploads/2018/03/exercises-in-programming-style-224x300.jpg 224w, https://emolike.net/wp-content/uploads/2018/03/exercises-in-programming-style-200x267.jpg 200w\" sizes=\"(max-width: 332px) 100vw, 332px\" /><span id=\"more-1626\"></span></p>\n<h3>ORGANIZATION</h3>\n<p>The inspiration is a book from the 1940s by the French writer Raymond Queneau called <a href=\"https://www.amazon.com/Exercises-Style-Raymond-Queneau/dp/0811207897/\">Exercises in Style</a>. In it, he tells the same short story in 99 different styles. Exercises in Programming Style uses the same concept, but implements a short program in 33 different programming styles. Each style is defined by what constraints it imposes on the program.</p>\n<p>The program counts the occurrences of words (term frequencies) in a file. The sample input is the book <em>Pride and Prejudice</em> taken from the Gutenberg Collection. The program reads input words from a file, removes all non-alphanumeric characters, normalizes (down-cases) the words, removes stop words (“the”, “a”, “for” etc), counts the occurrences of all words, and finally prints out the 25 most common words in order.</p>\n<p>All implementations are in Python, and most programs are one or two pages in the book. The size of the task is just right – it takes a little bit of programming logic, but it is small enough to quickly get familiar with. At the same time it is enough to be able to express the logic in all the different styles covered.</p>\n<p>Each style is presented in its own chapter and in the same way. First the constraints of the style are given. Then the complete program in this style is listed, with line numbers, followed by an explanation of its key features. Next there are comments on the use of this style, historical notes, further reading, a glossary and exercises.</p>\n<h3>STYLES</h3>\n<p>The different styles are grouped together into nine categories. Here is a description of the categories and the styles:</p>\n<p><strong>Historical.</strong> The first program in this category has the constraints of very little memory, and no identifiers. There is only memory, addressable with numbers. The result is a program that in many ways looks like assembler. The second style has a data stack, and all operations are done over data on the stack.</p>\n<p><strong>Basic Styles.</strong> There are three styles here that show how programming has developed. The first style is <em>Monolithic</em>, where the program is not sub-divided in functions. Instead, the logic is just in one long sequence of statements. In the next style, the logic is divided into functions, but all functions operate on shared global variables. In the third style, called <em>Pipeline</em>, the functions don’t communicate using global data. Instead, they receive input and produce output. The program then becomes a long chain of function calls. This section also contains <em>Code Golf</em>, where the emphasis is on short and compact programs (in this case using libraries to achieve the goal).</p>\n<p><strong>Function Composition. </strong>This section shows three different ways of connecting function calls together. The first uses recursion. The second uses a continuation-passing style, where each function is also given the next function that should be called. This resulting program is a bit hard to read because of this. The third illustrates the concept of a monad, and all function calls and resulting values are done through the monad, creating a calling pipeline.</p>\n<p><strong>Objects and Object Interactions. </strong>There are six styles here. The first four are variations on regular object orientation, going from a normal object oriented program and one with abstract classes, to examples of how object orientation can be implemented (for example, how you find the method to call, and how the methods of an object are stored). Then there is an example of where you register for a callback, and a version with infrastructure for publish and subscribe.</p>\n<p><strong>Reflection and Metaprogramming. </strong>The theme here is programs accessing and changing themselves as they execute.  The first example of this style uses introspection (<em>inspect.stack()</em> in Python) to check the calling function name. The second uses <em>exec/eval</em> to build functions from strings containing Python code. The third example uses Python decorators to show how profiling of functions can be done, i.e. Aspect Oriented Programming (the author is one of the creators of AOP). The final program is an example of a plugin architecture, where functions from external files are brought in via a config file.</p>\n<p><strong>Adversity.</strong> Here, various error handling strategies are showcased. In the first example, when an error is encountered, an attempt is made to continue with a “reasonable” default value. The next throws an exception on every error, and the third also throws exceptions, but tries to handle the errors at a higher level. There is a good discussion on the pros and cons of these strategies, and how it is easier or harder to implement, depending on if the language supports exceptions. There is also an example with types, but this becomes very awkward to show in Python. Finally there is an example where all IO is quarantined, inspired by the design philosophy of Haskell’s IO monad.</p>\n<p><strong>Data-Centric.</strong> In this section, the data, rather than the program behavior, is in focus. The first example solves the task by putting all the words in a database, and uses SQL queries to find the top words. The next style emulates a spreadsheet, where changed values trigger recalculation of dependent values. The final example works on data available as a stream (as opposed to getting the complete data at the beginning). In other words, the data is “pulled” by the sink, not pushed from the source. This is solved nicely with generators (using <em>yield</em>) in Python.</p>\n<p><strong>Concurrency.</strong> This parts starts with one of my favorite paradigms, actors. Different threads send and receive messages to solve the task, and there is no shared memory between them. The downside of this example is that it is quite hard to follow the program flow. The next three examples use data spaces and map reduce (in two variations) to partition the task and then collect the results.</p>\n<p><strong>Interactivity.</strong> The final two examples allow for interactive usage. The first is an MVC (Model View Controller) version, although the view simply prints to the console (no GUI). The second is a REST solution, in the purest form, meaning that at each interaction, the next allowed actions are always presented to be selected from. Both these examples brought home the key points really well.</p>\n<h3>OBSERVATIONS</h3>\n<p>I have read quite a lot of books on programming, but this book is unique among them. I really like the approach of showcasing various programming styles and paradigms by implementing the same program in different ways. First, there is a concrete program to look at for each case, instead of just a verbal description. Second, seeing all the programs next to each other highlights the differences in a very accessible way.</p>\n<p>At work we use Python, so all of us already knew Python when reading the book. It was quite convenient to already be familiar with the language used, but I think the book works well even if you don’t know Python. There are a few quirks, for example with classes in Python, but the author explains those when needed. The only time Python was a problem was when showing how types protect against errors in the <em>Adversity</em> section.</p>\n<p>When it came to understanding the programs, there was always a very good section called <em>Commentary</em> that explained in detail how each program worked. For the most part though, I preferred to just start reading the code and see if I understood how it worked. Usually this was enough, but sometimes I missed not having an IDE for searching for usages etc. I could have done that though, because all of the programs are available on <a href=\"https://github.com/crista/exercises-in-programming-style\">GitHub</a>.</p>\n<p>For each style there were references and historical notes. These were quite good and interesting. In particular it was surprising that there were so many references to papers and books from the 50s and 60s. There were also a lot of references to Smalltalk, and to Dijkstra.</p>\n<p>Before reading the book, I decided to implement <a href=\"https://github.com/henrikw/exercises-in-programming-style/blob/master/word_count.py\">my own version</a> of the term frequency program. This gave me an slightly better understanding of what is needed to solve the problem. Mostly though, it was for the fun of seeing which style my solution was written in. The best match turned out to be <em>Pipeline</em> in <em>Basic Styles</em>. Also, when testing my solution I noticed that the <em>Pride and Prejudice</em> sample input the author is using also includes a few Project Gutenberg sentences in addition to the book text. I found this slightly disappointing.</p>\n<p>My only criticism of the book is the naming of the styles. Naming is <a href=\"https://martinfowler.com/bliki/TwoHardThings.html\">famously hard</a>, but also very important, because the names help you remember the styles better and makes discussing them easier. In many cases, there are already establish names for the styles, but instead of using them, the author came up with her own. For example: <em>Trinity</em> instead of <em>MVC</em>, <em>Things</em> instead of <em>Objects</em>, <em>Hollywood</em> instead of <em>Callbacks</em>, <em>Bulletin Board</em> instead of <em>Pub/Sub</em> and <em>Kick Forward</em> instead of <em>Continuation-passing</em>. Those names are OK, but it is much better to stick to the industry standard ones.</p>\n<h3>CONCLUSION</h3>\n<p>I really enjoyed this book. It is unique in its approach, and it really succeeds in showing a wide variety of programming styles in just the right amount of code. Seeing the concepts implemented, and being able to compare them easily, is the main strength. At around 300 pages it manages to explain a lot in a concise way. Well done!</p>\n<blockquote><p>https://henrikwarne.com/2016/11/08/developer-book-club/</p></blockquote>\n",
          "slug": "exercises-in-programming-style",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/14/exercises-in-programming-style/",
          "date": "2018-03-14T17:38:30",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE5MQ==",
        "node": {
          "id": "cG9zdDoxOTE=",
          "title": "How Shifter Introduced Serverless Hosting to WordPress Using AWS, DynamoDB &#038; the Serverless Framework",
          "content": "<p><a href=\"https://getshifter.io/\">Shifter</a> is a SaaS hosting product that turns any type of WordPress website or blog into a static site. In one click your site can be converted into static HTML files, moved to S3 and delivered through CloudFront. In this post the Shifter team will share more about our motivation for building this project along with a sneak peek at the backend.</p>\n<blockquote><p><a href=\"https://serverless.com/blog/serverless-wordpress-hosting-with-shifter/\">https://serverless.com/blog/serverless-wordpress-hosting-with-shifter/</a></p></blockquote>\n",
          "slug": "how-shifter-introduced-serverless-hosting-to-wordpress-using-aws-dynamodb-the-serverless-framework",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/14/how-shifter-introduced-serverless-hosting-to-wordpress-using-aws-dynamodb-the-serverless-framework/",
          "date": "2018-03-14T17:37:03",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE4Ng==",
        "node": {
          "id": "cG9zdDoxODY=",
          "title": "free material dashboard react template",
          "content": "<p><img class=\"alignnone wp-image-187 size-full\" src=\"https://emolike.net/wp-content/uploads/2018/03/2018-03-14-17_09_07-Material-Dashboard-React_-Free-Material-UI-Dashboard-@-Creative-Tim.png\" alt=\"\" width=\"1603\" height=\"607\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/2018-03-14-17_09_07-Material-Dashboard-React_-Free-Material-UI-Dashboard-@-Creative-Tim.png 1603w, https://emolike.net/wp-content/uploads/2018/03/2018-03-14-17_09_07-Material-Dashboard-React_-Free-Material-UI-Dashboard-@-Creative-Tim-300x114.png 300w, https://emolike.net/wp-content/uploads/2018/03/2018-03-14-17_09_07-Material-Dashboard-React_-Free-Material-UI-Dashboard-@-Creative-Tim-768x291.png 768w, https://emolike.net/wp-content/uploads/2018/03/2018-03-14-17_09_07-Material-Dashboard-React_-Free-Material-UI-Dashboard-@-Creative-Tim-1024x388.png 1024w, https://emolike.net/wp-content/uploads/2018/03/2018-03-14-17_09_07-Material-Dashboard-React_-Free-Material-UI-Dashboard-@-Creative-Tim-200x76.png 200w\" sizes=\"(max-width: 1603px) 100vw, 1603px\" /></p>\n<blockquote><p>source: <a href=\"https://www.creative-tim.com/product/material-dashboard-react?tracking=first-time\">https://www.creative-tim.com/product/material-dashboard-react?tracking=first-time</a></p></blockquote>\n<h1>Premium UI Dashboards coded in CodeIgniter and Flask. YOURS FREE!</h1>\n<blockquote><p><a href=\"https://www.codementor.io/chirilovadrian360/two-admin-dashboards-coded-in-two-different-languages-php-python-yours-free-hjvl6eqll\">https://www.codementor.io/chirilovadrian360/two-admin-dashboards-coded-in-two-different-languages-php-python-yours-free-hjvl6eqll</a></p></blockquote>\n",
          "slug": "free-material-dashboard-react-template",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/14/free-material-dashboard-react-template/",
          "date": "2018-03-14T17:11:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE4Mw==",
        "node": {
          "id": "cG9zdDoxODM=",
          "title": "Developer Survey Results 2018",
          "content": "<p><a href=\"https://insights.stackoverflow.com/survey/2018/\">https://insights.stackoverflow.com/survey/2018/</a></p>\n",
          "slug": "developer-survey-results-2018",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/14/developer-survey-results-2018/",
          "date": "2018-03-14T16:57:22",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Uncategorized"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE3OA==",
        "node": {
          "id": "cG9zdDoxNzg=",
          "title": "An Overview of JavaScript Testing in 2018",
          "content": "<div class=\"lazy-image article__cover-photo\">\n<div class=\"lazy-image__progressive\"><img class=\"alignnone size-full wp-image-180\" src=\"https://emolike.net/wp-content/uploads/2018/03/cBwCCyDoQvWFZkuKvWGe.png\" alt=\"An Overview of JavaScript Testing in 2018\" width=\"1050\" height=\"341\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/cBwCCyDoQvWFZkuKvWGe.png 1050w, https://emolike.net/wp-content/uploads/2018/03/cBwCCyDoQvWFZkuKvWGe-300x97.png 300w, https://emolike.net/wp-content/uploads/2018/03/cBwCCyDoQvWFZkuKvWGe-768x249.png 768w, https://emolike.net/wp-content/uploads/2018/03/cBwCCyDoQvWFZkuKvWGe-1024x333.png 1024w, https://emolike.net/wp-content/uploads/2018/03/cBwCCyDoQvWFZkuKvWGe-200x65.png 200w\" sizes=\"(max-width: 1050px) 100vw, 1050px\" /></div>\n</div>\n<div class=\"article__body\">\n<div class=\"article__content\">\n<div class=\"md-viewer\">\n<blockquote><p>TL;DR; Use Jest for unit and integration tests and TestCafe for UI tests.</p>\n<p>please check this source: https://www.codementor.io/vitalizaidman/an-overview-of-javascript-testing-in-2018-hcn8bj3f0</p></blockquote>\n<p>This guide is intended to catch you up with the most important reasoning, terms, tools, and approaches to JavaScript testing in 2018. It combines information from many great articles, that are linked at the bottom, and adds from our own experience in <a href=\"http://www.welldone-software.com/\" target=\"_blank\" rel=\"nofollow noopener\">Welldone Software Solutions</a> where we implemented different testing solutions for different products for years.</p>\n<p>Whoever reads and understands this guide, can safely assume they know the big picture of the state of JavaScript testing in the web development community for 2018. This is a great reason to share it with all your co workers, family and friends 😃</p>\n<ul>\n<li>I did a pretty serious research for this article. If you see anything I missed or got wrong, comment about it and I’ll address it in no-time.</li>\n<li>Notice the links at the bottom of the page. Reading them will take you from just understanding the big picture, to be an expert (in theory).</li>\n<li>The best way to implement this guide is to choose whatever testing types you need, select several tools that looks suitable for you, and test them all. We live in a world of a great abundance of tools and practices. Your goal is to filter them and to get to the best set up for your individual cases.</li>\n</ul>\n<p>Enjoy 😃</p>\n<hr />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3 id=\"suggested-articles\">Suggested Articles</h3>\n<h4 id=\"best\">Best</h4>\n<ul>\n<li><a href=\"http://mo.github.io/2017/07/20/javascript-e2e-integration-testing.html\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Javascript tools for end-to-end testing</strong> web applications (July 2017)</a></li>\n<li><a href=\"https://medium.com/@adrian_lewis/top-5-most-rated-node-js-frameworks-for-end-to-end-web-testing-f8ebca4e5d44\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Top 5 Most Rated Node.js Frameworks for End-to-End Web Testing</strong> (March 2017)</a></li>\n<li><a href=\"https://www.blazemeter.com/blog/top-15-ui-test-automation-best-practices-you-should-follow\" target=\"_blank\" rel=\"nofollow noopener\">Top <strong>UI Test Automation Best Practices</strong> You Should Follow (November 2017)</a></li>\n<li><a href=\"https://hackernoon.com/how-to-set-up-e2e-browser-testing-for-your-github-project-89c24e15a84\" target=\"_blank\" rel=\"nofollow noopener\">How to set up E2E browser testing for your <strong>GitHub project (With TestCafe)</strong>(February 2017)</a></li>\n<li><a href=\"https://blog.logrocket.com/introduction-to-headless-browser-testing-44b82310b27c\" target=\"_blank\" rel=\"nofollow noopener\">Introduction to <strong>Headless Browser Testing</strong> (September 2017)</a></li>\n<li><a href=\"https://blog.phantombuster.com/web-scraping-in-2017-headless-chrome-tips-tricks-4d6521d695e8\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Web Scraping in 2017</strong> : Advanced Headless Chrome Tips &amp; Tricks (august 2017)</a></li>\n<li><a href=\"https://about.gitlab.com/2017/12/19/moving-to-headless-chrome/\" target=\"_blank\" rel=\"nofollow noopener\">How GitLab switched to <strong>Headless Chrome for testing (From Phantom)</strong>(December 2017)</a></li>\n</ul>\n<h4 id=\"general\">General</h4>\n<ul>\n<li><a href=\"https://www.joecolantonio.com/2016/06/14/top-8-essential-javascript-automation-frameworks/\" target=\"_blank\" rel=\"nofollow noopener\">The <strong>Top 8 Essential JavaScript Automation Frameworks</strong> (June 2016)</a></li>\n<li><a href=\"https://www.sitepoint.com/javascript-testing-unit-functional-integration/\" target=\"_blank\" rel=\"nofollow noopener\">JavaScript Testing: <strong>Unit vs Functional vs Integration Tests</strong> (April 2016)</a></li>\n<li><a href=\"https://codeutopia.net/blog/2015/04/11/what-are-unit-testing-integration-testing-and-functional-testing/\" target=\"_blank\" rel=\"nofollow noopener\">What are <strong>Unit Testing, Integration Testing and Functional Testing</strong>? (April 2015)</a></li>\n<li><a href=\"https://www.keycdn.com/blog/browser-compatibility-testing-tools/\" target=\"_blank\" rel=\"nofollow noopener\">Top 12 Browser Compatibility Testing Tools (June 2017)</a></li>\n<li><a href=\"https://www.guru99.com/top-10-cross-browser-testing-tools.html\" target=\"_blank\" rel=\"nofollow noopener\">Top 10 Cross Browser Compatibility Testing Tools In 2018 (2018)</a></li>\n</ul>\n<h4 id=\"spies-and-stubs\">spies and stubs</h4>\n<ul>\n<li><a href=\"https://spin.atomicobject.com/2016/03/21/javascript-mocking-testdouble/\" target=\"_blank\" rel=\"nofollow noopener\">Bye-Bye, Sinon —  <strong>Hello, testdouble</strong> (March 2016)</a></li>\n<li><a href=\"https://www.sitepoint.com/javascript-testing-tool-showdown-sinon-js-vs-testdouble-js/\" target=\"_blank\" rel=\"nofollow noopener\">JavaScript Testing Tool Showdown: <strong>Sinon.js vs testdouble.js</strong> (April 2017)</a></li>\n<li><a href=\"http://blog.testdouble.com/posts/2016-03-13-testdouble-vs-sinon.html\" target=\"_blank\" rel=\"nofollow noopener\"><strong>testdouble.js vs. sinon.js</strong> (March 2016)</a></li>\n<li><a href=\"https://medium.com/@bruderstein/enzyme-vs-unexpected-react-ee9cb099d12b\" target=\"_blank\" rel=\"nofollow noopener\"><strong>enzyme vs unexpected-react</strong> (April 2017)</a></li>\n</ul>\n<h4 id=\"testing-frameworks-comparison\">Testing Frameworks Comparison</h4>\n<ul>\n<li><a href=\"https://spin.atomicobject.com/2017/05/02/react-testing-jest-vs-mocha/\" target=\"_blank\" rel=\"nofollow noopener\">React Testing —  <strong>Jest or Mocha?</strong> (May 2017)</a></li>\n<li><a href=\"http://instea.sk/2016/08/testing-react-applications-with-karma-jest-or-mocha/\" target=\"_blank\" rel=\"nofollow noopener\">Testing React Applications with <strong>Karma, Jest or Mocha</strong> (August 2016)</a></li>\n<li><a href=\"https://medium.com/cardinal-solutions/lets-compare-javascript-testing-frameworks-bb500f0b1006\" target=\"_blank\" rel=\"nofollow noopener\">Let’s Compare <strong>Javascript Testing Framework</strong> (August 2016)</a></li>\n<li><a href=\"http://thejsguy.com/2015/01/12/jasmine-vs-mocha-chai-and-sinon.html\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Jasmine vs. Mocha, Chai, and Sinon</strong> (Updated February 2016)</a></li>\n<li><a href=\"http://www.tisa-software.com/news/blog/217-jasmine-mocha-javascript-testing-framework-comparison\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Jasmine vs. Mocha</strong> &#8211; JavaScript Testing Framework Comparison<br />\n(January 2017)</a></li>\n</ul>\n<h4 id=\"jest-2\">Jest</h4>\n<ul>\n<li><a href=\"https://hackernoon.com/how-to-snapshot-test-everything-in-your-redux-app-with-jest-fde305ebedea\" target=\"_blank\" rel=\"nofollow noopener\">How to <strong>Snapshot</strong> Test Everything in Your <strong>Redux App With Jest</strong><br />\n(December 2016)</a></li>\n<li><a href=\"https://medium.com/@kentcdodds/migrating-to-jest-881f75366e7e\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Migrating to Jest</strong> on the P2P team at PayPal (November 2016)</a></li>\n<li><a href=\"https://hackernoon.com/from-0-to-100-coverage-real-quick-d71dda7069e5\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Jest</strong> &#8211; From 0 to 100% Coverage Real Quick (January 2017)</a></li>\n<li><a href=\"https://medium.com/@boriscoder/the-hidden-power-of-jest-matchers-f3d86d8101b0\" target=\"_blank\" rel=\"nofollow noopener\">The Hidden Power of <strong>Jest Matchers</strong> (January 2017)</a></li>\n<li><a href=\"https://hackernoon.com/testing-react-components-with-jest-and-enzyme-41d592c174f\" target=\"_blank\" rel=\"nofollow noopener\">Testing <strong>React components with Jest and Enzyme</strong> (December 2016)</a></li>\n<li><a href=\"https://medium.com/@gethylgeorge/testing-a-react-redux-app-using-jest-and-enzyme-b349324803a9\" target=\"_blank\" rel=\"nofollow noopener\">Testing a <strong>React-Redux app using Jest and Enzyme</strong> (January 2017)</a></li>\n<li><a href=\"https://semaphoreci.com/community/tutorials/snapshot-testing-react-components-with-jest\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Snapshot</strong> Testing React Components with <strong>Jest</strong> (January 2017)</a></li>\n<li><a href=\"https://medium.com/aya-experience/testing-an-angularjs-app-with-jest-3029a613251\" target=\"_blank\" rel=\"nofollow noopener\">Testing an <strong>AngularJS</strong> app with <strong>Jest</strong> (October 2016)</a></li>\n</ul>\n<h4 id=\"ava-2\">Ava</h4>\n<ul>\n<li><a href=\"https://wecodetheweb.com/2016/04/19/effortless-unit-testing-with-ava/\" target=\"_blank\" rel=\"nofollow noopener\">Effortless unit testing with <strong>AVA</strong> (April 2016)</a></li>\n<li><a href=\"https://atendesigngroup.com/blog/javascript-testing-ava\" target=\"_blank\" rel=\"nofollow noopener\">Javascript Testing with <strong>AVA</strong> (February 2017)</a></li>\n<li><a href=\"https://tech.just-eat.com/2016/11/10/unit-testing-front-end-javascript-with-ava-and-jsdom/\" target=\"_blank\" rel=\"nofollow noopener\">Unit testing front-end JavaScript with <strong>AVA and jsdom</strong> (November 2016)</a></li>\n<li><a href=\"https://shift.infinite.red/testing-the-bejeezus-out-of-react-native-apps-with-ava-330f51f8f6c3\" target=\"_blank\" rel=\"nofollow noopener\">Testing the Bejeezus out of React Native Apps with <strong>AVA</strong> (June 2016)</a></li>\n</ul>\n<h4 id=\"tape-2\">Tape</h4>\n<ul>\n<li><a href=\"https://medium.com/javascript-scene/why-i-use-tape-instead-of-mocha-so-should-you-6aa105d8eaf4\" target=\"_blank\" rel=\"nofollow noopener\">Why I use <strong>Tape Instead of Mocha</strong> &amp; So Should You (July 2015)</a></li>\n<li><a href=\"https://github.com/dwyl/learn-tape\" target=\"_blank\" rel=\"nofollow noopener\">Learn <strong>Tape</strong></a></li>\n</ul>\n<h4 id=\"ui-tests-2\">UI Tests</h4>\n<ul>\n<li><a href=\"https://moduscreate.com/blog/hybrid-application-testing-with-protractor-and-appium/\" target=\"_blank\" rel=\"nofollow noopener\">Hybrid Application Testing with <strong>Protractor and Appium</strong> (March 2017)</a></li>\n<li><a href=\"https://hackernoon.com/benchmark-headless-chrome-vs-phantomjs-e7f44c6956c\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Headless Chrome vs PhantomJS Benchmark</strong> (September 2017)</a></li>\n<li><a href=\"http://www.webdriverjs.com/protractor-vs-webdriverio-vs-nightwatch/\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Protractor vs WebdriverIO vs NightWatch</strong> (November 2016)</a></li>\n<li><a href=\"https://marmelab.com/blog/2016/04/19/e2e-testing-with-node-and-es6.html\" target=\"_blank\" rel=\"nofollow noopener\">End to End (e2e) Testing React Apps With <strong>Selenium WebDriver And Node.js</strong> is Easier Than You Think (April 2016)</a></li>\n<li><a href=\"https://blog.dmbcllc.com/using-javascript-to-drive-selenium-tests/\" target=\"_blank\" rel=\"nofollow noopener\"><strong>WebdriverIO</strong> &#8211; Using JavaScript to Drive Selenium Tests (August 2016)</a></li>\n<li><a href=\"https://www.sitepoint.com/javascript-functional-testing-nightwatch-js/\" target=\"_blank\" rel=\"nofollow noopener\">JavaScript Functional Testing with <strong>Nightwatch.js</strong> (August 2016)</a></li>\n<li><a href=\"https://blog.risingstack.com/end-to-end-testing-with-nightwatch-js-node-js-at-scale/\" target=\"_blank\" rel=\"nofollow noopener\">Node.js End-to-End Testing with <strong>Nightwatch.js</strong> (March 2017)</a></li>\n<li><a href=\"http://dsheiko.com/weblog/nightmare-of-end-to-end-testing\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Nightmare</strong> of End-to-End Testing (September 2016)</a></li>\n<li><a href=\"http://www.webdriverjs.com/protractor-vs-webdriverio-vs-nightwatch/\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Protractor vs WebdriverIO vs NightWatch</strong> (November 2016)</a></li>\n<li><a href=\"http://stackoverflow.com/questions/35981605/what-is-the-difference-between-nightwatch-js-and-webdriver-io\" target=\"_blank\" rel=\"nofollow noopener\">Stack Overflow- What is the difference between <strong>nightwatch.js And webdriver.io?</strong> (March 2016)</a></li>\n<li><a href=\"https://watirmelon.blog/2015/12/08/comparison-of-javascript-browser-automation-and-test-specification-libraries/\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Comparison of JavaScript browser automation and test specification libraries</strong>(December 2015)</a></li>\n<li><a href=\"https://scotch.io/tutorials/what-is-phantomjs-and-how-is-it-used\" target=\"_blank\" rel=\"nofollow noopener\">What is <strong>PhantomJS</strong> and How is it Used? (June 2016)</a></li>\n<li><a href=\"https://medium.com/@armno/setting-up-end-to-end-testing-in-angular-project-with-codeceptjs-ac1784de3420\" target=\"_blank\" rel=\"nofollow noopener\">Setting up End-to-End Testing in Angular Project with <strong>CodeceptJS</strong> (December 2017)</a></li>\n</ul>\n<h4 id=\"testcafe-2\">TestCafe</h4>\n<ul>\n<li><a href=\"http://onpathtesting.com/automated-testing-tool-testcafe-or-selenium-webdriver/\" target=\"_blank\" rel=\"nofollow noopener\">Which automated testing tool to pick —  <strong>Testcafe or Selenium WebDriver</strong>? (January 2016)</a></li>\n<li><a href=\"https://devexpress.github.io/testcafe/blog/introducing-testcafe-open-source-testing-framework.html\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Introducing TestCafe</strong>  — Open Source Testing Framework (Octobeer 2016)</a></li>\n<li><a href=\"https://testcafe-discuss.devexpress.com/t/why-not-use-selenium/47\" target=\"_blank\" rel=\"nofollow noopener\">Why not use Selenium? (October 2016)</a></li>\n<li><a href=\"http://mherman.org/blog/2017/03/19/functional-testing-with-testcafe\" target=\"_blank\" rel=\"nofollow noopener\">Functional Testing With <strong>TestCafe</strong> (March 2017)</a></li>\n<li><a href=\"http://www.pqatesting.com/our_ideas/blog/u\" target=\"_blank\" rel=\"nofollow noopener\">UI Test Automation Frameworks Showdown: <strong>TestCafé versus Nightwatch.js</strong>(Fabruary 2018)</a></li>\n</ul>\n<h4 id=\"cypress-2\">Cypress</h4>\n<ul>\n<li><a href=\"https://quizlet.com/blog/cypress-the-future-of-end-to-end-testing-for-web-applications\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Cypress</strong> : The future of end-to-end testing for web applications (Fabruary 2018)</a></li>\n</ul>\n</div>\n</div>\n</div>\n",
          "slug": "an-overview-of-javascript-testing-in-2018",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/14/an-overview-of-javascript-testing-in-2018/",
          "date": "2018-03-14T16:09:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE3Mg==",
        "node": {
          "id": "cG9zdDoxNzI=",
          "title": "Everyone can now run JavaScript on Cloudflare with Workers",
          "content": "<p><img class=\"alignnone size-full wp-image-173\" src=\"https://emolike.net/wp-content/uploads/2018/03/workers-social.png\" alt=\"Edge computing for everyone.\" width=\"1280\" height=\"640\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/workers-social.png 1280w, https://emolike.net/wp-content/uploads/2018/03/workers-social-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/03/workers-social-768x384.png 768w, https://emolike.net/wp-content/uploads/2018/03/workers-social-1024x512.png 1024w, https://emolike.net/wp-content/uploads/2018/03/workers-social-200x100.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<h3 id=\"whatsaworker\">What&#8217;s a Worker?</h3>\n<p>Cloudflare Workers derive their name from Web Workers, and more specifically Service Workers, the W3C standard API for scripts that run in the background in a web browser and intercept HTTP requests. Cloudflare Workers are written against the same standard API, but run on Cloudflare&#8217;s servers, not in a browser.</p>\n<p>Here are the tools you get to work with:</p>\n<ul>\n<li>Execute any JavaScript code, using the latest standard language features.</li>\n<li>Intercept and modify HTTP request and response URLs, status, headers, and body content.</li>\n<li>Respond to requests directly from your Worker, or forward them elsewhere.</li>\n<li>Send HTTP requests to third-party servers.</li>\n<li>Send multiple requests, in serial or parallel, and use the responses to compose a final response to the original request.</li>\n<li>Send asynchronous requests after the response has already been returned to the client (for example, for logging or analytics).</li>\n<li>Control other Cloudflare features, such as caching behavior.</li>\n</ul>\n<p>The possible uses for Workers are infinite, and we&#8217;re excited to see what our customers come up with. Here are some ideas we&#8217;ve seen in the beta:</p>\n<ul>\n<li>Route different types of requests to different origin servers.</li>\n<li>Expand HTML templates on the edge, to reduce bandwidth costs at your origin.</li>\n<li>Apply access control to cached content.</li>\n<li>Redirect a fraction of users to a staging server.</li>\n<li>Perform A/B testing between two entirely different back-ends.</li>\n<li>Build &#8220;serverless&#8221; applications that rely entirely on web APIs.</li>\n<li>Create custom security filters to block unwanted traffic unique to your app.</li>\n<li>Rewrite requests to improve cache hit rate.</li>\n<li>Implement custom load balancing and failover logic.</li>\n<li>Apply quick fixes to your application without having to update your production servers.</li>\n<li>Collect analytics without running code in the user&#8217;s browser.</li>\n<li>Much more..</li>\n</ul>\n<p>source: https://blog.cloudflare.com/cloudflare-workers-unleashed/</p>\n",
          "slug": "everyone-can-now-run-javascript-on-cloudflare-with-workers",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/everyone-can-now-run-javascript-on-cloudflare-with-workers/",
          "date": "2018-03-13T20:28:21",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2Nw==",
        "node": {
          "id": "cG9zdDoxNjc=",
          "title": "Oracle Data Pump (expdp, impdp) in Oracle Database 10g, 11g, 12c",
          "content": "<h2>Schema Exports/Imports</h2>\n<p>The <code>OWNER</code> parameter of exp has been replaced by the <code>SCHEMAS</code> parameter which is used to specify the schemas to be exported. The following is an example of the schema export and import syntax.</p>\n<pre>expdp scott/tiger@db10g schemas=SCOTT directory=TEST_DIR dumpfile=SCOTT.dmp logfile=expdpSCOTT.log\r\n\r\nimpdp scott/tiger@db10g schemas=SCOTT directory=TEST_DIR dumpfile=SCOTT.dmp logfile=impdpSCOTT.log</pre>\n<p>source: https://oracle-base.com/articles/10g/oracle-data-pump-10g</p>\n",
          "slug": "oracle-data-pump-expdp-impdp-in-oracle-database-10g-11g-12c",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/oracle-data-pump-expdp-impdp-in-oracle-database-10g-11g-12c/",
          "date": "2018-03-13T20:19:36",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Database"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE2NQ==",
        "node": {
          "id": "cG9zdDoxNjU=",
          "title": "My Tasks in Security checklist",
          "content": "<ol>\n<li>Injections  (http://example.com/app/accountView?id=&#8217; or &#8216;1&#8217;=&#8217;1)</li>\n<li>Broken Authentication and session managements</li>\n<li>XSS</li>\n<li>Insecure data object notations</li>\n<li>security misconfiguration</li>\n<li>Sensitive data exposures</li>\n<li>Missing Function Level Access Control</li>\n<li>CSRF</li>\n<li>Using components with known vulnerability</li>\n<li>unvalidate redirects and forwards</li>\n<li>HTTP header injection</li>\n<li>Clickjacking</li>\n<li>Directory listing</li>\n<li>user-agent Content spoofing</li>\n<li>Cross-domain AJAX request</li>\n<li>security headers</li>\n<li>Some S3 Buckets are world readable</li>\n<li>SPF/DMARC records</li>\n<li>subdomain takeover</li>\n<li>SSLv3 Padding Oracle</li>\n<li>RCE</li>\n<li>SSRF</li>\n<li>Username uniqueness</li>\n<li>same site sripting</li>\n<li>LFI/RFI</li>\n</ol>\n",
          "slug": "my-tasks-in-security-checklist",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/my-tasks-in-security-checklist/",
          "date": "2018-03-13T20:16:55",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Security"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1OA==",
        "node": {
          "id": "cG9zdDoxNTg=",
          "title": "Heroku Alternatives — Top 5 Picks",
          "content": "<p id=\"abe5\" class=\"graf graf--p graf-after--figure\">There’s no denying that leveraging a Platform-as-a-Service (PaaS) like Heroku is a great way to develop and deploy a wide range of web-based projects with minimal fuss. This cloud platform has a wide appeal and provides tremendous value for millions of developers and IT professionals. But here’s something you must know: Heroku is not always the best bet and it is important to understand when to employ another approach.</p>\n<p id=\"274e\" class=\"graf graf--p graf-after--p\">Simply put, there are a few concerns with Heroku, which include exorbitant cost, unorganized documentation, unintuitive CLI design, lack of language support, non-flexible pricing tiers, vendor lock-in with AWS, relatively short stack life cycle, and many other technical limitations. Based on latest research, more than 10,000 users each month search for “Heroku alternatives” on Google.</p>\n<p id=\"2d78\" class=\"graf graf--p graf-after--p\">So, if you’re one of them and looking for a more stable backend platform for your app, then this article is specifically meant for you. Luckily, there are numerous alternatives to Heroku, but only a handful of them are genuinely useful. Below we have discussed five of the best <a class=\"markup--anchor markup--p-anchor\" href=\"https://blog.back4app.com/2018/03/13/heroku-alternatives/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://blog.back4app.com/2018/03/13/heroku-alternatives/\">Heroku alternatives</a> along with their pros and cons.</p>\n<h3 id=\"6450\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">1.</strong> <strong class=\"markup--strong markup--h3-strong\">Back4App</strong></h3>\n<figure id=\"e9e0\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*HltONx0JL7japg0XrFPuNQ.png\" data-width=\"400\" data-height=\"200\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"36\"></canvas><img class=\"alignnone size-full wp-image-159\" src=\"https://emolike.net/wp-content/uploads/2018/03/1HltONx0JL7japg0XrFPuNQ.png\" width=\"400\" height=\"200\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1HltONx0JL7japg0XrFPuNQ.png 400w, https://emolike.net/wp-content/uploads/2018/03/1HltONx0JL7japg0XrFPuNQ-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/03/1HltONx0JL7japg0XrFPuNQ-200x100.png 200w\" sizes=\"(max-width: 400px) 100vw, 400px\" /></div>\n</div><figcaption class=\"imageCaption\">Back4App Logo</figcaption></figure>\n<p id=\"2a44\" class=\"graf graf--p graf-after--figure\">Back4App is a BaaS with the same flexibility of a PaaS like Heroku. Being one of the most powerful and popular BaaS solutions available today, Back4App is the perfect replacement for Heroku, thanks to its flexible pricing tiers, faster deployment speed, and many other distinctive features. Unlike Back4App, Heroku gets really expensive once you leave its free tier. It’s not just the Heroku service that is costly, the add-ons as well are pretty steep.</p>\n<p id=\"ad56\" class=\"graf graf--p graf-after--p\">Moreover, in case of Heroku, larger applications tend to have slower deployments, however, Back4App has no such technical glitches. Developers can make use of this powerful platform to create and deploy scalable and extensive mobile applications at a lightning pace without boilerplate code, infrastructure hassles, and technical locks.</p>\n<p id=\"55c7\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Pros:</strong></p>\n<p id=\"eabb\" class=\"graf graf--p graf-after--p\">· No vendor lock-in;</p>\n<p id=\"caca\" class=\"graf graf--p graf-after--p\">· Flexible pricing plans;</p>\n<p id=\"f2a9\" class=\"graf graf--p graf-after--p\">· Easy &amp; smooth migration from Parse;</p>\n<p id=\"249a\" class=\"graf graf--p graf-after--p\">· Parse hosting in any cloud environment;</p>\n<p id=\"4110\" class=\"graf graf--p graf-after--p\">· Open source with a large developer community;</p>\n<p id=\"69b5\" class=\"graf graf--p graf-after--p\">· An automated backup system that keeps your data secure and accessible;</p>\n<p id=\"6e42\" class=\"graf graf--p graf-after--p\">· More than 40k happy customers worldwide and over 500 million connected devices;</p>\n<p id=\"965c\" class=\"graf graf--p graf-after--p\">· A dedicated team of engineers working on product improvement and support;</p>\n<p id=\"9f95\" class=\"graf graf--p graf-after--p\">· A meticulously-<span class=\"markup--quote markup--p-quote is-me\" data-creator-ids=\"ab13db061e4a\">designed</span> architecture that helps you to improve your app’s performance and maximize productivity.</p>\n<p id=\"031c\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Cons:</strong></p>\n<p id=\"acbb\" class=\"graf graf--p graf-after--p\">· Lack of Documentation;</p>\n<p id=\"1525\" class=\"graf graf--p graf-after--p\">· Non-standardized UI inside the docs’ page;</p>\n<h3 id=\"acd2\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">2.</strong> <strong class=\"markup--strong markup--h3-strong\">Firebase</strong></h3>\n<figure id=\"5009\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*RnXJhkFahizVOZ2OJ0CzmA.png\" data-width=\"1280\" data-height=\"440\" data-action=\"zoom\" data-action-value=\"1*RnXJhkFahizVOZ2OJ0CzmA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"25\"></canvas><img class=\"alignnone size-full wp-image-160\" src=\"https://emolike.net/wp-content/uploads/2018/03/1RnXJhkFahizVOZ2OJ0CzmA.png\" width=\"1100\" height=\"378\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1RnXJhkFahizVOZ2OJ0CzmA.png 1100w, https://emolike.net/wp-content/uploads/2018/03/1RnXJhkFahizVOZ2OJ0CzmA-300x103.png 300w, https://emolike.net/wp-content/uploads/2018/03/1RnXJhkFahizVOZ2OJ0CzmA-768x264.png 768w, https://emolike.net/wp-content/uploads/2018/03/1RnXJhkFahizVOZ2OJ0CzmA-1024x352.png 1024w, https://emolike.net/wp-content/uploads/2018/03/1RnXJhkFahizVOZ2OJ0CzmA-200x69.png 200w\" sizes=\"(max-width: 1100px) 100vw, 1100px\" /></div>\n</div><figcaption class=\"imageCaption\">Firebase Logo</figcaption></figure>\n<p id=\"242d\" class=\"graf graf--p graf-after--figure\">Firebase is another viable alternative to Heroku, and for good reason. Just like Heroku, Firebase has great CLIs which make deployment possible in just a few commands. It provides SSL encryption, custom domains, backend storage (which is a simple NoSQL database with a supporting GUI for manual entries), and everything else you would want for your app.</p>\n<p id=\"f811\" class=\"graf graf--p graf-after--p\">One of its key facets is its low price (the cost per GB of real-time data is relatively low), which gives Firebase an upper hand over Heroku and other app platforms. Also, it takes a huge burden off developers from the server viewpoint.</p>\n<p id=\"ed63\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Pros:</strong></p>\n<p id=\"5f11\" class=\"graf graf--p graf-after--p\">· Fast and real-time updates;</p>\n<p id=\"bde7\" class=\"graf graf--p graf-after--p\">· Google Analytics and AdSense support;</p>\n<p id=\"4c36\" class=\"graf graf--p graf-after--p\">· Cross-platform API, cross-device support;</p>\n<p id=\"f4df\" class=\"graf graf--p graf-after--p\">· Free tier up to 100 simultaneous connections;</p>\n<p id=\"58db\" class=\"graf graf--p graf-after--p\">· Robust APIs for JavaScript (including several frameworks like Angular).</p>\n<p id=\"ee26\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Cons:</strong></p>\n<p id=\"4dac\" class=\"graf graf--p graf-after--p\">· Vendor lock-in;</p>\n<p id=\"3f34\" class=\"graf graf--p graf-after--p\">· No simple way to add “Cloud Code”;</p>\n<p id=\"2f52\" class=\"graf graf--p graf-after--p\">· Not possible to set custom permissions;</p>\n<p id=\"318a\" class=\"graf graf--p graf-after--p\">· Not designed for collaborative workflows;</p>\n<p id=\"df4b\" class=\"graf graf--p graf-after--p\">· Only support static files (such as HTML, JavaScript, images);</p>\n<p id=\"ea53\" class=\"graf graf--p graf-after--p\">· Developers can’t run any server-side node scripts inside their own server instance.</p>\n<h3 id=\"46fa\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">3.</strong> <strong class=\"markup--strong markup--h3-strong\">Google App Engine (GAE)</strong></h3>\n<figure id=\"ce7a\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*yeCR9DcfQ01vAEQlGMkoww.png\" data-width=\"1160\" data-height=\"630\" data-action=\"zoom\" data-action-value=\"1*yeCR9DcfQ01vAEQlGMkoww.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"40\"></canvas><img class=\"alignnone size-full wp-image-161\" src=\"https://emolike.net/wp-content/uploads/2018/03/1yeCR9DcfQ01vAEQlGMkoww.png\" width=\"1100\" height=\"597\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1yeCR9DcfQ01vAEQlGMkoww.png 1100w, https://emolike.net/wp-content/uploads/2018/03/1yeCR9DcfQ01vAEQlGMkoww-300x163.png 300w, https://emolike.net/wp-content/uploads/2018/03/1yeCR9DcfQ01vAEQlGMkoww-768x417.png 768w, https://emolike.net/wp-content/uploads/2018/03/1yeCR9DcfQ01vAEQlGMkoww-1024x556.png 1024w, https://emolike.net/wp-content/uploads/2018/03/1yeCR9DcfQ01vAEQlGMkoww-200x109.png 200w\" sizes=\"(max-width: 1100px) 100vw, 1100px\" /></div>\n</div>\n</figure>\n<p id=\"5434\" class=\"graf graf--p graf-after--figure\">Another suitable alternative to Heroku is Google App Engine (GAE), which is a free tool for mounting and hosting web applications in Google-managed data centers. In technical terms, GAE is an online cloud platform which allows you to build scalable web applications and mobile backends leveraging built-in tools and API, including NoSQL datastore, user authentication API, and Memcache.</p>\n<p id=\"73d5\" class=\"graf graf--p graf-after--p\">Both Heroku and GAE are logically similar as they both are PaaS solutions. Like Heroku, Google’s Cloud Platform provides you with a ready-made environment in which you can deploy your code and apps. However, it has a different pricing model and interface. Simply put, Google’s Cloud Platform interface is extremely intuitive and easy to use. It scales your apps based on traffic so that you only pay for the resources you use. With App Engine, you can take advantage of Google’s immense knowledge of running massively scalable, performance-driven systems.</p>\n<p id=\"476e\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Pros:</strong></p>\n<p id=\"8cab\" class=\"graf graf--p graf-after--p\">· Flexible pricing;</p>\n<p id=\"52b3\" class=\"graf graf--p graf-after--p\">· Cloud-based RESTful APIs;</p>\n<p id=\"51e5\" class=\"graf graf--p graf-after--p\">· Much easier to run asynchronous tasks;</p>\n<p id=\"1acd\" class=\"graf graf--p graf-after--p\">· Access to big data resources for reporting and analytics;</p>\n<p id=\"6558\" class=\"graf graf--p graf-after--p\">· GAE apps are easy to create, easy to maintain, and easy to scale.</p>\n<p id=\"972b\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Cons:</strong></p>\n<p id=\"8e30\" class=\"graf graf--p graf-after--p\">· Platform tie-in;</p>\n<p id=\"fe15\" class=\"graf graf--p graf-after--p\">· No standard SQL DB;</p>\n<p id=\"60ee\" class=\"graf graf--p graf-after--p\">· Sudden downtime and task queue failures;</p>\n<p id=\"8624\" class=\"graf graf--p graf-after--p\">· Logging in is recorded and accessible through a web console;</p>\n<p id=\"209e\" class=\"graf graf--p graf-after--p\">· If you want to try GAE for free, you’ll be forced to use Cloud Datastore, which is a NoSQL database;</p>\n<p id=\"2d1f\" class=\"graf graf--p graf-after--p\">· The migration is almost impossible as you’re technically married to Google and its future decisions.</p>\n<h3 id=\"d9c9\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">4.</strong> <strong class=\"markup--strong markup--h3-strong\">Kubernetes</strong></h3>\n<figure id=\"542c\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*fM53qZTYegTKvWs5AevGBw.png\" data-width=\"2000\" data-height=\"354\" data-action=\"zoom\" data-action-value=\"1*fM53qZTYegTKvWs5AevGBw.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"12\"></canvas><img class=\"alignnone size-full wp-image-162\" src=\"https://emolike.net/wp-content/uploads/2018/03/1fM53qZTYegTKvWs5AevGBw.png\" width=\"1100\" height=\"194\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1fM53qZTYegTKvWs5AevGBw.png 1100w, https://emolike.net/wp-content/uploads/2018/03/1fM53qZTYegTKvWs5AevGBw-300x53.png 300w, https://emolike.net/wp-content/uploads/2018/03/1fM53qZTYegTKvWs5AevGBw-768x135.png 768w, https://emolike.net/wp-content/uploads/2018/03/1fM53qZTYegTKvWs5AevGBw-1024x181.png 1024w, https://emolike.net/wp-content/uploads/2018/03/1fM53qZTYegTKvWs5AevGBw-200x35.png 200w\" sizes=\"(max-width: 1100px) 100vw, 1100px\" /></div>\n</div><figcaption class=\"imageCaption\">kubernetes logo</figcaption></figure>\n<p id=\"97d8\" class=\"graf graf--p graf-after--figure\">Kubernetes is a Google-backed open-source container storage program for managing containerized applications in a clustered environment. It is a portable, powerful, and useful tool which can handle containers and offer immense scalability and automation at the same time. From a developer’s standpoint, it provides a robust mechanism to easily deploy and manage applications (just like Heroku), but without the constraints and vendor lock-in of an actual PaaS. This is why it is considered a good replacement for Heroku.</p>\n<p id=\"d91a\" class=\"graf graf--p graf-after--p\">One of its major concerns is that it is difficult to use and is despised by most developers. Having said that, it is widely accepted by the community of developers, despite the hard installation process. One of last year’s biggest hits in the gaming industry, Pokemon Go, also used Kubernetes to manage their product and scale rapidly. The main reason behind its popularity is the amount of flexibility it offers and also the fact that it has the support of Google, one of the leading tech giants.</p>\n<p id=\"0ca4\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Pros:</strong></p>\n<p id=\"2bbd\" class=\"graf graf--p graf-after--p\">· Backed by Google (GKE) and RedHat (OpenShift);</p>\n<p id=\"27a3\" class=\"graf graf--p graf-after--p\">· Eliminates infrastructure lock-in by providing core capabilities for containers without imposing restrictions;</p>\n<p id=\"0178\" class=\"graf graf--p graf-after--p\">· Offers inbuilt logging and monitoring tools;</p>\n<p id=\"1330\" class=\"graf graf--p graf-after--p\">· Supports a diverse range of workloads, which include stateless, stateful, and data-processing workloads;</p>\n<p id=\"d4ab\" class=\"graf graf--p graf-after--p\">· Auto-scaling based on factors such as CPU utilization;</p>\n<p id=\"948d\" class=\"graf graf--p graf-after--p\">· Largest community among container orchestration tools (over 50k commits and 1,200 contributors).</p>\n<p id=\"66aa\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Cons:</strong></p>\n<p id=\"4ae0\" class=\"graf graf--p graf-after--p\">· Hard to set up and configure;</p>\n<p id=\"795d\" class=\"graf graf--p graf-after--p\">· DIY installation can be complex;</p>\n<h3 id=\"4db1\" class=\"graf graf--h3 graf-after--p\"><strong class=\"markup--strong markup--h3-strong\">5.</strong> <strong class=\"markup--strong markup--h3-strong\">Amazon Elastic Compute Cloud</strong> <strong class=\"markup--strong markup--h3-strong\">(EC2)</strong></h3>\n<figure id=\"ec3e\" class=\"graf graf--figure graf-after--h3\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*gIDDDZo9Ok8LFenTIGb7pw.png\" data-width=\"400\" data-height=\"400\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-163\" src=\"https://emolike.net/wp-content/uploads/2018/03/1gIDDDZo9Ok8LFenTIGb7pw.png\" width=\"400\" height=\"400\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1gIDDDZo9Ok8LFenTIGb7pw.png 400w, https://emolike.net/wp-content/uploads/2018/03/1gIDDDZo9Ok8LFenTIGb7pw-150x150.png 150w, https://emolike.net/wp-content/uploads/2018/03/1gIDDDZo9Ok8LFenTIGb7pw-300x300.png 300w, https://emolike.net/wp-content/uploads/2018/03/1gIDDDZo9Ok8LFenTIGb7pw-80x80.png 80w, https://emolike.net/wp-content/uploads/2018/03/1gIDDDZo9Ok8LFenTIGb7pw-200x200.png 200w\" sizes=\"(max-width: 400px) 100vw, 400px\" /></div>\n</div><figcaption class=\"imageCaption\">Amazon — EC2</figcaption></figure>\n<p id=\"836c\" class=\"graf graf--p graf-after--figure\">Like Heroku, AWS is another commonly used cloud service that lets you deploy, monitor, and scale web and mobile applications. It provides you with cloud computing resources and is great for hosting applications. Two of its major offerings include Elastic Beanstalk (which is PaaS) and Elastic Compute Cloud (which is IaaS).</p>\n<p id=\"2d94\" class=\"graf graf--p graf-after--p\">Heroku’s platform provides abstract computing environments known as dynos, which are strictly confined to application processes. That is to say, no other services can run on dynos. Amazon’s Elastic Compute Cloud (EC2) is the closest equivalent to Heroku’s dynos. With EC2, developers can rapidly convey and oversee applications (both web and mobile) in the Amazon Web Services Cloud without agonizing over the framework that runs those apps. EC2 is much cheaper than Heroku (one of its biggest advantage) and provides more RAM, Swap space, Storage space, and Compute power in its comparison.</p>\n<p id=\"1e61\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Pros:</strong></p>\n<p id=\"d4c9\" class=\"graf graf--p graf-after--p\">· It lets businesses distribute storage volumes independent of its computing system;</p>\n<p id=\"c1e2\" class=\"graf graf--p graf-after--p\">· Leveraging EC2, an enterprise can expand or reduce its capacity in just a few minutes instead of hours or days;</p>\n<p id=\"dc1a\" class=\"graf graf--p graf-after--p\">· Instant provisioning of new servers;</p>\n<p id=\"e708\" class=\"graf graf--p graf-after--p\">· Multiple geographic areas to run servers with a standard interface;</p>\n<p id=\"e1d5\" class=\"graf graf--p graf-after--p\">· Entire AWS ecosystem of services and support and community to build on.</p>\n<p id=\"b5f4\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Cons:</strong></p>\n<p id=\"6c96\" class=\"graf graf--p graf-after--p\">· Instance types are rigid;</p>\n<p id=\"8b64\" class=\"graf graf--p graf-after--p\">· All servers are virtual;</p>\n<p id=\"11da\" class=\"graf graf--p graf-after--p\">· It does not include enterprise-grade support by default;</p>\n<p id=\"2cb0\" class=\"graf graf--p graf-after--p\">· Billing is extremely confusing;</p>\n<p id=\"a180\" class=\"graf graf--p graf-after--p\">· The learning curve is sometimes steep for larger companies;</p>\n<p id=\"cb6a\" class=\"graf graf--p graf-after--p\">· Cross-region communication is not available natively;</p>\n<p id=\"0521\" class=\"graf graf--p graf-after--p\">· No VPN Network to the internal network.</p>\n<p id=\"32db\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Still Not Able to Decide? Let Us Help!</strong></p>\n<p id=\"5bd1\" class=\"graf graf--p graf-after--p\">All of the above-mentioned platforms are considered excellent as far as developing and deploying your application is concerned. However, the choice depends on a plethora of factors, including the size of your app, your financial constraints, availability of resources, and also the level of customization you need. All of these platforms differ each other in terms of user engagement, pricing, deployment, functionality, and features. Also, each of them has its own benefits and drawbacks, so a thorough knowledge of what each platform offers is essential in making the right choice. In the end, it all comes down to personal preference. Being a hardcore app developer, I’d personally recommend you to use Back4App for your next app project. I’ve been using it for a while now, and I must say the experience has been wonderful and trouble-free. Thanks to their serverless architecture, you don’t have to worry about managing servers and backend infrastructures. Plus, the freemium package they offer is beyond words. It allows you to run multiple apps comfortably without upgrading to a paid subscription.</p>\n<p id=\"db96\" class=\"graf graf--p graf-after--p graf--trailing\">If you’re ready to give Back4App a try, then don’t wait any longer. <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.back4app.com/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.back4app.com/\">Sign up here</a> for free today and cut your platform costs by 4X.</p>\n<p>Source: https://medium.com/@brenda.clark/heroku-alternatives-top-5-picks-9095cef91d91</p>\n",
          "slug": "heroku-alternatives",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/heroku-alternatives/",
          "date": "2018-03-13T20:11:20",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE1Mg==",
        "node": {
          "id": "cG9zdDoxNTI=",
          "title": "Rule Your Microservices with an API Gateway: Part I",
          "content": "<header class=\"post-header\"></header>\n<section class=\"post-content\">Traditionally web applications have been implemented so that one application includes all of the business logic. These <a href=\"https://en.wikipedia.org/wiki/Monolithic_application\">monolithic applications</a> are very easy to build and start with smaller codebases and they are relatively easy to test. Also, IDEs have good support for monolith applications and they are faster to develop in the beginning.Monolithic applications can be successful, but increasingly people are feeling frustrated with them. Every change requires the whole application to be rebuilt and deployed. Also, Monolith applications can only be scaled horizontally. So, you end up running multiple instances of the entire monolith application on multiple servers behind a load balancer.</p>\n<h2 id=\"explodeyourmonolithintomicroservices\">Explode Your Monolith into Microservices</h2>\n<p>Using the <a href=\"https://martinfowler.com/articles/microservices.html\">microservice</a> architectural paradigm allows you to develop a single application as a set of loosely coupled, collaborating services. Each service implements a set of narrowly, related functions and communicates with lightweight mechanisms, such as a HTTP resource API. So instead of having a codebase that handles all of the entities, now you have different services that are being deployed and scaled independently from each other.</p>\n<p><img class=\"alignnone size-full wp-image-153\" src=\"https://emolike.net/wp-content/uploads/2018/03/microservices_1_small-2.jpg\" alt=\"alt\" width=\"1280\" height=\"720\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/microservices_1_small-2.jpg 1280w, https://emolike.net/wp-content/uploads/2018/03/microservices_1_small-2-300x169.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/microservices_1_small-2-768x432.jpg 768w, https://emolike.net/wp-content/uploads/2018/03/microservices_1_small-2-1024x576.jpg 1024w, https://emolike.net/wp-content/uploads/2018/03/microservices_1_small-2-200x113.jpg 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Microservices are relatively small and easier for a developer to understand. They provide better architecture for large applications and better isolation for scalability and damage control. However, they contain more moving parts and are harder to test. Developers must also pay attention to complexity, security, network latency and connectivity issues that are coming with microservices. Also debugging is harder when dealing with loosely coupled services. Microservices are not answer to every use case. Sometimes monolith can be better solution.</p>\n<p>The best foundation for running a microservices application architecture is application containers. Containers encapsulate a lightweight runtime environment for the application, presenting an isolated and consistent software environment. Containers provide faster initialization and execution and they are easy to scale up and down. However, containers themselves do not make sense without an orchestrator service such as <a href=\"https://www.kontena.io/\">Kontena</a>, <a href=\"https://www.docker.com/\">Docker Swarm</a> or <a href=\"https://kubernetes.io/\">Kubernetes</a> which delivers the desired application functionality.</p>\n<p>With microservices architecture most of the API calls are <a href=\"https://blog.appdynamics.com/devops/visualizing-and-tracking-your-microservices/\">internal</a>. Thus, running microservices requires a good <a href=\"https://en.wikipedia.org/wiki/Overlay_network\">overlay network</a>, <a href=\"https://en.wikipedia.org/wiki/Service_discovery\">service discovery</a> and a <a href=\"https://en.wikipedia.org/wiki/Load_balancing_(computing)\">load balancer</a>. Typically, these are provided by the orchestrator service or by using and configuring external tools or add-ons. For example, <a href=\"https://www.kontena.io/\">Kontena</a>provides these out of the box.</p>\n<h2 id=\"rulemicroserviceswithanapigateway\">Rule Microservices with an API Gateway</h2>\n<p>When having lots of services, controlling the total flow can become hard. A Service might be updated and the address of the service could change. This requires changes to other related services as well. Also, dealing with different kinds of clients that have different kinds of requirements can be problematic. Systems might need also centralized authentication and security. The solution to these problems is to use API gateways.</p>\n<p>An API gateway provides a single, unified API entry point across one or more internal APIs. Rather than invoking different services, clients simply talk to the gateway. In other words, it insulates the clients from how the application is partitioned into microservices. It also adds an additional layer of protection by providing protection from attack vectors.</p>\n<p><img class=\"alignnone size-full wp-image-154\" src=\"https://emolike.net/wp-content/uploads/2018/03/microservices_1.jpg\" alt=\"\" width=\"1280\" height=\"720\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/microservices_1.jpg 1280w, https://emolike.net/wp-content/uploads/2018/03/microservices_1-300x169.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/microservices_1-768x432.jpg 768w, https://emolike.net/wp-content/uploads/2018/03/microservices_1-1024x576.jpg 1024w, https://emolike.net/wp-content/uploads/2018/03/microservices_1-200x113.jpg 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>The API gateway enables support for mixing communication protocols and decreases microservice complexity by providing authorization using API tokens, access control enforcement, and rate limiting.</p>\n<p>The API gateway is responsible for request routing, composition, and protocol translation. All requests from clients first go through the API Gateway. It then routes requests to the appropriate microservice.</p>\n<p>However, the API gateway increases the complexity of the system by adding yet another moving part that must be managed. Also, it increases response time due to the additional network hop through the API gateway.</p>\n<h2 id=\"buildingmicroservicesrunningmicroservices\">Building Microservices != Running Microservices</h2>\n<p>Building and running microservices are different things. Building microservices is the architectural pattern that requires that services are designed to be independent and isolated. Without a good design there is a risk that users end up building a monolith that is divided into multiple tightly coupled services. When services are ready and tested, users definitely wants to run and monitor them.</p>\n<p>Running and monitoring microservices require the right tools. Without the right tools it can become time-consuming and maintaining the microservice platform itself can take more time than maintaining the application itself.</p>\n<p>In the next part of this blog post series, we will show how to setup, run and monitor an API gateway and microservices very easily with <a href=\"https://www.kontena.io/\">Kontena</a>.</p>\n<h2 id=\"aboutkontena\">About Kontena</h2>\n<p>Want to learn about real life use cases of Kontena, case studies, best practices, tips &amp; tricks? Need some help with your project? Want to contribute to a project or help other people? Join the <a href=\"https://forum.kontena.io/\">Kontena Forum</a> to discuss more about the <a href=\"https://www.kontena.io/platform#overview\">Kontena Platform</a>, chat with other happy developers on our <a href=\"https://slack.kontena.io/\">Slack</a> discussion channel or meet people in person at one of our <a href=\"https://www.meetup.com/pro/kontena/\">Meetup groups</a> located all around the world.</p>\n<p>source: https://blog.kontena.io/rule-your-microservices-with-an-api-gateway/</p>\n</section>\n",
          "slug": "rule-your-microservices-with-an-api-gateway-part-i",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/rule-your-microservices-with-an-api-gateway-part-i/",
          "date": "2018-03-13T18:57:45",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE0OA==",
        "node": {
          "id": "cG9zdDoxNDg=",
          "title": "NVMe vs SSD vs HDD Performance",
          "content": "<p>A lot has changed in the world of computer storage in the past decade. Traditional spinning <a href=\"https://en.wikipedia.org/wiki/Hard_disk_drive\">hard disk drives</a> (HDD) have been outperformed by insanely fast and now affordable <a href=\"https://en.wikipedia.org/wiki/Solid-state_drive\">Solid State Drives</a> (SSD). And now we have insanely faster flash memory technology already available for the consumer market in the shape of <a href=\"https://en.wikipedia.org/wiki/NVM_Express\">Non-Volatile Memory Express</a> (NVMe), which is manufactured in a number of different interfaces / form factors, including <a href=\"https://en.wikipedia.org/wiki/M.2\">M.2</a>. Many photographers, including myself, experienced a huge boost in performance for post-processing large resolution files when switching from a hard drive to an SSD, but now that the faster flash memory is becoming more common, one might be wondering about the benefits of this new storage compared to both HDD and SSD drives. We have already published a detailed article on <a href=\"https://photographylife.com/the-ultimate-pc-build-for-photography-needs\">building a computer for photography</a>based on the latest generation Intel Skylake architecture, where we recommended to get the new generation motherboards with built-in M.2 slots for flash storage. Having built a similar computer myself for my post-processing and video editing needs, I thought it would be useful to share just how much faster the new storage is compared to both HDD and SSD drives, since I use all three in my large full tower setup.</p>\n<p>Many photographers still actively rely on hard disk drives, since they not only give more bang for the buck when compared to other storage types, but also provide a lot more storage to work with. And considering that photographs and video take enormous amounts of storage space, it is given that HDDs would be far more popular in comparison to everything else. When buying a brand new laptop or a computer, it is tough to decide what to go for – a much smaller, but faster SSD / PCIe flash memory, or a large capacity hard drive. And what makes it even more confusing, is that we now have hybrid hard drives, also known as “Fusion” drives, which are supposed to give the benefits of both SSD and HDD storage in a single package. What is the best storage type for photography needs? Such questions are very common among photographers, who try to plan their storage needs when shopping for new hardware.</p>\n<p>Unfortunately, there is no single right answer for everyone, because it all depends on each photographer’s <a href=\"https://photographylife.com/what-is-photography-workflow\">workflow</a> and how much storage is needed. For beefy storage environments with tens or even hundreds of thousands of RAW images and videos, no single type of storage would be sufficient, because there would most likely be two environments in place – one for current active projects (fast storage) and one for passive projects / archival (slower, large capacity storage). For smaller environments, a fast flash drive with a combination of either internal or external hard drive would suffice, where the photographer would place their operating system files, along with their active image catalog on the fastest flash storage, while storing images in slower, large capacity hard drives. And for someone who is starting out, a single, do-it-all drive would most likely suffice, with storage type depending on budget.</p>\n<p>For my personal and business needs, I have been heavily relying on SSD and HDD drives during the past years, some of which are placed in my computer, while others are a part of a large <a href=\"https://photographylife.com/reviews/synology-ds1815\">Synology storage array</a>. With 10+ years of images and the various video projects that I am currently working on, storage has been a very essential and integral part of my workflow, as I need to re-address both capacity and performance needs every few years. The main reason is time – if I can save hours of my time by using faster storage, it translates to more efficiency for the entire workflow. And I am not just talking about pure editing time, as storage is used for other critical parts of workflow, such as backup, as well.</p>\n<p>After upgrading my large tower machine with all-new computer components, which include the new flash storage in M.2 form factor (I rely on the currently fastest consumer-grade M.2 drive, the <a href=\"https://www.amazon.com/Samsung-960-PRO-Internal-MZ-V6P512BW/dp/B01LXS4TYB?tag=photolife0c-20\" rel=\"external nofollow\">Samsung 512 GB 960 Pro M.2 NVMe</a>), I decided to test out every drive of my new build and see what kinds of gains I would expect in terms of both read and write speeds. The results were quite shocking, as you can see below:</p>\n<p><img class=\"alignnone size-full wp-image-149\" src=\"https://emolike.net/wp-content/uploads/2018/03/NVMe-vs-SSD-vs-HDD.png\" alt=\"NVMe vs SSD vs HDD\" width=\"803\" height=\"733\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/NVMe-vs-SSD-vs-HDD.png 803w, https://emolike.net/wp-content/uploads/2018/03/NVMe-vs-SSD-vs-HDD-300x274.png 300w, https://emolike.net/wp-content/uploads/2018/03/NVMe-vs-SSD-vs-HDD-768x701.png 768w, https://emolike.net/wp-content/uploads/2018/03/NVMe-vs-SSD-vs-HDD-200x183.png 200w\" sizes=\"(max-width: 803px) 100vw, 803px\" /></p>\n<p>In just read performance alone, my M.2 drive turned out to be a whopping 25x times faster than my enterprise-grade WD 2 TB 7200 RPM drive. That is just mind boggling, considering that SSD is only around 5x times faster in comparison. In write speed, I was able to witness up to 15x more performance, which is also a very impressive number. And that’s just for one type of sequential read/write load – if you look at the above numbers, other performance metrics indicate even larger, more noticeable gains.</p>\n<p>What does this all translate to? With so many camera manufacturers pushing for more resolution, many of us have been experiencing performance issues, with storage often being the bottleneck. If one can place their image catalogs on the fastest drive and use faster drives for storage of RAW images and video footage, the performance gains can be tremendous, especially during intensive workloads such as image and video export. And once file copy / move operations are involved, those benefits can become even more significant, especially for a busy professional.</p>\n<p><em>One thing to note – I am not suggesting that one would experience 25x performance gains just by switching from a hard drive to a flash drive when editing images, since there are many other factors involved, such as overall speed of the computer (CPU speed, number of CPU cores, total RAM and its speed, etc), the ability of the software to take full advantage of both the computer resources and the storage, etc. The software numbers from the above benchmarks might not apply the same way for everyday work.</em></p>\n<p>source: https://photographylife.com/nvme-vs-ssd-vs-hdd-performance</p>\n",
          "slug": "nvme-vs-ssd-vs-hdd-performance",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/nvme-vs-ssd-vs-hdd-performance/",
          "date": "2018-03-13T17:44:11",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzOA==",
        "node": {
          "id": "cG9zdDoxMzg=",
          "title": "Easy Install Softether VPN to Ubuntu VPS",
          "content": "<h2 class=\"editable\">What is SoftEther VPN</h2>\n<p><img class=\"alignnone size-full wp-image-141\" src=\"https://emolike.net/wp-content/uploads/2018/03/1.2.jpg\" alt=\"1.2.jpg\" width=\"550\" height=\"507\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1.2.jpg 550w, https://emolike.net/wp-content/uploads/2018/03/1.2-300x277.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/1.2-200x184.jpg 200w\" sizes=\"(max-width: 550px) 100vw, 550px\" /><a title=\"Why SoftEther VPN?\" href=\"https://www.softether.org/1-features\" rel=\"internal\"><strong>SoftEther VPN</strong></a> <em>(&#8220;SoftEther&#8221; means &#8220;Software Ethernet&#8221;)</em> is one of the world&#8217;s most powerful and easy-to-use multi-protocol VPN software. It runs on Windows, Linux, Mac, FreeBSD and Solaris.</p>\n<p>SoftEther VPN is <a title=\"Source Code\" href=\"https://www.softether.org/5-download/src\" rel=\"internal\">open source</a>. You can use SoftEther for any personal or commercial use for free charge.</p>\n<p>SoftEther VPN is an optimum <a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_OpenVPN_Protocol\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_OpenVPN_Protocol\" rel=\"internal\">alternative to OpenVPN </a>and <a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_Microsoft_SSTP_VPN_Protocol\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_Microsoft_SSTP_VPN_Protocol\" rel=\"internal\">Microsoft&#8217;s VPN servers</a>. SoftEther VPN has a clone-function of OpenVPN Server. You can integrate from OpenVPN to SoftEther VPN smoothly. <a title=\"1.3.jpg\" href=\"https://www.softether.org/@api/deki/files/12/=1.3.jpg\" rel=\"internal\">SoftEther VPN is faster than OpenVPN</a>. SoftEther VPN also supports Microsoft SSTP VPN for Windows Vista / 7 / 8. No more need to pay expensive charges for Windows Server license for Remote-Access VPN function.</p>\n<p>SoftEther VPN can be used to realize <a class=\"external\" title=\"http://en.wikipedia.org/wiki/Bring_your_own_device\" href=\"http://en.wikipedia.org/wiki/Bring_your_own_device\" target=\"_blank\" rel=\"external nofollow noopener\">BYOD</a> (Bring your own device) on your business. If you have smartphones, tablets or laptop PCs, <a title=\"L2TP/IPsec Setup Guide for SoftEther VPN Server\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server\" rel=\"internal\">SoftEther VPN&#8217;s L2TP/IPsec server function</a> will help you to establish a remote-access VPN from your local network. SoftEther VPN&#8217;s L2TP VPN Server has strong compatible with <a title=\"Windows L2TP Client Setup\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server/4.Windows_L2TP_Client_Setup\" rel=\"internal\">Windows</a>, <a title=\"Mac OS X L2TP Client Setup\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server/5.Mac_OS_X_L2TP_Client_Setup\" rel=\"internal\">Mac</a>, <a title=\"iPhone / iPad L2TP Client Setup\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server/2.iPhone_iPad_L2TP_Client_Setting\" rel=\"internal\">iOS</a> and <a title=\"Android L2TP Client Setup\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server/3.Android_L2TP_Client_Setup\" rel=\"internal\">Android</a>.</p>\n<p><img class=\"alignnone size-full wp-image-142\" src=\"https://emolike.net/wp-content/uploads/2018/03/1.0_vpnserver.jpg\" alt=\"1.0_vpnserver.jpg\" width=\"550\" height=\"414\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1.0_vpnserver.jpg 550w, https://emolike.net/wp-content/uploads/2018/03/1.0_vpnserver-300x226.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/1.0_vpnserver-200x151.jpg 200w\" sizes=\"(max-width: 550px) 100vw, 550px\" />SoftEther VPN is not only an alternative VPN server to existing VPN products (OpenVPN, IPsec and MS-SSTP). SoftEther VPN has also <a title=\"1. Ultimate Powerful VPN Connectivity\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity\" rel=\"internal\">original strong SSL-VPN protocol</a> to penetrate any kinds of firewalls. Ultra-optimized SSL-VPN Protocol of SoftEther VPN has very fast throughput, low latency and firewall resistance.</p>\n<p>SoftEther VPN has<a title=\"1. Ultimate Powerful VPN Connectivity\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity\" rel=\"internal\"> strong resistance against firewalls</a> than ever. <a title=\"Why SoftEther VPN?\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.5._NAT_Traversal\" rel=\"internal\">Built-in NAT-traversal</a> penetrates your network admin&#8217;s troublesome firewall for overprotection. You can setup your own VPN server behind the firewall or NAT in your company, and you can reach to that VPN server in the corporate private network from your home or mobile place, without any modification of firewall settings. Any deep-packet inspection firewalls cannot detect SoftEther VPN&#8217;s transport packets as a VPN tunnel, because SoftEther VPN uses Ethernet over HTTPS for camouflage.</p>\n<p><img class=\"alignnone size-full wp-image-143\" src=\"https://emolike.net/wp-content/uploads/2018/03/1.0_vpnclient2.jpg\" alt=\"1.0_vpnclient2.jpg\" width=\"403\" height=\"200\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1.0_vpnclient2.jpg 403w, https://emolike.net/wp-content/uploads/2018/03/1.0_vpnclient2-300x149.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/1.0_vpnclient2-200x99.jpg 200w\" sizes=\"(max-width: 403px) 100vw, 403px\" /></p>\n<p>&nbsp;</p>\n<p>Easy to imagine, design and implement your VPN topology with SoftEther VPN. It virtualizes <a title=\"2. Layer-2 Ethernet-based VPN\" href=\"https://www.softether.org/1-features/2._Layer-2_Ethernet-based_VPN\" rel=\"internal\">Ethernet by software-enumeration</a>. SoftEther VPN Client implements <a title=\"4.3 Virtual Network Adapter\" href=\"https://www.softether.org/4-docs/1-manual/4._SoftEther_VPN_Client_Manual/4.3_Virtual_Network_Adapter\" rel=\"internal\">Virtual Network Adapter</a>, and SoftEther VPN Server implements <a title=\"1.4 VPN Processing Principle and Communication Method\" href=\"https://www.softether.org/4-docs/1-manual/1._SoftEther_VPN_Overview/1.4_VPN_Processing_Principle_and_Communication_Method\" rel=\"internal\">Virtual Ethernet Switch</a>. You can easily build both <a title=\"10.4 Build a Generic Remote Access VPN\" href=\"https://www.softether.org/4-docs/1-manual/A._Examples_of_Building_VPN_Networks/10.4_Build_a_PC-to-LAN_Remote_Access_VPN\" rel=\"internal\">Remote-Access VPN</a> and <a title=\"10.5 Build a LAN-to-LAN VPN (Using L2 Bridge)\" href=\"https://www.softether.org/4-docs/1-manual/A._Examples_of_Building_VPN_Networks/10.5_Build_a_LAN-to-LAN_VPN_(Using_L2_Bridge)\" rel=\"internal\">Site-to-Site VPN</a>, as expansion of Ethernet-based L2 VPN. Of course, <a title=\"10.6 Build a LAN-to-LAN VPN (Using L3 IP Routing)\" href=\"https://www.softether.org/4-docs/1-manual/A._Examples_of_Building_VPN_Networks/10.6_Build_a_LAN-to-LAN_VPN_(Using_L3_IP_Routing)\" rel=\"internal\">traditional IP-routing L3 based VPN</a> can be built by SoftEther VPN.</p>\n<p><img class=\"alignnone size-full wp-image-144\" src=\"https://emolike.net/wp-content/uploads/2018/03/iphone.jpg\" alt=\"iphone.jpg\" width=\"160\" height=\"42\" />SoftEther VPN has strong compatibility to today&#8217;s most popular VPN products among the world. It has the interoperability with OpenVPN, L2TP, IPsec, EtherIP, L2TPv3, Cisco VPN Routers and MS-SSTP VPN Clients. SoftEther VPN is the world&#8217;s only VPN software which supports SSL-VPN, OpenVPN, L2TP, EtherIP, L2TPv3 and IPsec, as a single VPN software.</p>\n<p>SoftEther VPN is free software because it was developed as <a title=\"Research Works\" href=\"https://www.softether.org/4-docs/9-research\" rel=\"internal\">Daiyuu Nobori&#8217;s Master Thesis research</a> in the University. You can <a title=\"Download\" href=\"https://www.softether.org/5-download\" rel=\"internal\">download</a> and <a title=\"Tutorials\" href=\"https://www.softether.org/4-docs/2-howto\" rel=\"internal\">use it</a> from today. <a title=\"Source Code\" href=\"https://www.softether.org/5-download/src\" rel=\"internal\">The source-code </a>of SoftEther VPN is available under GPL license.</p>\n<p>Features of SoftEther VPN</p>\n<div>\n<ul>\n<li><img class=\"alignnone size-full wp-image-141\" src=\"https://emolike.net/wp-content/uploads/2018/03/1.2.jpg\" alt=\"1.2.jpg\" width=\"550\" height=\"507\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/1.2.jpg 550w, https://emolike.net/wp-content/uploads/2018/03/1.2-300x277.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/1.2-200x184.jpg 200w\" sizes=\"(max-width: 550px) 100vw, 550px\" />Free and <a title=\"Source Code\" href=\"https://www.softether.org/5-download/src\" rel=\"internal\">open-source</a> software.</li>\n<li>Easy to establish both <a title=\"10.4 Build a Generic Remote Access VPN\" href=\"https://www.softether.org/4-docs/1-manual/A._Examples_of_Building_VPN_Networks/10.4_Build_a_PC-to-LAN_Remote_Access_VPN\" rel=\"internal\">remote-access</a> and <a title=\"10.5 Build a LAN-to-LAN VPN (Using L2 Bridge)\" href=\"https://www.softether.org/4-docs/1-manual/A._Examples_of_Building_VPN_Networks/10.5_Build_a_LAN-to-LAN_VPN_(Using_L2_Bridge)\" rel=\"internal\">site-to-site</a> VPN.</li>\n<li>SSL-VPN Tunneling on HTTPS to <a title=\"1. Ultimate Powerful VPN Connectivity\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity\" rel=\"internal\">pass through NATs and firewalls</a>.</li>\n<li>Revolutionary <a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.6._VPN_over_ICMP.2C_and_VPN_over_DNS_(Awesome!)\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.6._VPN_over_ICMP.2C_and_VPN_over_DNS_(Awesome!)\" rel=\"internal\">VPN over ICMP and VPN over DNS</a> features.</li>\n<li>Resistance to highly-restricted firewall.</li>\n<li><a title=\"2. Layer-2 Ethernet-based VPN\" href=\"https://www.softether.org/1-features/2._Layer-2_Ethernet-based_VPN\" rel=\"internal\">Ethernet-bridging (L2)</a> and <a title=\"10.6 Build a LAN-to-LAN VPN (Using L3 IP Routing)\" href=\"https://www.softether.org/4-docs/1-manual/A._Examples_of_Building_VPN_Networks/10.6_Build_a_LAN-to-LAN_VPN_(Using_L3_IP_Routing)\" rel=\"internal\">IP-routing (L3)</a> over VPN.</li>\n<li>Embedded <a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.4._Built-in_Dynamic_DNS_(*.softether.net)\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.4._Built-in_Dynamic_DNS_(*.softether.net)\" rel=\"internal\">dynamic-DNS</a> and <a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.5._NAT_Traversal\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#1.5._NAT_Traversal\" rel=\"internal\">NAT-traversal</a> so that no static nor fixed IP address is required.</li>\n<li><a title=\"3. Security and Reliability\" href=\"https://www.softether.org/1-features/3._Security_and_Reliability\" rel=\"internal\">AES 256-bit and RSA 4096-bit</a> encryptions.</li>\n<li>Sufficient security features such as <a title=\"3.5 Virtual Hub Security Features\" href=\"https://www.softether.org/4-docs/1-manual/3._SoftEther_VPN_Server_Manual/3.5_Virtual_Hub_Security_Features\" rel=\"internal\">logging</a> and <a title=\"3.5 Virtual Hub Security Features\" href=\"https://www.softether.org/4-docs/1-manual/3._SoftEther_VPN_Server_Manual/3.5_Virtual_Hub_Security_Features\" rel=\"internal\">firewall</a> inner VPN tunnel.</li>\n<li><a title=\"Design and Implementation of SoftEther VPN\" href=\"https://www.softether.org/4-docs/9-research/Design_and_Implementation_of_SoftEther_VPN\" rel=\"internal\">1Gbps-class high-speed throughput performance</a> with low memory and CPU usage.</li>\n<li><strong>Windows, Linux, Mac, Android, iPhone, iPad and Windows Mobile</strong> are supported.</li>\n<li>SSL-VPN (HTTPS) and 6 major VPN protocols (<a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_OpenVPN_Protocol\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_OpenVPN_Protocol\" rel=\"internal\">OpenVPN</a>, <a title=\"http://www.softether.org/4-docs/2-howto/L2TP%2F%2FIPsec_Setup_Guide_for_SoftEther_VPN_Server\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server\" rel=\"internal\">IPsec</a>, <a title=\"http://www.softether.org/4-docs/2-howto/L2TP%2F%2FIPsec_Setup_Guide_for_SoftEther_VPN_Server\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server\" rel=\"internal\">L2TP</a>, <a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_Microsoft_SSTP_VPN_Protocol\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_Microsoft_SSTP_VPN_Protocol\" rel=\"internal\">MS-SSTP</a>, <a title=\"http://www.softether.org/4-docs/2-howto/L2TP%2F%2FIPsec_Setup_Guide_for_SoftEther_VPN_Server/6.Cisco_IOS_L2TPv3%2F%2F%2F%2FIPsec_Edge-VPN_Router_Setup\" href=\"https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server/6.Cisco_IOS_L2TPv3%2F%2F%2F%2FIPsec_Edge-VPN_Router_Setup\" rel=\"internal\">L2TPv3</a> and <a title=\"Specification\" href=\"https://www.softether.org/3-spec\" rel=\"internal\">EtherIP</a>) are all supported as VPN tunneling underlay protocols.</li>\n<li>The <a title=\"http://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_OpenVPN_Protocol\" href=\"https://www.softether.org/1-features/1._Ultimate_Powerful_VPN_Connectivity#Support_OpenVPN_Protocol\" rel=\"internal\">OpenVPN clone function</a> supports legacy OpenVPN clients.</li>\n<li>IPv4 / <a title=\"http://www.softether.org/1-features/4._Fast_Throughput_and_High_Ability#4.8._Full_IPv6_Supports\" href=\"https://www.softether.org/1-features/4._Fast_Throughput_and_High_Ability#4.8._Full_IPv6_Supports\" rel=\"internal\">IPv6</a> dual-stack.</li>\n<li>The <a title=\"3. SoftEther VPN Server Manual\" href=\"https://www.softether.org/4-docs/1-manual/3._SoftEther_VPN_Server_Manual\" rel=\"internal\">VPN server</a> runs on <a title=\"Specification\" href=\"https://www.softether.org/3-spec\" rel=\"internal\">Windows, Linux, FreeBSD, Solaris and Mac OS X</a>.</li>\n<li>Configure All settings on <a title=\"5. Easy Installation and Management\" href=\"https://www.softether.org/1-features/5._Easy_Installation_and_Management\" rel=\"internal\">GUI</a>.</li>\n<li><a title=\"http://www.softether.org/1-features/5._Easy_Installation_and_Management#5.8._Multi-language.2C_Single_Binary_Package_and_Unicode_Support\" href=\"https://www.softether.org/1-features/5._Easy_Installation_and_Management#5.8._Multi-language.2C_Single_Binary_Package_and_Unicode_Support\" rel=\"internal\">Multi-languages</a> (English, Japanese and Simplified-Chinese).</li>\n<li>No memory leaks. High quality stable codes, intended for long-term runs. We always verify that there are no memory or resource leaks before releasing the build.</li>\n<li>RADIUS / NT Domain user authentication function</li>\n<li>RSA certificate authentication function</li>\n<li>Deep-inspect packet logging function</li>\n<li>Source IP address control list function</li>\n<li>syslog transfer function</li>\n<li><a title=\"Specification\" href=\"https://www.softether.org/3-spec\" rel=\"internal\">More details at Specification</a>.</li>\n</ul>\n</div>\n<p><iframe title=\"Easy Install Softether VPN to Ubuntu VPS\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/kj11LL7QJQM?start=4&#038;feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p><iframe title=\"How To Install SoftEther VPN Server (UPDATED! Read Desc)\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/mxyDLkA4Rzc?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>source : https://www.softether.org/</p>\n",
          "slug": "easy-install-softether-vpn-to-ubuntu-vps",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/easy-install-softether-vpn-to-ubuntu-vps/",
          "date": "2018-03-13T17:05:34",
          "tags": {
            "nodes": [
              {
                "name": "vpn"
              }
            ]
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzNg==",
        "node": {
          "id": "cG9zdDoxMzY=",
          "title": "Kubernetes The Easy Way! (For Developers In 2018)",
          "content": "<p><iframe title=\"Kubernetes The Easy Way!\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/kOa_llowQ1c?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "kubernetes-the-easy-way-for-developers-in-2018",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/13/kubernetes-the-easy-way-for-developers-in-2018/",
          "date": "2018-03-13T16:39:17",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEzMw==",
        "node": {
          "id": "cG9zdDoxMzM=",
          "title": "How to prevent SQL injection in PHP?",
          "content": "<div class=\"post-text\">\n<p><strong>Use prepared statements and parameterized queries.</strong> These are SQL statements that are sent to and parsed by the database server separately from any parameters. This way it is impossible for an attacker to inject malicious SQL.</p>\n<p>You basically have two options to achieve this:</p>\n<ol>\n<li>Using <a href=\"http://php.net/manual/en/book.pdo.php\" rel=\"noreferrer\">PDO</a> (for any supported database driver):\n<pre class=\"lang-php prettyprint prettyprinted\"><code>&lt;span class=\"pln\"&gt;$stmt &lt;/span&gt;&lt;span class=\"pun\"&gt;=&lt;/span&gt;&lt;span class=\"pln\"&gt; $pdo&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;prepare&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"str\"&gt;'SELECT * FROM employees WHERE name = :name'&lt;/span&gt;&lt;span class=\"pun\"&gt;);&lt;/span&gt;&lt;span class=\"pln\"&gt;\n\n$stmt&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;execute&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;array&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"str\"&gt;'name'&lt;/span&gt; &lt;span class=\"pun\"&gt;=&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt; $name&lt;/span&gt;&lt;span class=\"pun\"&gt;));&lt;/span&gt;\n\n&lt;span class=\"kwd\"&gt;foreach&lt;/span&gt; &lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;$stmt &lt;/span&gt;&lt;span class=\"kwd\"&gt;as&lt;/span&gt;&lt;span class=\"pln\"&gt; $row&lt;/span&gt;&lt;span class=\"pun\"&gt;)&lt;/span&gt; &lt;span class=\"pun\"&gt;{&lt;/span&gt;\n    &lt;span class=\"com\"&gt;// do something with $row&lt;/span&gt;\n&lt;span class=\"pun\"&gt;}&lt;/span&gt;</code></pre>\n</li>\n<li>Using <a href=\"http://php.net/manual/en/book.mysqli.php\" rel=\"noreferrer\">MySQLi</a> (for MySQL):\n<pre class=\"lang-php prettyprint prettyprinted\"><code>&lt;span class=\"pln\"&gt;$stmt &lt;/span&gt;&lt;span class=\"pun\"&gt;=&lt;/span&gt;&lt;span class=\"pln\"&gt; $dbConnection&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;prepare&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"str\"&gt;'SELECT * FROM employees WHERE name = ?'&lt;/span&gt;&lt;span class=\"pun\"&gt;);&lt;/span&gt;&lt;span class=\"pln\"&gt;\n$stmt&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;bind_param&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"str\"&gt;'s'&lt;/span&gt;&lt;span class=\"pun\"&gt;,&lt;/span&gt;&lt;span class=\"pln\"&gt; $name&lt;/span&gt;&lt;span class=\"pun\"&gt;);&lt;/span&gt; &lt;span class=\"com\"&gt;// 's' specifies the variable type =&amp;gt; 'string'&lt;/span&gt;&lt;span class=\"pln\"&gt;\n\n$stmt&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;execute&lt;/span&gt;&lt;span class=\"pun\"&gt;();&lt;/span&gt;&lt;span class=\"pln\"&gt;\n\n$result &lt;/span&gt;&lt;span class=\"pun\"&gt;=&lt;/span&gt;&lt;span class=\"pln\"&gt; $stmt&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;get_result&lt;/span&gt;&lt;span class=\"pun\"&gt;();&lt;/span&gt;\n&lt;span class=\"kwd\"&gt;while&lt;/span&gt; &lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;$row &lt;/span&gt;&lt;span class=\"pun\"&gt;=&lt;/span&gt;&lt;span class=\"pln\"&gt; $result&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;fetch_assoc&lt;/span&gt;&lt;span class=\"pun\"&gt;())&lt;/span&gt; &lt;span class=\"pun\"&gt;{&lt;/span&gt;\n    &lt;span class=\"com\"&gt;// do something with $row&lt;/span&gt;\n&lt;span class=\"pun\"&gt;}&lt;/span&gt;</code></pre>\n</li>\n</ol>\n<p>If you&#8217;re connecting to a database other than MySQL, there is a driver-specific second option that you can refer to (e.g. <code>pg_prepare()</code> and <code>pg_execute()</code> for PostgreSQL). PDO is the universal option.</p>\n<h2>Correctly setting up the connection</h2>\n<p>Note that when using <code>PDO</code> to access a MySQL database <em>real</em> prepared statements are <strong>not used by default</strong>. To fix this you have to disable the emulation of prepared statements. An example of creating a connection using PDO is:</p>\n<pre class=\"lang-php prettyprint prettyprinted\"><code>&lt;span class=\"pln\"&gt;$dbConnection &lt;/span&gt;&lt;span class=\"pun\"&gt;=&lt;/span&gt; &lt;span class=\"kwd\"&gt;new&lt;/span&gt;&lt;span class=\"pln\"&gt; PDO&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"str\"&gt;'mysql:dbname=dbtest;host=127.0.0.1;charset=utf8'&lt;/span&gt;&lt;span class=\"pun\"&gt;,&lt;/span&gt; &lt;span class=\"str\"&gt;'user'&lt;/span&gt;&lt;span class=\"pun\"&gt;,&lt;/span&gt; &lt;span class=\"str\"&gt;'pass'&lt;/span&gt;&lt;span class=\"pun\"&gt;);&lt;/span&gt;&lt;span class=\"pln\"&gt;\n\n$dbConnection&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;setAttribute&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;PDO&lt;/span&gt;&lt;span class=\"pun\"&gt;::&lt;/span&gt;&lt;span class=\"pln\"&gt;ATTR_EMULATE_PREPARES&lt;/span&gt;&lt;span class=\"pun\"&gt;,&lt;/span&gt; &lt;span class=\"kwd\"&gt;false&lt;/span&gt;&lt;span class=\"pun\"&gt;);&lt;/span&gt;&lt;span class=\"pln\"&gt;\n$dbConnection&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;setAttribute&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;PDO&lt;/span&gt;&lt;span class=\"pun\"&gt;::&lt;/span&gt;&lt;span class=\"pln\"&gt;ATTR_ERRMODE&lt;/span&gt;&lt;span class=\"pun\"&gt;,&lt;/span&gt;&lt;span class=\"pln\"&gt; PDO&lt;/span&gt;&lt;span class=\"pun\"&gt;::&lt;/span&gt;&lt;span class=\"pln\"&gt;ERRMODE_EXCEPTION&lt;/span&gt;&lt;span class=\"pun\"&gt;);&lt;/span&gt;</code></pre>\n<p>In the above example the error mode isn&#8217;t strictly necessary, <strong>but it is advised to add it</strong>. This way the script will not stop with a <code>Fatal Error</code> when something goes wrong. And it gives the developer the chance to <code>catch</code> any error(s) which are <code>throw</code>n as <code>PDOException</code>s.</p>\n<p>What is <strong>mandatory</strong>, however, is the first <code>setAttribute()</code> line, which tells PDO to disable emulated prepared statements and use <em>real</em> prepared statements. This makes sure the statement and the values aren&#8217;t parsed by PHP before sending it to the MySQL server (giving a possible attacker no chance to inject malicious SQL).</p>\n<p>Although you can set the <code>charset</code> in the options of the constructor, it&#8217;s important to note that &#8216;older&#8217; versions of PHP (&lt; 5.3.6) <a href=\"http://php.net/manual/en/ref.pdo-mysql.connection.php\" rel=\"noreferrer\">silently ignored the charset parameter</a> in the DSN.</p>\n<h2>Explanation</h2>\n<p>What happens is that the SQL statement you pass to <code>prepare</code> is parsed and compiled by the database server. By specifying parameters (either a <code>?</code> or a named parameter like <code>:name</code> in the example above) you tell the database engine where you want to filter on. Then when you call <code>execute</code>, the prepared statement is combined with the parameter values you specify.</p>\n<p>The important thing here is that the parameter values are combined with the compiled statement, not an SQL string. SQL injection works by tricking the script into including malicious strings when it creates SQL to send to the database. So by sending the actual SQL separately from the parameters, you limit the risk of ending up with something you didn&#8217;t intend. Any parameters you send when using a prepared statement will just be treated as strings (although the database engine may do some optimization so parameters may end up as numbers too, of course). In the example above, if the <code>$name</code> variable contains <code>'Sarah'; DELETE FROM employees</code> the result would simply be a search for the string <code>\"'Sarah'; DELETE FROM employees\"</code>, and you will not end up with <a href=\"http://xkcd.com/327/\" rel=\"noreferrer\">an empty table</a>.</p>\n<p>Another benefit of using prepared statements is that if you execute the same statement many times in the same session it will only be parsed and compiled once, giving you some speed gains.</p>\n<p>Oh, and since you asked about how to do it for an insert, here&#8217;s an example (using PDO):</p>\n<pre class=\"lang-php prettyprint prettyprinted\"><code>&lt;span class=\"pln\"&gt;$preparedStatement &lt;/span&gt;&lt;span class=\"pun\"&gt;=&lt;/span&gt;&lt;span class=\"pln\"&gt; $db&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;prepare&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"str\"&gt;'INSERT INTO table (column) VALUES (:column)'&lt;/span&gt;&lt;span class=\"pun\"&gt;);&lt;/span&gt;&lt;span class=\"pln\"&gt;\n\n$preparedStatement&lt;/span&gt;&lt;span class=\"pun\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt;execute&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;array&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"str\"&gt;'column'&lt;/span&gt; &lt;span class=\"pun\"&gt;=&amp;gt;&lt;/span&gt;&lt;span class=\"pln\"&gt; $unsafeValue&lt;/span&gt;&lt;span class=\"pun\"&gt;));&lt;/span&gt;</code></pre>\n<h2>Can prepared statements be used for dynamic queries?</h2>\n<p>While you can still use prepared statements for the query parameters, the structure of the dynamic query itself cannot be parametrized and certain query features cannot be parametrized.</p>\n<p>For these specific scenarios, the best thing to do is use a whitelist filter that restricts the possible values.</p>\n<pre class=\"default prettyprint prettyprinted\"><code>&lt;span class=\"com\"&gt;// Value whitelist&lt;/span&gt;\n&lt;span class=\"com\"&gt;// $dir can only be 'DESC' otherwise it will be 'ASC'&lt;/span&gt;\n&lt;span class=\"kwd\"&gt;if&lt;/span&gt; &lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;empty&lt;/span&gt;&lt;span class=\"pun\"&gt;(&lt;/span&gt;&lt;span class=\"pln\"&gt;$dir&lt;/span&gt;&lt;span class=\"pun\"&gt;)&lt;/span&gt; &lt;span class=\"pun\"&gt;||&lt;/span&gt;&lt;span class=\"pln\"&gt; $dir &lt;/span&gt;&lt;span class=\"pun\"&gt;!==&lt;/span&gt; &lt;span class=\"str\"&gt;'DESC'&lt;/span&gt;&lt;span class=\"pun\"&gt;)&lt;/span&gt; &lt;span class=\"pun\"&gt;{&lt;/span&gt;&lt;span class=\"pln\"&gt;\n   $dir &lt;/span&gt;&lt;span class=\"pun\"&gt;=&lt;/span&gt; &lt;span class=\"str\"&gt;'ASC'&lt;/span&gt;&lt;span class=\"pun\"&gt;;&lt;/span&gt;\n&lt;span class=\"pun\"&gt;}&lt;/span&gt;</code></pre>\n</div>\n<div class=\"grid mb0 fw-wrap ai-start jc-end gs8 gsy\">\n<div class=\"grid--cell mr16\">\n<div class=\"post-menu\">source : https://stackoverflow.com/questions/60174/how-can-i-prevent-sql-injection-in-php</div>\n</div>\n</div>\n",
          "slug": "how-can-i-prevent-sql-injection-in-php",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/12/how-can-i-prevent-sql-injection-in-php/",
          "date": "2018-03-12T16:06:20",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjExNA==",
        "node": {
          "id": "cG9zdDoxMTQ=",
          "title": "Radzen &#8211; The first rapid application development tool",
          "content": "<p>The Radzen applications are built on the top of trusted, popular and widely adopted technologies used by millions of developers with lots of resources and learning materials. No proprietary frameworks and code. No steep learning curve. No vendor lock-in &#8211; the output applications could be <a href=\"https://www.radzen.com/documentation/manual-deploy/\">built and run</a> using tools available for free.</p>\n<ul>\n<li>Client-side &#8211; <a href=\"https://angular.io/\" target=\"_blank\" rel=\"noopener\">Angular 4</a> and <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">TypeScript</a></li>\n<li>Client-side UI Toolkit &#8211; <a href=\"https://www.primefaces.org/primeng/\" target=\"_blank\" rel=\"noopener\">PrimeNG</a></li>\n<li>Responsive CSS Framework &#8211; <a href=\"https://getbootstrap.com/\" target=\"_blank\" rel=\"noopener\">Bootstrap 4</a></li>\n<li>Server side &#8211; <a href=\"https://www.microsoft.com/net/core\" target=\"_blank\" rel=\"noopener\">.NET Core</a> and C#</li>\n<li>Server API layer &#8211; <a href=\"http://www.odata.org/\" target=\"_blank\" rel=\"noopener\">OData</a></li>\n</ul>\n<p><iframe title=\"Radzen - The first rapid application development tool for Angular 2\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/c8jnIUy2Vjg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "radzen-the-first-rapid-application-development-tool",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/11/radzen-the-first-rapid-application-development-tool/",
          "date": "2018-03-11T20:25:15",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwNg==",
        "node": {
          "id": "cG9zdDoxMDY=",
          "title": "3 Leading Enterprise Low-Code App Development Platforms Compared",
          "content": "<p>It&#8217;s no secret that enterprise mobile and Web app development is being transformed by a new class of tools enabling non-programming &#8220;citizen developers&#8221; to meet the insatiable demand for apps amid a shortage of coding pros.</p>\n<p>These tools have many names &#8212; such as rapid-application development (RAD), low-code and even no-code &#8212; but they typically feature functionality such as model-driven development, point-and-click programming, drag-and-drop composability, wizard-based workflows and similar techniques.</p>\n<p>In comparing the top tools, we&#8217;ll go with the term &#8220;low-code,&#8221; used by Forrester Research Inc. for a series of &#8220;Forrester Wave&#8221; research reports, such as <a href=\"https://adtmag.com/articles/2016/04/14/low-code-tools.aspx\" target=\"_self\">this one</a> published last year. Another major research firm, Gartner Inc., recently chimed in with its own study of the tools. Gartner calls them &#8220;Enterprise High-Productivity Application Platform as a Service&#8221; (hpaPaaS), though its new &#8220;Magic Quadrant&#8221; <a href=\"https://adtmag.com/articles/2017/05/12/gartner-low-code.aspx\" target=\"_self\">report</a> on that space uses &#8220;low-code&#8221; and &#8220;no-code&#8221; and &#8220;RAD&#8221; terminology liberally. The firm examined cloud-hosted solutions only.</p>\n<figure><img class=\"alignnone wp-image-108\" src=\"https://emolike.net/wp-content/uploads/2018/03/lowcode_graphic_s.png\" alt=\"The Gartner and Forrester Reports, Respectively\" width=\"652\" height=\"311\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/lowcode_graphic_s.png 300w, https://emolike.net/wp-content/uploads/2018/03/lowcode_graphic_s-200x95.png 200w\" sizes=\"(max-width: 652px) 100vw, 652px\" /><figcaption><b>[Click on image for larger view.]</b>The Gartner and Forrester Reports, Respectively <em>(source: Gartner and Forrester)</em></figcaption></figure>\n<p>Both reports feature a &#8220;Leaders&#8221; category in their reports, and the only companies that were deemed Leaders by both firms were Salesforce.com Inc., OutSystems Inc. and Mendix Inc. Following is a comparison of the three low-code platforms offered by these leaders.</p>\n<p><span class=\"a12blub\"><b>Salesforce.com</b></span></p>\n<figure><img class=\"alignnone wp-image-109\" src=\"https://emolike.net/wp-content/uploads/2018/03/salesforce_app_cloud_s.png\" alt=\"Salesforce App Cloud\" width=\"627\" height=\"351\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/salesforce_app_cloud_s.png 300w, https://emolike.net/wp-content/uploads/2018/03/salesforce_app_cloud_s-200x112.png 200w\" sizes=\"(max-width: 627px) 100vw, 627px\" /><figcaption><b>[Click on image for larger view.]</b>Salesforce App Cloud <em>(source: Salesforce)</em></figcaption></figure>\n<p>Although the company made its reputation as a CRM software vendor, its Force.com &#8220;high-productivity application platform service&#8221; has been on the scene since 2008. Now, Force.com and similar services are provided under the company&#8217;s <a href=\"https://developer.salesforce.com/mobile\" target=\"_blank\" rel=\"noopener\">App Cloud Mobile</a> platform.</p>\n<p>It provides a Mobile SDK that can be used to create native Android, iOS and Windows apps that can be deployed via the company&#8217;s Salesforce1 product. Developers can use the company&#8217;s <a href=\"https://www.heroku.com/\" target=\"_blank\" rel=\"noopener\">Heroku</a> cloud application platform offering to design and operate scalable back-end services.</p>\n<p>And the nearly 10-year-old <a href=\"https://developer.salesforce.com/platform/force.com\" target=\"_blank\" rel=\"noopener\">Force.com</a> is still at the heart of the offering, providing app development even simpler than the low-code approach, being described as no-code.</p>\n<p>&#8220;Force.com is the only platform that lets you build powerful enterprise applications without writing a line of code,&#8221; the company says. &#8220;You can create apps by dragging and dropping components into the <a href=\"https://trailhead.salesforce.com/en/modules/lightning_app_builder\" target=\"_blank\" rel=\"noopener\">Lightning App Builder</a>. Automate business processes with the Lightning Process Builder and modify your data object relationships with the Schema Builder.&#8221;</p>\n<p>With these and complementary products and services all under the App Cloud Mobile platform, Salesforce said that platform provides:</p>\n<ul>\n<li>Security: Built-in identity and security features include user identity, two-factor authentication, encrypted offline database, and transaction security policies to ensure safe usage without impacting user experience.</li>\n<li>Data Integration: Easily bring rich, contextual data to any mobile app from any data source like Oracle databases, SQL Server, SAP, etc. &#8212; whether it&#8217;s using reference-based point and click integration patterns to your existing enterprise systems or streaming event data from connected devices at scale &#8212; all with the trust of Salesforce and unified, consistent REST APIs.</li>\n<li>Scalability: App Cloud Mobile offers massive scalability based on elastic and multi-tenant infrastructure. With just a few clicks, IT teams can now deploy mobile apps to thousands of employees and millions of consumers across the globe.</li>\n</ul>\n<p>In a <a href=\"https://www.salesforce.com/blog/2016/06/leading-the-low-code-revolution.html\" target=\"_blank\" rel=\"noopener\">blog post</a>, the company said &#8220;By empowering citizen developers in every part of the business, all of them modifying and adapting their own work rather than waiting for innovation to be handed down, change will happen constantly and smoothly rather than in uncomfortable lurches. The low-code revolution is really about setting the pace of change and making everyone an active participant.&#8221;</p>\n<p><b>Forrester&#8217;s Take:</b> &#8220;Salesforce is the biggest vendor of low-code application platforms, with an estimated $600 million to $700 million in annual revenue from its development platforms alone,&#8221; Forrester said. &#8220;Force.com, the Community Cloud, and the Lightning platform anchor this low-code customer base, although Salesforce also has platforms (Heroku), tools (Force.com IDE), and partnerships (with continuous-delivery tool vendors) that address coders.&#8221;</p>\n<p>Forrester said the company&#8217;s greatest strength is its feature set that enables users to supplement customer data managed by Salesforce&#8217;s software-as-a-service (SaaS) apps. The researh firm also noted Salesforce&#8217;s security certifications and strong partner roster of other companies and developers.</p>\n<p>The company&#8217;s greatest weakness as identified by Forrester, however, directly contradicts Salesforce&#8217;s own &#8220;without writing a line of code&#8221; claim for its Force.com offering.</p>\n<p>&#8220;Salesforce&#8217;s primary weakness is, ironically, its reliance on code-centric development-process support and deployment,&#8221; Forrester said. &#8220;It is not as &#8216;low code&#8217; as some of the other choices. In addition, this platform lacks customer control over application autoscaling, has no option to install the environment on-premises, and relies on code-centric approaches for custom mobile applications.&#8221;</p>\n<p><b>Gartner&#8217;s Take:</b> &#8220;Salesforce is a pioneer of cloud computing, having introduced a general-purpose, high-productivity application platform service (Force.com) in 2008,&#8221; Gartner said. &#8220;Salesforce&#8217;s popular SaaS offerings and early commitment to cloud computing generated momentum and market presence for Force.com. Salesforce&#8217;s aPaaS offering is App Cloud, which includes Force.com and the Heroku high-control aPaaS, although the latter has only secondary impact on Salesforce&#8217;s position in this Magic Quadrant.&#8221;</p>\n<p>&#8220;The Force.com platform implements shared-everything elasticity to deliver fully cloud-native operation of process and data management,&#8221; Gartner continued. &#8220;The core offering consists of a new composable user experience development platform (Lightning), a high-productivity Web-based application development platform (Visualforce), and a fourth-generation language (Apex) for more advanced back-end functionality. Execution is entirely by metadata interpretation.&#8221;</p>\n<p>Gartner identified several strengths of the Salesforce offering, including its well-established position in the market and the recent move to the Amazon Web Services Inc. (AWS) cloud. Under the Cautions heading, Gartner mentioned the company&#8217;s proprietary nature that enhances some aspects of its offerings but also entails vendor lock-in. Other concerns included the high cost of App Cloud and that the company&#8217;s &#8220;long-standing mantra of &#8216;no software&#8217; now hinders its adoption for the IoT as that requires some components be local to devices &#8212; off-cloud.&#8221;</p>\n<p><span class=\"a12blub\"><b>OutSystems</b></span></p>\n<figure><img class=\"alignnone wp-image-110\" src=\"https://emolike.net/wp-content/uploads/2018/03/outsystems_low_code_s.png\" alt=\"The OutSystems Low-Code Approach\" width=\"618\" height=\"379\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/outsystems_low_code_s.png 300w, https://emolike.net/wp-content/uploads/2018/03/outsystems_low_code_s-200x123.png 200w\" sizes=\"(max-width: 618px) 100vw, 618px\" /><figcaption><b>[Click on image for larger view.]</b>The OutSystems Low-Code Approach <em>(source: OutSystems)</em></figcaption></figure>\n<p>While the Salesforce approach is somewhat piecemeal, the Atlanta-based OutSystems puts all of its low-code eggs in one drag-and-drop development environment basket, the latest version of which is the <a href=\"https://www.outsystems.com/platform/\" target=\"_blank\" rel=\"noopener\">OutSystems 10 platform</a>. With it, developers can define a data model, business logic, workflow processes and UIs for mobile and Web apps.</p>\n<p>The company emphasizes its support of offline functionality and access to native device functionality. While app components are simply dragged onto a work surface and connected visually, developers can extend app functionality by writing or using custom code in languages such as C#, Java, SQL, HTML, CSS and JavaScript.</p>\n<p>The platform reportedly can be integrated with &#8220;any&#8221; system, and apps can be deployed with one-click &#8212; including mobile app deployment to the major stores.</p>\n<p>While Gartner discussed vendor lock-in with the Salesforce offering, OutSystems boasts that its platform is an open, standards-based solution with no such lock-in, proprietary data models or proprietary runtime.</p>\n<p>Here is a capsule summation of the company&#8217;s approach to &#8220;avoiding the pitfalls of rapid application development&#8221;:</p>\n<blockquote><p><i>The OutSystems architecture avoids the pitfalls of old fourth-generation language (4GL) technologies. The visual DSL was defined to be expressive enough for the broad scope of logic required for complex enterprise applications. It was also designed to be open and extensible, allowing developers to plug in custom code or pre-built extensions.</i></p>\n<p>Instead of promoting it as &#8216;code free,&#8217; we designed the OutSystems visual language from the start to be a layer on top of existing coding skills, and it actually promotes the graceful &#8216;stepdown&#8217; to standard 3GL languages such as C#, JavaScript, SQL, and CSS whenever it makes sense. The goal is not to push developers away from coding; instead it just adds on what developers already know so they become extremely productive, stay in control and avoid the risk of &#8216;hitting a brick wall.&#8217;</p></blockquote>\n<p><b>Forrester&#8217;s Take:</b> &#8220;The vendor&#8217;s strong performance in our analysis reflects its strong commitment enterprise customers and to low-code tooling for all aspects of application development, delivery, and maintenance,&#8221; Forrester said in its Wave report. &#8220;OutSystems Platform&#8217;s greatest strengths are its broad features and tools for database and process applications, mobile and Web user experiences, integration, and collaboration. Customers will find few gaps that require them to code, even when working on integration and custom user experiences &#8212; the usual trouble spots for low-code platforms. OutSystems makes it free and easy for customers to get started with its platform.&#8221;</p>\n<p>The research firm identified OutSystems&#8217; primary weakness as a reliance on others &#8212; either partners or customers &#8212; to provide major cloud-security certifications. Also, being a medium-sized private vendor, OutSystems might seem a risky choice to some global organizations, Forrester said.</p>\n<p><b>Gartner&#8217;s Take:</b> &#8220;OutSystems offers a RAD hpaPaaS solution that focuses on accelerating the &#8216;time to solution&#8217; of enterprise apps,&#8221; Gartner said. &#8220;It is one of the better-known and more-established providers in the market today. The OutSystems platform uses an indirectly executed metadata-driven model &#8212; that is, the metadata model is used to generate .NET C# or Java code, which ultimately drives the execution of the application. Applications are developed using an extensible, no-code visual integrated development environment (IDE; known as Service Studio) and deployed on-premises, or in a private or public cloud (AWS or Azure), using a DevOps tool (LifeTime). Applications are usable with Web and mobile client devices. OutSystems has customers in 43 countries and has more than 180 partners.&#8221;</p>\n<p>Under Cautions, Gartner said &#8220;Customers choosing to discontinue their use of OutSystems and generate standard C# or Java code for traditional development, should recognize that modifying the generated code breaks the synchronization to the source metadata model should they return to OutSystems&#8217; IDE in future.&#8221; It also cited some limitations of OutSystems&#8217; Web IDE when compared to its desktop counterpart, some customers&#8217; views that the company could provide better technical support and documentation, and more widespread concerns about pricing, which was characterized as &#8220;only fair, or worse.&#8221;</p>\n<p><span class=\"a12blub\"><b>Mendix</b></span></p>\n<figure><img class=\"alignnone wp-image-111\" src=\"https://emolike.net/wp-content/uploads/2018/03/mendix_low_code_s.png\" alt=\"Mendix Platform Overview\" width=\"609\" height=\"471\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/mendix_low_code_s.png 300w, https://emolike.net/wp-content/uploads/2018/03/mendix_low_code_s-200x155.png 200w\" sizes=\"(max-width: 609px) 100vw, 609px\" /><figcaption><b>[Click on image for larger view.]</b>Mendix Platform Overview <em>(source: Mendix)</em></figcaption></figure>\n<p>Mendix emphasizes the collaborative development capabilities of its namesake <a href=\"https://www.mendix.com/application-platform-as-a-service/\" target=\"_blank\" rel=\"noopener\">platform</a>, which provides model-driven creation of data models, logic, and UIs, rapid Web-based prototyping and a WYSIWYG Page Editor. That collaboration, the company says, comes into play with social interactions, agile project management, team development and feedback management.</p>\n<p>Like OutSystems, the company also noted its &#8220;openness,&#8221; with open standards (including the underlying <a href=\"https://www.cloudfoundry.org/\" target=\"_blank\" rel=\"noopener\">Cloud Foundry</a> platform), open models and open data (OData, SQL). It also provides APIs for platform extensibility, and apps can be extended with code written in JavaScript, Java and Scala. Also, the platform&#8217;s UI Framework is open source and hosted on <a href=\"https://github.com/Remcovh/mendix-ui-framework\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<p>The Mendix platform provides ready-make themes, navigation layouts, page templates and design elements.</p>\n<p>The company listed the following five principles architected into its platform:</p>\n<ul>\n<li>Achieve unprecedented time to value.</li>\n<li>Create apps that exceed user expectations.</li>\n<li>Go fast without sacrificing control.</li>\n<li>Employ openness at every level.</li>\n<li>Gain new insights with Smart Apps.</li>\n</ul>\n<p>The reference to Smart Apps concerns modern multi-channel applications being developed in the age of Big Data, the Internet of Things (IoT) and machine learning. Rather than just awaiting input from users, Smart Apps, the company said, are: intelligent (they provide recommendations and guidance to users); proactive (they predict upcoming events and trigger workflows that guide users); and contextual (personalized, location-aware and embedded in user processes).</p>\n<p><b>Forrester&#8217;s Take:</b> &#8220;Mendix is notable as the only vendor in this set to base its product on the Cloud Foundry platform, giving it intriguing opportunities to partner with large distributors of that technology to drive enterprise adoption,&#8221; Forrester said. &#8220;The Mendix platform&#8217;s greatest strengths are its incorporation of Agile and continuous delivery methods and its ability to support database and process applications, mobile and Web user experiences, integration, and collaboration. It makes extensive use of declarative tooling to create and deliver applications. Mendix also offers a generous free-access program to help customers get started with the platform.&#8221;</p>\n<p>The most glaring of the platform&#8217;s few functional weaknesses is, as with OutSystems, a lack of security certifications, for which it too depends on cloud-platform partners, Forrester said. The research firm also cited the company&#8217;s size as a possible turn-off to some global enterprise customers, though it counts such organizations among its approximately 500 customers.</p>\n<p><b>Gartner&#8217;s Take:</b> &#8220;Mendix is a well-established and fast-growing pure-play aPaaS provider,&#8221; Gartner said. &#8220;Although it initially offered an on-premises RAD platform, most of its business is now in the cloud. The Mendix Modeler is a high-productivity, model-driven visual development environment generating metadata that is interpreted at run time.&#8221;</p>\n<p>Contradicting the Forrester report, Gartner noted Mendix&#8217;s &#8220;worldwide presence, with strengthening name recognition&#8221; as a strength and said it had more than 600 paying customers (the Garner report was published about a year after the Forrester report).</p>\n<p>Furthermore, Gartner said, &#8220;Mendix&#8217;s no-code modeling tool supports sophisticated data-driven and process-oriented applications. It can generate mobile apps with offline support, as well as client-agnostic &#8216;headless&#8217; service implementations. Mendix Runtime is natively event-driven (and partly based on Akka). This helps the company support IoT and high-volume transaction processing (hundreds of thousands of concurrent transactions) for some large financial applications. The recently introduced self-service control and configuration of high availability (when deployed on AWS), together with the ability to augment metadata models with Java, JavaScript or Scala, targets the more advanced enterprise deployments. There is also a Mendix App Store &#8212; offering a venue for partners and users to share applications, widgets and services &#8212; featuring hundreds of prebuilt components and applications.&#8221;</p>\n<p>Under Cautions, Gartner listed a lack of C# support as a language for server-side extensions and only a JavaScript SDK for the client side, which might be a deterrent to Microsoft-native adoption. Gartner also warned Mendix could be an attractive target for a corporate acquisition and cited growing challenges from large competitors such as Google, Microsoft, Oracle and so on. Also, Gartner said, &#8220;Mendix is growing fast, but is not yet profitable. Reinvesting income, instead of showing a profit, is a common strategy for aggressively growing companies, but it makes Mendix more reliant on venture capital. This dependence on investors may create pressure to show a profit, cutting short the time it has to innovate and compete.&#8221;</p>\n<p>source : https://adtmag.com/blogs/dev-watch/2017/05/low-code-tools.aspx?m=1</p>\n",
          "slug": "3-leading-enterprise-low-code-app-development-platforms-compared",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/11/3-leading-enterprise-low-code-app-development-platforms-compared/",
          "date": "2018-03-11T20:14:46",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "programming"
              },
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMw==",
        "node": {
          "id": "cG9zdDoxMDM=",
          "title": "Plans Built For Email Delivery from mailgun",
          "content": "<p><img class=\"alignnone wp-image-104 size-full\" src=\"https://emolike.net/wp-content/uploads/2018/03/2018-03-11-18_50_58-Pricing-Transactional-Email-API-Service-for-Developers-Mailgun.png\" alt=\"\" width=\"1788\" height=\"828\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/2018-03-11-18_50_58-Pricing-Transactional-Email-API-Service-for-Developers-Mailgun.png 1788w, https://emolike.net/wp-content/uploads/2018/03/2018-03-11-18_50_58-Pricing-Transactional-Email-API-Service-for-Developers-Mailgun-300x139.png 300w, https://emolike.net/wp-content/uploads/2018/03/2018-03-11-18_50_58-Pricing-Transactional-Email-API-Service-for-Developers-Mailgun-768x356.png 768w, https://emolike.net/wp-content/uploads/2018/03/2018-03-11-18_50_58-Pricing-Transactional-Email-API-Service-for-Developers-Mailgun-1024x474.png 1024w, https://emolike.net/wp-content/uploads/2018/03/2018-03-11-18_50_58-Pricing-Transactional-Email-API-Service-for-Developers-Mailgun-200x93.png 200w\" sizes=\"(max-width: 1788px) 100vw, 1788px\" /></p>\n",
          "slug": "plans-built-for-email-delivery-from-mailgun",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/11/plans-built-for-email-delivery-from-mailgun/",
          "date": "2018-03-11T18:52:06",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjEwMA==",
        "node": {
          "id": "cG9zdDoxMDA=",
          "title": "How to Test Junior Laravel Developer Skills: Sample Project",
          "content": "<p>While expanding my team and working with potential junior developers, I’ve come up with a few tasks to test their practical knowledge. There’s not much value in quizzes or interviews – <b>let them create one simple project</b>. From start to finish. So here’s an example of such project, you can use it for your own needs.</p>\n<p>We need to test basic Laravel skills, right? So the project should be simple, but at the same time touch majority of fundamentals. Also, it should be possible to do within a day or so – in some cases, you would even pay them for spending their time.</p>\n<p>With that in mind, here’s a project I came up with.</p>\n<h2>Adminpanel to manage companies</h2>\n<p>Basically, project to manage companies and their employees. Mini-CRM.</p>\n<ul>\n<li>Basic Laravel Auth: ability to log in as administrator</li>\n<li>Use database seeds to create first user with email admin@admin.com and password “password”</li>\n<li>CRUD functionality (Create / Read / Update / Delete) for two menu items: <b>Companies</b> and <b>Employees</b>.</li>\n<li>Companies DB table consists of these fields: Name (required), email, logo (minimum 100×100), website</li>\n<li>Employees DB table consists of these fields: First name (required), last name (required), Company (foreign key to Companies), email, phone</li>\n<li>Use database migrations to create those schemas above</li>\n<li>Store companies logos in <b>storage/app/public</b> folder and make them accessible from public</li>\n<li>Use basic Laravel resource controllers with default methods – index, create, store etc.</li>\n<li>Use Laravel’s validation function, using Request classes</li>\n<li>Use Laravel’s pagination for showing Companies/Employees list, 10 entries per page</li>\n<li>Use Laravel <b>make:auth</b> as default Bootstrap-based design theme, but remove ability to register</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-101\" src=\"https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505.png\" width=\"1024\" height=\"505\" alt=\"company-crud\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505.png 1024w, https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505-300x148.png 300w, https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505-768x379.png 768w, https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505-200x99.png 200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p>&nbsp;</p>\n<p>Basically, that’s it. With this simple exercise junior developer shows the skills in basic Laravel things:</p>\n<ul>\n<li>MVC</li>\n<li>Auth</li>\n<li>CRUD and Resource Controllers</li>\n<li>Eloquent and Relationships</li>\n<li>Database migrations and seeds</li>\n<li>Form Validation and Requests</li>\n<li>File management</li>\n<li>Basic Bootstrap front-end</li>\n<li>Pagination</li>\n</ul>\n<p>Guess what – most of the basics web-applications will have these functions as core. There will be a lot more on top of that, but without these fundamentals you cannot move further.</p>\n<p>So this task would actually test if the person can create simple projects. And then it’s practice, practice, practice on more projects, each of them individual and adding more to their knowledge base.</p>\n<p>From my own experience, different developers are “creative” in different code places – some don’t use Resource controllers and put Route::get everywhere, some don’t validate forms, some don’t test their code properly etc. That’s exactly the things you want to spot as early as possible.</p>\n<hr />\n<h2>Extra Task for “Advanced” Juniors</h2>\n<p>If you feel like this task is too small and simple, you can add these things on top:</p>\n<ul>\n<li>Use Datatables.net library to show table – with our without server-side rendering</li>\n<li>Use more complicated front-end theme like AdminLTE</li>\n<li>Email notification: send email whenever new company is entered (use Mailgun or Mailtrap)</li>\n<li>Make the project multi-language (using <b>resources/lang</b> folder)</li>\n<li>Basic testing with phpunit (I know some would argue it should be the basics, but I disagree)</li>\n</ul>\n<p>Do you agree with such task? What would you change or add to this?<br />\nAnd have you had any experience with giving similar tasks, what were your impressions?</p>\n<p>source: http://laraveldaily.com/test-junior-laravel-developer-sample-project/</p>\n",
          "slug": "how-to-test-junior-laravel-developer-skills-sample-project",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505.png"
          },
          "link": "https://emolike.net/2018/03/11/how-to-test-junior-laravel-developer-skills-sample-project/",
          "date": "2018-03-11T18:36:40",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "web development"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjU3",
        "node": {
          "id": "cG9zdDo1Nw==",
          "title": "How To Setup A Domain On Cloudflare &#8211; Using Cloudflare DNS Servers",
          "content": "<p><iframe title=\"How To Setup A Domain On Cloudflare - Using Cloudflare DNS Servers\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/8nKU4h8ynZ0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n",
          "slug": "how-to-setup-a-domain-on-cloudflare-using-cloudflare-dns-servers",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/07/how-to-setup-a-domain-on-cloudflare-using-cloudflare-dns-servers/",
          "date": "2018-03-07T13:56:12",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjUz",
        "node": {
          "id": "cG9zdDo1Mw==",
          "title": "How To install Ubuntu server 17.10 + Static ip + LAMP SERVER + Webmin Admin Panel",
          "content": "<p><iframe title=\"How To install Ubuntu server 17.10 + Static ip + LAMP SERVER + Webmin Admin Panel\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/imkNP54zpNw?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p>https://www.techrepublic.com/article/how-to-install-ubuntu-server-16-04-and-the-web-based-admin-tool-webmin/</p>\n",
          "slug": "how-to-install-ubuntu-server-17-10-static-ip-lamp-server-webmin-admin-panel",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/05/how-to-install-ubuntu-server-17-10-static-ip-lamp-server-webmin-admin-panel/",
          "date": "2018-03-05T18:54:56",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              },
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjM0",
        "node": {
          "id": "cG9zdDozNA==",
          "title": "How can bitcoin compete in the money transfer market?",
          "content": "<h1>How can bitcoin compete in the money transfer market?</h1>\n<div class=\"entry\">\n<h2>With all of the ways to transfer money — from banking to peer-to-peer platforms — can bitcoin compete?</h2>\n<div class=\"read-more-expand\">\n<div class=\"read-more-expand-summary\">\n<p>Bitcoin is a digital currency that allows people to pay for things electronically. It’s billed as a method to help people avoid the typical downsides to transferring money, such as high transaction fees. But the jury is still out whether it’s truly a <a href=\"https://www.finder.com/international-money-transfers\">good option for money transfers</a>.</p>\n<p>How does bitcoin stack up for money transfers, and can it compete in the money transfer market?</p>\n</div>\n</div>\n<article class=\"luna-card luna-card--primary calloutBox\">\n<div class=\"luna-card__block\">\n<h4 class=\"mustRead\">What&#8217;s in this guide?</h4>\n<div class=\"u-grid\">\n<div class=\"u-grid__col u-1/2@s\">\n<ul>\n<li>Bitcoin vs. traditional transfer methods</li>\n<li>Costs</li>\n<li>Reducing correspondent banking costs</li>\n</ul>\n</div>\n<div class=\"u-grid__col u-1/2@s\">\n<ul>\n<li>Is it faster?</li>\n<li>Why isn’t bitcoin the go-to solution for money transfers?</li>\n</ul>\n</div>\n</div>\n</div>\n</article>\n<h3>Traditional transfer methods are easier</h3>\n<p>Though many people still use banks for international money transfers, online transfer services are gaining popularity for their simplicity.</p>\n<p>Basically, here are the steps to using a money transfer service:</p>\n<ul class=\"list-9\">\n<li>Tell the money transfer platform how much you want to transfer and who you want to send money to.</li>\n<li>Send your money to the money transfer platform.</li>\n</ul>\n<p>That’s it. The money transfer service takes care of the details of sending your currency, and your recipient receive the funds as soon as the same day.<br />\n<a id=\"transfer\"></a></p>\n<h4>Transferring through bitcoin is a little different</h4>\n<p>Here’s the basic process for transferring money through bitcoin:</p>\n<ul class=\"list-7\">\n<li>Deposit your fiat currency (government-issued currency, like dollars, euros and yen) onto a bitcoin platform.</li>\n<li>Buy bitcoin and send it to your recipient.</li>\n<li>Your recipient sells the bitcoin for fiat currency on a bitcoin platform.</li>\n<li>Your recipient withdraws the fiat currency to their bank account.</li>\n</ul>\n<p>The process involves a few more steps than using a traditional money transfer platform. What’s more, you have to complete them yourself — nobody takes care of the entire process for you.</p>\n<p>This may be a strike against bitcoin.</p>\n<p><b>Transferring money through bitcoin is more complicated than doing so through traditional money transfer services.</b><br />\n<a class=\"more-link-arrow\" href=\"https://www.finder.com/how-to-make-a-large-international-money-transfer\">How much does it cost to transfer money using different methods?</a><br />\n<a id=\"cost\"></a></p>\n<h3>What about the cost?</h3>\n<p>Before we talk about the costs of transferring money through bitcoin, let’s consider how money transfer services usually make a profit:</p>\n<ul class=\"list-9\">\n<li>Some charge transaction fees when you deposit, withdraw or transfer money.</li>\n<li>And they almost always <a href=\"https://www.finder.com/usd-btc-exchange-rate\">make money on the <b>exchange rate</b> when converting your money</a>.</li>\n</ul>\n<p>Here’s an example of how a transfer service skews the exchange rate for a profit.</p>\n<p>Let’s say you want to transfer $10,000 to France. Your $10,000 may actually be worth 9,400 euros, but a bank may convert your $10,000 to 9,000 euros instead. This means you’ve effectively lost 400 euros.</p>\n<p>If you convert one fiat currency (for example, US dollars) to another fiat currency (euros), you’ll only lose money <b>once</b> on the exchange rate.</p>\n<p>On the other hand, if you transfer money through bitcoin, you’ll lose money <b>twice</b> on the exchange rate.</p>\n<p>Here’s why: Let’s say you want to convert US dollars to euros, using bitcoin as the transfer method. In this case:</p>\n<ul class=\"list-7\">\n<li>First you need to trade US dollars for bitcoin, where you’ll lose money on the exchange rate between these currencies.</li>\n<li>Then you need to trade bitcoin for euros, where you’ll again lose money on the exchange rate.</li>\n</ul>\n<p>With bitcoin, you get charged twice instead of just once.</p>\n<p><b>This “double charging” is a big reason why transferring through bitcoin tends to be more expensive than transferring through peer-to-peer platforms, foreign exchange (or “forex”) and even banks.</b></p>\n<div class=\"u-grid u-grid--gutterCollapse\">\n<div class=\"u-grid__col u-grid__col--alignBottom\"><span class=\"table-last-updated\">Rates last updated March 4th, 2018</span></div>\n</div>\n<div class=\"simpleniche defaultTable \" data-category=\"443\" data-niche=\"simpleniche\" data-fieldset=\"defaultTable\">\n<form method=\"post\" name=\"compareForm\" data-site=\"simpleniche\" data-niche=\"simpleniche\">\n<table class=\"t_table compare-table cf-table-style tablesorter tablesorter-default\" role=\"grid\" cellspacing=\"0\" data-fieldset=\"defaultTable\" data-table-show-rows=\"\" data-category=\"443\">\n<thead>\n<tr class=\"tablesorter-headerRow\" role=\"row\">\n<th class=\"name sorter-false tablesorter-header tablesorter-headerUnSorted\" tabindex=\"0\" role=\"columnheader\" scope=\"col\" data-column=\"0\" aria-disabled=\"true\" aria-sort=\"none\">\n<div class=\"tablesorter-header-inner\"></div>\n</th>\n<th class=\"sorter-false tablesorter-header tablesorter-headerUnSorted\" tabindex=\"0\" role=\"columnheader\" scope=\"col\" data-mobile=\"hide\" data-column=\"1\" aria-disabled=\"true\" aria-sort=\"none\">\n<div class=\"tablesorter-header-inner\">Details</div>\n</th>\n<th class=\"text-left nowrap-md sorter-false tablesorter-header tablesorter-headerUnSorted\" tabindex=\"0\" role=\"columnheader\" scope=\"col\" data-column=\"2\" aria-disabled=\"true\" aria-sort=\"none\">\n<div class=\"tablesorter-header-inner\">Features</div>\n</th>\n<th class=\"nowrap-md cta sorter-false tablesorter-header tablesorter-headerUnSorted\" tabindex=\"0\" role=\"columnheader\" scope=\"col\" data-column=\"3\" aria-disabled=\"true\" aria-sort=\"none\">\n<div class=\"tablesorter-header-inner\"></div>\n</th>\n</tr>\n</thead>\n<tbody aria-live=\"polite\" aria-relevant=\"all\">\n<tr class=\"odd\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-84\" src=\"https://emolike.net/wp-content/uploads/2018/03/coinbase-1.png\" width=\"200\" height=\"100\" alt=\"Coinbase Digital Currency Exchange\" /><br />\nCoinbase Digital Currency Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Buy and sell bitcoin, Ethereum, Bitcoin Cash and Litecoin on one of the world&#8217;s most renowned cryptocurrency exchanges.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> Varies by transaction</li>\n<li><strong>Supported countries:</strong> 32 countries</li>\n<li><strong>Payment methods:</strong> Bank transfer, Credit/debit card, wire</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Coinbase Digital Currency Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/coinbase-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"even\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-85\" src=\"https://emolike.net/wp-content/uploads/2018/03/local-bitcoin-1.png\" width=\"200\" height=\"100\" alt=\"LocalBitcoins P2P Exchange\" /><br />\nLocalBitcoins P2P Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Trade fiat currency for bitcoin in person or online with this peer-to-peer exchange offering competitive fees and wide delivery options.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> 1% commission for each completed operation</li>\n<li><strong>Supported countries:</strong> Exchangers in 248 countries</li>\n<li><strong>Payment methods:</strong> PayPal, Credit/Debit and more</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The LocalBitcoins P2P Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/localbitcoins-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"odd\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-86\" src=\"https://emolike.net/wp-content/uploads/2018/03/download-1.png\" width=\"630\" height=\"293\" alt=\"BitQuick P2P Bitcoin Marketplace\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/download-1.png 630w, https://emolike.net/wp-content/uploads/2018/03/download-1-300x140.png 300w, https://emolike.net/wp-content/uploads/2018/03/download-1-200x93.png 200w\" sizes=\"(max-width: 630px) 100vw, 630px\" /><br />\n<a href=\"https://www.finder.com/bitquick-exchange-review\">BitQuick P2P Bitcoin Marketplace</a></td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Buy and sell bitcoin fast through a cash deposit at your local bank branch or credit union, or via a money transfer service.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> 2% to buy, 0% to sell</li>\n<li><strong>Supported cryptos:</strong> BTC</li>\n<li><strong>Funding methods:</strong> Cash – USD</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The BitQuick P2P Bitcoin Marketplace\" href=\"https://www.finder.com/redirect/cryptocurrency/bitquick-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a><a class=\"btn-more-link\" title=\"Read More About The BitQuick P2P Bitcoin Marketplace\" href=\"https://www.finder.com/bitquick-exchange-review\">More info</a></td>\n</tr>\n<tr class=\"even\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-87\" src=\"https://emolike.net/wp-content/uploads/2018/03/binance-1.png\" width=\"200\" height=\"100\" alt=\"Binance Cryptocurrency Exchange\" /><br />\nBinance Cryptocurrency Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Trade 60+ cryptocurrency pairs on this up-and-coming exchange based in China. Multi-language support.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> 0.1% trading fee</li>\n<li><strong>Supported countries:</strong> Worldwide</li>\n<li><strong>Deposit methods:</strong> BTC, ETH, LTC, NEO &amp; BNB</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Binance Cryptocurrency Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/binance-exchange-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"odd\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-88\" src=\"https://emolike.net/wp-content/uploads/2018/03/paxful-1.png\" width=\"200\" height=\"100\" alt=\"Paxful Bitcoin Marketplace\" /><br />\nPaxful Bitcoin Marketplace</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Connect with bitcoin buyers and sellers through this peer-to-peer marketplace that accepts cash, credit and more than 300 other payment methods.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> Varies by transaction, and PayPal no fees</li>\n<li><strong>Supported countries:</strong> Worldwide</li>\n<li><strong>Payment methods:</strong> Western Union, PayPal and many more</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Paxful Bitcoin Marketplace\" href=\"https://www.finder.com/redirect/cryptocurrency/paxful-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"even\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-89\" src=\"https://emolike.net/wp-content/uploads/2018/03/changelly-1.png\" width=\"200\" height=\"100\" alt=\"Changelly Crypto-to-Crypto Exchange\" /><br />\nChangelly Crypto-to-Crypto Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Access competitive crypto-to-crypto exchange rates for more than 35 cryptocurrencies on this global exchange.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> 0.5% + networking fees</li>\n<li><strong>Supported countries:</strong> Worldwide</li>\n<li><strong>Payment methods:</strong> USD, EUR, 35+ cryptos</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Changelly Crypto-to-Crypto Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/changelly-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"odd\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-90\" src=\"https://emolike.net/wp-content/uploads/2018/03/indacoin-1.png\" width=\"200\" height=\"100\" alt=\"Indacoin Cryptocurrency Exchange\" /><br />\nIndacoin Cryptocurrency Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Use your credit or debit card to buy bitcoin and other cryptocurrency without having to verify your identity.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> Varies by transaction</li>\n<li><strong>Supported countries:</strong> More than 100 countries</li>\n<li><strong>Payment methods:</strong> Payza, Credit/Debit cards (USD) and more</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Indacoin Cryptocurrency Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/indacoin-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"even\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-91\" src=\"https://emolike.net/wp-content/uploads/2018/03/cancoin-200x100-1.png\" width=\"200\" height=\"100\" alt=\"Cancoin P2P Crypto Exchange\" /><br />\nCancoin P2P Crypto Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Buy and sell bitcoin with privacy on this multi-signature, peer-to-peer exchange that supports a wide range of payment options.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> 1% + miner&#8217;s fee (sellers only)</li>\n<li><strong>Supported countries:</strong> USA &amp; Canada</li>\n<li><strong>Payment methods:</strong> Cash, PayPal, Western Union &amp; more</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Cancoin P2P Crypto Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/cancoin-exchange-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"odd\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-92\" src=\"https://emolike.net/wp-content/uploads/2018/03/bitit-1.png\" width=\"250\" height=\"100\" alt=\"Bitit Bitcoin Marketplace\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/bitit-1.png 250w, https://emolike.net/wp-content/uploads/2018/03/bitit-1-200x80.png 200w\" sizes=\"(max-width: 250px) 100vw, 250px\" /><br />\nBitit Bitcoin Marketplace</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Buy bitcoin with cash or credit card and get express delivery in as little as 10 minutes.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> Card: 8.9%, Cash: 11.9%</li>\n<li><strong>Supported countries:</strong> 50+ countries</li>\n<li><strong>Deposit methods:</strong> Credit card, cash vouchers, Epay</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Bitit Bitcoin Marketplace\" href=\"https://www.finder.com/redirect/cryptocurrency/bitit-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"even\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-93\" src=\"https://emolike.net/wp-content/uploads/2018/03/coinmama-1.png\" width=\"200\" height=\"100\" alt=\"Coinmama Bitcoin Marketplace\" /><br />\nCoinmama Bitcoin Marketplace</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Use USD/EUR to buy bitcoin and Ether with credit card or cash on the Coinmama cryptocurrency exchange.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> 5.5% + 5% for credit card</li>\n<li><strong>Supported countries:</strong> 226 countries worldwide</li>\n<li><strong>Payment methods:</strong> Credit/debit card, cash</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Coinmama Bitcoin Marketplace\" href=\"https://www.finder.com/redirect/cryptocurrency/coinmama-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"odd\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-94\" src=\"https://emolike.net/wp-content/uploads/2018/03/virwox-image-1.png\" width=\"200\" height=\"100\" alt=\"VirWox Virtual Currency Exchange\" /><br />\nVirWox Virtual Currency Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Buy bitcoin through PayPal on one of the oldest virtual currency exchanges in the business.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> Varies by transaction</li>\n<li><strong>Supported countries:</strong> Worldwide</li>\n<li><strong>Payment methods:</strong> PayPal, Skrill, paysafecard, uKash</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The VirWox Virtual Currency Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/virwox-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"even\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-95\" src=\"https://emolike.net/wp-content/uploads/2018/03/xcoins-1.png\" width=\"200\" height=\"100\" alt=\"xCoins P2P Bitcoin Lending\" /><br />\nxCoins P2P Bitcoin Lending</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Buy bitcoin instantly with credit card, PayPal or bank account on this peer-to-peer lending platform.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> Varies by transaction</li>\n<li><strong>Supported countries:</strong> 40+ countries</li>\n<li><strong>Payment methods:</strong> Credit card, PayPal, bank transfer</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The xCoins P2P Bitcoin Lending\" href=\"https://www.finder.com/redirect/cryptocurrency/xcoins-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n<tr class=\"odd\" role=\"row\">\n<td class=\"name sorter-false\"><img class=\"alignnone size-full wp-image-96\" src=\"https://emolike.net/wp-content/uploads/2018/03/cryptex24-image-200x100-1.jpg\" width=\"200\" height=\"100\" alt=\"Cryptex24 Exchange\" /><br />\nCryptex24 Exchange</td>\n<td class=\" sorter-false\" data-mobile=\"hide\">Buy and sell crypto and other digital currencies on this global fixed-rate exchange.</td>\n<td class=\"text-left nowrap-md sorter-false\">\n<ul class=\"list-1\">\n<li><strong>Fees:</strong> Varies by transaction</li>\n<li><strong>Supported countries:</strong> Worldwide</li>\n<li><strong>Payment methods:</strong> Western Union, MoneyGram, Perfect Money &amp; more</li>\n</ul>\n</td>\n<td class=\"nowrap-md cta sorter-false\"><a class=\"btn btn-success\" title=\"Apply Now For The Cryptex24 Exchange\" href=\"https://www.finder.com/redirect/cryptocurrency/cryptex24-gx-secure.html?ref=tbl-btn\" target=\"_blank\" rel=\"nofollow noopener\">Go to site</a></td>\n</tr>\n</tbody>\n</table>\n</form>\n</div>\n<p>&nbsp;</p>\n<h3>Reducing correspondent banking costs</h3>\n<p>Bitcoin does have one thing going for it: swatting away pesky intermediary bank fees.</p>\n<p>When you transfer money through a bank or transfer service, your money may be routed through <b>intermediary or correspondent banks.</b> This happens when one bank doesn’t have a direct relationship with the institution it needs to send money to. In this case, the bank uses a middleman to transfer your money.</p>\n<p>Does using a middleman come with fees? You bet. It’s one of the frustrating parts about transferring money, especially because it’s tough to know if you’re going to be charged a fee in the first place.</p>\n<p>An advantage of bitcoin is the near elimination of intermediary fees, at least when you’re transferring bitcoin to someone else. You may need to pay a small transaction fee for your bitcoin transfer to be added to the <b>blockchain.</b> However, this fee is miniscule (cents on the dollar, usually) compared to the $15 to $30 charge you might pay for an intermediary bank fee.</p>\n<div class=\"luna-card luna-card--alt calloutBox\">\n<div class=\"luna-card__block\">\n<h4 class=\"info-box-special-header\">PRO TIP:</h4>\n<p>The <b>blockchain</b> is a public digital ledger that records bitcoin transactions. Without it, you couldn’t send bitcoin to anyone!</p>\n</div>\n</div>\n<p>You may still pay intermediary bank fees when you transfer fiat money to or withdraw fiat money from a bitcoin platform.</p>\n<p><b>For the most part, transferring through bitcoin reduces intermediary bank fees.</b><br />\n<a class=\"more-link-arrow\" href=\"https://www.finder.com/bitcoins-international-money-transfers\">Using Bitcoins for international money transfers</a></p>\n<h3>Is it faster?</h3>\n<p>When you initiate a bitcoin transaction, it’s confirmed on the blockchain in about 10 minutes. Some bitcoin platforms require multiple confirmations before they’ll clear a transaction, but you can often complete a bitcoin transfer in under an hour.</p>\n<p>If that were the only step needed to make an international money transfer through bitcoin, the process would be blazing fast. However, you also need to factor in how long it takes to deposit money into and withdraw money from your bitcoin platform. Both steps can take a few days each, so finishing an entire transaction could actually take several days.</p>\n<p>Unfortunately, that’s not faster than existing options. International wire transfers take several days too. Domestic wire transfers can be completed within a few hours. And you can complete in-person transfers in mere minutes with services like Western Union and MoneyGram.</p>\n<p><b>So, transferring money through bitcoin isn’t faster either, considering deposits and withdrawals.</b><br />\n<a class=\"more-link-arrow\" href=\"https://www.finder.com/bitcoin-vs-paypal\">Bitcoin vs. PayPal</a><br />\n<a id=\"solution\"></a></p>\n<div class=\"must-read\">\n<div class=\"info-box-special-header\">How Could Western Union’s Recent Coinbase Integration Change Things?</div>\n<div class=\"info-box\">\n<p>In June 2017, remittance giant Western Union announced a trial integration with Coinbase, a secure online platform for buying, selling and storing digital currency.</p>\n<p>A top issue with bitcoin is the time it takes to transfer the cryptocurrency from one person or entity to another — it can simply take too long for most money transfers, not to mention everyday transactions like picking up a bagel. By experimenting with Coinbase, Western Union may be putting down the tracks toward real-time bitcoin transfers.</p>\n<p>For now, Western Union stresses that the pilot integration will not support digital currency transactions. Instead, WU becomes a part of the Coinbase’s app and will use the platform in its back end for fiat currency transfers.</p>\n<p>But it’s a step toward using blockchain technology to integrate compliance and regulate bank integrations — and ultimately speed up digital currency transactions, moving cryptocurrencies out of the “alternative payment” column.</p>\n</div>\n</div>\n<h3>Why isn’t bitcoin the go-to solution for money transfers?</h3>\n<p>We know that transferring fiat money through bitcoin is pretty expensive and complicated. And it’s not always faster than using a traditional money transfer service.</p>\n<p>Because of this, it’s been tough for bitcoin to become a strong contender in the money transfer market. P2P platforms and forex services have made it cheaper and easier to send money, solving many of the problems associated with bank transfers.</p>\n<p>Bitcoin <i>can</i> compete with the other players, but only if bitcoin platforms solve the hairy problems of making the process less expensive and less complicated.</p>\n<p>A good start would be to create a set-and-forget service, where a customer has to do nothing else but send money to a bitcoin platform. The bitcoin platform would take care of the rest, including converting the money and transferring the money to the recipient. Of course, money transfer services can already do this, and bitcoin would have to offer the same convenience before it can catch up.<br />\n<a class=\"more-link-arrow\" href=\"https://www.finder.com/bitcoin-mining-make-money\">Bitcoin mining: Can I make money doing it?</a></p>\n<p>source : https://www.finder.com/how-bitcoin-compete-money-transfer-market</p>\n</div>\n",
          "slug": "how-can-bitcoin-compete-in-the-money-transfer-market",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/04/how-can-bitcoin-compete-in-the-money-transfer-market/",
          "date": "2018-03-04T10:36:16",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "blockchain"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjI0",
        "node": {
          "id": "cG9zdDoyNA==",
          "title": "How we built Hamiltix.net for less than $1 a month on AWS",
          "content": "<header>The details of running a complex ticket ranking site for under a dollar a month on AWS</header>\n<div class=\"m-clearfix-l\"></div>\n<aside class=\"m-note m-warning\">\n<h3>Ok not quite $1&#8230;</h3>\n<p>After the free-tier expires it will be less than $5, but the fact remains: it&#8217;s crazy cheap.</p>\n</aside>\n<section id=\"background\">\n<h2>Background</h2>\n<p>Hamilton the musical is hot. <a href=\"http://variety.com/2017/legit/news/hamilton-ticket-prices-1202648756/\">Really hot</a>. With crazy high ticket prices, finding the best deal should be easy, especially if you live in New York City, Chicago, or a city on the US Tour. You just go to a major ticket resale site, and search across all the dates you are able to attend and&#8230; wait&#8230; no site supports ranking tickets across dates? And their &#8220;deal rankings&#8221; don&#8217;t take into account the intricacies of each theatre (viewing obstructions, etc)!? I guess we&#8217;ll have to build it ourselves!</p>\n<p>For a full background on the motivations behind <a href=\"https://www.hamiltix.net/\">hamiltix.net</a> checkout the <a href=\"https://blog.hamiltix.net/welcome-to-hamiltix.html\">hamiltix.net blog</a>.</p>\n</section>\n<section id=\"from-simple-script-to-legitimate-website\">\n<h2>From simple script to legitimate website</h2>\n<p>Being a python programmer it didn&#8217;t take long to scrape the major ticket sites and rank all the tickets with a custom algorithm. This turned up some interesting results, and it was easy to compare the best tickets for any dates, sections, and theaters we wanted. This was great for personal use, but not very accessible to an average Hamilton-goer (and despite <a href=\"https://arstechnica.com/tech-policy/2017/08/court-rejects-linkedin-claim-that-unauthorized-scraping-is-hacking/\">being perfectly legal</a> it may draw the irk of the sites we are scraping). Time to legitimize our data collection and make it presentable.</p>\n<p>This lead to a long slog through the secondary ticket market, which was actually quite interesting, and will be detailed on the hamiltix.net blog. The end state was we connected with a &#8220;ticket broker&#8221; network and are able to access their inventory (spoiler: nearly all secondary ticket sites share the same inventory). With live tickets at our fingertips the question became how do we process all the data and present it on the cheap?</p>\n</section>\n<section id=\"aws-power-complexity-affordability\">\n<h2>AWS &#8211; Power, Complexity, Affordability</h2>\n<p>Enter Amazon Web Services (AWS). AWS is the cloud service provider that powers may of the biggest names on the internet so lets see how it does with a simple static site and backend.</p>\n<aside class=\"m-note m-danger\">\n<h3>Warning!</h3>\n<p>The following architecture design choices were made for the purposes of cost savings as well as a chance to learn new technologies. I make no claim they are the best choices for the given tasks. In many cases, there are much better technologies that make more sense!</p>\n</aside>\n<p>Normally, the first step for this kind of project is to start up a linux server, but <a href=\"https://www.cloudtp.com/doppler/rise-of-serverless-computing-operational-security-financial-considerations/\">serverless computing is on the rise</a>. We&#8217;ve never dealt with Lambda or any other &#8220;serverless&#8221; technology before so lets give it a shot.</p>\n<p>The overall design of hamiltix looks like this:</p>\n<figure class=\"m-figure\"><img class=\"aligncenter wp-image-26 size-full\" src=\"https://emolike.net/wp-content/uploads/2018/03/hamiltix-aws.png\" alt=\"Hamiltix AWS Diagram\" width=\"1280\" height=\"881\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/hamiltix-aws.png 1280w, https://emolike.net/wp-content/uploads/2018/03/hamiltix-aws-300x206.png 300w, https://emolike.net/wp-content/uploads/2018/03/hamiltix-aws-768x529.png 768w, https://emolike.net/wp-content/uploads/2018/03/hamiltix-aws-1024x705.png 1024w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><figcaption>                                     The Hamiltix.net AWS stack</figcaption></figure>\n<p>As you can see, Lambda is the star of the show. If you haven&#8217;t heard of Lambda before, you can think of it as a service that will run a function (however complex) on a trigger (there are too many to list, basically any AWS service can trigger a lambda). Lambda offers Node.js, Python (2.7 and 3.6), Java (8+), C# (.NET Core), and Go environments. Since we already had the ranking module in Python, we stuck with Python (3 of course) for the rest of the functions as well.</p>\n<p>Cloudwatch event rules kick off any Lambdas that need to run on intervals (getting and ranking tickets), and API Gateway fires any &#8220;dynamic&#8221; content for the website like advanced search, or the actual ticket purchasing.</p>\n<p>We also made the decision to not use a javascript framework for the front end, mostly because they are incredebly complex and some people suggest <a href=\"https://medium.com/@mattburgess/all-javascript-frameworks-are-terrible-e68d8865183e\">they are all terrible</a> (or <a href=\"https://medium.com/@mattburgess/javascript-frameworks-are-great-2df4a3f0b24d\">maybe great?</a>). Could be use React with a static site? Sure, but that also means dealing with animated routes, custom routing, GraphQL, Redux, Sass or Less, JSX&#8230; I&#8217;m already exhausted. We just want to present tickets cleanly to users, not build the next Facebook. <a href=\"https://jquery.com/\">jQuery</a>, <a href=\"https://sweetalert2.github.io/\">SweetAlert2</a>, <a href=\"https://semantic-ui.com/\">Semantic-ui</a>, <a href=\"https://momentjs.com/\">Moment.js</a>, and <a href=\"https://dubrox.github.io/Multiple-Dates-Picker-for-jQuery-UI/\">MutliDatesPicker</a> are the only external javascript libraries used on hamiltix.net.</p>\n<p>Without the need for a server hosting the site, it can be stored on S3 and distributed by Cloudfront. Setting up a static site with AWS <a href=\"https://medium.com/@sbuckpesch/setup-aws-s3-static-website-hosting-using-ssl-acm-34d41d32e394\">is fairly simple</a>. Any<code>ajax</code>calls in the site&#8217;s javascript are sent to the API Gateway which in turn calls the correct lambda function to handle whatever task is requested. With hamilton ticket prices as high as they are, we set up a staging environment that uses our ticket broker&#8217;s sandbox API to test all functions on each commit to master. For this to work, you need two separate environments in API Gateway, and the corresponding aliases for your lambda functions (don&#8217;t forget to publish the changes in API Gateway!).</p>\n<p><img class=\"alignnone size-full wp-image-73\" src=\"https://emolike.net/wp-content/uploads/2018/03/api-stages-1.png\" alt=\"The two API Gateway stages for hamiltix\" width=\"420\" height=\"200\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/api-stages-1.png 420w, https://emolike.net/wp-content/uploads/2018/03/api-stages-1-300x143.png 300w\" sizes=\"(max-width: 420px) 100vw, 420px\" />While in the API Gateway, you have to point the lambda handler to the function alias that corresponds to either staging or prod. This can be done with a<code>stageVariable</code>when setting up the endpoint in the Resources screen of API Gateway. You&#8217;ll need to allow API Gateway permissions to access each alias you use, but AWS provides a nice aws-cli command for you when you set up the Lambda proxy integration.</p>\n<p><img class=\"alignnone size-full wp-image-74\" src=\"https://emolike.net/wp-content/uploads/2018/03/stage-variable-1.png\" alt=\"The stageVariable setup on the Resources screen\" width=\"1112\" height=\"278\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/stage-variable-1.png 1112w, https://emolike.net/wp-content/uploads/2018/03/stage-variable-1-300x75.png 300w, https://emolike.net/wp-content/uploads/2018/03/stage-variable-1-768x192.png 768w, https://emolike.net/wp-content/uploads/2018/03/stage-variable-1-1024x256.png 1024w\" sizes=\"(max-width: 1112px) 100vw, 1112px\" />Then in the Stages screen, ensure that each stage as an appropriate Stage Variable.</p>\n<p><img class=\"alignnone size-full wp-image-75\" src=\"https://emolike.net/wp-content/uploads/2018/03/actual-stage-variables-1.png\" alt=\"The stageVariable setup on the Stages screen\" width=\"1046\" height=\"516\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/actual-stage-variables-1.png 1046w, https://emolike.net/wp-content/uploads/2018/03/actual-stage-variables-1-300x148.png 300w, https://emolike.net/wp-content/uploads/2018/03/actual-stage-variables-1-768x379.png 768w, https://emolike.net/wp-content/uploads/2018/03/actual-stage-variables-1-1024x505.png 1024w\" sizes=\"(max-width: 1046px) 100vw, 1046px\" />Now the staging and prod APIs will call the<code>Staging</code>and<code>Prod</code>lambda aliases respectively. Setting up staging and prod lambda aliases is not difficult, and is handled by Gitlab&#8217;s CI/CD pipeline.</p>\n<section id=\"ci-cd\">\n<h3>CI/CD</h3>\n<p>If you&#8217;ve read <a href=\"https://blog.badsectorlabs.com/pelican-gitlab-cicd-docker-aws-awesome-static-site.html\">my first post</a> you know I&#8217;m a big fan of Gitlab and its built in CI/CD. The hamiltix repo is set up with each lambda as a <a href=\"https://git-scm.com/book/en/v2/Git-Tools-Submodules\">submodule</a> because Gitlab currently <a href=\"https://gitlab.com/gitlab-org/gitlab-ce/issues/18157\">does not support</a> more than one<code>.gitlab-ci.yml</code>file for a repo. The<code>gitlab-ci.yml</code>files for each lambda are nearly identical (on purpose!), only the variables section at the top and the additional<code>cp</code>statements for custom directories (if needed) change between lambda functions. Strict <a href=\"https://12factor.net/build-release-run\">twelve-factor</a> followers will notice that the build and release stages are combined. It is certianlly possible to break the build step out and pass the zip as an artifact, but the stage is so fast we haven&#8217;t done this yet.</p>\n<pre class=\"m-code\"><span class=\"l l-Scalar l-Scalar-Plain\">\r\nvariables</span><span class=\"p p-Indicator\">:</span>\r\n  <span class=\"c1\">#  Set git strategy</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">GIT_STRATEGY</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">clone</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">GIT_SUBMODULE_STRATEGY</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">recursive</span>\r\n  <span class=\"c1\"># Keys and secrets are defined in the project CI settings and exposed as env variables</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">AWS_ACCESS_KEY_ID</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">$AWS_ACCESS_KEY_ID</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">AWS_SECRET_ACCESS_KEY</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">$AWS_SECRET_ACCESS_KEY</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">AWS_DEFAULT_REGION</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"us-east-1\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">NAME</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"MyFunction\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">FILENAME</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"MyFunction.py\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">HANDLER</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"MyFunction.lambda_handler\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">RUNTIME</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"python3.6\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">ROLE</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"arn:aws:iam::XXXXXXXXXXXXX:role/XXXXXXXXXX\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">FILE</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"fileb://deploy_$CI_COMMIT_REF_NAME.zip\"</span>\r\n\r\n<span class=\"l l-Scalar l-Scalar-Plain\">stages</span><span class=\"p p-Indicator\">:</span>\r\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">test</span>\r\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">deploy</span>\r\n\r\n<span class=\"l l-Scalar l-Scalar-Plain\">test</span><span class=\"p p-Indicator\">:</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">stage</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">image</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">badsectorlabs/code-checking:latest</span> <span class=\"c1\"># This is a docker image that contains a lot of code checking tools</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">script</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cpd --minimum-tokens 100 --language python --files .</span>\r\n    <span class=\"c1\"># pylint output is good to look at, but not worth breaking the build over</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pylint -d bad-continuation -d line-too-long -d import-error -d missing-docstring $FILENAME || true</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">flake8 --max-line-length 120 --ignore=E722,W503 .</span> <span class=\"c1\"># You must pass flake8 (W503 is wrong, pep8 changed)</span>\r\n\r\n<span class=\"l l-Scalar l-Scalar-Plain\">deploy-staging</span><span class=\"p p-Indicator\">:</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">stage</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">deploy</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">image</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">badsectorlabs/aws-compress-and-deploy:latest</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">variables</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"l l-Scalar l-Scalar-Plain\">ALIAS</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"Staging\"</span>\r\n    <span class=\"l l-Scalar l-Scalar-Plain\">DESC</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"Staging</span> <span class=\"s\">build,</span> <span class=\"s\">commit:</span> <span class=\"s\">$CI_COMMIT_SHA\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">script</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">virtualenv -p /usr/bin/python3.6 env</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">source env/bin/activate</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pip install -r requirements.txt</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">mkdir dist</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cp $FILENAME dist</span> <span class=\"c1\"># copy all files needed to dist</span>\r\n    <span class=\"c1\"># Copy any other directories (modules, etc) here</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cp -rf env/lib/python3.6/site-packages/* dist</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cd dist</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">zip -r9 ../deploy_$CI_COMMIT_REF_NAME.zip .</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cd ..</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">deactivate</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">ls -lart</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo Creating or updating $NAME</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">&gt;</span> <span class=\"c1\"># This captures the code hash for the updated/created lambda function; -r is needed with jq to strip the quotes</span>\r\n      <span class=\"no\">CODE_SHA_256=$(aws lambda update-function-code --function-name $NAME --zip-file $FILE | jq -r .\"CodeSha256\" || aws lambda create-function</span>\r\n      <span class=\"no\">--function-name $NAME --runtime $RUNTIME --role $ROLE --handler $HANDLER --zip-file $FILE | jq -r .\"CodeSha256\")</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo Publishing LATEST, CodeSha256=$CODE_SHA_256, as 'Staging'</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">VERSION=$(aws lambda publish-version --function-name $NAME --description \"$DESC\" --code-sha-256 $CODE_SHA_256 | jq -r .\"Version\")</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo \"Published LATEST as version $VERSION\"</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">&gt;</span>\r\n      <span class=\"no\">aws lambda update-alias --function-name $NAME --name $ALIAS --function-version $VERSION || aws lambda create-alias</span>\r\n      <span class=\"no\">--function-name $NAME --name $ALIAS --description \"Staging\" --function-version $VERSION</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo Successfully updated $NAME:$ALIAS</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">environment</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"l l-Scalar l-Scalar-Plain\">name</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">master-staging</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">only</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">master</span>\r\n\r\n<span class=\"l l-Scalar l-Scalar-Plain\">deploy-prod</span><span class=\"p p-Indicator\">:</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">stage</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">deploy</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">image</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">badsectorlabs/aws-compress-and-deploy:latest</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">variables</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"l l-Scalar l-Scalar-Plain\">ALIAS</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"Prod\"</span>\r\n    <span class=\"l l-Scalar l-Scalar-Plain\">DESC</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">\"Prod</span> <span class=\"s\">build,</span> <span class=\"s\">commit:</span> <span class=\"s\">$CI_COMMIT_SHA\"</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">script</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">virtualenv -p /usr/bin/python3.6 env</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">source env/bin/activate</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pip install -r requirements.txt</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">mkdir dist</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cp $FILENAME dist</span> <span class=\"c1\"># copy all files needed to dist</span>\r\n    <span class=\"c1\"># Copy any other directories (modules, etc) here</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cp -rf env/lib/python3.6/site-packages/* dist</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cd dist</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">touch PROD</span> <span class=\"c1\"># This is the canary that will tell the lambda function to use the PROD secrets</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">zip -r9 ../deploy_$CI_COMMIT_REF_NAME.zip .</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">cd ..</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">deactivate</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">ls -lart</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo Creating or updating $NAME</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">&gt;</span> <span class=\"c1\"># This captures the code hash for the updated/created lambda function; -r is needed with jq to strip the quotes</span>\r\n      <span class=\"no\">CODE_SHA_256=$(aws lambda update-function-code --function-name $NAME --zip-file $FILE | jq -r .\"CodeSha256\" || aws lambda create-function</span>\r\n      <span class=\"no\">--function-name $NAME --runtime $RUNTIME --role $ROLE --handler $HANDLER --zip-file $FILE | jq -r .\"CodeSha256\")</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo Publishing LATEST, CodeSha256=$CODE_SHA_256, as 'Prod'</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">VERSION=$(aws lambda publish-version --function-name $NAME --description \"$DESC\" --code-sha-256 $CODE_SHA_256 | jq -r .\"Version\")</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo \"Published LATEST as version $VERSION\"</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"p p-Indicator\">&gt;</span>\r\n      <span class=\"no\">aws lambda update-alias --function-name $NAME --name $ALIAS --function-version $VERSION || aws lambda create-alias</span>\r\n      <span class=\"no\">--function-name $NAME --name $ALIAS --description \"Prod\" --function-version $VERSION</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">echo Successfully updated $NAME:$ALIAS</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">environment</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"l l-Scalar l-Scalar-Plain\">name</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">master-prod</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">only</span><span class=\"p p-Indicator\">:</span>\r\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">master</span>\r\n  <span class=\"l l-Scalar l-Scalar-Plain\">when</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">manual\r\n\r\n</span></pre>\n<p>Using this CI setup, the lambda can check for<code>PROD</code>with<code>if os.path.exists('PROD'):</code>and if so read in env variables for the production environment, and otherwise use staging variables. Note that both staging and production variables must be defined in the lambda settings (aliases take a snapshot of the lambda settings to prevent a setting change from breaking aliases that already exist).</p>\n<p>The CI setup for pushing the static site assets looks nearly identical to the <a href=\"https://gitlab.com/badsectorlabs/blog/blob/master/.gitlab-ci.yml\">setup for this blog</a>.</p>\n</section>\n<section id=\"logging-and-monitoring\">\n<h3>Logging and Monitoring</h3>\n<p>Once you have some lambdas working away for you, it becomes necessary to monitor them. By default the lambdas will log any standard out to Cloudwatch, which is nice if you need to go back and see what caused an issue, but doesn&#8217;t help alert you when an issue occurs. There are many ways to solve this issue, including many that would leverage AWS services but I already had a lifetime <a href=\"https://pushover.net/\">Pushover</a> account, so decided to use it for instant push notifications on any unhandled lambda error.</p>\n<pre class=\"m-code\"><span class=\"k\">\r\ndef</span> <span class=\"nf\">send_pushover</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">sound</span><span class=\"o\">=</span><span class=\"s1\">'pushover'</span><span class=\"p\">):</span>\r\n    <span class=\"sd\">\"\"\"</span>\r\n<span class=\"sd\">    Send a pushover message</span>\r\n<span class=\"sd\">    :param message: string; the message to send</span>\r\n<span class=\"sd\">    :param title: string; the title of the message</span>\r\n<span class=\"sd\">    :param sound: string; one of the keys of {'pushover': 'Pushover (default)', 'bike': 'Bike', 'bugle': 'Bugle',</span>\r\n<span class=\"sd\">                          'cashregister': 'Cash Register', 'classical': 'Classical', 'cosmic': 'Cosmic',</span>\r\n<span class=\"sd\">                          'falling': 'Falling', 'gamelan': 'Gamelan', 'incoming': 'Incoming',</span>\r\n<span class=\"sd\">                          'intermission': 'Intermission', 'magic': 'Magic', 'mechanical': 'Mechanical',</span>\r\n<span class=\"sd\">                          'pianobar': 'Piano Bar', 'siren': 'Siren', 'spacealarm': 'Space Alarm', 'tugboat': 'Tug Boat',</span>\r\n<span class=\"sd\">                          'alien': 'Alien Alarm (long)', 'climb': 'Climb (long)', 'persistent': 'Persistent (long)',</span>\r\n<span class=\"sd\">                          'echo': 'Pushover Echo (long)', 'updown': 'Up Down (long)', 'none': 'None (silent)'}</span>\r\n<span class=\"sd\">    :return: None</span>\r\n<span class=\"sd\">    \"\"\"</span>\r\n    <span class=\"kn\">from</span> <span class=\"nn\">pushover</span> <span class=\"kn\">import</span> <span class=\"n\">init</span> <span class=\"k\">as</span> <span class=\"n\">pushover_init</span> <span class=\"c1\"># install with `pip3 install python-pushover`</span>\r\n    <span class=\"kn\">from</span> <span class=\"nn\">pushover</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\r\n    <span class=\"c1\"># Send Pushover notification via the API (this is the hamiltix key)</span>\r\n    <span class=\"n\">pushover_init</span><span class=\"p\">(</span><span class=\"s1\">'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX'</span><span class=\"p\">)</span>\r\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX'</span><span class=\"p\">)</span>\r\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">sound</span><span class=\"o\">=</span><span class=\"n\">sound</span><span class=\"p\">)</span>\r\n\r\n\r\n<span class=\"k\">def</span> <span class=\"nf\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\r\n    <span class=\"k\">try</span><span class=\"p\">:</span>\r\n        <span class=\"k\">return</span> <span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\r\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\r\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">'[FATAL] Caught exception: {}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\r\n        <span class=\"kn\">import</span> <span class=\"nn\">traceback</span>\r\n        <span class=\"n\">error_trace</span> <span class=\"o\">=</span> <span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">format_exc</span><span class=\"p\">()</span>\r\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">error_trace</span><span class=\"p\">)</span>\r\n        <span class=\"n\">error_title</span> <span class=\"o\">=</span> <span class=\"s1\">'Error in [LambdaFunctionName]'</span>\r\n        <span class=\"n\">send_pushover</span><span class=\"p\">(</span><span class=\"n\">error_trace</span><span class=\"p\">,</span> <span class=\"n\">error_title</span><span class=\"p\">,</span> <span class=\"n\">sound</span><span class=\"o\">=</span><span class=\"s1\">'falling'</span><span class=\"p\">)</span>\r\n        <span class=\"k\">raise</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>  <span class=\"c1\"># Make sure the lambda function returns a 500\r\n\r\n</span></pre>\n<p>Getting a push alert any time there is an error helps us respond to issues as soon as they come up. The same<code>send_pushover()</code>is used to alert on other things as well, like any time a ticket is purchaced (with the cash register sound naturally).</p>\n</section>\n</section>\n<section id=\"cost\">\n<h2>Cost</h2>\n<p>So how much does it cost to run hamiltix.net? Right now we are still in the 12 month AWS &#8220;free-tier&#8221; and monthly cost is stable at around $0.60, of which $0.50 is Route53 (one hosted zone) and the rest is S3 and taxes. After the &#8220;free-tier&#8221; expires our S3 costs will increase slightly, API Gateway will be $0.09 per GB of data transferred out, and Cloudfront will be $0.085 for the first 10TB a month but Lambda, DynamoDB, and Cloudwatch will remain free (unless we get really popular!), and <span class=\"strike\">costs should remain under $1</span>. <a href=\"https://www.reddit.com/r/programming/comments/816mbu/how_we_built_hamiltixnet_for_less_than_1_a_month/dv17bbj/\">Reddit</a> has correced my error, and API Gateway has a base fee of $3.50 for the first 1 million requests. After the free-tier expires costs should remain under $5. If we wanted to bring this down even more, moving the domain to Google Domains (or similar) would reduce our current costs by 80%!</p>\n<aside class=\"m-block m-success\">\n<h3>TLDR</h3>\n<p>The combination of AWS and Gitlab allows for incredibly inexpensive yet powerful hosting solution with CI/CD and monitoring that enables quick response to issues and automated building and deployment; all for under $1 a month!</p>\n<p>Questions or comments? blog (at) badsectorlabs.com</p>\n<p>source : https://blog.badsectorlabs.com/how-we-built-hamiltixnet-for-less-than-1-a-month-on-aws.html</p>\n</aside>\n</section>\n",
          "slug": "how-we-built-hamiltix-net-for-less-than-1-a-month-on-aws",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/03/hamiltix-aws.png"
          },
          "link": "https://emolike.net/2018/03/04/how-we-built-hamiltix-net-for-less-than-1-a-month-on-aws/",
          "date": "2018-03-04T08:24:34",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "cloud"
              },
              {
                "name": "Hosting"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjIx",
        "node": {
          "id": "cG9zdDoyMQ==",
          "title": "Install Guake Drop Down Terminal On Ubuntu 16.04",
          "content": "<p>Install Guake Terminal on Ubuntu using WebUpd8 PPA. Fix “Have you installed guake.schemas properly?” error. Guake is a top-down terminal for Gnome (in the style of Yakuake for KDE, Tilda or the terminal used in Quake). Guake’s style of window is based on an FPS game, and one of its goals is to be easy to reach.</p>\n<div class=\"adbox\"></div>\n<p><img class=\"aligncenter size-full wp-image-20526\" src=\"http://sourcedigit.com/wp-content/uploads/2016/08/guake-terminal.jpg\" sizes=\"(max-width: 800px) 100vw, 800px\" srcset=\"http://sourcedigit.com/wp-content/uploads/2016/08/guake-terminal.jpg 800w, http://sourcedigit.com/wp-content/uploads/2016/08/guake-terminal-768x416.jpg 768w\" alt=\"guake-terminal\" width=\"800\" height=\"433\" /></p>\n<h4>Features</h4>\n<ul>\n<li>Lightweight</li>\n<li>Simple Easy and Elegant</li>\n<li>Smooth integration of terminal into GUI</li>\n<li>Appears when you call and disappears once you are done by pressing a predefined hotkey (F12 by default)</li>\n<li>Compiz transparency support</li>\n<li>Multi tab</li>\n<li>Plenty of color palettes</li>\n<li>Quick Open in your favorite text editor with a click on a file name (with line number support)</li>\n<li>Customizable hotkeys for tab access, reorganization, background transparency, font size,…</li>\n<li>Extremely configurable</li>\n<li>Configure Guake startup by running a bash script when Guake starts</li>\n<li>Multi-monitor support (open on a specified monitor, open on mouse monitor)</li>\n<li>Save terminal content to file</li>\n<li>Open URL to your browser</li>\n</ul>\n<h4>Install Guake on Ubuntu</h4>\n<p>Ubuntu users can install Guake Terminal by using the WebUpd8 PPA. Open Terminal and run the following commands:<br />\n<code><br />\nsudo add-apt-repository ppa:webupd8team/unstable<br />\nsudo apt update<br />\nsudo apt install guake<br />\n</code><br />\nOnce installed, open Guake from Ubuntu Dash. It can be involed/start using F12 key. When active, Guake terminal icon is displayed in the Ubuntu Panel Bar.</p>\n<h4>Guake Error</h4>\n<p><strong>Have you installed guake.schemas properly?</strong> This is the most common error message that occurs because the guake.schemas file is not found in the correct location. Ubuntu users can easily fix this error by running the following commands:<br />\n<code><br />\nsudo mkdir /etc/gconf/schemas<br />\ncd /etc/gconf/schemas/<br />\nsudo ln -s /usr/share/gconf/schemas/guake.schemas<br />\n</code></p>\n<p>Once done, try launching Guake again.</p>\n<p><strong>More Info:</strong></p>\n<ul>\n<li><em>http://guake-project.org/</em></li>\n<li><em>https://github.com/Guake/guake</em></li>\n</ul>\n<p>source: http://sourcedigit.com/20525-install-guake-drop-down-terminal-on-ubuntu-16-04/</p>\n",
          "slug": "install-guake-drop-down-terminal-on-ubuntu-16-04",
          "featuredImage": null,
          "link": "https://emolike.net/2018/03/04/install-guake-drop-down-terminal-on-ubuntu-16-04/",
          "date": "2018-03-04T08:12:19",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "linux"
              }
            ]
          }
        }
      },
      {
        "cursor": "YXJyYXljb25uZWN0aW9uOjE3",
        "node": {
          "id": "cG9zdDoxNw==",
          "title": "10+ Free CDN Services to Speed Up WordPress",
          "content": "<p>In today’s world where the average Internet speed of technologically advanced regions exceeds 10 Mbps, it’s no wonder that CDN services thrive. And to speed things up even more, some lucky readers can enjoy speeds up to 1 Gbps – yes one gigabits per second, thanks to services such as <a title=\"Google Fiber\" href=\"https://fiber.google.com/about/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Fiber</a>, Cox Gigablast or Centurylink Gigabit. As a downside to this race for faster bits, our attention span takes a toll and patience, becomes volatile.</p>\n<p>It’s always good to have your site powered by a Content Delivery Network. Not only does a CDN save bandwidth costs from your hosting provider, but your site becomes insanely fast and tends to rank higher in the search engines. You might have heard this saying:</p>\n<blockquote><p>Some people say that nothing in this world is free,<br />\nI say you just need to know where to look!</p></blockquote>\n<h2>What is a CDN – Content Delivery Network?</h2>\n<p>Before we dig into free CDNs for your WordPress website, let’s cover the basics. Put simply, a Content Delivery Network or a CDN is a bunch of servers, located across the globe, designed to deliver your website’s files to the site’s visitor in the fastest time. Three points:</p>\n<ul>\n<li>Bunch of servers.</li>\n<li>Located across the globe.</li>\n<li>Delivers your website’s static files (images, PDFs, static libraries such as JavaScript and CSS files) in the fastest time</li>\n</ul>\n<p>Why A CDN?</p>\n<p>A new website usually has one source of origin. And that’s okay when you’re starting out and don’t have a lot of visitors. As your website grows, (i.e. your traffic increases) the amount of time taken to load your site would also increase.</p>\n<p>People generally don’t like <em>waiting </em>for a website. The effect is most powerful in online shopping websites, where a one-second drop in loading time added to $6,000,000 USD (that’s 6 million) in revenue. I picked this up from CachePoint’s brilliant article – <a href=\"http://blog.catchpoint.com/2017/01/06/performance-impact-revenue-real/\" target=\"_blank\" rel=\"noopener\"><em>The Very Real Performance Impact on Revenue</em></a>.</p>\n<p>That’s why we have a CDN. It speeds up content delivery by serving the content from the server that is closest to the visitor. Your loading time decreases and you end up winning. If you want to understand CDNs better, <a href=\"https://www.incapsula.com/cdn-guide/?src=176\" target=\"_blank\" rel=\"noopener\">Incapsula’s CDN guide</a> is a great place to start.</p>\n<h2>Getting Started with the CDN List</h2>\n<p>We’ll structure this article into four groups<b>:</b></p>\n<ul>\n<li>Group<strong> one</strong> are the absolutely free CDN services that will have a <strong>forever-free plan.</strong></li>\n<li>CDNs under group<strong> two</strong> are ones offer <strong>generous trial periods</strong> (think twelve months) – that are sufficient to scale up your blog.</li>\n<li>Group <strong>three</strong> contains CDNs that are again absolutely <strong>free for hosting common scripts</strong>such as jQuery, Bootstrap, etc.</li>\n<li>Group <strong>four</strong> is contains <strong>honorable mentions</strong> that are no longer active, but were alive at the time this article was originally posted (that’s way back in 2016).</li>\n</ul>\n<h2>Free CDNs for WordPress that have a Forever-Free Plan</h2>\n<p>Given that you’ve landed on this page for “free CDN for WordPress”, let’s dive down into the article.</p>\n<h3>1. CloudFlare</h3>\n<p><img class=\"alignnone size-full wp-image-118\" src=\"https://emolike.net/wp-content/uploads/2018/03/Cloudflare-cdn-service.png\" width=\"750\" height=\"300\" alt=\"Cloudflare-cdn-service\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/Cloudflare-cdn-service.png 750w, https://emolike.net/wp-content/uploads/2018/03/Cloudflare-cdn-service-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/03/Cloudflare-cdn-service-200x80.png 200w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<p><a href=\"https://www.cloudflare.com/network/\" target=\"_blank\" rel=\"noopener\">CloudFlare</a> is popularly known as the best free CDN for WordPress users. It is one of the few industry-leading players that actually offer a free plan. Powered by its <a href=\"https://www.cloudflare.com/network/\" target=\"_blank\" rel=\"noopener\">115 datacenters</a>, CloudFlare delivers speed, reliability, and protection from basic DDoS attacks. And it’s <a href=\"https://wordpress.org/plugins/cloudflare/\" target=\"_blank\" rel=\"noopener\">WordPress plugin</a> is used in over 100,000 active websites.</p>\n<h3>2. Incapsula</h3>\n<p><img class=\"alignnone size-full wp-image-119\" src=\"https://emolike.net/wp-content/uploads/2018/03/Incapsula-cdn-service.png\" width=\"750\" height=\"200\" alt=\"Incapsula-cdn-service\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/Incapsula-cdn-service.png 750w, https://emolike.net/wp-content/uploads/2018/03/Incapsula-cdn-service-300x80.png 300w, https://emolike.net/wp-content/uploads/2018/03/Incapsula-cdn-service-200x53.png 200w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<p><a href=\"https://www.incapsula.com/cdn-content-delivery-network/?src=176\" target=\"_blank\" rel=\"noopener\">Incapsula</a> provides Application Delivery from the cloud: Global CDN, Website Security, DDoS Protection, Load Balancing &amp; Failover. It takes 5 minutes to activate the service, and they have a great <a href=\"http://www.incapsula.com/pricing-and-plans/compare-all-plans/?src=176\" target=\"_blank\" rel=\"noopener\">free plan</a> and a <a href=\"http://wordpress.org/plugins/incapsula/\" target=\"_blank\" rel=\"noopener\">WordPress plugin</a> to get correct IP Address information for comments posted to your site.</p>\n<p><strong>Features offered by both CloudFlare and Incapsula:</strong></p>\n<p>In a nutshell, this is what Incapsula and CloudFlare does:</p>\n<ul>\n<li>Routes your entire website’s traffic through their globally distributed network of high end servers (This is achieved by a small DNS change)</li>\n<li>Real-time threat analysis of incoming traffic and blocking the latest web threats including multi-Gigabit DDoS attacks</li>\n<li>Outgoing traffic is accelerated through their globally powered content delivery network</li>\n</ul>\n<h3>3. Photon by Jetpack</h3>\n<p><img class=\"alignnone size-full wp-image-120\" src=\"https://emolike.net/wp-content/uploads/2018/03/Photon-by-Jetpack.png\" width=\"600\" height=\"237\" alt=\"Photon by Jetpack\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/Photon-by-Jetpack.png 600w, https://emolike.net/wp-content/uploads/2018/03/Photon-by-Jetpack-300x119.png 300w, https://emolike.net/wp-content/uploads/2018/03/Photon-by-Jetpack-200x79.png 200w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></p>\n<p>To all WordPress users – <a title=\"Jetpack WordPress Plugin\" href=\"https://jetpack.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Jetpack</a> needs no introduction. In their recent improvement of awesomeness, they’ve included a free CDN service (called <a title=\"JetPack Photon Module\" href=\"https://jetpack.com/support/photon/\" target=\"_blank\" rel=\"noopener noreferrer\">Photon</a>) that serves your site’s images through their globally powered WordPress.com grid.  To get this service activated, all you have to do is download and install <a title=\"Jetpack WordPress Plugin\" href=\"http://wordpress.org/plugins/jetpack/\" target=\"_blank\" rel=\"noopener noreferrer\">Jetpack</a> and activate its Photon module.</p>\n<p>WordPress users need no introduction to Jetpack. One of the <a href=\"http://www.wpexplorer.com/money-jetpack-wordpress/\" target=\"_blank\" rel=\"noopener\">coolest features Jetpack has to offer</a> is their free CDN service called <a href=\"https://jetpack.com/support/photon/\" target=\"_blank\" rel=\"noopener\">Photon</a>. The best part? You don’t need to configure a thing! Simply install the plugin, login with your WordPress.com account and activate the photon module. That’s it. All you images will be offloaded to the WordPress grid that powers over hundreds of thousands of website across the globe.</p>\n<h3>4. Swarmify</h3>\n<p><img class=\"alignnone size-full wp-image-121\" src=\"https://emolike.net/wp-content/uploads/2018/03/smarmify-cdn.png\" width=\"800\" height=\"379\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/smarmify-cdn.png 800w, https://emolike.net/wp-content/uploads/2018/03/smarmify-cdn-300x142.png 300w, https://emolike.net/wp-content/uploads/2018/03/smarmify-cdn-768x364.png 768w, https://emolike.net/wp-content/uploads/2018/03/smarmify-cdn-200x95.png 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>Swarmify, (previously known as SwarmCDN) is a peer-to-peer (P2P) based content delivery network that offers 10GB bandwidth (only for images) in their free plan. To try it out, download the <a href=\"https://wordpress.org/plugins/swarm-cdn/\" target=\"_blank\" rel=\"noopener\">WordPress plugin</a> and give it a go. It is interesting to note that Swarmify works in a slightly different manner:</p>\n<p>Let’s say a group of people are browsing your site. Think of them as the first ‘peer’ in P2P. When a new visitor (peer) arrives, the images are served from the already existing group of users (the previous peer). This saves your server’s bandwidth, and improves loading times, since the peers are usually closer to one another. Swarmify also offers video CDN, which is only a part of their paid plan.</p>\n<h2>Trial CDN Services that are as Good as Free:</h2>\n<p>In this section, we’ll explore some of the premium cloud CDN providers that offer a generous trial period. I would think that the trial duration would be sufficient to test the service and eventually upgrade to a paid plan</p>\n<p>To give you some context, the future of the web is in the cloud. Be it the content delivery for your WordPress site, or high performance computing for NASA – the cloud is everywhere. We’ve covered a couple of articles on <a href=\"http://www.wpexplorer.com/cloud-computing-wordpress/\" target=\"_blank\" rel=\"noopener\">how to install WordPress in the cloud</a>. Today, we’re going to look at the same services that also happen to offer CDN. We’ll look at <a href=\"http://www.wpexplorer.com/install-wordpress-aws-amazon/\" target=\"_blank\" rel=\"noopener\">Amazon Web Services</a> and <a href=\"http://www.wpexplorer.com/install-wordpress-google-cloud/\" target=\"_blank\" rel=\"noopener\">Google Cloud</a>.</p>\n<h3>5. AWS Cloudfront</h3>\n<p><img class=\"alignnone size-full wp-image-122\" src=\"https://emolike.net/wp-content/uploads/2018/03/aws-cloudfront.jpg\" width=\"800\" height=\"378\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/aws-cloudfront.jpg 800w, https://emolike.net/wp-content/uploads/2018/03/aws-cloudfront-300x142.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/aws-cloudfront-768x363.jpg 768w, https://emolike.net/wp-content/uploads/2018/03/aws-cloudfront-200x95.jpg 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>Amazon Web Services (AWS) is a pioneer in bringing high performance cloud computing to the masses at an affordable rate. One of their services is <a href=\"https://aws.amazon.com/cloudfront/\" target=\"_blank\" rel=\"noopener\">Amazon CloudFront</a> an industry-leading content delivery network used by the likes of Slack and Spotify!</p>\n<p>To top that off, they have a <a href=\"https://aws.amazon.com/free/\" target=\"_blank\" rel=\"noopener\">free usage tier</a> of one full year. And the quota? 50GB of outbound transfer over the trial period. This is definitely a must-try for all WordPress enthusiasts.</p>\n<h4><strong>How do you get started?</strong></h4>\n<p>We’ll for starters, you could use the <a href=\"https://wordpress.org/plugins/amazon-s3-and-cloudfront/\" target=\"_blank\" rel=\"noopener\">WP Offload S3</a> Lite plugin which enables you to integrate your Amazon S3 (storage) and Amazon CloudFront (CDN) services with your WordPress site. You can also check out our article on <a href=\"http://www.wpexplorer.com/install-wordpress-aws-amazon/\" target=\"_blank\" rel=\"noopener\">how to install WordPress in AWS</a>.</p>\n<h3>6. Google Cloud CDN</h3>\n<p><img class=\"alignnone size-full wp-image-123\" src=\"https://emolike.net/wp-content/uploads/2018/03/google-cloud-cdn.jpg\" width=\"800\" height=\"377\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/google-cloud-cdn.jpg 800w, https://emolike.net/wp-content/uploads/2018/03/google-cloud-cdn-300x141.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/google-cloud-cdn-768x362.jpg 768w, https://emolike.net/wp-content/uploads/2018/03/google-cloud-cdn-200x94.jpg 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>Similar to AWS, Google Cloud offers $300 USD credits over a one-year duration, with access to their <a href=\"https://cloud.google.com/cdn/\" target=\"_blank\" rel=\"noopener\">Cloud CDN platform</a>. We’ve covered <a href=\"http://www.wpexplorer.com/install-wordpress-google-cloud/\" target=\"_blank\" rel=\"noopener\">how to install WordPress on Google Cloud</a> in the past. Today, there are <a href=\"https://bitnami.com/stack/wordpress\" target=\"_blank\" rel=\"noopener\">one-click solutions</a> to deploy WordPress (and other leading CMS) across multiple cloud providers.</p>\n<h3>7. Microsoft Azure CDN</h3>\n<p><img class=\"alignnone size-full wp-image-124\" src=\"https://emolike.net/wp-content/uploads/2018/03/microsoft-azure-cdn.jpg\" width=\"800\" height=\"315\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/microsoft-azure-cdn.jpg 800w, https://emolike.net/wp-content/uploads/2018/03/microsoft-azure-cdn-300x118.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/microsoft-azure-cdn-768x302.jpg 768w, https://emolike.net/wp-content/uploads/2018/03/microsoft-azure-cdn-200x79.jpg 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p><a href=\"https://azure.microsoft.com/en-us/free/\" target=\"_blank\" rel=\"noopener\">Microsoft Azure</a> currently (i.e. July 2017) offers a <strong>30-day trial </strong>of its services with $200 USD worth of credits. The <a href=\"https://azure.microsoft.com/en-us/services/cdn/\" target=\"_blank\" rel=\"noopener\">Azure CDN</a> is available in multiple datacenters across the globe.</p>\n<h3>8. Cloudinary</h3>\n<p><img class=\"alignnone size-full wp-image-125\" src=\"https://emolike.net/wp-content/uploads/2018/03/cloudinary-image-cdn.jpg\" width=\"800\" height=\"349\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/cloudinary-image-cdn.jpg 800w, https://emolike.net/wp-content/uploads/2018/03/cloudinary-image-cdn-300x131.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/cloudinary-image-cdn-768x335.jpg 768w, https://emolike.net/wp-content/uploads/2018/03/cloudinary-image-cdn-200x87.jpg 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>If you run website that heavily dependent on images (think portfolios of photography/design services), offloading your images to another server would be a good idea. You would end up saving a lot of precious bandwidth. <a href=\"http://cloudinary.com/\" target=\"_blank\" rel=\"noopener\">Cloudinary</a> is a robust image management solution that can host your images, resize them on-the-fly and a ton of other cool features. In their <a href=\"http://cloudinary.com/pricing\" target=\"_blank\" rel=\"noopener\">forever-free plan</a>, they offer 2GB storage with 5GB of bandwidth.</p>\n<h3>9. Imgur</h3>\n<p><img class=\"alignnone size-full wp-image-126\" src=\"https://emolike.net/wp-content/uploads/2018/03/imgur-free-image-hosting.png\" width=\"800\" height=\"420\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/imgur-free-image-hosting.png 800w, https://emolike.net/wp-content/uploads/2018/03/imgur-free-image-hosting-300x158.png 300w, https://emolike.net/wp-content/uploads/2018/03/imgur-free-image-hosting-768x403.png 768w, https://emolike.net/wp-content/uploads/2018/03/imgur-free-image-hosting-200x105.png 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>A wildly-popular image hosting site, <a href=\"http://imgur.com/\" target=\"_blank\" rel=\"noopener\">imgur</a> is fast, reliable and perfect for beginners. If you’re just starting up and looking for an easy way to save server bandwidth, imgur along with other popular image hosting sites like <a title=\"PhotoBucket\" href=\"http://photobucket.com/\" target=\"_blank\" rel=\"noopener noreferrer\">PhotoBucket</a> and <a title=\"Flikr\" href=\"http://www.flickr.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Flickr</a> should serve your purposes to the fullest.</p>\n<h3>10. Free Cloud Storage Companies</h3>\n<p><img class=\"alignnone size-full wp-image-127\" src=\"https://emolike.net/wp-content/uploads/2018/03/free-cloud-storage-cdn-services.png\" width=\"750\" height=\"250\" alt=\"free-cloud-storage-cdn-services\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/free-cloud-storage-cdn-services.png 750w, https://emolike.net/wp-content/uploads/2018/03/free-cloud-storage-cdn-services-300x100.png 300w, https://emolike.net/wp-content/uploads/2018/03/free-cloud-storage-cdn-services-200x67.png 200w\" sizes=\"(max-width: 750px) 100vw, 750px\" /></p>\n<p>Another great way to save server bandwidth is by using free cloud storage services. Say you have a couple of PDFs or video available for direct download. Hosting them on your server would consume bandwidth like crazy. A smart solution would be to use the various free cloud storage services. To share a file publicly, you can simply generate a public URL of the file and paste it in your site. Here are a couple of free cloud storage solutions:</p>\n<ul>\n<li><a title=\"DropBox\" href=\"https://www.dropbox.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Dropbox</a> – 2 GB free, can generate up to 18 GB via referrals</li>\n<li><a title=\"Google Drive\" href=\"https://drive.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Drive</a> – 15 GB free</li>\n<li><a title=\"SkyDrive\" href=\"https://skydrive.live.com/\" target=\"_blank\" rel=\"noopener noreferrer\">SkyDrive</a> – 7 GB free</li>\n<li><a title=\"Copy\" href=\"https://www.copy.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Copy</a> – 15 GB free, 5 GB per referral</li>\n<li><a title=\"Box\" href=\"https://www.box.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Box</a> – 5 GB free</li>\n</ul>\n<h2>Free Open-Source CDN for Hosted Libraries</h2>\n<p>We’ll now look at some of the open-source libraries, that are hosted by premium content delivery networks.</p>\n<h3>11. Google Hosted Libraries</h3>\n<p><img class=\"alignnone size-full wp-image-128\" src=\"https://emolike.net/wp-content/uploads/2018/03/google-hosted-libraries.png\" width=\"800\" height=\"256\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/google-hosted-libraries.png 800w, https://emolike.net/wp-content/uploads/2018/03/google-hosted-libraries-300x96.png 300w, https://emolike.net/wp-content/uploads/2018/03/google-hosted-libraries-768x246.png 768w, https://emolike.net/wp-content/uploads/2018/03/google-hosted-libraries-200x64.png 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>Google provides free hosting for some of the <a href=\"https://developers.google.com/speed/libraries/\" target=\"_blank\" rel=\"noopener\">most popular libraries</a> in their super-fast infrastructure. This is extremely useful for WordPress developers to use in their themes and plugins.</p>\n<h3>12. Cdnjs</h3>\n<p><img class=\"alignnone size-full wp-image-129\" src=\"https://emolike.net/wp-content/uploads/2018/03/cdnjs-hosted-cdns.png\" width=\"800\" height=\"349\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/cdnjs-hosted-cdns.png 800w, https://emolike.net/wp-content/uploads/2018/03/cdnjs-hosted-cdns-300x131.png 300w, https://emolike.net/wp-content/uploads/2018/03/cdnjs-hosted-cdns-768x335.png 768w, https://emolike.net/wp-content/uploads/2018/03/cdnjs-hosted-cdns-200x87.png 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p><a href=\"https://cdnjs.com/\" target=\"_blank\" rel=\"noopener\">Cdnjs</a> is a community-powered CDN used by over 320,000 websites. Sponsored by CloudFlare, UserApp and Algolia, cdnjs hosts over <a href=\"https://github.com/cdnjs/cdnjs/tree/master/ajax/libs\" target=\"_blank\" rel=\"noopener\">1,000</a> libraries.</p>\n<h3>13. jsDeliver</h3>\n<p><img class=\"alignnone size-full wp-image-130\" src=\"https://emolike.net/wp-content/uploads/2018/03/jsdeliver-cdn-service.png\" width=\"770\" height=\"248\" alt=\"jsdeliver-cdn-service\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/jsdeliver-cdn-service.png 770w, https://emolike.net/wp-content/uploads/2018/03/jsdeliver-cdn-service-300x97.png 300w, https://emolike.net/wp-content/uploads/2018/03/jsdeliver-cdn-service-768x247.png 768w, https://emolike.net/wp-content/uploads/2018/03/jsdeliver-cdn-service-200x64.png 200w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></p>\n<p>jsDelivr is a <a href=\"https://www.jsdelivr.com/free-open-source-cdn/javascript-cdn\" target=\"_blank\" rel=\"noopener\">publicly available CDN</a> where any web developer can upload and host their own files. It is best suited for hosting the libraries that <em>aren’t</em> hosted by Google. You can use their <a href=\"https://wordpress.org/plugins/jsdelivr-wordpress-cdn-plugin/\" target=\"_blank\" rel=\"noopener\">WordPress plugin</a> (although not updated for a couple of years) to integrate their services in your site.</p>\n<h3>14. Bootstrap CDN</h3>\n<p><img class=\"alignnone size-full wp-image-131\" src=\"https://emolike.net/wp-content/uploads/2018/03/bootstrap-cdn.jpg\" width=\"800\" height=\"378\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/bootstrap-cdn.jpg 800w, https://emolike.net/wp-content/uploads/2018/03/bootstrap-cdn-300x142.jpg 300w, https://emolike.net/wp-content/uploads/2018/03/bootstrap-cdn-768x363.jpg 768w, https://emolike.net/wp-content/uploads/2018/03/bootstrap-cdn-200x95.jpg 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>Bootstrap is one of the most popular frameworks powering millions of websites around the world. MaxCDN <a href=\"https://www.bootstrapcdn.com/\" target=\"_blank\" rel=\"noopener\">proudly hosts</a> the Bootstrap CDN libraries.</p>\n<h2>Honorable Mentions (Short Term Free Trial CDNs)</h2>\n<p>The following CDN services offer a trial period, but due to security purposes, you need to use a contact form to get in touch with them. Once you obtain a free trial, fine-tuning it requires a sound know-how, which can be gained from <a title=\"How To Do An Effective CDN Trial\" href=\"http://www.cdnplanet.com/blog/how-do-effective-trial-cdn/\" target=\"_blank\" rel=\"noopener noreferrer\">this awesome article.</a></p>\n<ol>\n<li><a title=\"MetaCDN\" href=\"http://www.metacdn.com/signup-trial.jsp\" target=\"_blank\" rel=\"noopener noreferrer\">MetaCDN </a>– Offering a 7 day trial period with unrestricted access to all services and no credit card signup required – MetaCDN is a good choice for a trial CDN.</li>\n<li><a href=\"https://www.cdn77.com/\" target=\"_blank\" rel=\"noopener noreferrer\">CDN77</a> – They offer a 14-day trial with access to all the features available in the premium plan and without having to provide a credit card. If you decide to continue using their service you will be charged only for what you use per byte (pro-rated).</li>\n<li><a href=\"https://app.keycdn.com/signup\" target=\"_blank\" rel=\"noopener\">KeyCDN</a> – They offer a free trial period without having to provide a credit card when signing up it appears they provide you with 250GB of free transfer during the trial period.</li>\n</ol>\n<h2>Conclusion</h2>\n<p>To keep it short, I would like to remind you that all good things must come to an end. There have been instances of free CDN companies which have stopped offering their service for free (Exabytes) or have shut down completely (SpeedyMirror, CoBlitz) – which brings us to an important conclusion:</p>\n<h3>When should I switch to A proper CDN?</h3>\n<p>A free CDN service will last only for so long. Once your traffic begins to increase – you’ll eventually run out of trial bandwidth and/or your visitors might start grumbling about a slow website. That’s your green light switch over to a proper CDN service such as <a href=\"https://www.cdn77.com/\" target=\"_blank\" rel=\"noopener\">CDN77</a> or <a title=\"Amazon CloudFront\" href=\"http://aws.amazon.com/cloudfront/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon CloudFront</a>. Happy trails, Roadrunner!</p>\n<p>&nbsp;</p>\n<p>source</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"2L4sKYqSrs\"><p><a href=\"https://www.wpexplorer.com/free-cdn-services-for-wordpress/\">10+ Free CDN Services to Speed Up WordPress</a></p></blockquote>\n<p><iframe title=\"&#8220;10+ Free CDN Services to Speed Up WordPress&#8221; &#8212; WPExplorer\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://www.wpexplorer.com/free-cdn-services-for-wordpress/embed/#?secret=2L4sKYqSrs\" data-secret=\"2L4sKYqSrs\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n",
          "slug": "10-free-cdn-services-to-speed-up-wordpress",
          "featuredImage": {
            "mediaItemUrl": "https://emolike.net/wp-content/uploads/2018/03/Cloudflare-cdn-service.png"
          },
          "link": "https://emolike.net/2018/02/19/10-free-cdn-services-to-speed-up-wordpress/",
          "date": "2018-02-19T08:50:53",
          "tags": {
            "nodes": []
          },
          "categories": {
            "nodes": [
              {
                "name": "Hosting"
              }
            ]
          }
        }
      }
    ]
  }
}
